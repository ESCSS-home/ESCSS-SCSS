@include describe('Break After') {
  @include describe('Basic usage') {
    @include it('break-after-auto') {
      @include assert {
        @include output {
          @include break-after-auto
        }

        @include expect {
          break-after: auto;
        }
      }
    }

    @include it('break-after-avoid') {
      @include assert {
        @include output {
          @include break-after-avoid
        }

        @include expect {
          break-after: avoid;
        }
      }
    }

    @include it('break-after-all') {
      @include assert {
        @include output {
          @include break-after-all
        }

        @include expect {
          break-after: all;
        }
      }
    }

    @include it('break-after-avoid-page') {
      @include assert {
        @include output {
          @include break-after-avoid-page
        }

        @include expect {
          break-after: avoid-page;
        }
      }
    }

    @include it('break-after-page') {
      @include assert {
        @include output {
          @include break-after-page
        }

        @include expect {
          break-after: page;
        }
      }
    }

    @include it('break-after-left') {
      @include assert {
        @include output {
          @include break-after-left
        }

        @include expect {
          break-after: left;
        }
      }
    }

    @include it('break-after-right') {
      @include assert {
        @include output {
          @include break-after-right
        }

        @include expect {
          break-after: right;
        }
      }
    }

    @include it('break-after-column') {
      @include assert {
        @include output {
          @include break-after-column
        }

        @include expect {
          break-after: column;
        }
      }
    }
  }

  @include describe('Breakpoints and media queries') {

    @include it('sm\:break-after-auto') {
      @include assert {
        @include output {
          @include sm\:break-after-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: auto;
          }
        }
      }
    }

    @include it('md\:break-after-auto') {
      @include assert {
        @include output {
          @include md\:break-after-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: auto;
          }
        }
      }
    }

    @include it('lg\:break-after-auto') {
      @include assert {
        @include output {
          @include lg\:break-after-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: auto;
          }
        }
      }
    }

    @include it('xl\:break-after-auto') {
      @include assert {
        @include output {
          @include xl\:break-after-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: auto;
          }
        }
      }
    }

    @include it('2xl\:break-after-auto') {
      @include assert {
        @include output {
          @include \2xl\:break-after-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: auto;
          }
        }
      }
    }

    @include it('sm\:break-after-avoid') {
      @include assert {
        @include output {
          @include sm\:break-after-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: avoid;
          }
        }
      }
    }

    @include it('md\:break-after-avoid') {
      @include assert {
        @include output {
          @include md\:break-after-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: avoid;
          }
        }
      }
    }

    @include it('lg\:break-after-avoid') {
      @include assert {
        @include output {
          @include lg\:break-after-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: avoid;
          }
        }
      }
    }

    @include it('xl\:break-after-avoid') {
      @include assert {
        @include output {
          @include xl\:break-after-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: avoid;
          }
        }
      }
    }

    @include it('2xl\:break-after-avoid') {
      @include assert {
        @include output {
          @include \2xl\:break-after-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: avoid;
          }
        }
      }
    }


    @include it('sm\:break-after-all') {
      @include assert {
        @include output {
          @include sm\:break-after-all
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: all;
          }
        }
      }
    }

    @include it('md\:break-after-all') {
      @include assert {
        @include output {
          @include md\:break-after-all
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: all;
          }
        }
      }
    }

    @include it('lg\:break-after-all') {
      @include assert {
        @include output {
          @include lg\:break-after-all
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: all;
          }
        }
      }
    }

    @include it('xl\:break-after-all') {
      @include assert {
        @include output {
          @include xl\:break-after-all
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: all;
          }
        }
      }
    }

    @include it('2xl\:break-after-all') {
      @include assert {
        @include output {
          @include \2xl\:break-after-all
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: all;
          }
        }
      }
    }


    @include it('sm\:break-after-avoid-page') {
      @include assert {
        @include output {
          @include sm\:break-after-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: avoid-page;
          }
        }
      }
    }

    @include it('md\:break-after-avoid-page') {
      @include assert {
        @include output {
          @include md\:break-after-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: avoid-page;
          }
        }
      }
    }

    @include it('lg\:break-after-avoid-page') {
      @include assert {
        @include output {
          @include lg\:break-after-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: avoid-page;
          }
        }
      }
    }

    @include it('xl\:break-after-avoid-page') {
      @include assert {
        @include output {
          @include xl\:break-after-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: avoid-page;
          }
        }
      }
    }

    @include it('2xl\:break-after-avoid-page') {
      @include assert {
        @include output {
          @include \2xl\:break-after-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: avoid-page;
          }
        }
      }
    }

    @include it('sm\:break-after-page') {
      @include assert {
        @include output {
          @include sm\:break-after-page
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: page;
          }
        }
      }
    }

    @include it('md\:break-after-page') {
      @include assert {
        @include output {
          @include md\:break-after-page
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: page;
          }
        }
      }
    }

    @include it('lg\:break-after-page') {
      @include assert {
        @include output {
          @include lg\:break-after-page
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: page;
          }
        }
      }
    }

    @include it('xl\:break-after-page') {
      @include assert {
        @include output {
          @include xl\:break-after-page
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: page;
          }
        }
      }
    }

    @include it('2xl\:break-after-page') {
      @include assert {
        @include output {
          @include \2xl\:break-after-page
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: page;
          }
        }
      }
    }

    @include it('sm\:break-after-left') {
      @include assert {
        @include output {
          @include sm\:break-after-left
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: left;
          }
        }
      }
    }

    @include it('md\:break-after-left') {
      @include assert {
        @include output {
          @include md\:break-after-left
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: left;
          }
        }
      }
    }

    @include it('lg\:break-after-left') {
      @include assert {
        @include output {
          @include lg\:break-after-left
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: left;
          }
        }
      }
    }

    @include it('xl\:break-after-left') {
      @include assert {
        @include output {
          @include xl\:break-after-left
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: left;
          }
        }
      }
    }

    @include it('2xl\:break-after-left') {
      @include assert {
        @include output {
          @include \2xl\:break-after-left
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: left;
          }
        }
      }
    }

    @include it('sm\:break-after-right') {
      @include assert {
        @include output {
          @include sm\:break-after-right
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: right;
          }
        }
      }
    }

    @include it('md\:break-after-right') {
      @include assert {
        @include output {
          @include md\:break-after-right
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: right;
          }
        }
      }
    }

    @include it('lg\:break-after-right') {
      @include assert {
        @include output {
          @include lg\:break-after-right
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: right;
          }
        }
      }
    }

    @include it('xl\:break-after-right') {
      @include assert {
        @include output {
          @include xl\:break-after-right
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: right;
          }
        }
      }
    }

    @include it('2xl\:break-after-right') {
      @include assert {
        @include output {
          @include \2xl\:break-after-right
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: right;
          }
        }
      }
    }

    @include it('sm\:break-after-column') {
      @include assert {
        @include output {
          @include sm\:break-after-column
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-after: column;
          }
        }
      }
    }

    @include it('md\:break-after-column') {
      @include assert {
        @include output {
          @include md\:break-after-column
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-after: column;
          }
        }
      }
    }

    @include it('lg\:break-after-column') {
      @include assert {
        @include output {
          @include lg\:break-after-column
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-after: column;
          }
        }
      }
    }

    @include it('xl\:break-after-column') {
      @include assert {
        @include output {
          @include xl\:break-after-column
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-after: column;
          }
        }
      }
    }

    @include it('2xl\:break-after-column') {
      @include assert {
        @include output {
          @include \2xl\:break-after-column
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-after: column;
          }
        }
      }
    }
  }
}

@include describe('Break Before') {
  @include describe('Basic usage') {
    @include it('break-before-auto') {
      @include assert {
        @include output {
          @include break-before-auto
        }

        @include expect {
          break-before: auto;
        }
      }
    }

    @include it('break-before-avoid') {
      @include assert {
        @include output {
          @include break-before-avoid
        }

        @include expect {
          break-before: avoid;
        }
      }
    }

    @include it('break-before-all') {
      @include assert {
        @include output {
          @include break-before-all
        }

        @include expect {
          break-before: all;
        }
      }
    }

    @include it('break-before-avoid-page') {
      @include assert {
        @include output {
          @include break-before-avoid-page
        }

        @include expect {
          break-before: avoid-page;
        }
      }
    }

    @include it('break-before-page') {
      @include assert {
        @include output {
          @include break-before-page
        }

        @include expect {
          break-before: page;
        }
      }
    }

    @include it('break-before-left') {
      @include assert {
        @include output {
          @include break-before-left
        }

        @include expect {
          break-before: left;
        }
      }
    }

    @include it('break-before-right') {
      @include assert {
        @include output {
          @include break-before-right
        }

        @include expect {
          break-before: right;
        }
      }
    }

    @include it('break-before-column') {
      @include assert {
        @include output {
          @include break-before-column
        }

        @include expect {
          break-before: column;
        }
      }
    }
  }

  @include describe('Breakpoints and media queries') {

    @include it('sm\:break-before-auto') {
      @include assert {
        @include output {
          @include sm\:break-before-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: auto;
          }
        }
      }
    }

    @include it('md\:break-before-auto') {
      @include assert {
        @include output {
          @include md\:break-before-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: auto;
          }
        }
      }
    }

    @include it('lg\:break-before-auto') {
      @include assert {
        @include output {
          @include lg\:break-before-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: auto;
          }
        }
      }
    }

    @include it('xl\:break-before-auto') {
      @include assert {
        @include output {
          @include xl\:break-before-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: auto;
          }
        }
      }
    }

    @include it('2xl\:break-before-auto') {
      @include assert {
        @include output {
          @include \2xl\:break-before-auto
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: auto;
          }
        }
      }
    }

    @include it('sm\:break-before-avoid') {
      @include assert {
        @include output {
          @include sm\:break-before-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: avoid;
          }
        }
      }
    }

    @include it('md\:break-before-avoid') {
      @include assert {
        @include output {
          @include md\:break-before-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: avoid;
          }
        }
      }
    }

    @include it('lg\:break-before-avoid') {
      @include assert {
        @include output {
          @include lg\:break-before-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: avoid;
          }
        }
      }
    }

    @include it('xl\:break-before-avoid') {
      @include assert {
        @include output {
          @include xl\:break-before-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: avoid;
          }
        }
      }
    }

    @include it('2xl\:break-before-avoid') {
      @include assert {
        @include output {
          @include \2xl\:break-before-avoid
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: avoid;
          }
        }
      }
    }


    @include it('sm\:break-before-all') {
      @include assert {
        @include output {
          @include sm\:break-before-all
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: all;
          }
        }
      }
    }

    @include it('md\:break-before-all') {
      @include assert {
        @include output {
          @include md\:break-before-all
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: all;
          }
        }
      }
    }

    @include it('lg\:break-before-all') {
      @include assert {
        @include output {
          @include lg\:break-before-all
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: all;
          }
        }
      }
    }

    @include it('xl\:break-before-all') {
      @include assert {
        @include output {
          @include xl\:break-before-all
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: all;
          }
        }
      }
    }

    @include it('2xl\:break-before-all') {
      @include assert {
        @include output {
          @include \2xl\:break-before-all
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: all;
          }
        }
      }
    }


    @include it('sm\:break-before-avoid-page') {
      @include assert {
        @include output {
          @include sm\:break-before-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: avoid-page;
          }
        }
      }
    }

    @include it('md\:break-before-avoid-page') {
      @include assert {
        @include output {
          @include md\:break-before-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: avoid-page;
          }
        }
      }
    }

    @include it('lg\:break-before-avoid-page') {
      @include assert {
        @include output {
          @include lg\:break-before-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: avoid-page;
          }
        }
      }
    }

    @include it('xl\:break-before-avoid-page') {
      @include assert {
        @include output {
          @include xl\:break-before-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: avoid-page;
          }
        }
      }
    }

    @include it('2xl\:break-before-avoid-page') {
      @include assert {
        @include output {
          @include \2xl\:break-before-avoid-page
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: avoid-page;
          }
        }
      }
    }

    @include it('sm\:break-before-page') {
      @include assert {
        @include output {
          @include sm\:break-before-page
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: page;
          }
        }
      }
    }

    @include it('md\:break-before-page') {
      @include assert {
        @include output {
          @include md\:break-before-page
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: page;
          }
        }
      }
    }

    @include it('lg\:break-before-page') {
      @include assert {
        @include output {
          @include lg\:break-before-page
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: page;
          }
        }
      }
    }

    @include it('xl\:break-before-page') {
      @include assert {
        @include output {
          @include xl\:break-before-page
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: page;
          }
        }
      }
    }

    @include it('2xl\:break-before-page') {
      @include assert {
        @include output {
          @include \2xl\:break-before-page
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: page;
          }
        }
      }
    }

    @include it('sm\:break-before-left') {
      @include assert {
        @include output {
          @include sm\:break-before-left
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: left;
          }
        }
      }
    }

    @include it('md\:break-before-left') {
      @include assert {
        @include output {
          @include md\:break-before-left
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: left;
          }
        }
      }
    }

    @include it('lg\:break-before-left') {
      @include assert {
        @include output {
          @include lg\:break-before-left
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: left;
          }
        }
      }
    }

    @include it('xl\:break-before-left') {
      @include assert {
        @include output {
          @include xl\:break-before-left
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: left;
          }
        }
      }
    }

    @include it('2xl\:break-before-left') {
      @include assert {
        @include output {
          @include \2xl\:break-before-left
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: left;
          }
        }
      }
    }

    @include it('sm\:break-before-right') {
      @include assert {
        @include output {
          @include sm\:break-before-right
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: right;
          }
        }
      }
    }

    @include it('md\:break-before-right') {
      @include assert {
        @include output {
          @include md\:break-before-right
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: right;
          }
        }
      }
    }

    @include it('lg\:break-before-right') {
      @include assert {
        @include output {
          @include lg\:break-before-right
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: right;
          }
        }
      }
    }

    @include it('xl\:break-before-right') {
      @include assert {
        @include output {
          @include xl\:break-before-right
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: right;
          }
        }
      }
    }

    @include it('2xl\:break-before-right') {
      @include assert {
        @include output {
          @include \2xl\:break-before-right
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: right;
          }
        }
      }
    }

    @include it('sm\:break-before-column') {
      @include assert {
        @include output {
          @include sm\:break-before-column
        }

        @include expect {
          @media (min-width: $__MEDIA-SM) {
            break-before: column;
          }
        }
      }
    }

    @include it('md\:break-before-column') {
      @include assert {
        @include output {
          @include md\:break-before-column
        }

        @include expect {
          @media (min-width: $__MEDIA-MD) {
            break-before: column;
          }
        }
      }
    }

    @include it('lg\:break-before-column') {
      @include assert {
        @include output {
          @include lg\:break-before-column
        }

        @include expect {
          @media (min-width: $__MEDIA-LG) {
            break-before: column;
          }
        }
      }
    }

    @include it('xl\:break-before-column') {
      @include assert {
        @include output {
          @include xl\:break-before-column
        }

        @include expect {
          @media (min-width: $__MEDIA-XL) {
            break-before: column;
          }
        }
      }
    }

    @include it('2xl\:break-before-column') {
      @include assert {
        @include output {
          @include \2xl\:break-before-column
        }

        @include expect {
          @media (min-width: $__MEDIA-2XL) {
            break-before: column;
          }
        }
      }
    }
  }
}