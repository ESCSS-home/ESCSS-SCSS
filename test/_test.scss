@use "../node_modules/sass-true" as *;
@import "./tailwind_mixin_v3.4.1.scss";

// api usage: https://www.oddbird.net/true/docs/
// @include describe("Setting") {
// 	@include describe("Media") {
// 		@include it("SM") {
// 			@include is-equal($__MEDIA-SM, 640px);
// 		}

// 		@include it("MD") {
// 			@include is-equal($__MEDIA-MD, 768px);
// 		}

// 		@include it("LG") {
// 			@include is-equal($__MEDIA-LG, 1024px);
// 		}

// 		@include it("XL") {
// 			@include is-equal($__MEDIA-XL, 1280px);
// 		}

// 		@include it("2XL") {
// 			@include is-equal($__MEDIA-2XL, 1536px);
// 		}
// 	}

// 	@include describe("Color") {
// 		@include describe("BLACK") {
// 			@include it("BLACK") {
// 				@include is-equal($__BLACK, 0 0 0);
// 			}
// 		}

// 		@include describe("WHITE") {
// 			@include it("WHITE") {
// 				@include is-equal($__WHITE, 255 255 255);
// 			}
// 		}

// 		@include describe("SLATE") {
// 			@include it("50") {
// 				@include is-equal($__SLATE-50, 248 250 252);
// 			}

// 			@include it("100") {
// 				@include is-equal($__SLATE-100, 241 245 249);
// 			}

// 			@include it("200") {
// 				@include is-equal($__SLATE-200, 226 232 240);
// 			}

// 			@include it("300") {
// 				@include is-equal($__SLATE-300, 203 213 225);
// 			}

// 			@include it("400") {
// 				@include is-equal($__SLATE-400, 148 163 184);
// 			}

// 			@include it("500") {
// 				@include is-equal($__SLATE-500, 100 116 139);
// 			}

// 			@include it("600") {
// 				@include is-equal($__SLATE-600, 71 85 105);
// 			}

// 			@include it("700") {
// 				@include is-equal($__SLATE-700, 51 65 85);
// 			}

// 			@include it("800") {
// 				@include is-equal($__SLATE-800, 30 41 59);
// 			}

// 			@include it("900") {
// 				@include is-equal($__SLATE-900, 15 23 42);
// 			}

// 			@include it("950") {
// 				@include is-equal($__SLATE-950, 2 6 23);
// 			}
// 		}

// 		@include describe("GRAY") {
// 			@include it("50") {
// 				@include is-equal($__GRAY-50, 249 250 251);
// 			}

// 			@include it("100") {
// 				@include is-equal($__GRAY-100, 243 244 246);
// 			}

// 			@include it("200") {
// 				@include is-equal($__GRAY-200, 229 231 235);
// 			}

// 			@include it("300") {
// 				@include is-equal($__GRAY-300, 209 213 219);
// 			}

// 			@include it("400") {
// 				@include is-equal($__GRAY-400, 156 163 175);
// 			}

// 			@include it("500") {
// 				@include is-equal($__GRAY-500, 107 114 128);
// 			}

// 			@include it("600") {
// 				@include is-equal($__GRAY-600, 75 85 99);
// 			}

// 			@include it("700") {
// 				@include is-equal($__GRAY-700, 55 65 81);
// 			}

// 			@include it("800") {
// 				@include is-equal($__GRAY-800, 31 41 55);
// 			}

// 			@include it("900") {
// 				@include is-equal($__GRAY-900, 17 24 39);
// 			}

// 			@include it("950") {
// 				@include is-equal($__GRAY-950, 3 7 18);
// 			}
// 		}

// 		@include describe("ZINC") {
// 			@include it("50") {
// 				@include is-equal($__ZINC-50, 250 250 250);
// 			}

// 			@include it("100") {
// 				@include is-equal($__ZINC-100, 244 244 245);
// 			}

// 			@include it("200") {
// 				@include is-equal($__ZINC-200, 228 228 231);
// 			}

// 			@include it("300") {
// 				@include is-equal($__ZINC-300, 212 212 216);
// 			}

// 			@include it("400") {
// 				@include is-equal($__ZINC-400, 161 161 170);
// 			}

// 			@include it("500") {
// 				@include is-equal($__ZINC-500, 113 113 122);
// 			}

// 			@include it("600") {
// 				@include is-equal($__ZINC-600, 82 82 91);
// 			}

// 			@include it("700") {
// 				@include is-equal($__ZINC-700, 63 63 70);
// 			}

// 			@include it("800") {
// 				@include is-equal($__ZINC-800, 39 39 42);
// 			}

// 			@include it("900") {
// 				@include is-equal($__ZINC-900, 24 24 27);
// 			}

// 			@include it("950") {
// 				@include is-equal($__ZINC-950, 9 9 11);
// 			}
// 		}

// 		@include describe("NEUTRAL") {
// 			@include it("50") {
// 				@include is-equal($__NEUTRAL-50, 250 250 250);
// 			}

// 			@include it("100") {
// 				@include is-equal($__NEUTRAL-100, 245 245 245);
// 			}

// 			@include it("200") {
// 				@include is-equal($__NEUTRAL-200, 229 229 229);
// 			}

// 			@include it("300") {
// 				@include is-equal($__NEUTRAL-300, 212 212 212);
// 			}

// 			@include it("400") {
// 				@include is-equal($__NEUTRAL-400, 163 163 163);
// 			}

// 			@include it("500") {
// 				@include is-equal($__NEUTRAL-500, 115 115 115);
// 			}

// 			@include it("600") {
// 				@include is-equal($__NEUTRAL-600, 82 82 82);
// 			}

// 			@include it("700") {
// 				@include is-equal($__NEUTRAL-700, 64 64 64);
// 			}

// 			@include it("800") {
// 				@include is-equal($__NEUTRAL-800, 38 38 38);
// 			}

// 			@include it("900") {
// 				@include is-equal($__NEUTRAL-900, 23 23 23);
// 			}

// 			@include it("950") {
// 				@include is-equal($__NEUTRAL-950, 10 10 10);
// 			}
// 		}

// 		@include describe("STONE") {
// 			@include it("50") {
// 				@include is-equal($__STONE-50, 250 250 249);
// 			}

// 			@include it("100") {
// 				@include is-equal($__STONE-100, 245 245 244);
// 			}

// 			@include it("200") {
// 				@include is-equal($__STONE-200, 231 229 228);
// 			}

// 			@include it("300") {
// 				@include is-equal($__STONE-300, 214 211 209);
// 			}

// 			@include it("400") {
// 				@include is-equal($__STONE-400, 168 162 158);
// 			}

// 			@include it("500") {
// 				@include is-equal($__STONE-500, 120 113 108);
// 			}

// 			@include it("600") {
// 				@include is-equal($__STONE-600, 87 83 78);
// 			}

// 			@include it("700") {
// 				@include is-equal($__STONE-700, 68 64 60);
// 			}

// 			@include it("800") {
// 				@include is-equal($__STONE-800, 41 37 36);
// 			}

// 			@include it("900") {
// 				@include is-equal($__STONE-900, 28 25 23);
// 			}

// 			@include it("950") {
// 				@include is-equal($__STONE-950, 12 10 9);
// 			}
// 		}

// 		@include describe("RED") {
// 			@include it("50") {
// 				@include is-equal($__RED-50, 254 242 242);
// 			}

// 			@include it("100") {
// 				@include is-equal($__RED-100, 254 226 226);
// 			}

// 			@include it("200") {
// 				@include is-equal($__RED-200, 254 202 202);
// 			}

// 			@include it("300") {
// 				@include is-equal($__RED-300, 252 165 165);
// 			}

// 			@include it("400") {
// 				@include is-equal($__RED-400, 248 113 113);
// 			}

// 			@include it("500") {
// 				@include is-equal($__RED-500, 239 68 68);
// 			}

// 			@include it("600") {
// 				@include is-equal($__RED-600, 220 38 38);
// 			}

// 			@include it("700") {
// 				@include is-equal($__RED-700, 185 28 28);
// 			}

// 			@include it("800") {
// 				@include is-equal($__RED-800, 153 27 27);
// 			}

// 			@include it("900") {
// 				@include is-equal($__RED-900, 127 29 29);
// 			}

// 			@include it("950") {
// 				@include is-equal($__RED-950, 69 10 10);
// 			}
// 		}

// 		@include describe("ORANGE") {
// 			@include it("50") {
// 				@include is-equal($__ORANGE-50, 255 247 237);
// 			}

// 			@include it("100") {
// 				@include is-equal($__ORANGE-100, 255 237 213);
// 			}

// 			@include it("200") {
// 				@include is-equal($__ORANGE-200, 254 215 170);
// 			}

// 			@include it("300") {
// 				@include is-equal($__ORANGE-300, 252 186 116);
// 			}

// 			@include it("400") {
// 				@include is-equal($__ORANGE-400, 251 146 60);
// 			}

// 			@include it("500") {
// 				@include is-equal($__ORANGE-500, 249 115 22);
// 			}

// 			@include it("600") {
// 				@include is-equal($__ORANGE-600, 234 88 12);
// 			}

// 			@include it("700") {
// 				@include is-equal($__ORANGE-700, 194 65 12);
// 			}

// 			@include it("800") {
// 				@include is-equal($__ORANGE-800, 154 52 18);
// 			}

// 			@include it("900") {
// 				@include is-equal($__ORANGE-900, 124 45 18);
// 			}

// 			@include it("950") {
// 				@include is-equal($__ORANGE-950, 67 20 7);
// 			}
// 		}

// 		@include describe("AMBER") {
// 			@include it("50") {
// 				@include is-equal($__AMBER-50, 255 251 235);
// 			}

// 			@include it("100") {
// 				@include is-equal($__AMBER-100, 254 243 199);
// 			}

// 			@include it("200") {
// 				@include is-equal($__AMBER-200, 253 214 138);
// 			}

// 			@include it("300") {
// 				@include is-equal($__AMBER-300, 252 211 77);
// 			}

// 			@include it("400") {
// 				@include is-equal($__AMBER-400, 251 191 36);
// 			}

// 			@include it("500") {
// 				@include is-equal($__AMBER-500, 245 158 11);
// 			}

// 			@include it("600") {
// 				@include is-equal($__AMBER-600, 217 119 6);
// 			}

// 			@include it("700") {
// 				@include is-equal($__AMBER-700, 180 83 9);
// 			}

// 			@include it("800") {
// 				@include is-equal($__AMBER-800, 146 64 14);
// 			}

// 			@include it("900") {
// 				@include is-equal($__AMBER-900, 120 53 15);
// 			}

// 			@include it("950") {
// 				@include is-equal($__AMBER-950, 69 26 3);
// 			}
// 		}

// 		@include describe("YELLOW") {
// 			@include it("50") {
// 				@include is-equal($__YELLOW-50, 254 252 232);
// 			}

// 			@include it("100") {
// 				@include is-equal($__YELLOW-100, 254 249 195);
// 			}

// 			@include it("200") {
// 				@include is-equal($__YELLOW-200, 254 240 138);
// 			}

// 			@include it("300") {
// 				@include is-equal($__YELLOW-300, 253 224 71);
// 			}

// 			@include it("400") {
// 				@include is-equal($__YELLOW-400, 250 204 21);
// 			}

// 			@include it("500") {
// 				@include is-equal($__YELLOW-500, 234 179 8);
// 			}

// 			@include it("600") {
// 				@include is-equal($__YELLOW-600, 202 138 4);
// 			}

// 			@include it("700") {
// 				@include is-equal($__YELLOW-700, 161 98 7);
// 			}

// 			@include it("800") {
// 				@include is-equal($__YELLOW-800, 133 77 14);
// 			}

// 			@include it("900") {
// 				@include is-equal($__YELLOW-900, 113 63 18);
// 			}

// 			@include it("950") {
// 				@include is-equal($__YELLOW-950, 66 32 6);
// 			}
// 		}

// 		@include describe("LIME") {
// 			@include it("50") {
// 				@include is-equal($__LIME-50, 247 254 231);
// 			}

// 			@include it("100") {
// 				@include is-equal($__LIME-100, 236 252 203);
// 			}

// 			@include it("200") {
// 				@include is-equal($__LIME-200, 217 249 157);
// 			}

// 			@include it("300") {
// 				@include is-equal($__LIME-300, 190 242 100);
// 			}

// 			@include it("400") {
// 				@include is-equal($__LIME-400, 163 230 53);
// 			}

// 			@include it("500") {
// 				@include is-equal($__LIME-500, 132 204 22);
// 			}

// 			@include it("600") {
// 				@include is-equal($__LIME-600, 101 163 13);
// 			}

// 			@include it("700") {
// 				@include is-equal($__LIME-700, 77 124 15);
// 			}

// 			@include it("800") {
// 				@include is-equal($__LIME-800, 63 98 18);
// 			}

// 			@include it("900") {
// 				@include is-equal($__LIME-900, 54 83 20);
// 			}

// 			@include it("950") {
// 				@include is-equal($__LIME-950, 26 46 5);
// 			}
// 		}

// 		@include describe("GREEN") {
// 			@include it("50") {
// 				@include is-equal($__GREEN-50, 240 253 244);
// 			}

// 			@include it("100") {
// 				@include is-equal($__GREEN-100, 220 252 231);
// 			}

// 			@include it("200") {
// 				@include is-equal($__GREEN-200, 187 247 208);
// 			}

// 			@include it("300") {
// 				@include is-equal($__GREEN-300, 134 239 172);
// 			}

// 			@include it("400") {
// 				@include is-equal($__GREEN-400, 74 222 128);
// 			}

// 			@include it("500") {
// 				@include is-equal($__GREEN-500, 34 197 94);
// 			}

// 			@include it("600") {
// 				@include is-equal($__GREEN-600, 22 163 74);
// 			}

// 			@include it("700") {
// 				@include is-equal($__GREEN-700, 21 128 61);
// 			}

// 			@include it("800") {
// 				@include is-equal($__GREEN-800, 22 101 52);
// 			}

// 			@include it("900") {
// 				@include is-equal($__GREEN-900, 20 83 45);
// 			}

// 			@include it("950") {
// 				@include is-equal($__GREEN-950, 5 46 22);
// 			}
// 		}

// 		@include describe("EMERALD") {
// 			@include it("50") {
// 				@include is-equal($__EMERALD-50, 236 253 245);
// 			}

// 			@include it("100") {
// 				@include is-equal($__EMERALD-100, 209 250 229);
// 			}

// 			@include it("200") {
// 				@include is-equal($__EMERALD-200, 167 243 208);
// 			}

// 			@include it("300") {
// 				@include is-equal($__EMERALD-300, 110 231 183);
// 			}

// 			@include it("400") {
// 				@include is-equal($__EMERALD-400, 52 211 153);
// 			}

// 			@include it("500") {
// 				@include is-equal($__EMERALD-500, 16 185 129);
// 			}

// 			@include it("600") {
// 				@include is-equal($__EMERALD-600, 5 150 105);
// 			}

// 			@include it("700") {
// 				@include is-equal($__EMERALD-700, 4 120 87);
// 			}

// 			@include it("800") {
// 				@include is-equal($__EMERALD-800, 6 95 70);
// 			}

// 			@include it("900") {
// 				@include is-equal($__EMERALD-900, 6 78 59);
// 			}

// 			@include it("950") {
// 				@include is-equal($__EMERALD-950, 2 44 34);
// 			}
// 		}

// 		@include describe("TEAL") {
// 			@include it("50") {
// 				@include is-equal($__TEAL-50, 240 253 250);
// 			}

// 			@include it("100") {
// 				@include is-equal($__TEAL-100, 204 251 241);
// 			}

// 			@include it("200") {
// 				@include is-equal($__TEAL-200, 153 246 228);
// 			}

// 			@include it("300") {
// 				@include is-equal($__TEAL-300, 94 234 212);
// 			}

// 			@include it("400") {
// 				@include is-equal($__TEAL-400, 45 212 191);
// 			}

// 			@include it("500") {
// 				@include is-equal($__TEAL-500, 20 184 166);
// 			}

// 			@include it("600") {
// 				@include is-equal($__TEAL-600, 13 148 136);
// 			}

// 			@include it("700") {
// 				@include is-equal($__TEAL-700, 15 118 110);
// 			}

// 			@include it("800") {
// 				@include is-equal($__TEAL-800, 17 94 89);
// 			}

// 			@include it("900") {
// 				@include is-equal($__TEAL-900, 19 78 74);
// 			}

// 			@include it("950") {
// 				@include is-equal($__TEAL-950, 4 47 46);
// 			}
// 		}

// 		@include describe("CYAN") {
// 			@include it("50") {
// 				@include is-equal($__CYAN-50, 236 254 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__CYAN-100, 207 250 254);
// 			}

// 			@include it("200") {
// 				@include is-equal($__CYAN-200, 165 243 252);
// 			}

// 			@include it("300") {
// 				@include is-equal($__CYAN-300, 103 232 249);
// 			}

// 			@include it("400") {
// 				@include is-equal($__CYAN-400, 34 211 238);
// 			}

// 			@include it("500") {
// 				@include is-equal($__CYAN-500, 6 182 212);
// 			}

// 			@include it("600") {
// 				@include is-equal($__CYAN-600, 8 145 178);
// 			}

// 			@include it("700") {
// 				@include is-equal($__CYAN-700, 14 116 144);
// 			}

// 			@include it("800") {
// 				@include is-equal($__CYAN-800, 21 94 117);
// 			}

// 			@include it("900") {
// 				@include is-equal($__CYAN-900, 22 78 99);
// 			}

// 			@include it("950") {
// 				@include is-equal($__CYAN-950, 8 51 68);
// 			}
// 		}

// 		@include describe("SKY") {
// 			@include it("50") {
// 				@include is-equal($__SKY-50, 240 249 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__SKY-100, 224 242 254);
// 			}

// 			@include it("200") {
// 				@include is-equal($__SKY-200, 186 230 253);
// 			}

// 			@include it("300") {
// 				@include is-equal($__SKY-300, 125 211 252);
// 			}

// 			@include it("400") {
// 				@include is-equal($__SKY-400, 56 189 248);
// 			}

// 			@include it("500") {
// 				@include is-equal($__SKY-500, 14 165 233);
// 			}

// 			@include it("600") {
// 				@include is-equal($__SKY-600, 2 132 199);
// 			}

// 			@include it("700") {
// 				@include is-equal($__SKY-700, 3 105 161);
// 			}

// 			@include it("800") {
// 				@include is-equal($__SKY-800, 7 89 133);
// 			}

// 			@include it("900") {
// 				@include is-equal($__SKY-900, 12 74 110);
// 			}

// 			@include it("950") {
// 				@include is-equal($__SKY-950, 8 47 73);
// 			}
// 		}

// 		@include describe("BLUE") {
// 			@include it("50") {
// 				@include is-equal($__BLUE-50, 239 246 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__BLUE-100, 219 234 254);
// 			}

// 			@include it("200") {
// 				@include is-equal($__BLUE-200, 191 219 254);
// 			}

// 			@include it("300") {
// 				@include is-equal($__BLUE-300, 147 197 253);
// 			}

// 			@include it("400") {
// 				@include is-equal($__BLUE-400, 96 165 250);
// 			}

// 			@include it("500") {
// 				@include is-equal($__BLUE-500, 59 130 246);
// 			}

// 			@include it("600") {
// 				@include is-equal($__BLUE-600, 37 99 235);
// 			}

// 			@include it("700") {
// 				@include is-equal($__BLUE-700, 29 78 216);
// 			}

// 			@include it("800") {
// 				@include is-equal($__BLUE-800, 30 64 175);
// 			}

// 			@include it("900") {
// 				@include is-equal($__BLUE-900, 30 58 138);
// 			}

// 			@include it("950") {
// 				@include is-equal($__BLUE-950, 23 37 84);
// 			}
// 		}

// 		@include describe("INDIGO") {
// 			@include it("50") {
// 				@include is-equal($__INDIGO-50, 238 242 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__INDIGO-100, 224 231 255);
// 			}

// 			@include it("200") {
// 				@include is-equal($__INDIGO-200, 199 210 254);
// 			}

// 			@include it("300") {
// 				@include is-equal($__INDIGO-300, 165 180 252);
// 			}

// 			@include it("400") {
// 				@include is-equal($__INDIGO-400, 129 140 248);
// 			}

// 			@include it("500") {
// 				@include is-equal($__INDIGO-500, 99 102 241);
// 			}

// 			@include it("600") {
// 				@include is-equal($__INDIGO-600, 79 70 229);
// 			}

// 			@include it("700") {
// 				@include is-equal($__INDIGO-700, 67 56 202);
// 			}

// 			@include it("800") {
// 				@include is-equal($__INDIGO-800, 55 48 163);
// 			}

// 			@include it("900") {
// 				@include is-equal($__INDIGO-900, 49 46 129);
// 			}

// 			@include it("950") {
// 				@include is-equal($__INDIGO-950, 30 27 75);
// 			}
// 		}

// 		@include describe("VIOLET") {
// 			@include it("50") {
// 				@include is-equal($__VIOLET-50, 245 243 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__VIOLET-100, 237 233 254);
// 			}

// 			@include it("200") {
// 				@include is-equal($__VIOLET-200, 221 214 254);
// 			}

// 			@include it("300") {
// 				@include is-equal($__VIOLET-300, 196 181 253);
// 			}

// 			@include it("400") {
// 				@include is-equal($__VIOLET-400, 167 139 250);
// 			}

// 			@include it("500") {
// 				@include is-equal($__VIOLET-500, 139 92 246);
// 			}

// 			@include it("600") {
// 				@include is-equal($__VIOLET-600, 124 58 237);
// 			}

// 			@include it("700") {
// 				@include is-equal($__VIOLET-700, 109 40 217);
// 			}

// 			@include it("800") {
// 				@include is-equal($__VIOLET-800, 91 33 182);
// 			}

// 			@include it("900") {
// 				@include is-equal($__VIOLET-900, 76 29 149);
// 			}

// 			@include it("950") {
// 				@include is-equal($__VIOLET-950, 46 16 101);
// 			}
// 		}

// 		@include describe("PURPLE") {
// 			@include it("50") {
// 				@include is-equal($__PURPLE-50, 250 245 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__PURPLE-100, 243 232 255);
// 			}

// 			@include it("200") {
// 				@include is-equal($__PURPLE-200, 233 213 255);
// 			}

// 			@include it("300") {
// 				@include is-equal($__PURPLE-300, 216 180 254);
// 			}

// 			@include it("400") {
// 				@include is-equal($__PURPLE-400, 192 132 252);
// 			}

// 			@include it("500") {
// 				@include is-equal($__PURPLE-500, 168 85 247);
// 			}

// 			@include it("600") {
// 				@include is-equal($__PURPLE-600, 147 51 234);
// 			}

// 			@include it("700") {
// 				@include is-equal($__PURPLE-700, 126 34 206);
// 			}

// 			@include it("800") {
// 				@include is-equal($__PURPLE-800, 107 33 168);
// 			}

// 			@include it("900") {
// 				@include is-equal($__PURPLE-900, 88 28 135);
// 			}

// 			@include it("950") {
// 				@include is-equal($__PURPLE-950, 59 7 100);
// 			}
// 		}

// 		@include describe("FUCHSIA") {
// 			@include it("50") {
// 				@include is-equal($__FUCHSIA-50, 253 244 255);
// 			}

// 			@include it("100") {
// 				@include is-equal($__FUCHSIA-100, 250 232 255);
// 			}

// 			@include it("200") {
// 				@include is-equal($__FUCHSIA-200, 245 208 254);
// 			}

// 			@include it("300") {
// 				@include is-equal($__FUCHSIA-300, 240 171 252);
// 			}

// 			@include it("400") {
// 				@include is-equal($__FUCHSIA-400, 232 121 249);
// 			}

// 			@include it("500") {
// 				@include is-equal($__FUCHSIA-500, 217 70 239);
// 			}

// 			@include it("600") {
// 				@include is-equal($__FUCHSIA-600, 192 38 211);
// 			}

// 			@include it("700") {
// 				@include is-equal($__FUCHSIA-700, 162 28 175);
// 			}

// 			@include it("800") {
// 				@include is-equal($__FUCHSIA-800, 134 25 143);
// 			}

// 			@include it("900") {
// 				@include is-equal($__FUCHSIA-900, 112 26 117);
// 			}

// 			@include it("950") {
// 				@include is-equal($__FUCHSIA-950, 74 4 78);
// 			}
// 		}

// 		@include describe("PINK") {
// 			@include it("50") {
// 				@include is-equal($__PINK-50, 253 242 248);
// 			}

// 			@include it("100") {
// 				@include is-equal($__PINK-100, 252 231 243);
// 			}

// 			@include it("200") {
// 				@include is-equal($__PINK-200, 251 207 232);
// 			}

// 			@include it("300") {
// 				@include is-equal($__PINK-300, 249 168 212);
// 			}

// 			@include it("400") {
// 				@include is-equal($__PINK-400, 244 114 182);
// 			}

// 			@include it("500") {
// 				@include is-equal($__PINK-500, 236 72 153);
// 			}

// 			@include it("600") {
// 				@include is-equal($__PINK-600, 219 39 119);
// 			}

// 			@include it("700") {
// 				@include is-equal($__PINK-700, 190 24 93);
// 			}

// 			@include it("800") {
// 				@include is-equal($__PINK-800, 157 23 77);
// 			}

// 			@include it("900") {
// 				@include is-equal($__PINK-900, 131 24 67);
// 			}

// 			@include it("950") {
// 				@include is-equal($__PINK-950, 80 7 36);
// 			}
// 		}

// 		@include describe("ROSE") {
// 			@include it("50") {
// 				@include is-equal($__ROSE-50, 255 241 242);
// 			}

// 			@include it("100") {
// 				@include is-equal($__ROSE-100, 255 228 230);
// 			}

// 			@include it("200") {
// 				@include is-equal($__ROSE-200, 254 205 211);
// 			}

// 			@include it("300") {
// 				@include is-equal($__ROSE-300, 253 164 175);
// 			}

// 			@include it("400") {
// 				@include is-equal($__ROSE-400, 251 113 133);
// 			}

// 			@include it("500") {
// 				@include is-equal($__ROSE-500, 244 63 94);
// 			}

// 			@include it("600") {
// 				@include is-equal($__ROSE-600, 225 29 72);
// 			}

// 			@include it("700") {
// 				@include is-equal($__ROSE-700, 190 18 60);
// 			}

// 			@include it("800") {
// 				@include is-equal($__ROSE-800, 159 18 57);
// 			}

// 			@include it("900") {
// 				@include is-equal($__ROSE-900, 136 19 55);
// 			}

// 			@include it("950") {
// 				@include is-equal($__ROSE-950, 76 5 25);
// 			}
// 		}
// 	}
// }

// @include describe('Extend Tests') {
//   @include describe('Layout') {
//     @include it('Layout') {
//       @include is-equal($__Layout, true)
//     }

//     @include it('AspectRatio') {
//       @include is-equal($___AspectRatio, true)
//     }

//     @include it('Container') {
//       @include is-equal($___Container, true)
//     }

//     @include it('Columns') {
//       @include is-equal($___Columns, true)
//     }

//     @include it('BreakAfter') {
//       @include is-equal($___BreakAfter, true)
//     }

//     @include it('BreakBefore') {
//       @include is-equal($___BreakBefore, true)
//     }

//     @include it('BreakInside') {
//       @include is-equal($___BreakInside, true)
//     }

//     @include it('BoxDecorationBreak') {
//       @include is-equal($___BoxDecorationBreak, true)
//     }

//     @include it('BoxSizing') {
//       @include is-equal($___BoxSizing, true)
//     }

//     @include it('Display') {
//       @include is-equal($___Display, true)
//     }

//     @include it('Floats') {
//       @include is-equal($___Floats, true)
//     }

//     @include it('Clear') {
//       @include is-equal($___Clear, true)
//     }

//     @include it('Isolation') {
//       @include is-equal($___Isolation, true)
//     }

//     @include it('ObjectFit') {
//       @include is-equal($___ObjectFit, true)
//     }

//     @include it('ObjectPosition') {
//       @include is-equal($___ObjectPosition, true)
//     }

//     @include it('Overflow') {
//       @include is-equal($___Overflow, true)
//     }

//     @include it('OverscrollBehavior') {
//       @include is-equal($___OverscrollBehavior, true)
//     }

//     @include it('Position') {
//       @include is-equal($___Position, true)
//     }

//     @include it('TopRightBottomLeft') {
//       @include is-equal($___TopRightBottomLeft, true)
//     }

//     @include it('Visibility') {
//       @include is-equal($___Visibility, true)
//     }

//     @include it('Z-Index') {
//       @include is-equal($___Z-Index, true)
//     }
//   }
  
//   @include describe('Flexbox Grid') {
//     @include it('Flexbox Grid') {
//       @include is-equal($__FlexboxGrid, true)
//     }

//     @include it('Flex Basis') {
//       @include is-equal($___FlexBasis, true)
//     }

//     @include it('Flex Direction') {
//       @include is-equal($___FlexDirection, true)
//     }

//     @include it('Flex Wrap') {
//       @include is-equal($___FlexWrap, true)
//     }

//     @include it('Flex') {
//       @include is-equal($___Flex, true)
//     }

//     @include it('Flex Grow') {
//       @include is-equal($___FlexGrow, true)
//     }

//     @include it('Flex Shrink') {
//       @include is-equal($___FlexShrink, true)
//     }

//     @include it('Order') {
//       @include is-equal($___Order, true)
//     }

//     @include it('GridTemplateColumns') {
//       @include is-equal($___GridTemplateColumns, true)
//     }

//     @include it('GridColumnStartEnd') {
//       @include is-equal($___GridColumnStartEnd, true)
//     }

//     @include it('GridTemplateRows') {
//       @include is-equal($___GridTemplateRows, true)
//     }

//     @include it('GridRowStartEnd') {
//       @include is-equal($___GridRowStartEnd, true)
//     }

//     @include it('GridAutoFlow') {
//       @include is-equal($___GridAutoFlow, true)
//     }

//     @include it('GridAutoColumns') {
//       @include is-equal($___GridAutoColumns, true)
//     }

//     @include it('GridAutoRows') {
//       @include is-equal($___GridAutoRows, true)
//     }

//     @include it('Gap') {
//       @include is-equal($___Gap, true)
//     }

//     @include it('JustifyContent') {
//       @include is-equal($___JustifyContent, true)
//     }

//     @include it('JustifyItems') {
//       @include is-equal($___JustifyItems, true)
//     }

//     @include it('JustifySelf') {
//       @include is-equal($___JustifySelf, true)
//     }

//     @include it('AlignContent') {
//       @include is-equal($___AlignContent, true)
//     }

//     @include it('AlignItems') {
//       @include is-equal($___AlignItems, true)
//     }

//     @include it('AlignSelf') {
//       @include is-equal($___AlignSelf, true)
//     }

//     @include it('PlaceContent') {
//       @include is-equal($___PlaceContent, true)
//     }

//     @include it('PlaceItems') {
//       @include is-equal($___PlaceItems, true)
//     }

//     @include it('PlaceSelf') {
//       @include is-equal($___PlaceSelf, true)
//     }
//   }

//   @include describe('Spacing') {
//     @include it('Spacing') {
//       @include is-equal($__Spacing, true)
//     }

//     @include it('Padding') {
//       @include is-equal($___Padding, true)
//     }

//     @include it('Margin') {
//       @include is-equal($___Margin, true)
//     }

//     @include it('Space Between') {
//       @include is-equal($___SpaceBetween, true)
//     }
//   }
// }

@include describe('Mixin Tests') {
  // @include describe("Layout") {
  //   @include describe("AspectRatio") {
  //     @include describe("Basic") {
  //       @include it("aspect-auto") {
  //         @include assert {
  //           @include output {
  //             @include aspect-auto;
  //           }
  
  //           @include expect {
  //             aspect-ratio: auto;
  //           }
  //         }
  //       }
  
  //       @include it("aspect-square") {
  //         @include assert {
  //           @include output {
  //             @include aspect-square;
  //           }
  
  //           @include expect {
  //             aspect-ratio: 1 / 1;
  //           }
  //         }
  //       }
  
  //       @include it("aspect-video") {
  //         @include assert {
  //           @include output {
  //             @include aspect-video;
  //           }
  
  //           @include expect {
  //             aspect-ratio: 16 / 9;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("aspect-(4/3)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:aspect-(4/3);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 aspect-ratio: 1.3333333333;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("aspect-(4/3)") {
  //           @include assert {
  //             @include output {
  //               @include md\:aspect-(4/3);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 aspect-ratio: 1.3333333333;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("aspect-(4/3)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:aspect-(4/3);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 aspect-ratio: 1.3333333333;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("aspect-(4/3)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:aspect-(4/3);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 aspect-ratio: 1.3333333333;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("aspect-(4/3)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:aspect-(4/3);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 aspect-ratio: 1.3333333333;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("aspect-(4/3)") {
  //         @include assert {
  //           @include output {
  //             @include aspect-(4/3);
  //           }
  
  //           @include expect {
  //             aspect-ratio: 1.3333333333;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Container") {
  //     @include describe("Basic") {
  //       @include it("container") {
  //         @include assert {
  //           @include output {
  //             @include container;
  //           }
  
  //           @include expect {
  //             width: 100%;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("container") {
  //           @include assert {
  //             @include output {
  //               @include sm\:container;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 max-width: $__MEDIA-SM;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("container") {
  //           @include assert {
  //             @include output {
  //               @include md\:container;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 max-width: $__MEDIA-MD;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("container") {
  //           @include assert {
  //             @include output {
  //               @include lg\:container;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 max-width: $__MEDIA-LG;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("container") {
  //           @include assert {
  //             @include output {
  //               @include xl\:container;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 max-width: $__MEDIA-XL;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("container") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:container;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 max-width: $__MEDIA-2XL;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Columns") {
  //     @include describe("Basic") {
  //       @include describe('1') {
  //         @include it("columns-1") {
  //           @include assert {
  //             @include output {
  //               @include columns-1;
  //             }
    
  //             @include expect {
  //               columns: 1;
  //             }
  //           }
  //         }
    
  //         @include it("columns-2") {
  //           @include assert {
  //             @include output {
  //               @include columns-2;
  //             }
    
  //             @include expect {
  //               columns: 2;
  //             }
  //           }
  //         }
    
  //         @include it("columns-3") {
  //           @include assert {
  //             @include output {
  //               @include columns-3;
  //             }
    
  //             @include expect {
  //               columns: 3;
  //             }
  //           }
  //         }
    
  //         @include it("columns-4") {
  //           @include assert {
  //             @include output {
  //               @include columns-4;
  //             }
    
  //             @include expect {
  //               columns: 4;
  //             }
  //           }
  //         }
    
  //         @include it("columns-5") {
  //           @include assert {
  //             @include output {
  //               @include columns-5;
  //             }
    
  //             @include expect {
  //               columns: 5;
  //             }
  //           }
  //         }
    
  //         @include it("columns-6") {
  //           @include assert {
  //             @include output {
  //               @include columns-6;
  //             }
    
  //             @include expect {
  //               columns: 6;
  //             }
  //           }
  //         }
    
  //         @include it("columns-7") {
  //           @include assert {
  //             @include output {
  //               @include columns-7;
  //             }
    
  //             @include expect {
  //               columns: 7;
  //             }
  //           }
  //         }
    
  //         @include it("columns-8") {
  //           @include assert {
  //             @include output {
  //               @include columns-8;
  //             }
    
  //             @include expect {
  //               columns: 8;
  //             }
  //           }
  //         }
    
  //         @include it("columns-9") {
  //           @include assert {
  //             @include output {
  //               @include columns-9;
  //             }
    
  //             @include expect {
  //               columns: 9;
  //             }
  //           }
  //         }
    
  //         @include it("columns-10") {
  //           @include assert {
  //             @include output {
  //               @include columns-10;
  //             }
    
  //             @include expect {
  //               columns: 10;
  //             }
  //           }
  //         }
    
  //         @include it("columns-11") {
  //           @include assert {
  //             @include output {
  //               @include columns-11;
  //             }
    
  //             @include expect {
  //               columns: 11;
  //             }
  //           }
  //         }
    
  //         @include it("columns-12") {
  //           @include assert {
  //             @include output {
  //               @include columns-12;
  //             }
    
  //             @include expect {
  //               columns: 12;
  //             }
  //           }
  //         }
    
  //         @include it("columns-auto") {
  //           @include assert {
  //             @include output {
  //               @include columns-auto;
  //             }
    
  //             @include expect {
  //               columns: auto;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('3xs') {
  //         @include it("columns-3xs") {
  //           @include assert {
  //             @include output {
  //               @include columns-3xs;
  //             }
    
  //             @include expect {
  //               columns: 16rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-2xs") {
  //           @include assert {
  //             @include output {
  //               @include columns-2xs;
  //             }
    
  //             @include expect {
  //               columns: 18rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-xs") {
  //           @include assert {
  //             @include output {
  //               @include columns-xs;
  //             }
    
  //             @include expect {
  //               columns: 20rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-sm") {
  //           @include assert {
  //             @include output {
  //               @include columns-sm;
  //             }
    
  //             @include expect {
  //               columns: 24rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-md") {
  //           @include assert {
  //             @include output {
  //               @include columns-md;
  //             }
    
  //             @include expect {
  //               columns: 28rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-lg") {
  //           @include assert {
  //             @include output {
  //               @include columns-lg;
  //             }
    
  //             @include expect {
  //               columns: 32rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-xl;
  //             }
    
  //             @include expect {
  //               columns: 36rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-2xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-2xl;
  //             }
    
  //             @include expect {
  //               columns: 42rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-3xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-3xl;
  //             }
    
  //             @include expect {
  //               columns: 48rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-4xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-4xl;
  //             }
    
  //             @include expect {
  //               columns: 56rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-5xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-5xl;
  //             }
    
  //             @include expect {
  //               columns: 64rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-6xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-6xl;
  //             }
    
  //             @include expect {
  //               columns: 72rem;
  //             }
  //           }
  //         }
    
  //         @include it("columns-7xl") {
  //           @include assert {
  //             @include output {
  //               @include columns-7xl;
  //             }
    
  //             @include expect {
  //               columns: 80rem;
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("columns-(10rem)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:columns-(10rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 columns: 10rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("columns-(10rem)") {
  //           @include assert {
  //             @include output {
  //               @include md\:columns-(10rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 columns: 10rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("columns-(10rem)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:columns-(10rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 columns: 10rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("columns-(10rem)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:columns-(10rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 columns: 10rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("columns-(10rem)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:columns-(10rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 columns: 10rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("columns-(10rem)") {
  //         @include assert {
  //           @include output {
  //             @include columns-(10rem);
  //           }
  
  //           @include expect {
  //             columns: 10rem;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Break After") {
  //     @include describe("Basic") {
  //       @include it("break-after-auto") {
  //         @include assert {
  //           @include output {
  //             @include break-after-auto;
  //           }
  
  //           @include expect {
  //             break-after: auto;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-avoid") {
  //         @include assert {
  //           @include output {
  //             @include break-after-avoid;
  //           }
  
  //           @include expect {
  //             break-after: avoid;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-all") {
  //         @include assert {
  //           @include output {
  //             @include break-after-all;
  //           }
  
  //           @include expect {
  //             break-after: all;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-avoid-page") {
  //         @include assert {
  //           @include output {
  //             @include break-after-avoid-page;
  //           }
  
  //           @include expect {
  //             break-after: avoid-page;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-page") {
  //         @include assert {
  //           @include output {
  //             @include break-after-page;
  //           }
  
  //           @include expect {
  //             break-after: page;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-left") {
  //         @include assert {
  //           @include output {
  //             @include break-after-left;
  //           }
  
  //           @include expect {
  //             break-after: left;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-right") {
  //         @include assert {
  //           @include output {
  //             @include break-after-right;
  //           }
  
  //           @include expect {
  //             break-after: right;
  //           }
  //         }
  //       }
  
  //       @include it("break-after-column") {
  //         @include assert {
  //           @include output {
  //             @include break-after-column;
  //           }
  
  //           @include expect {
  //             break-after: column;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("break-after-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-all") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-page") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-left") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-right") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-column") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-after-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-after: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("break-after-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-all") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-page") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-left") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-right") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-column") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-after-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-after: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("break-after-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-all") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-page") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-left") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-right") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-column") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-after-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-after: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("break-after-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-all") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-page") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-left") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-right") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-column") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-after-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-after: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("break-after-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-all") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-page") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-left") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-right") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-after-column") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-after-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-after: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Break Before") {
  //     @include describe("Basic") {
  //       @include it("break-before-auto") {
  //         @include assert {
  //           @include output {
  //             @include break-before-auto;
  //           }
  
  //           @include expect {
  //             break-before: auto;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-avoid") {
  //         @include assert {
  //           @include output {
  //             @include break-before-avoid;
  //           }
  
  //           @include expect {
  //             break-before: avoid;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-all") {
  //         @include assert {
  //           @include output {
  //             @include break-before-all;
  //           }
  
  //           @include expect {
  //             break-before: all;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-avoid-page") {
  //         @include assert {
  //           @include output {
  //             @include break-before-avoid-page;
  //           }
  
  //           @include expect {
  //             break-before: avoid-page;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-page") {
  //         @include assert {
  //           @include output {
  //             @include break-before-page;
  //           }
  
  //           @include expect {
  //             break-before: page;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-left") {
  //         @include assert {
  //           @include output {
  //             @include break-before-left;
  //           }
  
  //           @include expect {
  //             break-before: left;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-right") {
  //         @include assert {
  //           @include output {
  //             @include break-before-right;
  //           }
  
  //           @include expect {
  //             break-before: right;
  //           }
  //         }
  //       }
  
  //       @include it("break-before-column") {
  //         @include assert {
  //           @include output {
  //             @include break-before-column;
  //           }
  
  //           @include expect {
  //             break-before: column;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("break-before-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-all") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-page") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-left") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-right") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-column") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-before-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-before: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("break-before-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-all") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-page") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-left") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-right") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-column") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-before-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-before: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("break-before-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-all") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-page") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-left") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-right") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-column") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-before-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-before: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("break-before-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-all") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-page") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-left") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-right") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-column") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-before-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-before: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("break-before-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-all") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-all;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: all;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-page") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-left") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-right") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-before-column") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-before-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-before: column;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Break Inside") {
  //     @include describe("Basic") {
  //       @include it("break-inside-auto") {
  //         @include assert {
  //           @include output {
  //             @include break-inside-auto;
  //           }
  
  //           @include expect {
  //             break-inside: auto;
  //           }
  //         }
  //       }
  
  //       @include it("break-inside-avoid") {
  //         @include assert {
  //           @include output {
  //             @include break-inside-avoid;
  //           }
  
  //           @include expect {
  //             break-inside: avoid;
  //           }
  //         }
  //       }
  
  //       @include it("break-inside-avoid-page") {
  //         @include assert {
  //           @include output {
  //             @include break-inside-avoid-page;
  //           }
  
  //           @include expect {
  //             break-inside: avoid-page;
  //           }
  //         }
  //       }
  
  //       @include it("break-inside-avoid-column") {
  //         @include assert {
  //           @include output {
  //             @include break-inside-avoid-column;
  //           }
  
  //           @include expect {
  //             break-inside: avoid-column;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("break-inside-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-inside-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-inside: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-inside-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-inside: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-inside-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-inside: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-column") {
  //           @include assert {
  //             @include output {
  //               @include sm\:break-inside-avoid-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 break-inside: avoid-column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("break-inside-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-inside-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-inside: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-inside-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-inside: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-inside-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-inside: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-column") {
  //           @include assert {
  //             @include output {
  //               @include md\:break-inside-avoid-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 break-inside: avoid-column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("break-inside-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-inside-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-inside: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-inside-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-inside: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-inside-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-inside: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-column") {
  //           @include assert {
  //             @include output {
  //               @include lg\:break-inside-avoid-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 break-inside: avoid-column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("break-inside-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-inside-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-inside: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-inside-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-inside: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-inside-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-inside: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-column") {
  //           @include assert {
  //             @include output {
  //               @include xl\:break-inside-avoid-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 break-inside: avoid-column;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("break-inside-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-inside-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-inside: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-inside-avoid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-inside: avoid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-page") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-inside-avoid-page;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-inside: avoid-page;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("break-inside-avoid-column") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:break-inside-avoid-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 break-inside: avoid-column;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Box Decoration Break") {
  //     @include describe("Basic") {
  //       @include it("box-decoration-clone") {
  //         @include assert {
  //           @include output {
  //             @include box-decoration-clone;
  //           }
  
  //           @include expect {
  //             box-decoration-break: clone;
  //           }
  //         }
  //       }
  
  //       @include it("box-decoration-slice") {
  //         @include assert {
  //           @include output {
  //             @include box-decoration-slice;
  //           }
  
  //           @include expect {
  //             box-decoration-break: slice;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("box-decoration-clone") {
  //           @include assert {
  //             @include output {
  //               @include sm\:box-decoration-clone;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 box-decoration-break: clone;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-decoration-slice") {
  //           @include assert {
  //             @include output {
  //               @include sm\:box-decoration-slice;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 box-decoration-break: slice;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("box-decoration-clone") {
  //           @include assert {
  //             @include output {
  //               @include md\:box-decoration-clone;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 box-decoration-break: clone;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-decoration-slice") {
  //           @include assert {
  //             @include output {
  //               @include md\:box-decoration-slice;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 box-decoration-break: slice;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("box-decoration-clone") {
  //           @include assert {
  //             @include output {
  //               @include lg\:box-decoration-clone;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 box-decoration-break: clone;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-decoration-slice") {
  //           @include assert {
  //             @include output {
  //               @include lg\:box-decoration-slice;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 box-decoration-break: slice;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("box-decoration-clone") {
  //           @include assert {
  //             @include output {
  //               @include xl\:box-decoration-clone;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 box-decoration-break: clone;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-decoration-slice") {
  //           @include assert {
  //             @include output {
  //               @include xl\:box-decoration-slice;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 box-decoration-break: slice;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("box-decoration-clone") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:box-decoration-clone;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 box-decoration-break: clone;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-decoration-slice") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:box-decoration-slice;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 box-decoration-break: slice;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Box Sizing") {
  //     @include describe("Basic") {
  //       @include it("box-border") {
  //         @include assert {
  //           @include output {
  //             @include box-border;
  //           }
  
  //           @include expect {
  //             box-sizing: border-box;
  //           }
  //         }
  //       }
  
  //       @include it("box-content") {
  //         @include assert {
  //           @include output {
  //             @include box-content;
  //           }
  
  //           @include expect {
  //             box-sizing: content-box;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("box-border") {
  //           @include assert {
  //             @include output {
  //               @include sm\:box-border;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 box-sizing: border-box;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-content") {
  //           @include assert {
  //             @include output {
  //               @include sm\:box-content;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 box-sizing: content-box;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("box-border") {
  //           @include assert {
  //             @include output {
  //               @include md\:box-border;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 box-sizing: border-box;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-content") {
  //           @include assert {
  //             @include output {
  //               @include md\:box-content;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 box-sizing: content-box;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("box-border") {
  //           @include assert {
  //             @include output {
  //               @include lg\:box-border;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 box-sizing: border-box;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-content") {
  //           @include assert {
  //             @include output {
  //               @include lg\:box-content;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 box-sizing: content-box;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("box-border") {
  //           @include assert {
  //             @include output {
  //               @include xl\:box-border;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 box-sizing: border-box;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-content") {
  //           @include assert {
  //             @include output {
  //               @include xl\:box-content;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 box-sizing: content-box;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("box-border") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:box-border;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 box-sizing: border-box;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("box-content") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:box-content;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 box-sizing: content-box;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Display") {
  //     @include describe("Basic") {
  //       @include it("block") {
  //         @include assert {
  //           @include output {
  //             @include block;
  //           }
  
  //           @include expect {
  //             display: block;
  //           }
  //         }
  //       }
  
  //       @include it("inline-block") {
  //         @include assert {
  //           @include output {
  //             @include inline-block;
  //           }
  
  //           @include expect {
  //             display: inline-block;
  //           }
  //         }
  //       }
  
  //       @include it("inline") {
  //         @include assert {
  //           @include output {
  //             @include inline;
  //           }
  
  //           @include expect {
  //             display: inline;
  //           }
  //         }
  //       }
  
  //       @include it("flex") {
  //         @include assert {
  //           @include output {
  //             @include flex;
  //           }
  
  //           @include expect {
  //             display: flex;
  //           }
  //         }
  //       }
  
  //       @include it("inline-flex") {
  //         @include assert {
  //           @include output {
  //             @include inline-flex;
  //           }
  
  //           @include expect {
  //             display: inline-flex;
  //           }
  //         }
  //       }
  
  //       @include it("table") {
  //         @include assert {
  //           @include output {
  //             @include table;
  //           }
  
  //           @include expect {
  //             display: table;
  //           }
  //         }
  //       }
  
  //       @include it("inline-table") {
  //         @include assert {
  //           @include output {
  //             @include inline-table;
  //           }
  
  //           @include expect {
  //             display: inline-table;
  //           }
  //         }
  //       }
  
  //       @include it("table-caption") {
  //         @include assert {
  //           @include output {
  //             @include table-caption;
  //           }
  
  //           @include expect {
  //             display: table-caption;
  //           }
  //         }
  //       }
  
  //       @include it("table-cell") {
  //         @include assert {
  //           @include output {
  //             @include table-cell;
  //           }
  
  //           @include expect {
  //             display: table-cell;
  //           }
  //         }
  //       }
  
  //       @include it("table-column") {
  //         @include assert {
  //           @include output {
  //             @include table-column;
  //           }
  
  //           @include expect {
  //             display: table-column;
  //           }
  //         }
  //       }
  
  //       @include it("table-column-group") {
  //         @include assert {
  //           @include output {
  //             @include table-column-group;
  //           }
  
  //           @include expect {
  //             display: table-column-group;
  //           }
  //         }
  //       }
  
  //       @include it("table-footer-group") {
  //         @include assert {
  //           @include output {
  //             @include table-footer-group;
  //           }
  
  //           @include expect {
  //             display: table-footer-group;
  //           }
  //         }
  //       }
  
  //       @include it("table-header-group") {
  //         @include assert {
  //           @include output {
  //             @include table-header-group;
  //           }
  
  //           @include expect {
  //             display: table-header-group;
  //           }
  //         }
  //       }
  
  //       @include it("table-row-group") {
  //         @include assert {
  //           @include output {
  //             @include table-row-group;
  //           }
  
  //           @include expect {
  //             display: table-row-group;
  //           }
  //         }
  //       }
  
  //       @include it("table-row") {
  //         @include assert {
  //           @include output {
  //             @include table-row;
  //           }
  
  //           @include expect {
  //             display: table-row;
  //           }
  //         }
  //       }
  
  //       @include it("flow-root") {
  //         @include assert {
  //           @include output {
  //             @include flow-root;
  //           }
  
  //           @include expect {
  //             display: flow-root;
  //           }
  //         }
  //       }
  
  //       @include it("grid") {
  //         @include assert {
  //           @include output {
  //             @include grid;
  //           }
  
  //           @include expect {
  //             display: grid;
  //           }
  //         }
  //       }
  
  //       @include it("inline-grid") {
  //         @include assert {
  //           @include output {
  //             @include inline-grid;
  //           }
  
  //           @include expect {
  //             display: inline-grid;
  //           }
  //         }
  //       }
  
  //       @include it("contents") {
  //         @include assert {
  //           @include output {
  //             @include contents;
  //           }
  
  //           @include expect {
  //             display: contents;
  //           }
  //         }
  //       }
  
  //       @include it("list-item") {
  //         @include assert {
  //           @include output {
  //             @include list-item;
  //           }
  
  //           @include expect {
  //             display: list-item;
  //           }
  //         }
  //       }
  
  //       @include it("hidden") {
  //         @include assert {
  //           @include output {
  //             @include hidden;
  //           }
  
  //           @include expect {
  //             display: none;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("block") {
  //           @include assert {
  //             @include output {
  //               @include sm\:block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-block") {
  //           @include assert {
  //             @include output {
  //               @include sm\:inline-block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: inline-block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:inline;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: inline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-flex") {
  //           @include assert {
  //             @include output {
  //               @include sm\:inline-flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: inline-flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-table") {
  //           @include assert {
  //             @include output {
  //               @include sm\:inline-table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: inline-table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-caption") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-caption;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-caption;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-cell") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-cell;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-cell;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column-group") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-column-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-column-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-footer-group") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-footer-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-footer-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-header-group") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-header-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-header-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row-group") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-row-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-row-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row") {
  //           @include assert {
  //             @include output {
  //               @include sm\:table-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: table-row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flow-root") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flow-root;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: flow-root;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-grid") {
  //           @include assert {
  //             @include output {
  //               @include sm\:inline-grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: inline-grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("contents") {
  //           @include assert {
  //             @include output {
  //               @include sm\:contents;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: contents;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("list-item") {
  //           @include assert {
  //             @include output {
  //               @include sm\:list-item;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: list-item;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("hidden") {
  //           @include assert {
  //             @include output {
  //               @include sm\:hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 display: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("block") {
  //           @include assert {
  //             @include output {
  //               @include md\:block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-block") {
  //           @include assert {
  //             @include output {
  //               @include md\:inline-block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: inline-block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline") {
  //           @include assert {
  //             @include output {
  //               @include md\:inline;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: inline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex") {
  //           @include assert {
  //             @include output {
  //               @include md\:flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-flex") {
  //           @include assert {
  //             @include output {
  //               @include md\:inline-flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: inline-flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table") {
  //           @include assert {
  //             @include output {
  //               @include md\:table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-table") {
  //           @include assert {
  //             @include output {
  //               @include md\:inline-table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: inline-table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-caption") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-caption;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-caption;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-cell") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-cell;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-cell;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column-group") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-column-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-column-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-footer-group") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-footer-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-footer-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-header-group") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-header-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-header-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row-group") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-row-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-row-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row") {
  //           @include assert {
  //             @include output {
  //               @include md\:table-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: table-row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flow-root") {
  //           @include assert {
  //             @include output {
  //               @include md\:flow-root;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: flow-root;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-grid") {
  //           @include assert {
  //             @include output {
  //               @include md\:inline-grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: inline-grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("contents") {
  //           @include assert {
  //             @include output {
  //               @include md\:contents;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: contents;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("list-item") {
  //           @include assert {
  //             @include output {
  //               @include md\:list-item;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: list-item;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("hidden") {
  //           @include assert {
  //             @include output {
  //               @include md\:hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 display: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("block") {
  //           @include assert {
  //             @include output {
  //               @include lg\:block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-block") {
  //           @include assert {
  //             @include output {
  //               @include lg\:inline-block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: inline-block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline") {
  //           @include assert {
  //             @include output {
  //               @include lg\:inline;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: inline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex") {
  //           @include assert {
  //             @include output {
  //               @include lg\:flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-flex") {
  //           @include assert {
  //             @include output {
  //               @include lg\:inline-flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: inline-flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-table") {
  //           @include assert {
  //             @include output {
  //               @include lg\:inline-table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: inline-table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-caption") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-caption;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-caption;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-cell") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-cell;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-cell;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column-group") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-column-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-column-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-footer-group") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-footer-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-footer-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-header-group") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-header-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-header-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row-group") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-row-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-row-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row") {
  //           @include assert {
  //             @include output {
  //               @include lg\:table-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: table-row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flow-root") {
  //           @include assert {
  //             @include output {
  //               @include lg\:flow-root;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: flow-root;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-grid") {
  //           @include assert {
  //             @include output {
  //               @include lg\:inline-grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: inline-grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("contents") {
  //           @include assert {
  //             @include output {
  //               @include lg\:contents;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: contents;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("list-item") {
  //           @include assert {
  //             @include output {
  //               @include lg\:list-item;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: list-item;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("hidden") {
  //           @include assert {
  //             @include output {
  //               @include lg\:hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 display: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("block") {
  //           @include assert {
  //             @include output {
  //               @include xl\:block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-block") {
  //           @include assert {
  //             @include output {
  //               @include xl\:inline-block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: inline-block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline") {
  //           @include assert {
  //             @include output {
  //               @include xl\:inline;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: inline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex") {
  //           @include assert {
  //             @include output {
  //               @include xl\:flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-flex") {
  //           @include assert {
  //             @include output {
  //               @include xl\:inline-flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: inline-flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-table") {
  //           @include assert {
  //             @include output {
  //               @include xl\:inline-table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: inline-table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-caption") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-caption;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-caption;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-cell") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-cell;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-cell;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column-group") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-column-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-column-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-footer-group") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-footer-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-footer-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-header-group") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-header-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-header-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row-group") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-row-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-row-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row") {
  //           @include assert {
  //             @include output {
  //               @include xl\:table-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: table-row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flow-root") {
  //           @include assert {
  //             @include output {
  //               @include xl\:flow-root;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: flow-root;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-grid") {
  //           @include assert {
  //             @include output {
  //               @include xl\:inline-grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: inline-grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("contents") {
  //           @include assert {
  //             @include output {
  //               @include xl\:contents;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: contents;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("list-item") {
  //           @include assert {
  //             @include output {
  //               @include xl\:list-item;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: list-item;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("hidden") {
  //           @include assert {
  //             @include output {
  //               @include xl\:hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 display: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("block") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-block") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:inline-block;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: inline-block;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:inline;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: inline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-flex") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:inline-flex;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: inline-flex;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-table") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:inline-table;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: inline-table;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-caption") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-caption;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-caption;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-cell") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-cell;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-cell;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-column;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-column-group") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-column-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-column-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-footer-group") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-footer-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-footer-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-header-group") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-header-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-header-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row-group") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-row-group;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-row-group;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("table-row") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:table-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: table-row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flow-root") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:flow-root;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: flow-root;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("inline-grid") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:inline-grid;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: inline-grid;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("contents") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:contents;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: contents;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("list-item") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:list-item;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: list-item;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("hidden") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 display: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Floats") {
  //     @include describe("Basic") {
  //       @include it("float-start") {
  //         @include assert {
  //           @include output {
  //             @include float-start;
  //           }
  
  //           @include expect {
  //             float: inline-start;
  //           }
  //         }
  //       }
  
  //       @include it("float-end") {
  //         @include assert {
  //           @include output {
  //             @include float-end;
  //           }
  
  //           @include expect {
  //             float: inline-end;
  //           }
  //         }
  //       }
  
  //       @include it("float-right") {
  //         @include assert {
  //           @include output {
  //             @include float-right;
  //           }
  
  //           @include expect {
  //             float: right;
  //           }
  //         }
  //       }
  
  //       @include it("float-left") {
  //         @include assert {
  //           @include output {
  //             @include float-left;
  //           }
  
  //           @include expect {
  //             float: left;
  //           }
  //         }
  //       }
  
  //       @include it("float-none") {
  //         @include assert {
  //           @include output {
  //             @include float-none;
  //           }
  
  //           @include expect {
  //             float: none;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("float-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:float-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 float: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:float-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 float: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-right") {
  //           @include assert {
  //             @include output {
  //               @include sm\:float-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 float: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-left") {
  //           @include assert {
  //             @include output {
  //               @include sm\:float-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 float: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-none") {
  //           @include assert {
  //             @include output {
  //               @include sm\:float-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 float: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("float-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:float-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 float: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:float-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 float: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-right") {
  //           @include assert {
  //             @include output {
  //               @include md\:float-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 float: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-left") {
  //           @include assert {
  //             @include output {
  //               @include md\:float-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 float: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-none") {
  //           @include assert {
  //             @include output {
  //               @include md\:float-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 float: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("float-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:float-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 float: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:float-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 float: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-right") {
  //           @include assert {
  //             @include output {
  //               @include lg\:float-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 float: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-left") {
  //           @include assert {
  //             @include output {
  //               @include lg\:float-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 float: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-none") {
  //           @include assert {
  //             @include output {
  //               @include lg\:float-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 float: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("float-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:float-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 float: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:float-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 float: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-right") {
  //           @include assert {
  //             @include output {
  //               @include xl\:float-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 float: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-left") {
  //           @include assert {
  //             @include output {
  //               @include xl\:float-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 float: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-none") {
  //           @include assert {
  //             @include output {
  //               @include xl\:float-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 float: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("float-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:float-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 float: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:float-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 float: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-right") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:float-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 float: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-left") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:float-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 float: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("float-none") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:float-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 float: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Clear") {
  //     @include describe("Basic") {
  //       @include it("clear-start") {
  //         @include assert {
  //           @include output {
  //             @include clear-start;
  //           }
  
  //           @include expect {
  //             clear: inline-start;
  //           }
  //         }
  //       }
  
  //       @include it("clear-end") {
  //         @include assert {
  //           @include output {
  //             @include clear-end;
  //           }
  
  //           @include expect {
  //             clear: inline-end;
  //           }
  //         }
  //       }
  
  //       @include it("clear-right") {
  //         @include assert {
  //           @include output {
  //             @include clear-right;
  //           }
  
  //           @include expect {
  //             clear: right;
  //           }
  //         }
  //       }
  
  //       @include it("clear-left") {
  //         @include assert {
  //           @include output {
  //             @include clear-left;
  //           }
  
  //           @include expect {
  //             clear: left;
  //           }
  //         }
  //       }
  
  //       @include it("clear-both") {
  //         @include assert {
  //           @include output {
  //             @include clear-both;
  //           }
  
  //           @include expect {
  //             clear: both;
  //           }
  //         }
  //       }
  
  //       @include it("clear-none") {
  //         @include assert {
  //           @include output {
  //             @include clear-none;
  //           }
  
  //           @include expect {
  //             clear: none;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("clear-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:clear-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 clear: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:clear-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 clear: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-left") {
  //           @include assert {
  //             @include output {
  //               @include sm\:clear-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 clear: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-right") {
  //           @include assert {
  //             @include output {
  //               @include sm\:clear-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 clear: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-both") {
  //           @include assert {
  //             @include output {
  //               @include sm\:clear-both;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 clear: both;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-none") {
  //           @include assert {
  //             @include output {
  //               @include sm\:clear-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 clear: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("clear-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:clear-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 clear: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:clear-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 clear: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-left") {
  //           @include assert {
  //             @include output {
  //               @include md\:clear-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 clear: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-right") {
  //           @include assert {
  //             @include output {
  //               @include md\:clear-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 clear: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-both") {
  //           @include assert {
  //             @include output {
  //               @include md\:clear-both;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 clear: both;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-none") {
  //           @include assert {
  //             @include output {
  //               @include md\:clear-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 clear: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("clear-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:clear-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 clear: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:clear-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 clear: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-left") {
  //           @include assert {
  //             @include output {
  //               @include lg\:clear-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 clear: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-right") {
  //           @include assert {
  //             @include output {
  //               @include lg\:clear-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 clear: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-both") {
  //           @include assert {
  //             @include output {
  //               @include lg\:clear-both;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 clear: both;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-none") {
  //           @include assert {
  //             @include output {
  //               @include lg\:clear-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 clear: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("clear-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:clear-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 clear: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:clear-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 clear: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-left") {
  //           @include assert {
  //             @include output {
  //               @include xl\:clear-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 clear: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-right") {
  //           @include assert {
  //             @include output {
  //               @include xl\:clear-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 clear: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-both") {
  //           @include assert {
  //             @include output {
  //               @include xl\:clear-both;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 clear: both;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-none") {
  //           @include assert {
  //             @include output {
  //               @include xl\:clear-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 clear: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("clear-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:clear-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 clear: inline-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:clear-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 clear: inline-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-left") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:clear-left;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 clear: left;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-right") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:clear-right;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 clear: right;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-both") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:clear-both;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 clear: both;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("clear-none") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:clear-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 clear: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Isolation") {
  //     @include describe("Basic") {
  //       @include it("isolate") {
  //         @include assert {
  //           @include output {
  //             @include isolate;
  //           }
  
  //           @include expect {
  //             isolation: isolate;
  //           }
  //         }
  //       }
  
  //       @include it("isolation-auto") {
  //         @include assert {
  //           @include output {
  //             @include isolation-auto;
  //           }
  
  //           @include expect {
  //             isolation: auto;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("isolate") {
  //           @include assert {
  //             @include output {
  //               @include sm\:isolate;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 isolation: isolate;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("isolation-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:isolation-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 isolation: auto;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("isolate") {
  //           @include assert {
  //             @include output {
  //               @include md\:isolate;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 isolation: isolate;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("isolation-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:isolation-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 isolation: auto;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("isolate") {
  //           @include assert {
  //             @include output {
  //               @include lg\:isolate;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 isolation: isolate;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("isolation-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:isolation-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 isolation: auto;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("isolate") {
  //           @include assert {
  //             @include output {
  //               @include xl\:isolate;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 isolation: isolate;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("isolation-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:isolation-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 isolation: auto;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("isolate") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:isolate;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 isolation: isolate;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("isolation-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:isolation-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 isolation: auto;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("ObjectFit") {
  //     @include describe("Basic") {
  //       @include it("object-contain") {
  //         @include assert {
  //           @include output {
  //             @include object-contain;
  //           }
  
  //           @include expect {
  //             object-fit: contain;
  //           }
  //         }
  //       }
  
  //       @include it("object-cover") {
  //         @include assert {
  //           @include output {
  //             @include object-cover;
  //           }
  
  //           @include expect {
  //             object-fit: cover;
  //           }
  //         }
  //       }
  
  //       @include it("object-fill") {
  //         @include assert {
  //           @include output {
  //             @include object-fill;
  //           }
  
  //           @include expect {
  //             object-fit: fill;
  //           }
  //         }
  //       }
  
  //       @include it("object-none") {
  //         @include assert {
  //           @include output {
  //             @include object-none;
  //           }
  
  //           @include expect {
  //             object-fit: none;
  //           }
  //         }
  //       }
  
  //       @include it("object-scale-down") {
  //         @include assert {
  //           @include output {
  //             @include object-scale-down;
  //           }
  
  //           @include expect {
  //             object-fit: scale-down;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("object-contain") {
  //           @include assert {
  //             @include output {
  //               @include sm\:object-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 object-fit: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-cover") {
  //           @include assert {
  //             @include output {
  //               @include sm\:object-cover;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 object-fit: cover;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-fill") {
  //           @include assert {
  //             @include output {
  //               @include sm\:object-fill;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 object-fit: fill;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-none") {
  //           @include assert {
  //             @include output {
  //               @include sm\:object-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 object-fit: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-scale-down") {
  //           @include assert {
  //             @include output {
  //               @include sm\:object-scale-down;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 object-fit: scale-down;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("object-contain") {
  //           @include assert {
  //             @include output {
  //               @include md\:object-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 object-fit: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-cover") {
  //           @include assert {
  //             @include output {
  //               @include md\:object-cover;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 object-fit: cover;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-fill") {
  //           @include assert {
  //             @include output {
  //               @include md\:object-fill;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 object-fit: fill;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-none") {
  //           @include assert {
  //             @include output {
  //               @include md\:object-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 object-fit: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-scale-down") {
  //           @include assert {
  //             @include output {
  //               @include md\:object-scale-down;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 object-fit: scale-down;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("object-contain") {
  //           @include assert {
  //             @include output {
  //               @include lg\:object-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 object-fit: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-cover") {
  //           @include assert {
  //             @include output {
  //               @include lg\:object-cover;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 object-fit: cover;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-fill") {
  //           @include assert {
  //             @include output {
  //               @include lg\:object-fill;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 object-fit: fill;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-none") {
  //           @include assert {
  //             @include output {
  //               @include lg\:object-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 object-fit: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-scale-down") {
  //           @include assert {
  //             @include output {
  //               @include lg\:object-scale-down;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 object-fit: scale-down;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("object-contain") {
  //           @include assert {
  //             @include output {
  //               @include xl\:object-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 object-fit: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-cover") {
  //           @include assert {
  //             @include output {
  //               @include xl\:object-cover;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 object-fit: cover;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-fill") {
  //           @include assert {
  //             @include output {
  //               @include xl\:object-fill;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 object-fit: fill;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-none") {
  //           @include assert {
  //             @include output {
  //               @include xl\:object-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 object-fit: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-scale-down") {
  //           @include assert {
  //             @include output {
  //               @include xl\:object-scale-down;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 object-fit: scale-down;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("object-contain") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:object-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 object-fit: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-cover") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:object-cover;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 object-fit: cover;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-fill") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:object-fill;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 object-fit: fill;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-none") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:object-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 object-fit: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("object-scale-down") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:object-scale-down;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 object-fit: scale-down;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("ObjectPosition") {
  //     @include describe("Basic") {
  //       @include it("object-bottom") {
  //         @include assert {
  //           @include output {
  //             @include object-bottom;
  //           }
  
  //           @include expect {
  //             object-position: bottom;
  //           }
  //         }
  //       }
  
  //       @include it("object-center") {
  //         @include assert {
  //           @include output {
  //             @include object-center;
  //           }
  
  //           @include expect {
  //             object-position: center;
  //           }
  //         }
  //       }
  
  //       @include it("object-left") {
  //         @include assert {
  //           @include output {
  //             @include object-left;
  //           }
  
  //           @include expect {
  //             object-position: left;
  //           }
  //         }
  //       }
  
  //       @include it("object-left-bottom") {
  //         @include assert {
  //           @include output {
  //             @include object-left-bottom;
  //           }
  
  //           @include expect {
  //             object-position: left bottom;
  //           }
  //         }
  //       }
  
  //       @include it("object-left-top") {
  //         @include assert {
  //           @include output {
  //             @include object-left-top;
  //           }
  
  //           @include expect {
  //             object-position: left top;
  //           }
  //         }
  //       }
  
  //       @include it("object-right") {
  //         @include assert {
  //           @include output {
  //             @include object-right;
  //           }
  
  //           @include expect {
  //             object-position: right;
  //           }
  //         }
  //       }
  
  //       @include it("object-right-bottom") {
  //         @include assert {
  //           @include output {
  //             @include object-right-bottom;
  //           }
  
  //           @include expect {
  //             object-position: right bottom;
  //           }
  //         }
  //       }
  
  //       @include it("object-right-top") {
  //         @include assert {
  //           @include output {
  //             @include object-right-top;
  //           }
  
  //           @include expect {
  //             object-position: right top;
  //           }
  //         }
  //       }
  
  //       @include it("object-top") {
  //         @include assert {
  //           @include output {
  //             @include object-top;
  //           }
  
  //           @include expect {
  //             object-position: top;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("object-(center bottom)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:object-(center bottom);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 object-position: center bottom;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("object-(center bottom)") {
  //           @include assert {
  //             @include output {
  //               @include md\:object-(center bottom);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 object-position: center bottom;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("object-(center bottom)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:object-(center bottom);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 object-position: center bottom;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("object-(center bottom)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:object-(center bottom);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 object-position: center bottom;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("object-(center bottom)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:object-(center bottom);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 object-position: center bottom;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("object-(center bottom)") {
  //         @include assert {
  //           @include output {
  //             @include object-(center bottom);
  //           }
  
  //           @include expect {
  //             object-position: center bottom;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Overflow") {
  //     @include describe("Basic") {
  //       @include it("overflow-auto") {
  //         @include assert {
  //           @include output {
  //             @include overflow-auto;
  //           }
  
  //           @include expect {
  //             overflow: auto;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-hidden") {
  //         @include assert {
  //           @include output {
  //             @include overflow-hidden;
  //           }
  
  //           @include expect {
  //             overflow: hidden;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-clip") {
  //         @include assert {
  //           @include output {
  //             @include overflow-clip;
  //           }
  
  //           @include expect {
  //             overflow: clip;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-visible") {
  //         @include assert {
  //           @include output {
  //             @include overflow-visible;
  //           }
  
  //           @include expect {
  //             overflow: visible;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-scroll") {
  //         @include assert {
  //           @include output {
  //             @include overflow-scroll;
  //           }
  
  //           @include expect {
  //             overflow: scroll;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-x-auto") {
  //         @include assert {
  //           @include output {
  //             @include overflow-x-auto;
  //           }
  
  //           @include expect {
  //             overflow-x: auto;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-y-auto") {
  //         @include assert {
  //           @include output {
  //             @include overflow-y-auto;
  //           }
  
  //           @include expect {
  //             overflow-y: auto;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-x-hidden") {
  //         @include assert {
  //           @include output {
  //             @include overflow-x-hidden;
  //           }
  
  //           @include expect {
  //             overflow-x: hidden;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-y-hidden") {
  //         @include assert {
  //           @include output {
  //             @include overflow-y-hidden;
  //           }
  
  //           @include expect {
  //             overflow-y: hidden;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-x-clip") {
  //         @include assert {
  //           @include output {
  //             @include overflow-x-clip;
  //           }
  
  //           @include expect {
  //             overflow-x: clip;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-y-clip") {
  //         @include assert {
  //           @include output {
  //             @include overflow-y-clip;
  //           }
  
  //           @include expect {
  //             overflow-y: clip;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-x-visible") {
  //         @include assert {
  //           @include output {
  //             @include overflow-x-visible;
  //           }
  
  //           @include expect {
  //             overflow-x: visible;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-y-visible") {
  //         @include assert {
  //           @include output {
  //             @include overflow-y-visible;
  //           }
  
  //           @include expect {
  //             overflow-y: visible;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-x-scroll") {
  //         @include assert {
  //           @include output {
  //             @include overflow-x-scroll;
  //           }
  
  //           @include expect {
  //             overflow-x: scroll;
  //           }
  //         }
  //       }
  
  //       @include it("overflow-y-scroll") {
  //         @include assert {
  //           @include output {
  //             @include overflow-y-scroll;
  //           }
  
  //           @include expect {
  //             overflow-y: scroll;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("overflow-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-hidden") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-clip") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-visible") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-scroll") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-x-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-x: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-y-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-y: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-hidden") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-x-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-x: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-hidden") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-y-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-y: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-clip") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-x-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-x: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-clip") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-y-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-y: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-visible") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-x-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-x: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-visible") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-y-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-y: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-scroll") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-x-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-x: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-scroll") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overflow-y-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overflow-y: scroll;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("overflow-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-hidden") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-clip") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-visible") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-scroll") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-x-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-x: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-y-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-y: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-hidden") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-x-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-x: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-hidden") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-y-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-y: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-clip") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-x-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-x: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-clip") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-y-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-y: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-visible") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-x-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-x: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-visible") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-y-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-y: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-scroll") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-x-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-x: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-scroll") {
  //           @include assert {
  //             @include output {
  //               @include md\:overflow-y-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 overflow-y: scroll;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("overflow-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-hidden") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-clip") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-visible") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-scroll") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-x-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-x: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-y-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-y: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-hidden") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-x-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-x: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-hidden") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-y-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-y: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-clip") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-x-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-x: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-clip") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-y-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-y: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-visible") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-x-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-x: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-visible") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-y-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-y: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-scroll") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-x-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-x: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-scroll") {
  //           @include assert {
  //             @include output {
  //               @include lg\:overflow-y-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 overflow-y: scroll;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("overflow-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-hidden") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-clip") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-visible") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-scroll") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-x-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-x: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-y-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-y: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-hidden") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-x-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-x: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-hidden") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-y-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-y: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-clip") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-x-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-x: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-clip") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-y-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-y: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-visible") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-x-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-x: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-visible") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-y-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-y: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-scroll") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-x-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-x: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-scroll") {
  //           @include assert {
  //             @include output {
  //               @include xl\:overflow-y-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 overflow-y: scroll;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("overflow-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-hidden") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-clip") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-visible") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-scroll") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-x-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-x: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-y-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-y: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-hidden") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-x-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-x: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-hidden") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-y-hidden;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-y: hidden;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-clip") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-x-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-x: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-clip") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-y-clip;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-y: clip;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-visible") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-x-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-x: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-visible") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-y-visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-y: visible;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-x-scroll") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-x-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-x: scroll;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overflow-y-scroll") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:overflow-y-scroll;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 overflow-y: scroll;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("OverflowBehavior") {
  //     @include describe("Basic") {
  //       @include it("overscroll-auto") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-auto;
  //           }
  
  //           @include expect {
  //             overscroll-behavior: auto;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-contain") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-contain;
  //           }
  
  //           @include expect {
  //             overscroll-behavior: contain;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-none") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-none;
  //           }
  
  //           @include expect {
  //             overscroll-behavior: none;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-y-auto") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-y-auto;
  //           }
  
  //           @include expect {
  //             overscroll-behavior-y: auto;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-y-contain") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-y-contain;
  //           }
  
  //           @include expect {
  //             overscroll-behavior-y: contain;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-y-none") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-y-none;
  //           }
  
  //           @include expect {
  //             overscroll-behavior-y: none;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-x-auto") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-x-auto;
  //           }
  
  //           @include expect {
  //             overscroll-behavior-x: auto;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-x-contain") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-x-contain;
  //           }
  
  //           @include expect {
  //             overscroll-behavior-x: contain;
  //           }
  //         }
  //       }
  
  //       @include it("overscroll-x-none") {
  //         @include assert {
  //           @include output {
  //             @include overscroll-x-none;
  //           }
  
  //           @include expect {
  //             overscroll-behavior-x: none;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("overscroll-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-contain") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-none") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-y-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-y-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior-y: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-y-contain") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-y-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior-y: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-y-none") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-y-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior-y: none;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-x-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-x-auto;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior-x: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-x-contain") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-x-contain;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior-x: contain;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("overscroll-x-none") {
  //           @include assert {
  //             @include output {
  //               @include sm\:overscroll-x-none;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 overscroll-behavior-x: none;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Position") {
  //     @include describe("Basic") {
  //       @include it("static") {
  //         @include assert {
  //           @include output {
  //             @include static;
  //           }
  
  //           @include expect {
  //             position: static;
  //           }
  //         }
  //       }
  
  //       @include it("fixed") {
  //         @include assert {
  //           @include output {
  //             @include fixed;
  //           }
  
  //           @include expect {
  //             position: fixed;
  //           }
  //         }
  //       }
  
  //       @include it("absolute") {
  //         @include assert {
  //           @include output {
  //             @include absolute;
  //           }
  
  //           @include expect {
  //             position: absolute;
  //           }
  //         }
  //       }
  
  //       @include it("relative") {
  //         @include assert {
  //           @include output {
  //             @include relative;
  //           }
  
  //           @include expect {
  //             position: relative;
  //           }
  //         }
  //       }
  
  //       @include it("sticky") {
  //         @include assert {
  //           @include output {
  //             @include sticky;
  //           }
  
  //           @include expect {
  //             position: sticky;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("static") {
  //           @include assert {
  //             @include output {
  //               @include sm\:static;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 position: static;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("fixed") {
  //           @include assert {
  //             @include output {
  //               @include sm\:fixed;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 position: fixed;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("absolute") {
  //           @include assert {
  //             @include output {
  //               @include sm\:absolute;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 position: absolute;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("relative") {
  //           @include assert {
  //             @include output {
  //               @include sm\:relative;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 position: relative;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("sticky") {
  //           @include assert {
  //             @include output {
  //               @include sm\:sticky;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 position: sticky;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("static") {
  //           @include assert {
  //             @include output {
  //               @include md\:static;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 position: static;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("fixed") {
  //           @include assert {
  //             @include output {
  //               @include md\:fixed;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 position: fixed;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("absolute") {
  //           @include assert {
  //             @include output {
  //               @include md\:absolute;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 position: absolute;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("relative") {
  //           @include assert {
  //             @include output {
  //               @include md\:relative;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 position: relative;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("sticky") {
  //           @include assert {
  //             @include output {
  //               @include md\:sticky;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 position: sticky;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("static") {
  //           @include assert {
  //             @include output {
  //               @include lg\:static;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 position: static;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("fixed") {
  //           @include assert {
  //             @include output {
  //               @include lg\:fixed;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 position: fixed;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("absolute") {
  //           @include assert {
  //             @include output {
  //               @include lg\:absolute;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 position: absolute;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("relative") {
  //           @include assert {
  //             @include output {
  //               @include lg\:relative;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 position: relative;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("sticky") {
  //           @include assert {
  //             @include output {
  //               @include lg\:sticky;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 position: sticky;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("static") {
  //           @include assert {
  //             @include output {
  //               @include xl\:static;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 position: static;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("fixed") {
  //           @include assert {
  //             @include output {
  //               @include xl\:fixed;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 position: fixed;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("absolute") {
  //           @include assert {
  //             @include output {
  //               @include xl\:absolute;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 position: absolute;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("relative") {
  //           @include assert {
  //             @include output {
  //               @include xl\:relative;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 position: relative;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("sticky") {
  //           @include assert {
  //             @include output {
  //               @include xl\:sticky;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 position: sticky;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("static") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:static;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 position: static;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("fixed") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:fixed;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 position: fixed;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("absolute") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:absolute;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 position: absolute;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("relative") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:relative;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 position: relative;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("sticky") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:sticky;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 position: sticky;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("TopRightBottomLeft") {
  //     @include describe("Basic") {
  //       @include describe("0") {
  //         @include it("inset-0") {
  //           @include assert {
  //             @include output {
  //               @include inset-0;
  //             }
  
  //             @include expect {
  //               inset: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-0") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-0;
  //             }
  
  //             @include expect {
  //               left: 0px;
  //               right: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-0") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-0;
  //             }
  
  //             @include expect {
  //               top: 0px;
  //               bottom: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("start-0") {
  //           @include assert {
  //             @include output {
  //               @include start-0;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("end-0") {
  //           @include assert {
  //             @include output {
  //               @include end-0;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("top-0") {
  //           @include assert {
  //             @include output {
  //               @include top-0;
  //             }
  
  //             @include expect {
  //               top: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("right-0") {
  //           @include assert {
  //             @include output {
  //               @include right-0;
  //             }
  
  //             @include expect {
  //               right: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-0") {
  //           @include assert {
  //             @include output {
  //               @include bottom-0;
  //             }
  
  //             @include expect {
  //               bottom: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("left-0") {
  //           @include assert {
  //             @include output {
  //               @include left-0;
  //             }
  
  //             @include expect {
  //               left: 0px;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("px") {
  //         @include it("inset-px") {
  //           @include assert {
  //             @include output {
  //               @include inset-px;
  //             }
  
  //             @include expect {
  //               inset: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-px") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-px;
  //             }
  
  //             @include expect {
  //               left: 1px;
  //               right: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-px") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-px;
  //             }
  
  //             @include expect {
  //               top: 1px;
  //               bottom: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("start-px") {
  //           @include assert {
  //             @include output {
  //               @include start-px;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("end-px") {
  //           @include assert {
  //             @include output {
  //               @include end-px;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("top-px") {
  //           @include assert {
  //             @include output {
  //               @include top-px;
  //             }
  
  //             @include expect {
  //               top: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("right-px") {
  //           @include assert {
  //             @include output {
  //               @include right-px;
  //             }
  
  //             @include expect {
  //               right: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-px") {
  //           @include assert {
  //             @include output {
  //               @include bottom-px;
  //             }
  
  //             @include expect {
  //               bottom: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("left-px") {
  //           @include assert {
  //             @include output {
  //               @include left-px;
  //             }
  
  //             @include expect {
  //               left: 1px;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("0\.5") {
  //         @include it("inset-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-0\.5;
  //             }
  
  //             @include expect {
  //               inset: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-0\.5;
  //             }
  
  //             @include expect {
  //               left: 0.125rem;
  //               right: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-0\.5;
  //             }
  
  //             @include expect {
  //               top: 0.125rem;
  //               bottom: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include start-0\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include end-0\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include top-0\.5;
  //             }
  
  //             @include expect {
  //               top: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include right-0\.5;
  //             }
  
  //             @include expect {
  //               right: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include bottom-0\.5;
  //             }
  
  //             @include expect {
  //               bottom: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include left-0\.5;
  //             }
  
  //             @include expect {
  //               left: 0.125rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("1") {
  //         @include it("inset-1") {
  //           @include assert {
  //             @include output {
  //               @include inset-1;
  //             }
  
  //             @include expect {
  //               inset: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-1") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-1;
  //             }
  
  //             @include expect {
  //               left: 0.25rem;
  //               right: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-1") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-1;
  //             }
  
  //             @include expect {
  //               top: 0.25rem;
  //               bottom: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-1") {
  //           @include assert {
  //             @include output {
  //               @include start-1;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-1") {
  //           @include assert {
  //             @include output {
  //               @include end-1;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-1") {
  //           @include assert {
  //             @include output {
  //               @include top-1;
  //             }
  
  //             @include expect {
  //               top: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-1") {
  //           @include assert {
  //             @include output {
  //               @include right-1;
  //             }
  
  //             @include expect {
  //               right: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-1") {
  //           @include assert {
  //             @include output {
  //               @include bottom-1;
  //             }
  
  //             @include expect {
  //               bottom: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-1") {
  //           @include assert {
  //             @include output {
  //               @include left-1;
  //             }
  
  //             @include expect {
  //               left: 0.25rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("1\.5") {
  //         @include it("inset-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-1\.5;
  //             }
  
  //             @include expect {
  //               inset: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-1\.5;
  //             }
  
  //             @include expect {
  //               left: 0.375rem;
  //               right: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-1\.5;
  //             }
  
  //             @include expect {
  //               top: 0.375rem;
  //               bottom: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include start-1\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include end-1\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include top-1\.5;
  //             }
  
  //             @include expect {
  //               top: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include right-1\.5;
  //             }
  
  //             @include expect {
  //               right: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include bottom-1\.5;
  //             }
  
  //             @include expect {
  //               bottom: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include left-1\.5;
  //             }
  
  //             @include expect {
  //               left: 0.375rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2") {
  //         @include it("inset-2") {
  //           @include assert {
  //             @include output {
  //               @include inset-2;
  //             }
  
  //             @include expect {
  //               inset: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-2") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-2;
  //             }
  
  //             @include expect {
  //               left: 0.5rem;
  //               right: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-2") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-2;
  //             }
  
  //             @include expect {
  //               top: 0.5rem;
  //               bottom: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-2") {
  //           @include assert {
  //             @include output {
  //               @include start-2;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-2") {
  //           @include assert {
  //             @include output {
  //               @include end-2;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-2") {
  //           @include assert {
  //             @include output {
  //               @include top-2;
  //             }
  
  //             @include expect {
  //               top: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-2") {
  //           @include assert {
  //             @include output {
  //               @include right-2;
  //             }
  
  //             @include expect {
  //               right: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-2") {
  //           @include assert {
  //             @include output {
  //               @include bottom-2;
  //             }
  
  //             @include expect {
  //               bottom: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-2") {
  //           @include assert {
  //             @include output {
  //               @include left-2;
  //             }
  
  //             @include expect {
  //               left: 0.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2\.5") {
  //         @include it("inset-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-2\.5;
  //             }
  
  //             @include expect {
  //               inset: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-2\.5;
  //             }
  
  //             @include expect {
  //               left: 0.625rem;
  //               right: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-2\.5;
  //             }
  
  //             @include expect {
  //               top: 0.625rem;
  //               bottom: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include start-2\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include end-2\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include top-2\.5;
  //             }
  
  //             @include expect {
  //               top: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include right-2\.5;
  //             }
  
  //             @include expect {
  //               right: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include bottom-2\.5;
  //             }
  
  //             @include expect {
  //               bottom: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include left-2\.5;
  //             }
  
  //             @include expect {
  //               left: 0.625rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("3") {
  //         @include it("inset-3") {
  //           @include assert {
  //             @include output {
  //               @include inset-3;
  //             }
  
  //             @include expect {
  //               inset: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-3") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-3;
  //             }
  
  //             @include expect {
  //               left: 0.75rem;
  //               right: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-3") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-3;
  //             }
  
  //             @include expect {
  //               top: 0.75rem;
  //               bottom: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-3") {
  //           @include assert {
  //             @include output {
  //               @include start-3;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-3") {
  //           @include assert {
  //             @include output {
  //               @include end-3;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-3") {
  //           @include assert {
  //             @include output {
  //               @include top-3;
  //             }
  
  //             @include expect {
  //               top: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-3") {
  //           @include assert {
  //             @include output {
  //               @include right-3;
  //             }
  
  //             @include expect {
  //               right: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-3") {
  //           @include assert {
  //             @include output {
  //               @include bottom-3;
  //             }
  
  //             @include expect {
  //               bottom: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-3") {
  //           @include assert {
  //             @include output {
  //               @include left-3;
  //             }
  
  //             @include expect {
  //               left: 0.75rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("3\.5") {
  //         @include it("inset-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-3\.5;
  //             }
  
  //             @include expect {
  //               inset: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-3\.5;
  //             }
  
  //             @include expect {
  //               left: 0.875rem;
  //               right: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-3\.5;
  //             }
  
  //             @include expect {
  //               top: 0.875rem;
  //               bottom: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include start-3\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include end-3\.5;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include top-3\.5;
  //             }
  
  //             @include expect {
  //               top: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include right-3\.5;
  //             }
  
  //             @include expect {
  //               right: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include bottom-3\.5;
  //             }
  
  //             @include expect {
  //               bottom: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include left-3\.5;
  //             }
  
  //             @include expect {
  //               left: 0.875rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("4") {
  //         @include it("inset-4") {
  //           @include assert {
  //             @include output {
  //               @include inset-4;
  //             }
  
  //             @include expect {
  //               inset: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-4") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-4;
  //             }
  
  //             @include expect {
  //               left: 1rem;
  //               right: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-4") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-4;
  //             }
  
  //             @include expect {
  //               top: 1rem;
  //               bottom: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-4") {
  //           @include assert {
  //             @include output {
  //               @include start-4;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-4") {
  //           @include assert {
  //             @include output {
  //               @include end-4;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-4") {
  //           @include assert {
  //             @include output {
  //               @include top-4;
  //             }
  
  //             @include expect {
  //               top: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-4") {
  //           @include assert {
  //             @include output {
  //               @include right-4;
  //             }
  
  //             @include expect {
  //               right: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-4") {
  //           @include assert {
  //             @include output {
  //               @include bottom-4;
  //             }
  
  //             @include expect {
  //               bottom: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-4") {
  //           @include assert {
  //             @include output {
  //               @include left-4;
  //             }
  
  //             @include expect {
  //               left: 1rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("5") {
  //         @include it("inset-5") {
  //           @include assert {
  //             @include output {
  //               @include inset-5;
  //             }
  
  //             @include expect {
  //               inset: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-5") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-5;
  //             }
  
  //             @include expect {
  //               left: 1.25rem;
  //               right: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-5") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-5;
  //             }
  
  //             @include expect {
  //               top: 1.25rem;
  //               bottom: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-5") {
  //           @include assert {
  //             @include output {
  //               @include start-5;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-5") {
  //           @include assert {
  //             @include output {
  //               @include end-5;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-5") {
  //           @include assert {
  //             @include output {
  //               @include top-5;
  //             }
  
  //             @include expect {
  //               top: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-5") {
  //           @include assert {
  //             @include output {
  //               @include right-5;
  //             }
  
  //             @include expect {
  //               right: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-5") {
  //           @include assert {
  //             @include output {
  //               @include bottom-5;
  //             }
  
  //             @include expect {
  //               bottom: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-5") {
  //           @include assert {
  //             @include output {
  //               @include left-5;
  //             }
  
  //             @include expect {
  //               left: 1.25rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("6") {
  //         @include it("inset-6") {
  //           @include assert {
  //             @include output {
  //               @include inset-6;
  //             }
  
  //             @include expect {
  //               inset: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-6") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-6;
  //             }
  
  //             @include expect {
  //               left: 1.5rem;
  //               right: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-6") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-6;
  //             }
  
  //             @include expect {
  //               top: 1.5rem;
  //               bottom: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-6") {
  //           @include assert {
  //             @include output {
  //               @include start-6;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-6") {
  //           @include assert {
  //             @include output {
  //               @include end-6;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-6") {
  //           @include assert {
  //             @include output {
  //               @include top-6;
  //             }
  
  //             @include expect {
  //               top: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-6") {
  //           @include assert {
  //             @include output {
  //               @include right-6;
  //             }
  
  //             @include expect {
  //               right: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-6") {
  //           @include assert {
  //             @include output {
  //               @include bottom-6;
  //             }
  
  //             @include expect {
  //               bottom: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-6") {
  //           @include assert {
  //             @include output {
  //               @include left-6;
  //             }
  
  //             @include expect {
  //               left: 1.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("7") {
  //         @include it("inset-7") {
  //           @include assert {
  //             @include output {
  //               @include inset-7;
  //             }
  
  //             @include expect {
  //               inset: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-7") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-7;
  //             }
  
  //             @include expect {
  //               left: 1.75rem;
  //               right: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-7") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-7;
  //             }
  
  //             @include expect {
  //               top: 1.75rem;
  //               bottom: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-7") {
  //           @include assert {
  //             @include output {
  //               @include start-7;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-7") {
  //           @include assert {
  //             @include output {
  //               @include end-7;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-7") {
  //           @include assert {
  //             @include output {
  //               @include top-7;
  //             }
  
  //             @include expect {
  //               top: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-7") {
  //           @include assert {
  //             @include output {
  //               @include right-7;
  //             }
  
  //             @include expect {
  //               right: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-7") {
  //           @include assert {
  //             @include output {
  //               @include bottom-7;
  //             }
  
  //             @include expect {
  //               bottom: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-7") {
  //           @include assert {
  //             @include output {
  //               @include left-7;
  //             }
  
  //             @include expect {
  //               left: 1.75rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("8") {
  //         @include it("inset-8") {
  //           @include assert {
  //             @include output {
  //               @include inset-8;
  //             }
  
  //             @include expect {
  //               inset: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-8") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-8;
  //             }
  
  //             @include expect {
  //               left: 2rem;
  //               right: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-8") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-8;
  //             }
  
  //             @include expect {
  //               top: 2rem;
  //               bottom: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-8") {
  //           @include assert {
  //             @include output {
  //               @include start-8;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-8") {
  //           @include assert {
  //             @include output {
  //               @include end-8;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-8") {
  //           @include assert {
  //             @include output {
  //               @include top-8;
  //             }
  
  //             @include expect {
  //               top: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-8") {
  //           @include assert {
  //             @include output {
  //               @include right-8;
  //             }
  
  //             @include expect {
  //               right: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-8") {
  //           @include assert {
  //             @include output {
  //               @include bottom-8;
  //             }
  
  //             @include expect {
  //               bottom: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-8") {
  //           @include assert {
  //             @include output {
  //               @include left-8;
  //             }
  
  //             @include expect {
  //               left: 2rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("9") {
  //         @include it("inset-9") {
  //           @include assert {
  //             @include output {
  //               @include inset-9;
  //             }
  
  //             @include expect {
  //               inset: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-9") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-9;
  //             }
  
  //             @include expect {
  //               left: 2.25rem;
  //               right: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-9") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-9;
  //             }
  
  //             @include expect {
  //               top: 2.25rem;
  //               bottom: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-9") {
  //           @include assert {
  //             @include output {
  //               @include start-9;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-9") {
  //           @include assert {
  //             @include output {
  //               @include end-9;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-9") {
  //           @include assert {
  //             @include output {
  //               @include top-9;
  //             }
  
  //             @include expect {
  //               top: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-9") {
  //           @include assert {
  //             @include output {
  //               @include right-9;
  //             }
  
  //             @include expect {
  //               right: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-9") {
  //           @include assert {
  //             @include output {
  //               @include bottom-9;
  //             }
  
  //             @include expect {
  //               bottom: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-9") {
  //           @include assert {
  //             @include output {
  //               @include left-9;
  //             }
  
  //             @include expect {
  //               left: 2.25rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("10") {
  //         @include it("inset-10") {
  //           @include assert {
  //             @include output {
  //               @include inset-10;
  //             }
  
  //             @include expect {
  //               inset: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-10") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-10;
  //             }
  
  //             @include expect {
  //               left: 2.5rem;
  //               right: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-10") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-10;
  //             }
  
  //             @include expect {
  //               top: 2.5rem;
  //               bottom: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-10") {
  //           @include assert {
  //             @include output {
  //               @include start-10;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-10") {
  //           @include assert {
  //             @include output {
  //               @include end-10;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-10") {
  //           @include assert {
  //             @include output {
  //               @include top-10;
  //             }
  
  //             @include expect {
  //               top: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-10") {
  //           @include assert {
  //             @include output {
  //               @include right-10;
  //             }
  
  //             @include expect {
  //               right: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-10") {
  //           @include assert {
  //             @include output {
  //               @include bottom-10;
  //             }
  
  //             @include expect {
  //               bottom: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-10") {
  //           @include assert {
  //             @include output {
  //               @include left-10;
  //             }
  
  //             @include expect {
  //               left: 2.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("11") {
  //         @include it("inset-11") {
  //           @include assert {
  //             @include output {
  //               @include inset-11;
  //             }
  
  //             @include expect {
  //               inset: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-11") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-11;
  //             }
  
  //             @include expect {
  //               left: 2.75rem;
  //               right: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-11") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-11;
  //             }
  
  //             @include expect {
  //               top: 2.75rem;
  //               bottom: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-11") {
  //           @include assert {
  //             @include output {
  //               @include start-11;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-11") {
  //           @include assert {
  //             @include output {
  //               @include end-11;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-11") {
  //           @include assert {
  //             @include output {
  //               @include top-11;
  //             }
  
  //             @include expect {
  //               top: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-11") {
  //           @include assert {
  //             @include output {
  //               @include right-11;
  //             }
  
  //             @include expect {
  //               right: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-11") {
  //           @include assert {
  //             @include output {
  //               @include bottom-11;
  //             }
  
  //             @include expect {
  //               bottom: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-11") {
  //           @include assert {
  //             @include output {
  //               @include left-11;
  //             }
  
  //             @include expect {
  //               left: 2.75rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("12") {
  //         @include it("inset-12") {
  //           @include assert {
  //             @include output {
  //               @include inset-12;
  //             }
  
  //             @include expect {
  //               inset: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-12") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-12;
  //             }
  
  //             @include expect {
  //               left: 3rem;
  //               right: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-12") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-12;
  //             }
  
  //             @include expect {
  //               top: 3rem;
  //               bottom: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-12") {
  //           @include assert {
  //             @include output {
  //               @include start-12;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-12") {
  //           @include assert {
  //             @include output {
  //               @include end-12;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-12") {
  //           @include assert {
  //             @include output {
  //               @include top-12;
  //             }
  
  //             @include expect {
  //               top: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-12") {
  //           @include assert {
  //             @include output {
  //               @include right-12;
  //             }
  
  //             @include expect {
  //               right: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-12") {
  //           @include assert {
  //             @include output {
  //               @include bottom-12;
  //             }
  
  //             @include expect {
  //               bottom: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-12") {
  //           @include assert {
  //             @include output {
  //               @include left-12;
  //             }
  
  //             @include expect {
  //               left: 3rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("14") {
  //         @include it("inset-14") {
  //           @include assert {
  //             @include output {
  //               @include inset-14;
  //             }
  
  //             @include expect {
  //               inset: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-14") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-14;
  //             }
  
  //             @include expect {
  //               left: 3.5rem;
  //               right: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-14") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-14;
  //             }
  
  //             @include expect {
  //               top: 3.5rem;
  //               bottom: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-14") {
  //           @include assert {
  //             @include output {
  //               @include start-14;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-14") {
  //           @include assert {
  //             @include output {
  //               @include end-14;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-14") {
  //           @include assert {
  //             @include output {
  //               @include top-14;
  //             }
  
  //             @include expect {
  //               top: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-14") {
  //           @include assert {
  //             @include output {
  //               @include right-14;
  //             }
  
  //             @include expect {
  //               right: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-14") {
  //           @include assert {
  //             @include output {
  //               @include bottom-14;
  //             }
  
  //             @include expect {
  //               bottom: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-14") {
  //           @include assert {
  //             @include output {
  //               @include left-14;
  //             }
  
  //             @include expect {
  //               left: 3.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("16") {
  //         @include it("inset-16") {
  //           @include assert {
  //             @include output {
  //               @include inset-16;
  //             }
  
  //             @include expect {
  //               inset: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-16") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-16;
  //             }
  
  //             @include expect {
  //               left: 4rem;
  //               right: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-16") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-16;
  //             }
  
  //             @include expect {
  //               top: 4rem;
  //               bottom: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-16") {
  //           @include assert {
  //             @include output {
  //               @include start-16;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-16") {
  //           @include assert {
  //             @include output {
  //               @include end-16;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-16") {
  //           @include assert {
  //             @include output {
  //               @include top-16;
  //             }
  
  //             @include expect {
  //               top: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-16") {
  //           @include assert {
  //             @include output {
  //               @include right-16;
  //             }
  
  //             @include expect {
  //               right: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-16") {
  //           @include assert {
  //             @include output {
  //               @include bottom-16;
  //             }
  
  //             @include expect {
  //               bottom: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-16") {
  //           @include assert {
  //             @include output {
  //               @include left-16;
  //             }
  
  //             @include expect {
  //               left: 4rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("20") {
  //         @include it("inset-20") {
  //           @include assert {
  //             @include output {
  //               @include inset-20;
  //             }
  
  //             @include expect {
  //               inset: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-20") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-20;
  //             }
  
  //             @include expect {
  //               left: 5rem;
  //               right: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-20") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-20;
  //             }
  
  //             @include expect {
  //               top: 5rem;
  //               bottom: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-20") {
  //           @include assert {
  //             @include output {
  //               @include start-20;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-20") {
  //           @include assert {
  //             @include output {
  //               @include end-20;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-20") {
  //           @include assert {
  //             @include output {
  //               @include top-20;
  //             }
  
  //             @include expect {
  //               top: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-20") {
  //           @include assert {
  //             @include output {
  //               @include right-20;
  //             }
  
  //             @include expect {
  //               right: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-20") {
  //           @include assert {
  //             @include output {
  //               @include bottom-20;
  //             }
  
  //             @include expect {
  //               bottom: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-20") {
  //           @include assert {
  //             @include output {
  //               @include left-20;
  //             }
  
  //             @include expect {
  //               left: 5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("24") {
  //         @include it("inset-24") {
  //           @include assert {
  //             @include output {
  //               @include inset-24;
  //             }
  
  //             @include expect {
  //               inset: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-24") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-24;
  //             }
  
  //             @include expect {
  //               left: 6rem;
  //               right: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-24") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-24;
  //             }
  
  //             @include expect {
  //               top: 6rem;
  //               bottom: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-24") {
  //           @include assert {
  //             @include output {
  //               @include start-24;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-24") {
  //           @include assert {
  //             @include output {
  //               @include end-24;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-24") {
  //           @include assert {
  //             @include output {
  //               @include top-24;
  //             }
  
  //             @include expect {
  //               top: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-24") {
  //           @include assert {
  //             @include output {
  //               @include right-24;
  //             }
  
  //             @include expect {
  //               right: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-24") {
  //           @include assert {
  //             @include output {
  //               @include bottom-24;
  //             }
  
  //             @include expect {
  //               bottom: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-24") {
  //           @include assert {
  //             @include output {
  //               @include left-24;
  //             }
  
  //             @include expect {
  //               left: 6rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("28") {
  //         @include it("inset-28") {
  //           @include assert {
  //             @include output {
  //               @include inset-28;
  //             }
  
  //             @include expect {
  //               inset: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-28") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-28;
  //             }
  
  //             @include expect {
  //               left: 7rem;
  //               right: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-28") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-28;
  //             }
  
  //             @include expect {
  //               top: 7rem;
  //               bottom: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-28") {
  //           @include assert {
  //             @include output {
  //               @include start-28;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-28") {
  //           @include assert {
  //             @include output {
  //               @include end-28;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-28") {
  //           @include assert {
  //             @include output {
  //               @include top-28;
  //             }
  
  //             @include expect {
  //               top: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-28") {
  //           @include assert {
  //             @include output {
  //               @include right-28;
  //             }
  
  //             @include expect {
  //               right: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-28") {
  //           @include assert {
  //             @include output {
  //               @include bottom-28;
  //             }
  
  //             @include expect {
  //               bottom: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-28") {
  //           @include assert {
  //             @include output {
  //               @include left-28;
  //             }
  
  //             @include expect {
  //               left: 7rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("32") {
  //         @include it("inset-32") {
  //           @include assert {
  //             @include output {
  //               @include inset-32;
  //             }
  
  //             @include expect {
  //               inset: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-32") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-32;
  //             }
  
  //             @include expect {
  //               left: 8rem;
  //               right: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-32") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-32;
  //             }
  
  //             @include expect {
  //               top: 8rem;
  //               bottom: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-32") {
  //           @include assert {
  //             @include output {
  //               @include start-32;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-32") {
  //           @include assert {
  //             @include output {
  //               @include end-32;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-32") {
  //           @include assert {
  //             @include output {
  //               @include top-32;
  //             }
  
  //             @include expect {
  //               top: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-32") {
  //           @include assert {
  //             @include output {
  //               @include right-32;
  //             }
  
  //             @include expect {
  //               right: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-32") {
  //           @include assert {
  //             @include output {
  //               @include bottom-32;
  //             }
  
  //             @include expect {
  //               bottom: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-32") {
  //           @include assert {
  //             @include output {
  //               @include left-32;
  //             }
  
  //             @include expect {
  //               left: 8rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("36") {
  //         @include it("inset-36") {
  //           @include assert {
  //             @include output {
  //               @include inset-36;
  //             }
  
  //             @include expect {
  //               inset: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-36") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-36;
  //             }
  
  //             @include expect {
  //               left: 9rem;
  //               right: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-36") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-36;
  //             }
  
  //             @include expect {
  //               top: 9rem;
  //               bottom: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-36") {
  //           @include assert {
  //             @include output {
  //               @include start-36;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-36") {
  //           @include assert {
  //             @include output {
  //               @include end-36;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-36") {
  //           @include assert {
  //             @include output {
  //               @include top-36;
  //             }
  
  //             @include expect {
  //               top: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-36") {
  //           @include assert {
  //             @include output {
  //               @include right-36;
  //             }
  
  //             @include expect {
  //               right: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-36") {
  //           @include assert {
  //             @include output {
  //               @include bottom-36;
  //             }
  
  //             @include expect {
  //               bottom: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-36") {
  //           @include assert {
  //             @include output {
  //               @include left-36;
  //             }
  
  //             @include expect {
  //               left: 9rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("40") {
  //         @include it("inset-40") {
  //           @include assert {
  //             @include output {
  //               @include inset-40;
  //             }
  
  //             @include expect {
  //               inset: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-40") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-40;
  //             }
  
  //             @include expect {
  //               left: 10rem;
  //               right: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-40") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-40;
  //             }
  
  //             @include expect {
  //               top: 10rem;
  //               bottom: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-40") {
  //           @include assert {
  //             @include output {
  //               @include start-40;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-40") {
  //           @include assert {
  //             @include output {
  //               @include end-40;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-40") {
  //           @include assert {
  //             @include output {
  //               @include top-40;
  //             }
  
  //             @include expect {
  //               top: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-40") {
  //           @include assert {
  //             @include output {
  //               @include right-40;
  //             }
  
  //             @include expect {
  //               right: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-40") {
  //           @include assert {
  //             @include output {
  //               @include bottom-40;
  //             }
  
  //             @include expect {
  //               bottom: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-40") {
  //           @include assert {
  //             @include output {
  //               @include left-40;
  //             }
  
  //             @include expect {
  //               left: 10rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("44") {
  //         @include it("inset-44") {
  //           @include assert {
  //             @include output {
  //               @include inset-44;
  //             }
  
  //             @include expect {
  //               inset: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-44") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-44;
  //             }
  
  //             @include expect {
  //               left: 11rem;
  //               right: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-44") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-44;
  //             }
  
  //             @include expect {
  //               top: 11rem;
  //               bottom: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-44") {
  //           @include assert {
  //             @include output {
  //               @include start-44;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-44") {
  //           @include assert {
  //             @include output {
  //               @include end-44;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-44") {
  //           @include assert {
  //             @include output {
  //               @include top-44;
  //             }
  
  //             @include expect {
  //               top: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-44") {
  //           @include assert {
  //             @include output {
  //               @include right-44;
  //             }
  
  //             @include expect {
  //               right: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-44") {
  //           @include assert {
  //             @include output {
  //               @include bottom-44;
  //             }
  
  //             @include expect {
  //               bottom: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-44") {
  //           @include assert {
  //             @include output {
  //               @include left-44;
  //             }
  
  //             @include expect {
  //               left: 11rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("48") {
  //         @include it("inset-48") {
  //           @include assert {
  //             @include output {
  //               @include inset-48;
  //             }
  
  //             @include expect {
  //               inset: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-48") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-48;
  //             }
  
  //             @include expect {
  //               left: 12rem;
  //               right: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-48") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-48;
  //             }
  
  //             @include expect {
  //               top: 12rem;
  //               bottom: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-48") {
  //           @include assert {
  //             @include output {
  //               @include start-48;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-48") {
  //           @include assert {
  //             @include output {
  //               @include end-48;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-48") {
  //           @include assert {
  //             @include output {
  //               @include top-48;
  //             }
  
  //             @include expect {
  //               top: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-48") {
  //           @include assert {
  //             @include output {
  //               @include right-48;
  //             }
  
  //             @include expect {
  //               right: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-48") {
  //           @include assert {
  //             @include output {
  //               @include bottom-48;
  //             }
  
  //             @include expect {
  //               bottom: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-48") {
  //           @include assert {
  //             @include output {
  //               @include left-48;
  //             }
  
  //             @include expect {
  //               left: 12rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("52") {
  //         @include it("inset-52") {
  //           @include assert {
  //             @include output {
  //               @include inset-52;
  //             }
  
  //             @include expect {
  //               inset: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-52") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-52;
  //             }
  
  //             @include expect {
  //               left: 13rem;
  //               right: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-52") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-52;
  //             }
  
  //             @include expect {
  //               top: 13rem;
  //               bottom: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-52") {
  //           @include assert {
  //             @include output {
  //               @include start-52;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-52") {
  //           @include assert {
  //             @include output {
  //               @include end-52;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-52") {
  //           @include assert {
  //             @include output {
  //               @include top-52;
  //             }
  
  //             @include expect {
  //               top: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-52") {
  //           @include assert {
  //             @include output {
  //               @include right-52;
  //             }
  
  //             @include expect {
  //               right: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-52") {
  //           @include assert {
  //             @include output {
  //               @include bottom-52;
  //             }
  
  //             @include expect {
  //               bottom: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-52") {
  //           @include assert {
  //             @include output {
  //               @include left-52;
  //             }
  
  //             @include expect {
  //               left: 13rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("56") {
  //         @include it("inset-56") {
  //           @include assert {
  //             @include output {
  //               @include inset-56;
  //             }
  
  //             @include expect {
  //               inset: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-56") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-56;
  //             }
  
  //             @include expect {
  //               left: 14rem;
  //               right: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-56") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-56;
  //             }
  
  //             @include expect {
  //               top: 14rem;
  //               bottom: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-56") {
  //           @include assert {
  //             @include output {
  //               @include start-56;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-56") {
  //           @include assert {
  //             @include output {
  //               @include end-56;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-56") {
  //           @include assert {
  //             @include output {
  //               @include top-56;
  //             }
  
  //             @include expect {
  //               top: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-56") {
  //           @include assert {
  //             @include output {
  //               @include right-56;
  //             }
  
  //             @include expect {
  //               right: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-56") {
  //           @include assert {
  //             @include output {
  //               @include bottom-56;
  //             }
  
  //             @include expect {
  //               bottom: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-56") {
  //           @include assert {
  //             @include output {
  //               @include left-56;
  //             }
  
  //             @include expect {
  //               left: 14rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("60") {
  //         @include it("inset-60") {
  //           @include assert {
  //             @include output {
  //               @include inset-60;
  //             }
  
  //             @include expect {
  //               inset: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-60") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-60;
  //             }
  
  //             @include expect {
  //               left: 15rem;
  //               right: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-60") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-60;
  //             }
  
  //             @include expect {
  //               top: 15rem;
  //               bottom: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-60") {
  //           @include assert {
  //             @include output {
  //               @include start-60;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-60") {
  //           @include assert {
  //             @include output {
  //               @include end-60;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-60") {
  //           @include assert {
  //             @include output {
  //               @include top-60;
  //             }
  
  //             @include expect {
  //               top: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-60") {
  //           @include assert {
  //             @include output {
  //               @include right-60;
  //             }
  
  //             @include expect {
  //               right: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-60") {
  //           @include assert {
  //             @include output {
  //               @include bottom-60;
  //             }
  
  //             @include expect {
  //               bottom: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-60") {
  //           @include assert {
  //             @include output {
  //               @include left-60;
  //             }
  
  //             @include expect {
  //               left: 15rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("64") {
  //         @include it("inset-64") {
  //           @include assert {
  //             @include output {
  //               @include inset-64;
  //             }
  
  //             @include expect {
  //               inset: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-64") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-64;
  //             }
  
  //             @include expect {
  //               left: 16rem;
  //               right: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-64") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-64;
  //             }
  
  //             @include expect {
  //               top: 16rem;
  //               bottom: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-64") {
  //           @include assert {
  //             @include output {
  //               @include start-64;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-64") {
  //           @include assert {
  //             @include output {
  //               @include end-64;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-64") {
  //           @include assert {
  //             @include output {
  //               @include top-64;
  //             }
  
  //             @include expect {
  //               top: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-64") {
  //           @include assert {
  //             @include output {
  //               @include right-64;
  //             }
  
  //             @include expect {
  //               right: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-64") {
  //           @include assert {
  //             @include output {
  //               @include bottom-64;
  //             }
  
  //             @include expect {
  //               bottom: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-64") {
  //           @include assert {
  //             @include output {
  //               @include left-64;
  //             }
  
  //             @include expect {
  //               left: 16rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("72") {
  //         @include it("inset-72") {
  //           @include assert {
  //             @include output {
  //               @include inset-72;
  //             }
  
  //             @include expect {
  //               inset: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-72") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-72;
  //             }
  
  //             @include expect {
  //               left: 18rem;
  //               right: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-72") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-72;
  //             }
  
  //             @include expect {
  //               top: 18rem;
  //               bottom: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-72") {
  //           @include assert {
  //             @include output {
  //               @include start-72;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-72") {
  //           @include assert {
  //             @include output {
  //               @include end-72;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-72") {
  //           @include assert {
  //             @include output {
  //               @include top-72;
  //             }
  
  //             @include expect {
  //               top: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-72") {
  //           @include assert {
  //             @include output {
  //               @include right-72;
  //             }
  
  //             @include expect {
  //               right: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-72") {
  //           @include assert {
  //             @include output {
  //               @include bottom-72;
  //             }
  
  //             @include expect {
  //               bottom: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-72") {
  //           @include assert {
  //             @include output {
  //               @include left-72;
  //             }
  
  //             @include expect {
  //               left: 18rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("80") {
  //         @include it("inset-80") {
  //           @include assert {
  //             @include output {
  //               @include inset-80;
  //             }
  
  //             @include expect {
  //               inset: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-80") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-80;
  //             }
  
  //             @include expect {
  //               left: 20rem;
  //               right: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-80") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-80;
  //             }
  
  //             @include expect {
  //               top: 20rem;
  //               bottom: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-80") {
  //           @include assert {
  //             @include output {
  //               @include start-80;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-80") {
  //           @include assert {
  //             @include output {
  //               @include end-80;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-80") {
  //           @include assert {
  //             @include output {
  //               @include top-80;
  //             }
  
  //             @include expect {
  //               top: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-80") {
  //           @include assert {
  //             @include output {
  //               @include right-80;
  //             }
  
  //             @include expect {
  //               right: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-80") {
  //           @include assert {
  //             @include output {
  //               @include bottom-80;
  //             }
  
  //             @include expect {
  //               bottom: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-80") {
  //           @include assert {
  //             @include output {
  //               @include left-80;
  //             }
  
  //             @include expect {
  //               left: 20rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("96") {
  //         @include it("inset-96") {
  //           @include assert {
  //             @include output {
  //               @include inset-96;
  //             }
  
  //             @include expect {
  //               inset: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-x-96") {
  //           @include assert {
  //             @include output {
  //               @include inset-x-96;
  //             }
  
  //             @include expect {
  //               left: 24rem;
  //               right: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("inset-y-96") {
  //           @include assert {
  //             @include output {
  //               @include inset-y-96;
  //             }
  
  //             @include expect {
  //               top: 24rem;
  //               bottom: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("start-96") {
  //           @include assert {
  //             @include output {
  //               @include start-96;
  //             }
  
  //             @include expect {
  //               inset-inline-start: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("end-96") {
  //           @include assert {
  //             @include output {
  //               @include end-96;
  //             }
  
  //             @include expect {
  //               inset-inline-end: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("top-96") {
  //           @include assert {
  //             @include output {
  //               @include top-96;
  //             }
  
  //             @include expect {
  //               top: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("right-96") {
  //           @include assert {
  //             @include output {
  //               @include right-96;
  //             }
  
  //             @include expect {
  //               right: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("bottom-96") {
  //           @include assert {
  //             @include output {
  //               @include bottom-96;
  //             }
  
  //             @include expect {
  //               bottom: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("left-96") {
  //           @include assert {
  //             @include output {
  //               @include left-96;
  //             }
  
  //             @include expect {
  //               left: 24rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("inset") {
  //         @include describe("inset") {
  //           @include it("inset-auto") {
  //             @include assert {
  //               @include output {
  //                 @include inset-auto;
  //               }
  
  //               @include expect {
  //                 inset: auto;
  //               }
  //             }
  //           }
  
  //           @include it("inset-1\/2") {
  //             @include assert {
  //               @include output {
  //                 @include inset-1\/2;
  //               }
  
  //               @include expect {
  //                 inset: 50%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-1\/3") {
  //             @include assert {
  //               @include output {
  //                 @include inset-1\/3;
  //               }
  
  //               @include expect {
  //                 inset: 33.333333%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-2\/3") {
  //             @include assert {
  //               @include output {
  //                 @include inset-2\/3;
  //               }
  
  //               @include expect {
  //                 inset: 66.666667%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-1\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-1\/4;
  //               }
  
  //               @include expect {
  //                 inset: 25%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-2\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-2\/4;
  //               }
  
  //               @include expect {
  //                 inset: 50%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-3\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-3\/4;
  //               }
  
  //               @include expect {
  //                 inset: 75%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-full") {
  //             @include assert {
  //               @include output {
  //                 @include inset-full;
  //               }
  
  //               @include expect {
  //                 inset: 100%;
  //               }
  //             }
  //           }
  //         }
  
  //         @include describe("x") {
  //           @include it("inset-x-auto") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-auto;
  //               }
  
  //               @include expect {
  //                 left: auto;
  //                 right: auto;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-1\/2") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-1\/2;
  //               }
  
  //               @include expect {
  //                 left: 50%;
  //                 right: 50%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-1\/3") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-1\/3;
  //               }
  
  //               @include expect {
  //                 left: 33.333333%;
  //                 right: 33.333333%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-2\/3") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-2\/3;
  //               }
  
  //               @include expect {
  //                 left: 66.666667%;
  //                 right: 66.666667%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-1\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-1\/4;
  //               }
  
  //               @include expect {
  //                 left: 25%;
  //                 right: 25%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-2\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-2\/4;
  //               }
  
  //               @include expect {
  //                 left: 50%;
  //                 right: 50%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-3\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-3\/4;
  //               }
  
  //               @include expect {
  //                 left: 75%;
  //                 right: 75%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-x-full") {
  //             @include assert {
  //               @include output {
  //                 @include inset-x-full;
  //               }
  
  //               @include expect {
  //                 left: 100%;
  //                 right: 100%;
  //               }
  //             }
  //           }
  //         }
  
  //         @include describe("y") {
  //           @include it("inset-y-auto") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-auto;
  //               }
  
  //               @include expect {
  //                 top: auto;
  //                 bottom: auto;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-1\/2") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-1\/2;
  //               }
  
  //               @include expect {
  //                 top: 50%;
  //                 bottom: 50%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-1\/3") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-1\/3;
  //               }
  
  //               @include expect {
  //                 top: 33.333333%;
  //                 bottom: 33.333333%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-2\/3") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-2\/3;
  //               }
  
  //               @include expect {
  //                 top: 66.666667%;
  //                 bottom: 66.666667%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-1\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-1\/4;
  //               }
  
  //               @include expect {
  //                 top: 25%;
  //                 bottom: 25%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-2\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-2\/4;
  //               }
  
  //               @include expect {
  //                 top: 50%;
  //                 bottom: 50%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-3\/4") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-3\/4;
  //               }
  
  //               @include expect {
  //                 top: 75%;
  //                 bottom: 75%;
  //               }
  //             }
  //           }
  
  //           @include it("inset-y-full") {
  //             @include assert {
  //               @include output {
  //                 @include inset-y-full;
  //               }
  
  //               @include expect {
  //                 top: 100%;
  //                 bottom: 100%;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("top-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:top-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 top: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("right-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:right-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 right: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("bottom-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:bottom-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 bottom: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("left-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:left-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 left: 3px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("MD") {
  //         @include it("top-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include md\:top-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 top: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("right-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include md\:right-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 right: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("bottom-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include md\:bottom-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 bottom: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("left-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include md\:left-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 left: 3px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("LG") {
  //         @include it("top-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:top-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 top: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("right-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:right-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 right: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("bottom-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:bottom-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 bottom: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("left-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:left-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 left: 3px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("XL") {
  //         @include it("top-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:top-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 top: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("right-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:right-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 right: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("bottom-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:bottom-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 bottom: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("left-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:left-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 left: 3px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("2XL") {
  //         @include it("top-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:top-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 top: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("right-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:right-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 right: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("bottom-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:bottom-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 bottom: 3px;
  //               }
  //             }
  //           }
  //         }
  //         @include it("left-(3px)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:left-(3px);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 left: 3px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("top-(3px)") {
  //         @include assert {
  //           @include output {
  //             @include top-(3px);
  //           }
  
  //           @include expect {
  //             top: 3px;
  //           }
  //         }
  //       }
  //       @include it("right-(3px)") {
  //         @include assert {
  //           @include output {
  //             @include right-(3px);
  //           }
  
  //           @include expect {
  //             right: 3px;
  //           }
  //         }
  //       }
  //       @include it("bottom-(3px)") {
  //         @include assert {
  //           @include output {
  //             @include bottom-(3px);
  //           }
  
  //           @include expect {
  //             bottom: 3px;
  //           }
  //         }
  //       }
  //       @include it("left-(3px)") {
  //         @include assert {
  //           @include output {
  //             @include left-(3px);
  //           }
  
  //           @include expect {
  //             left: 3px;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Visibility") {
  //     @include describe("Basic") {
  //       @include it("visible") {
  //         @include assert {
  //           @include output {
  //             @include visible;
  //           }
  
  //           @include expect {
  //             visibility: visible;
  //           }
  //         }
  //       }
  //       @include it("invisible") {
  //         @include assert {
  //           @include output {
  //             @include invisible;
  //           }
  
  //           @include expect {
  //             visibility: hidden;
  //           }
  //         }
  //       }
  //       @include it("collapse") {
  //         @include assert {
  //           @include output {
  //             @include collapse;
  //           }
  
  //           @include expect {
  //             visibility: collapse;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("visible") {
  //           @include assert {
  //             @include output {
  //               @include sm\:visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 visibility: visible;
  //               }
  //             }
  //           }
  //         }
  //         @include it("invisible") {
  //           @include assert {
  //             @include output {
  //               @include sm\:invisible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 visibility: hidden;
  //               }
  //             }
  //           }
  //         }
  //         @include it("collapse") {
  //           @include assert {
  //             @include output {
  //               @include sm\:collapse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 visibility: collapse;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("MD") {
  //         @include it("visible") {
  //           @include assert {
  //             @include output {
  //               @include md\:visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 visibility: visible;
  //               }
  //             }
  //           }
  //         }
  //         @include it("invisible") {
  //           @include assert {
  //             @include output {
  //               @include md\:invisible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 visibility: hidden;
  //               }
  //             }
  //           }
  //         }
  //         @include it("collapse") {
  //           @include assert {
  //             @include output {
  //               @include md\:collapse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 visibility: collapse;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("LG") {
  //         @include it("visible") {
  //           @include assert {
  //             @include output {
  //               @include lg\:visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 visibility: visible;
  //               }
  //             }
  //           }
  //         }
  //         @include it("invisible") {
  //           @include assert {
  //             @include output {
  //               @include lg\:invisible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 visibility: hidden;
  //               }
  //             }
  //           }
  //         }
  //         @include it("collapse") {
  //           @include assert {
  //             @include output {
  //               @include lg\:collapse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 visibility: collapse;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("XL") {
  //         @include it("visible") {
  //           @include assert {
  //             @include output {
  //               @include xl\:visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 visibility: visible;
  //               }
  //             }
  //           }
  //         }
  //         @include it("invisible") {
  //           @include assert {
  //             @include output {
  //               @include xl\:invisible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 visibility: hidden;
  //               }
  //             }
  //           }
  //         }
  //         @include it("collapse") {
  //           @include assert {
  //             @include output {
  //               @include xl\:collapse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 visibility: collapse;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("2XL") {
  //         @include it("visible") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:visible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 visibility: visible;
  //               }
  //             }
  //           }
  //         }
  //         @include it("invisible") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:invisible;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 visibility: hidden;
  //               }
  //             }
  //           }
  //         }
  //         @include it("collapse") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:collapse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 visibility: collapse;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Z-Index") {
  //     @include describe("Basic") {
  //       @include it("z-0") {
  //         @include assert {
  //           @include output {
  //             @include z-0;
  //           }
  
  //           @include expect {
  //             z-index: 0;
  //           }
  //         }
  //       }
  //       @include it("z-10") {
  //         @include assert {
  //           @include output {
  //             @include z-10;
  //           }
  
  //           @include expect {
  //             z-index: 10;
  //           }
  //         }
  //       }
  //       @include it("z-20") {
  //         @include assert {
  //           @include output {
  //             @include z-20;
  //           }
  
  //           @include expect {
  //             z-index: 20;
  //           }
  //         }
  //       }
  //       @include it("z-30") {
  //         @include assert {
  //           @include output {
  //             @include z-30;
  //           }
  
  //           @include expect {
  //             z-index: 30;
  //           }
  //         }
  //       }
  //       @include it("z-40") {
  //         @include assert {
  //           @include output {
  //             @include z-40;
  //           }
  
  //           @include expect {
  //             z-index: 40;
  //           }
  //         }
  //       }
  //       @include it("z-50") {
  //         @include assert {
  //           @include output {
  //             @include z-50;
  //           }
  
  //           @include expect {
  //             z-index: 50;
  //           }
  //         }
  //       }
  //       @include it("z-auto") {
  //         @include assert {
  //           @include output {
  //             @include z-auto;
  //           }
  
  //           @include expect {
  //             z-index: auto;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("z-(100)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:z-(100);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 z-index: 100;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("MD") {
  //         @include it("z-(100)") {
  //           @include assert {
  //             @include output {
  //               @include md\:z-(100);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 z-index: 100;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("LG") {
  //         @include it("z-(100)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:z-(100);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 z-index: 100;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("XL") {
  //         @include it("z-(100)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:z-(100);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 z-index: 100;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("2XL") {
  //         @include it("z-(100)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:z-(100);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 z-index: 100;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("z-(100)") {
  //         @include assert {
  //           @include output {
  //             @include z-(100);
  //           }
  
  //           @include expect {
  //             z-index: 100;
  //           }
  //         }
  //       }
  //     }
  //   }
  // }
  
  // @include describe("Flexbox Grid") {
  //   @include describe("Flex Basis") {
  //     @include describe("Basic") {
  //       @include describe("0") {
  //         @include it("basis-0") {
  //           @include assert {
  //             @include output {
  //               @include basis-0;
  //             }
    
  //             @include expect {
  //               flex-basis: 0px;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1") {
  //           @include assert {
  //             @include output {
  //               @include basis-1;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.25rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2") {
  //           @include assert {
  //             @include output {
  //               @include basis-2;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.5rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-3") {
  //           @include assert {
  //             @include output {
  //               @include basis-3;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.75rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-4") {
  //           @include assert {
  //             @include output {
  //               @include basis-4;
  //             }
    
  //             @include expect {
  //               flex-basis: 1rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-5") {
  //           @include assert {
  //             @include output {
  //               @include basis-5;
  //             }
    
  //             @include expect {
  //               flex-basis: 1.25rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-6") {
  //           @include assert {
  //             @include output {
  //               @include basis-6;
  //             }
    
  //             @include expect {
  //               flex-basis: 1.5rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-7") {
  //           @include assert {
  //             @include output {
  //               @include basis-7;
  //             }
    
  //             @include expect {
  //               flex-basis: 1.75rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-8") {
  //           @include assert {
  //             @include output {
  //               @include basis-8;
  //             }
    
  //             @include expect {
  //               flex-basis: 2rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-9") {
  //           @include assert {
  //             @include output {
  //               @include basis-9;
  //             }
    
  //             @include expect {
  //               flex-basis: 2.25rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-10") {
  //           @include assert {
  //             @include output {
  //               @include basis-10;
  //             }
    
  //             @include expect {
  //               flex-basis: 2.5rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-11") {
  //           @include assert {
  //             @include output {
  //               @include basis-11;
  //             }
    
  //             @include expect {
  //               flex-basis: 2.75rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-12") {
  //           @include assert {
  //             @include output {
  //               @include basis-12;
  //             }
    
  //             @include expect {
  //               flex-basis: 3rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-14") {
  //           @include assert {
  //             @include output {
  //               @include basis-14;
  //             }
    
  //             @include expect {
  //               flex-basis: 3.5rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-16") {
  //           @include assert {
  //             @include output {
  //               @include basis-16;
  //             }
    
  //             @include expect {
  //               flex-basis: 4rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-20") {
  //           @include assert {
  //             @include output {
  //               @include basis-20;
  //             }
    
  //             @include expect {
  //               flex-basis: 5rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-24") {
  //           @include assert {
  //             @include output {
  //               @include basis-24;
  //             }
    
  //             @include expect {
  //               flex-basis: 6rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-28") {
  //           @include assert {
  //             @include output {
  //               @include basis-28;
  //             }
    
  //             @include expect {
  //               flex-basis: 7rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-32") {
  //           @include assert {
  //             @include output {
  //               @include basis-32;
  //             }
    
  //             @include expect {
  //               flex-basis: 8rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-36") {
  //           @include assert {
  //             @include output {
  //               @include basis-36;
  //             }
    
  //             @include expect {
  //               flex-basis: 9rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-40") {
  //           @include assert {
  //             @include output {
  //               @include basis-40;
  //             }
    
  //             @include expect {
  //               flex-basis: 10rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-44") {
  //           @include assert {
  //             @include output {
  //               @include basis-44;
  //             }
    
  //             @include expect {
  //               flex-basis: 11rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-48") {
  //           @include assert {
  //             @include output {
  //               @include basis-48;
  //             }
    
  //             @include expect {
  //               flex-basis: 12rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-52") {
  //           @include assert {
  //             @include output {
  //               @include basis-52;
  //             }
    
  //             @include expect {
  //               flex-basis: 13rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-56") {
  //           @include assert {
  //             @include output {
  //               @include basis-56;
  //             }
    
  //             @include expect {
  //               flex-basis: 14rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-60") {
  //           @include assert {
  //             @include output {
  //               @include basis-60;
  //             }
    
  //             @include expect {
  //               flex-basis: 15rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-64") {
  //           @include assert {
  //             @include output {
  //               @include basis-64;
  //             }
    
  //             @include expect {
  //               flex-basis: 16rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-72") {
  //           @include assert {
  //             @include output {
  //               @include basis-72;
  //             }
    
  //             @include expect {
  //               flex-basis: 18rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-80") {
  //           @include assert {
  //             @include output {
  //               @include basis-80;
  //             }
    
  //             @include expect {
  //               flex-basis: 20rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-96") {
  //           @include assert {
  //             @include output {
  //               @include basis-96;
  //             }
    
  //             @include expect {
  //               flex-basis: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("basis-auto") {
  //           @include assert {
  //             @include output {
  //               @include basis-auto;
  //             }
    
  //             @include expect {
  //               flex-basis: auto;
  //             }
  //           }
  //         }
    
  //         @include it("basis-px") {
  //           @include assert {
  //             @include output {
  //               @include basis-px;
  //             }
    
  //             @include expect {
  //               flex-basis: 1px;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('\.') {
  //         @include it("basis-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include basis-0\.5;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.125rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\.5;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.375rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include basis-2\.5;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.625rem;
  //             }
  //           }
  //         }
    
  //         @include it("basis-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include basis-3\.5;
  //             }
    
  //             @include expect {
  //               flex-basis: 0.875rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('\/') {
  //         @include it("basis-1\/2") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\/2;
  //             }
    
  //             @include expect {
  //               flex-basis: 50%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1\/3") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\/3;
  //             }
    
  //             @include expect {
  //               flex-basis: 33.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2\/3") {
  //           @include assert {
  //             @include output {
  //               @include basis-2\/3;
  //             }
    
  //             @include expect {
  //               flex-basis: 66.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1\/4") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\/4;
  //             }
    
  //             @include expect {
  //               flex-basis: 25%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2\/4") {
  //           @include assert {
  //             @include output {
  //               @include basis-2\/4;
  //             }
    
  //             @include expect {
  //               flex-basis: 50%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-3\/4") {
  //           @include assert {
  //             @include output {
  //               @include basis-3\/4;
  //             }
    
  //             @include expect {
  //               flex-basis: 75%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1\/5") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\/5;
  //             }
    
  //             @include expect {
  //               flex-basis: 20%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2\/5") {
  //           @include assert {
  //             @include output {
  //               @include basis-2\/5;
  //             }
    
  //             @include expect {
  //               flex-basis: 40%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-3\/5") {
  //           @include assert {
  //             @include output {
  //               @include basis-3\/5;
  //             }
    
  //             @include expect {
  //               flex-basis: 60%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-4\/5") {
  //           @include assert {
  //             @include output {
  //               @include basis-4\/5;
  //             }
    
  //             @include expect {
  //               flex-basis: 80%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1\/6") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\/6;
  //             }
    
  //             @include expect {
  //               flex-basis: 16.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2\/6") {
  //           @include assert {
  //             @include output {
  //               @include basis-2\/6;
  //             }
    
  //             @include expect {
  //               flex-basis: 33.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-3\/6") {
  //           @include assert {
  //             @include output {
  //               @include basis-3\/6;
  //             }
    
  //             @include expect {
  //               flex-basis: 50%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-4\/6") {
  //           @include assert {
  //             @include output {
  //               @include basis-4\/6;
  //             }
    
  //             @include expect {
  //               flex-basis: 66.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-5\/6") {
  //           @include assert {
  //             @include output {
  //               @include basis-5\/6;
  //             }
    
  //             @include expect {
  //               flex-basis: 83.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-1\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-1\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 8.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-2\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-2\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 16.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-3\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-3\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 25%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-4\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-4\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 33.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-5\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-5\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 41.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-6\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-6\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 50%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-7\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-7\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 58.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-8\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-8\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 66.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-9\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-9\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 75%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-10\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-10\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 83.333333%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-11\/12") {
  //           @include assert {
  //             @include output {
  //               @include basis-11\/12;
  //             }
    
  //             @include expect {
  //               flex-basis: 91.666667%;
  //             }
  //           }
  //         }
    
  //         @include it("basis-full") {
  //           @include assert {
  //             @include output {
  //               @include basis-full;
  //             }
    
  //             @include expect {
  //               flex-basis: 100%;
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("basis-(14.2857143%)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:basis-(14.2857143%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-basis: 14.2857143%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("basis-(14.2857143%)") {
  //           @include assert {
  //             @include output {
  //               @include md\:basis-(14.2857143%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex-basis: 14.2857143%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("basis-(14.2857143%)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:basis-(14.2857143%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex-basis: 14.2857143%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("basis-(14.2857143%)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:basis-(14.2857143%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex-basis: 14.2857143%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("basis-(14.2857143%)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:basis-(14.2857143%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex-basis: 14.2857143%;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("basis-(14.2857143%)") {
  //         @include assert {
  //           @include output {
  //             @include basis-(14.2857143%);
  //           }
  
  //           @include expect {
  //             flex-basis: 14.2857143%;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Flex Direction") {
  //     @include describe("Basic") {
  //       @include it("flex-row") {
  //         @include assert {
  //           @include output {
  //             @include flex-row;
  //           }
  
  //           @include expect {
  //             flex-direction: row;
  //           }
  //         }
  //       }
  
  //       @include it("flex-row-reverse") {
  //         @include assert {
  //           @include output {
  //             @include flex-row-reverse;
  //           }
  
  //           @include expect {
  //             flex-direction: row-reverse;
  //           }
  //         }
  //       }
  
  //       @include it("flex-col") {
  //         @include assert {
  //           @include output {
  //             @include flex-col;
  //           }
  
  //           @include expect {
  //             flex-direction: column;
  //           }
  //         }
  //       }
  
  //       @include it("flex-col-reverse") {
  //         @include assert {
  //           @include output {
  //             @include flex-col-reverse;
  //           }
  
  //           @include expect {
  //             flex-direction: column-reverse;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("flex-row") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-direction: row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-row-reverse") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-row-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-direction: row-reverse;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-col") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-col;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-direction: column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-col-reverse") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-col-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-direction: column-reverse;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Flex Wrap") {
  //     @include describe("Basic") {
  //       @include it("flex-wrap") {
  //         @include assert {
  //           @include output {
  //             @include flex-wrap;
  //           }
  
  //           @include expect {
  //             flex-wrap: wrap;
  //           }
  //         }
  //       }
  
  //       @include it("flex-wrap-reverse") {
  //         @include assert {
  //           @include output {
  //             @include flex-wrap-reverse;
  //           }
  
  //           @include expect {
  //             flex-wrap: wrap-reverse;
  //           }
  //         }
  //       }
  
  //       @include it("flex-nowrap") {
  //         @include assert {
  //           @include output {
  //             @include flex-nowrap;
  //           }
  
  //           @include expect {
  //             flex-wrap: nowrap;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("flex-wrap") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-wrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-wrap: wrap;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-wrap-reverse") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-wrap-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-wrap: wrap-reverse;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-nowrap") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-nowrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-wrap: nowrap;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("flex-wrap") {
  //           @include assert {
  //             @include output {
  //               @include md\:flex-wrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex-wrap: wrap;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-wrap-reverse") {
  //           @include assert {
  //             @include output {
  //               @include md\:flex-wrap-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex-wrap: wrap-reverse;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-nowrap") {
  //           @include assert {
  //             @include output {
  //               @include md\:flex-nowrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex-wrap: nowrap;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("flex-wrap") {
  //           @include assert {
  //             @include output {
  //               @include lg\:flex-wrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex-wrap: wrap;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-wrap-reverse") {
  //           @include assert {
  //             @include output {
  //               @include lg\:flex-wrap-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex-wrap: wrap-reverse;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-nowrap") {
  //           @include assert {
  //             @include output {
  //               @include lg\:flex-nowrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex-wrap: nowrap;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("flex-wrap") {
  //           @include assert {
  //             @include output {
  //               @include xl\:flex-wrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex-wrap: wrap;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-wrap-reverse") {
  //           @include assert {
  //             @include output {
  //               @include xl\:flex-wrap-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex-wrap: wrap-reverse;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-nowrap") {
  //           @include assert {
  //             @include output {
  //               @include xl\:flex-nowrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex-wrap: nowrap;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("flex-wrap") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:flex-wrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex-wrap: wrap;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-wrap-reverse") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:flex-wrap-reverse;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex-wrap: wrap-reverse;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("flex-nowrap") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:flex-nowrap;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex-wrap: nowrap;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Flex") {
  //     @include describe("Basic") {
  //       @include it("flex-1") {
  //         @include assert {
  //           @include output {
  //             @include flex-1;
  //           }
  
  //           @include expect {
  //             flex: 1 1 0%;
  //           }
  //         }
  //       }
  
  //       @include it("flex-auto") {
  //         @include assert {
  //           @include output {
  //             @include flex-auto;
  //           }
  
  //           @include expect {
  //             flex: 1 1 auto;
  //           }
  //         }
  //       }
  
  //       @include it("flex-initial") {
  //         @include assert {
  //           @include output {
  //             @include flex-initial;
  //           }
  
  //           @include expect {
  //             flex: 0 1 auto;
  //           }
  //         }
  //       }
  
  //       @include it("flex-none") {
  //         @include assert {
  //           @include output {
  //             @include flex-none;
  //           }
  
  //           @include expect {
  //             flex: none;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("flex-(2 2 0%)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:flex-(2 2 0%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex: 2 2 0%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("flex-(2 2 0%)") {
  //           @include assert {
  //             @include output {
  //               @include md\:flex-(2 2 0%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex: 2 2 0%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("flex-(2 2 0%)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:flex-(2 2 0%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex: 2 2 0%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("flex-(2 2 0%)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:flex-(2 2 0%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex: 2 2 0%;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("flex-(2 2 0%)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:flex-(2 2 0%);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex: 2 2 0%;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("flex-(2 2 0%)") {
  //         @include assert {
  //           @include output {
  //             @include flex-(2 2 0%);
  //           }
  
  //           @include expect {
  //             flex: 2 2 0%;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Flex Grow") {
  //     @include describe("Basic") {
  //       @include it("grow") {
  //         @include assert {
  //           @include output {
  //             @include grow;
  //           }
  
  //           @include expect {
  //             flex-grow: 1;
  //           }
  //         }
  //       }
  
  //       @include it("grow-0") {
  //         @include assert {
  //           @include output {
  //             @include grow-0;
  //           }
  
  //           @include expect {
  //             flex-grow: 0;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("grow-(2)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grow-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-grow: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("grow-(2)") {
  //           @include assert {
  //             @include output {
  //               @include md\:grow-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex-grow: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("grow-(2)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grow-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex-grow: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("grow-(2)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grow-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex-grow: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("grow-(2)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grow-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex-grow: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("grow-(2)") {
  //         @include assert {
  //           @include output {
  //             @include grow-(2);
  //           }
  
  //           @include expect {
  //             flex-grow: 2;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Flex Shrink") {
  //     @include describe("Basic") {
  //       @include it("shrink") {
  //         @include assert {
  //           @include output {
  //             @include shrink;
  //           }
  
  //           @include expect {
  //             flex-shrink: 1;
  //           }
  //         }
  //       }
  
  //       @include it("shrink-0") {
  //         @include assert {
  //           @include output {
  //             @include shrink-0;
  //           }
  
  //           @include expect {
  //             flex-shrink: 0;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("shrink-(2)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:shrink-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 flex-shrink: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("shrink-(2)") {
  //           @include assert {
  //             @include output {
  //               @include md\:shrink-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 flex-shrink: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("shrink-(2)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:shrink-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 flex-shrink: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("shrink-(2)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:shrink-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 flex-shrink: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("shrink-(2)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:shrink-(2);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 flex-shrink: 2;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("shrink-(2)") {
  //         @include assert {
  //           @include output {
  //             @include shrink-(2);
  //           }
  
  //           @include expect {
  //             flex-shrink: 2;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Order") {
  //     @include describe("Basic") {
  //       @include it("order-1") {
  //         @include assert {
  //           @include output {
  //             @include order-1;
  //           }
  
  //           @include expect {
  //             order: 1;
  //           }
  //         }
  //       }
  
  //       @include it("order-2") {
  //         @include assert {
  //           @include output {
  //             @include order-2;
  //           }
  
  //           @include expect {
  //             order: 2;
  //           }
  //         }
  //       }
  
  //       @include it("order-3") {
  //         @include assert {
  //           @include output {
  //             @include order-3;
  //           }
  
  //           @include expect {
  //             order: 3;
  //           }
  //         }
  //       }
  //       @include it("order-4") {
  //         @include assert {
  //           @include output {
  //             @include order-4;
  //           }
  
  //           @include expect {
  //             order: 4;
  //           }
  //         }
  //       }
  //       @include it("order-5") {
  //         @include assert {
  //           @include output {
  //             @include order-5;
  //           }
  
  //           @include expect {
  //             order: 5;
  //           }
  //         }
  //       }
  //       @include it("order-6") {
  //         @include assert {
  //           @include output {
  //             @include order-6;
  //           }
  
  //           @include expect {
  //             order: 6;
  //           }
  //         }
  //       }
  //       @include it("order-7") {
  //         @include assert {
  //           @include output {
  //             @include order-7;
  //           }
  
  //           @include expect {
  //             order: 7;
  //           }
  //         }
  //       }
  //       @include it("order-8") {
  //         @include assert {
  //           @include output {
  //             @include order-8;
  //           }
  
  //           @include expect {
  //             order: 8;
  //           }
  //         }
  //       }
  //       @include it("order-9") {
  //         @include assert {
  //           @include output {
  //             @include order-9;
  //           }
  
  //           @include expect {
  //             order: 9;
  //           }
  //         }
  //       }
  //       @include it("order-10") {
  //         @include assert {
  //           @include output {
  //             @include order-10;
  //           }
  
  //           @include expect {
  //             order: 10;
  //           }
  //         }
  //       }
  //       @include it("order-11") {
  //         @include assert {
  //           @include output {
  //             @include order-11;
  //           }
  
  //           @include expect {
  //             order: 11;
  //           }
  //         }
  //       }
  //       @include it("order-12") {
  //         @include assert {
  //           @include output {
  //             @include order-12;
  //           }
  
  //           @include expect {
  //             order: 12;
  //           }
  //         }
  //       }
  //       @include it("order-first") {
  //         @include assert {
  //           @include output {
  //             @include order-first;
  //           }
  
  //           @include expect {
  //             order: -9999;
  //           }
  //         }
  //       }
  //       @include it("order-last") {
  //         @include assert {
  //           @include output {
  //             @include order-last;
  //           }
  
  //           @include expect {
  //             order: 9999;
  //           }
  //         }
  //       }
  //       @include it("order-none") {
  //         @include assert {
  //           @include output {
  //             @include order-none;
  //           }
  
  //           @include expect {
  //             order: 0;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("order-(13)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:order-(13);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 order: 13;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("MD") {
  //         @include it("order-(13)") {
  //           @include assert {
  //             @include output {
  //               @include md\:order-(13);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 order: 13;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("LG") {
  //         @include it("order-(13)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:order-(13);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 order: 13;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("XL") {
  //         @include it("order-(13)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:order-(13);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 order: 13;
  //               }
  //             }
  //           }
  //         }
  //       }
  //       @include describe("2XL") {
  //         @include it("order-(13)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:order-(13);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 order: 13;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("order-(13)") {
  //         @include assert {
  //           @include output {
  //             @include order-(13);
  //           }
  
  //           @include expect {
  //             order: 13;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Template Columns") {
  //     @include describe("Basic") {
  //       @include it("grid-cols-1") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-1;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(1, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-2") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-2;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(2, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-3") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-3;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(3, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-4") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-4;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(4, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-5") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-5;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(5, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-6") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-6;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(6, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-7") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-7;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(7, minmax(0, 1fr));
  //           }
  //         }
  //       }
  
  //       @include it("grid-cols-8") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-8;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(8, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-9") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-9;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(9, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-10") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-10;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(10, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-11") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-11;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(11, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-12") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-12;
  //           }
  
  //           @include expect {
  //             grid-template-columns: repeat(12, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-cols-none") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-none;
  //           }
  
  //           @include expect {
  //             grid-template-columns: none;
  //           }
  //         }
  //       }
  //       @include it("grid-cols-subgrid") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-subgrid;
  //           }
  
  //           @include expect {
  //             grid-template-columns: subgrid;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("grid-cols-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-cols-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-template-columns: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("grid-cols-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-cols-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-template-columns: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("grid-cols-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-cols-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-template-columns: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("grid-cols-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-cols-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-template-columns: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("grid-cols-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-cols-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-template-columns: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("grid-cols-(200px minmax(900px, 1fr) 100px)") {
  //         @include assert {
  //           @include output {
  //             @include grid-cols-(200px minmax(900px, 1fr) 100px);
  //           }
  
  //           @include expect {
  //             grid-template-columns: 200px minmax(900px, 1fr) 100px;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Column Start End") {
  //     @include describe("Basic") {
  //       @include describe('span') {
  //         @include it("col-auto") {
  //           @include assert {
  //             @include output {
  //               @include col-auto;
  //             }
    
  //             @include expect {
  //               grid-column: auto;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-1") {
  //           @include assert {
  //             @include output {
  //               @include col-span-1;
  //             }
    
  //             @include expect {
  //               grid-column: span 1 / span 1;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-2") {
  //           @include assert {
  //             @include output {
  //               @include col-span-2;
  //             }
    
  //             @include expect {
  //               grid-column: span 2 / span 2;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-3") {
  //           @include assert {
  //             @include output {
  //               @include col-span-3;
  //             }
    
  //             @include expect {
  //               grid-column: span 3 / span 3;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-4") {
  //           @include assert {
  //             @include output {
  //               @include col-span-4;
  //             }
    
  //             @include expect {
  //               grid-column: span 4 / span 4;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-5") {
  //           @include assert {
  //             @include output {
  //               @include col-span-5;
  //             }
    
  //             @include expect {
  //               grid-column: span 5 / span 5;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-6") {
  //           @include assert {
  //             @include output {
  //               @include col-span-6;
  //             }
    
  //             @include expect {
  //               grid-column: span 6 / span 6;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-7") {
  //           @include assert {
  //             @include output {
  //               @include col-span-7;
  //             }
    
  //             @include expect {
  //               grid-column: span 7 / span 7;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-8") {
  //           @include assert {
  //             @include output {
  //               @include col-span-8;
  //             }
    
  //             @include expect {
  //               grid-column: span 8 / span 8;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-9") {
  //           @include assert {
  //             @include output {
  //               @include col-span-9;
  //             }
    
  //             @include expect {
  //               grid-column: span 9 / span 9;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-10") {
  //           @include assert {
  //             @include output {
  //               @include col-span-10;
  //             }
    
  //             @include expect {
  //               grid-column: span 10 / span 10;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-11") {
  //           @include assert {
  //             @include output {
  //               @include col-span-11;
  //             }
    
  //             @include expect {
  //               grid-column: span 11 / span 11;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-12") {
  //           @include assert {
  //             @include output {
  //               @include col-span-12;
  //             }
    
  //             @include expect {
  //               grid-column: span 12 / span 12;
  //             }
  //           }
  //         }
    
  //         @include it("col-span-full") {
  //           @include assert {
  //             @include output {
  //               @include col-span-full;
  //             }
    
  //             @include expect {
  //               grid-column: 1 / -1;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('start') {
  //         @include it("col-start-1") {
  //           @include assert {
  //             @include output {
  //               @include col-start-1;
  //             }
    
  //             @include expect {
  //               grid-column-start: 1;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-2") {
  //           @include assert {
  //             @include output {
  //               @include col-start-2;
  //             }
    
  //             @include expect {
  //               grid-column-start: 2;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-3") {
  //           @include assert {
  //             @include output {
  //               @include col-start-3;
  //             }
    
  //             @include expect {
  //               grid-column-start: 3;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-4") {
  //           @include assert {
  //             @include output {
  //               @include col-start-4;
  //             }
    
  //             @include expect {
  //               grid-column-start: 4;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-5") {
  //           @include assert {
  //             @include output {
  //               @include col-start-5;
  //             }
    
  //             @include expect {
  //               grid-column-start: 5;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-6") {
  //           @include assert {
  //             @include output {
  //               @include col-start-6;
  //             }
    
  //             @include expect {
  //               grid-column-start: 6;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-7") {
  //           @include assert {
  //             @include output {
  //               @include col-start-7;
  //             }
    
  //             @include expect {
  //               grid-column-start: 7;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-8") {
  //           @include assert {
  //             @include output {
  //               @include col-start-8;
  //             }
    
  //             @include expect {
  //               grid-column-start: 8;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-9") {
  //           @include assert {
  //             @include output {
  //               @include col-start-9;
  //             }
    
  //             @include expect {
  //               grid-column-start: 9;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-10") {
  //           @include assert {
  //             @include output {
  //               @include col-start-10;
  //             }
    
  //             @include expect {
  //               grid-column-start: 10;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-11") {
  //           @include assert {
  //             @include output {
  //               @include col-start-11;
  //             }
    
  //             @include expect {
  //               grid-column-start: 11;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-12") {
  //           @include assert {
  //             @include output {
  //               @include col-start-12;
  //             }
    
  //             @include expect {
  //               grid-column-start: 12;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-13") {
  //           @include assert {
  //             @include output {
  //               @include col-start-13;
  //             }
    
  //             @include expect {
  //               grid-column-start: 13;
  //             }
  //           }
  //         }
    
  //         @include it("col-start-auto") {
  //           @include assert {
  //             @include output {
  //               @include col-start-auto;
  //             }
    
  //             @include expect {
  //               grid-column-start: auto;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('end') {
  //         @include it("col-end-1") {
  //           @include assert {
  //             @include output {
  //               @include col-end-1;
  //             }
    
  //             @include expect {
  //               grid-column-end: 1;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-2") {
  //           @include assert {
  //             @include output {
  //               @include col-end-2;
  //             }
    
  //             @include expect {
  //               grid-column-end: 2;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-3") {
  //           @include assert {
  //             @include output {
  //               @include col-end-3;
  //             }
    
  //             @include expect {
  //               grid-column-end: 3;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-4") {
  //           @include assert {
  //             @include output {
  //               @include col-end-4;
  //             }
    
  //             @include expect {
  //               grid-column-end: 4;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-5") {
  //           @include assert {
  //             @include output {
  //               @include col-end-5;
  //             }
    
  //             @include expect {
  //               grid-column-end: 5;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-6") {
  //           @include assert {
  //             @include output {
  //               @include col-end-6;
  //             }
    
  //             @include expect {
  //               grid-column-end: 6;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-7") {
  //           @include assert {
  //             @include output {
  //               @include col-end-7;
  //             }
    
  //             @include expect {
  //               grid-column-end: 7;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-8") {
  //           @include assert {
  //             @include output {
  //               @include col-end-8;
  //             }
    
  //             @include expect {
  //               grid-column-end: 8;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-9") {
  //           @include assert {
  //             @include output {
  //               @include col-end-9;
  //             }
    
  //             @include expect {
  //               grid-column-end: 9;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-10") {
  //           @include assert {
  //             @include output {
  //               @include col-end-10;
  //             }
    
  //             @include expect {
  //               grid-column-end: 10;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-11") {
  //           @include assert {
  //             @include output {
  //               @include col-end-11;
  //             }
    
  //             @include expect {
  //               grid-column-end: 11;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-12") {
  //           @include assert {
  //             @include output {
  //               @include col-end-12;
  //             }
    
  //             @include expect {
  //               grid-column-end: 12;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-13") {
  //           @include assert {
  //             @include output {
  //               @include col-end-13;
  //             }
    
  //             @include expect {
  //               grid-column-end: 13;
  //             }
  //           }
  //         }
    
  //         @include it("col-end-auto") {
  //           @include assert {
  //             @include output {
  //               @include col-end-auto;
  //             }
    
  //             @include expect {
  //               grid-column-end: auto;
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("col-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:col-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-column: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:col-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-column-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:col-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-column-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("col-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include md\:col-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-column: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include md\:col-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-column-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include md\:col-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-column-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("col-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:col-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-column: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:col-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-column-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:col-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-column-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("col-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:col-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-column: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:col-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-column-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:col-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-column-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("col-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:col-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-column: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:col-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-column-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("col-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:col-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-column-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("col-(16 / span 16)") {
  //         @include assert {
  //           @include output {
  //             @include col-(16 / span 16);
  //           }
  
  //           @include expect {
  //             grid-column: 16 / span 16;
  //           }
  //         }
  //       }
  
  //       @include it("col-start-(16 / span 16)") {
  //         @include assert {
  //           @include output {
  //             @include col-start-(16 / span 16);
  //           }
  
  //           @include expect {
  //             grid-column-start: 16 / span 16;
  //           }
  //         }
  //       }
  
  //       @include it("col-end-(16 / span 16)") {
  //         @include assert {
  //           @include output {
  //             @include col-end-(16 / span 16);
  //           }
  
  //           @include expect {
  //             grid-column-end: 16 / span 16;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Template Rows") {
  //     @include describe("Basic") {
  //       @include it("grid-rows-1") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-1;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(1, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-2") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-2;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(2, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-3") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-3;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(3, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-4") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-4;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(4, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-5") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-5;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(5, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-6") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-6;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(6, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-7") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-7;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(7, minmax(0, 1fr));
  //           }
  //         }
  //       }
  
  //       @include it("grid-rows-8") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-8;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(8, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-9") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-9;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(9, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-10") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-10;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(10, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-11") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-11;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(11, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-12") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-12;
  //           }
  
  //           @include expect {
  //             grid-template-rows: repeat(12, minmax(0, 1fr));
  //           }
  //         }
  //       }
  //       @include it("grid-rows-none") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-none;
  //           }
  
  //           @include expect {
  //             grid-template-rows: none;
  //           }
  //         }
  //       }
  //       @include it("grid-rows-subgrid") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-subgrid;
  //           }
  
  //           @include expect {
  //             grid-template-rows: subgrid;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("grid-rows-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-rows-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-template-rows: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("grid-rows-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-rows-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-template-rows: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("grid-rows-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-rows-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-template-rows: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("grid-rows-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-rows-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-template-rows: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("grid-rows-(200px minmax(900px,_1fr) 100px)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-rows-(
  //                   200px minmax(900px, 1fr) 100px
  //                 );
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-template-rows: 200px minmax(900px, 1fr) 100px;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("grid-rows-(200px minmax(900px, 1fr) 100px)") {
  //         @include assert {
  //           @include output {
  //             @include grid-rows-(200px minmax(900px, 1fr) 100px);
  //           }
  
  //           @include expect {
  //             grid-template-rows: 200px minmax(900px, 1fr) 100px;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Row Start End") {
  //     @include describe("Basic") {
  //       @include describe('span') {
  //         @include it("row-auto") {
  //           @include assert {
  //             @include output {
  //               @include row-auto;
  //             }
    
  //             @include expect {
  //               grid-row: auto;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-1") {
  //           @include assert {
  //             @include output {
  //               @include row-span-1;
  //             }
    
  //             @include expect {
  //               grid-row: span 1 / span 1;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-2") {
  //           @include assert {
  //             @include output {
  //               @include row-span-2;
  //             }
    
  //             @include expect {
  //               grid-row: span 2 / span 2;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-3") {
  //           @include assert {
  //             @include output {
  //               @include row-span-3;
  //             }
    
  //             @include expect {
  //               grid-row: span 3 / span 3;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-4") {
  //           @include assert {
  //             @include output {
  //               @include row-span-4;
  //             }
    
  //             @include expect {
  //               grid-row: span 4 / span 4;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-5") {
  //           @include assert {
  //             @include output {
  //               @include row-span-5;
  //             }
    
  //             @include expect {
  //               grid-row: span 5 / span 5;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-6") {
  //           @include assert {
  //             @include output {
  //               @include row-span-6;
  //             }
    
  //             @include expect {
  //               grid-row: span 6 / span 6;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-7") {
  //           @include assert {
  //             @include output {
  //               @include row-span-7;
  //             }
    
  //             @include expect {
  //               grid-row: span 7 / span 7;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-8") {
  //           @include assert {
  //             @include output {
  //               @include row-span-8;
  //             }
    
  //             @include expect {
  //               grid-row: span 8 / span 8;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-9") {
  //           @include assert {
  //             @include output {
  //               @include row-span-9;
  //             }
    
  //             @include expect {
  //               grid-row: span 9 / span 9;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-10") {
  //           @include assert {
  //             @include output {
  //               @include row-span-10;
  //             }
    
  //             @include expect {
  //               grid-row: span 10 / span 10;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-11") {
  //           @include assert {
  //             @include output {
  //               @include row-span-11;
  //             }
    
  //             @include expect {
  //               grid-row: span 11 / span 11;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-12") {
  //           @include assert {
  //             @include output {
  //               @include row-span-12;
  //             }
    
  //             @include expect {
  //               grid-row: span 12 / span 12;
  //             }
  //           }
  //         }
    
  //         @include it("row-span-full") {
  //           @include assert {
  //             @include output {
  //               @include row-span-full;
  //             }
    
  //             @include expect {
  //               grid-row: 1 / -1;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('start') {
  //         @include it("row-start-1") {
  //           @include assert {
  //             @include output {
  //               @include row-start-1;
  //             }
    
  //             @include expect {
  //               grid-row-start: 1;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-2") {
  //           @include assert {
  //             @include output {
  //               @include row-start-2;
  //             }
    
  //             @include expect {
  //               grid-row-start: 2;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-3") {
  //           @include assert {
  //             @include output {
  //               @include row-start-3;
  //             }
    
  //             @include expect {
  //               grid-row-start: 3;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-4") {
  //           @include assert {
  //             @include output {
  //               @include row-start-4;
  //             }
    
  //             @include expect {
  //               grid-row-start: 4;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-5") {
  //           @include assert {
  //             @include output {
  //               @include row-start-5;
  //             }
    
  //             @include expect {
  //               grid-row-start: 5;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-6") {
  //           @include assert {
  //             @include output {
  //               @include row-start-6;
  //             }
    
  //             @include expect {
  //               grid-row-start: 6;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-7") {
  //           @include assert {
  //             @include output {
  //               @include row-start-7;
  //             }
    
  //             @include expect {
  //               grid-row-start: 7;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-8") {
  //           @include assert {
  //             @include output {
  //               @include row-start-8;
  //             }
    
  //             @include expect {
  //               grid-row-start: 8;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-9") {
  //           @include assert {
  //             @include output {
  //               @include row-start-9;
  //             }
    
  //             @include expect {
  //               grid-row-start: 9;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-10") {
  //           @include assert {
  //             @include output {
  //               @include row-start-10;
  //             }
    
  //             @include expect {
  //               grid-row-start: 10;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-11") {
  //           @include assert {
  //             @include output {
  //               @include row-start-11;
  //             }
    
  //             @include expect {
  //               grid-row-start: 11;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-12") {
  //           @include assert {
  //             @include output {
  //               @include row-start-12;
  //             }
    
  //             @include expect {
  //               grid-row-start: 12;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-13") {
  //           @include assert {
  //             @include output {
  //               @include row-start-13;
  //             }
    
  //             @include expect {
  //               grid-row-start: 13;
  //             }
  //           }
  //         }
    
  //         @include it("row-start-auto") {
  //           @include assert {
  //             @include output {
  //               @include row-start-auto;
  //             }
    
  //             @include expect {
  //               grid-row-start: auto;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe('end') {
  //         @include it("row-end-1") {
  //           @include assert {
  //             @include output {
  //               @include row-end-1;
  //             }
    
  //             @include expect {
  //               grid-row-end: 1;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-2") {
  //           @include assert {
  //             @include output {
  //               @include row-end-2;
  //             }
    
  //             @include expect {
  //               grid-row-end: 2;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-3") {
  //           @include assert {
  //             @include output {
  //               @include row-end-3;
  //             }
    
  //             @include expect {
  //               grid-row-end: 3;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-4") {
  //           @include assert {
  //             @include output {
  //               @include row-end-4;
  //             }
    
  //             @include expect {
  //               grid-row-end: 4;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-5") {
  //           @include assert {
  //             @include output {
  //               @include row-end-5;
  //             }
    
  //             @include expect {
  //               grid-row-end: 5;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-6") {
  //           @include assert {
  //             @include output {
  //               @include row-end-6;
  //             }
    
  //             @include expect {
  //               grid-row-end: 6;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-7") {
  //           @include assert {
  //             @include output {
  //               @include row-end-7;
  //             }
    
  //             @include expect {
  //               grid-row-end: 7;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-8") {
  //           @include assert {
  //             @include output {
  //               @include row-end-8;
  //             }
    
  //             @include expect {
  //               grid-row-end: 8;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-9") {
  //           @include assert {
  //             @include output {
  //               @include row-end-9;
  //             }
    
  //             @include expect {
  //               grid-row-end: 9;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-10") {
  //           @include assert {
  //             @include output {
  //               @include row-end-10;
  //             }
    
  //             @include expect {
  //               grid-row-end: 10;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-11") {
  //           @include assert {
  //             @include output {
  //               @include row-end-11;
  //             }
    
  //             @include expect {
  //               grid-row-end: 11;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-12") {
  //           @include assert {
  //             @include output {
  //               @include row-end-12;
  //             }
    
  //             @include expect {
  //               grid-row-end: 12;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-13") {
  //           @include assert {
  //             @include output {
  //               @include row-end-13;
  //             }
    
  //             @include expect {
  //               grid-row-end: 13;
  //             }
  //           }
  //         }
    
  //         @include it("row-end-auto") {
  //           @include assert {
  //             @include output {
  //               @include row-end-auto;
  //             }
    
  //             @include expect {
  //               grid-row-end: auto;
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("row-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:row-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-row: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:row-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-row-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:row-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-row-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("row-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include md\:row-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-row: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include md\:row-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-row-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include md\:row-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-row-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("row-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:row-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-row: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:row-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-row-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:row-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-row-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("row-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:row-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-row: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:row-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-row-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:row-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-row-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("row-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:row-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-row: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-start-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:row-start-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-row-start: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("row-end-(16 / span 16)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:row-end-(16 / span 16);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-row-end: 16 / span 16;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("row-(16 / span 16)") {
  //         @include assert {
  //           @include output {
  //             @include row-(16 / span 16);
  //           }
  
  //           @include expect {
  //             grid-row: 16 / span 16;
  //           }
  //         }
  //       }
  
  //       @include it("row-start-(16 / span 16)") {
  //         @include assert {
  //           @include output {
  //             @include row-start-(16 / span 16);
  //           }
  
  //           @include expect {
  //             grid-row-start: 16 / span 16;
  //           }
  //         }
  //       }
  
  //       @include it("row-end-(16 / span 16)") {
  //         @include assert {
  //           @include output {
  //             @include row-end-(16 / span 16);
  //           }
  
  //           @include expect {
  //             grid-row-end: 16 / span 16;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Auto Flow") {
  //     @include describe("Basic") {
  //       @include it("grid-flow-row") {
  //         @include assert {
  //           @include output {
  //             @include grid-flow-row;
  //           }
  
  //           @include expect {
  //             grid-auto-flow: row;
  //           }
  //         }
  //       }
  
  //       @include it("grid-flow-col") {
  //         @include assert {
  //           @include output {
  //             @include grid-flow-col;
  //           }
  
  //           @include expect {
  //             grid-auto-flow: column;
  //           }
  //         }
  //       }
  
  //       @include it("grid-flow-dense") {
  //         @include assert {
  //           @include output {
  //             @include grid-flow-dense;
  //           }
  
  //           @include expect {
  //             grid-auto-flow: dense;
  //           }
  //         }
  //       }
  
  //       @include it("grid-flow-row-dense") {
  //         @include assert {
  //           @include output {
  //             @include grid-flow-row-dense;
  //           }
  
  //           @include expect {
  //             grid-auto-flow: row dense;
  //           }
  //         }
  //       }
  
  //       @include it("grid-flow-col-dense") {
  //         @include assert {
  //           @include output {
  //             @include grid-flow-col-dense;
  //           }
  
  //           @include expect {
  //             grid-auto-flow: column dense;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("grid-flow-row") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-flow-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-flow: row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-flow-col;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-flow: column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-dense") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-flow-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-flow: dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-row-dense") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-flow-row-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-flow: row dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col-dense") {
  //           @include assert {
  //             @include output {
  //               @include sm\:grid-flow-col-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-flow: column dense;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("grid-flow-row") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-flow-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-flow: row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-flow-col;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-flow: column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-dense") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-flow-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-flow: dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-row-dense") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-flow-row-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-flow: row dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col-dense") {
  //           @include assert {
  //             @include output {
  //               @include md\:grid-flow-col-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-flow: column dense;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("grid-flow-row") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-flow-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-flow: row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-flow-col;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-flow: column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-dense") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-flow-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-flow: dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-row-dense") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-flow-row-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-flow: row dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col-dense") {
  //           @include assert {
  //             @include output {
  //               @include lg\:grid-flow-col-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-flow: column dense;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("grid-flow-row") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-flow-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-flow: row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-flow-col;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-flow: column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-dense") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-flow-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-flow: dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-row-dense") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-flow-row-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-flow: row dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col-dense") {
  //           @include assert {
  //             @include output {
  //               @include xl\:grid-flow-col-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-flow: column dense;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("grid-flow-row") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-flow-row;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-flow: row;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-flow-col;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-flow: column;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-dense") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-flow-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-flow: dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-row-dense") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-flow-row-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-flow: row dense;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("grid-flow-col-dense") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:grid-flow-col-dense;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-flow: column dense;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Auto Columns") {
  //     @include describe("Basic") {
  //       @include it("auto-cols-auto") {
  //         @include assert {
  //           @include output {
  //             @include auto-cols-auto;
  //           }
  
  //           @include expect {
  //             grid-auto-columns: auto;
  //           }
  //         }
  //       }
  
  //       @include it("auto-cols-min") {
  //         @include assert {
  //           @include output {
  //             @include auto-cols-min;
  //           }
  
  //           @include expect {
  //             grid-auto-columns: min-content;
  //           }
  //         }
  //       }
  
  //       @include it("auto-cols-max") {
  //         @include assert {
  //           @include output {
  //             @include auto-cols-max;
  //           }
  
  //           @include expect {
  //             grid-auto-columns: max-content;
  //           }
  //         }
  //       }
  
  //       @include it("auto-cols-fr") {
  //         @include assert {
  //           @include output {
  //             @include auto-cols-fr;
  //           }
  
  //           @include expect {
  //             grid-auto-columns: minmax(0, 1fr);
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("auto-cols-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include sm\:auto-cols-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-columns: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("auto-cols-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include md\:auto-cols-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-columns: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("auto-cols-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include lg\:auto-cols-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-columns: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("auto-cols-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include xl\:auto-cols-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-columns: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("auto-cols-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:auto-cols-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-columns: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("auto-cols-(minmax(0, 2fr))") {
  //         @include assert {
  //           @include output {
  //             @include auto-cols-(minmax(0, 2fr));
  //           }
  
  //           @include expect {
  //             grid-auto-columns: minmax(0, 2fr);
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Grid Auto Rows") {
  //     @include describe("Basic") {
  //       @include it("auto-rows-auto") {
  //         @include assert {
  //           @include output {
  //             @include auto-rows-auto;
  //           }
  
  //           @include expect {
  //             grid-auto-rows: auto;
  //           }
  //         }
  //       }
  
  //       @include it("auto-rows-min") {
  //         @include assert {
  //           @include output {
  //             @include auto-rows-min;
  //           }
  
  //           @include expect {
  //             grid-auto-rows: min-content;
  //           }
  //         }
  //       }
  
  //       @include it("auto-rows-max") {
  //         @include assert {
  //           @include output {
  //             @include auto-rows-max;
  //           }
  
  //           @include expect {
  //             grid-auto-rows: max-content;
  //           }
  //         }
  //       }
  
  //       @include it("auto-rows-fr") {
  //         @include assert {
  //           @include output {
  //             @include auto-rows-fr;
  //           }
  
  //           @include expect {
  //             grid-auto-rows: minmax(0, 1fr);
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("auto-rows-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include sm\:auto-rows-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 grid-auto-rows: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("auto-rows-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include md\:auto-rows-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 grid-auto-rows: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("auto-rows-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include lg\:auto-rows-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 grid-auto-rows: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("auto-rows-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include xl\:auto-rows-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 grid-auto-rows: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("auto-rows-(minmax(0, 2fr))") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:auto-rows-(minmax(0, 2fr));
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 grid-auto-rows: minmax(0, 2fr);
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("auto-rows-(minmax(0, 2fr))") {
  //         @include assert {
  //           @include output {
  //             @include auto-rows-(minmax(0, 2fr));
  //           }
  
  //           @include expect {
  //             grid-auto-rows: minmax(0, 2fr);
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Gap") {
  //     @include describe("Basic") {
  //       @include describe("0") {
  //         @include it("gap-0") {
  //           @include assert {
  //             @include output {
  //               @include gap-0;
  //             }
  
  //             @include expect {
  //               gap: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-0") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-0;
  //             }
  
  //             @include expect {
  //               column-gap: 0px;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-0") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-0;
  //             }
  
  //             @include expect {
  //               row-gap: 0px;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("px") {
  //         @include it("gap-px") {
  //           @include assert {
  //             @include output {
  //               @include gap-px;
  //             }
  
  //             @include expect {
  //               gap: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-px") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-px;
  //             }
  
  //             @include expect {
  //               column-gap: 1px;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-px") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-px;
  //             }
  
  //             @include expect {
  //               row-gap: 1px;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("0\.5") {
  //         @include it("gap-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-0\.5;
  //             }
  
  //             @include expect {
  //               gap: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-0\.5;
  //             }
  
  //             @include expect {
  //               column-gap: 0.125rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-0\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-0\.5;
  //             }
  
  //             @include expect {
  //               row-gap: 0.125rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("1") {
  //         @include it("gap-1") {
  //           @include assert {
  //             @include output {
  //               @include gap-1;
  //             }
  
  //             @include expect {
  //               gap: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-1") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-1;
  //             }
  
  //             @include expect {
  //               column-gap: 0.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-1") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-1;
  //             }
  
  //             @include expect {
  //               row-gap: 0.25rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("1\.5") {
  //         @include it("gap-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-1\.5;
  //             }
  
  //             @include expect {
  //               gap: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-1\.5;
  //             }
  
  //             @include expect {
  //               column-gap: 0.375rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-1\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-1\.5;
  //             }
  
  //             @include expect {
  //               row-gap: 0.375rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2") {
  //         @include it("gap-2") {
  //           @include assert {
  //             @include output {
  //               @include gap-2;
  //             }
  
  //             @include expect {
  //               gap: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-2") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-2;
  //             }
  
  //             @include expect {
  //               column-gap: 0.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-2") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-2;
  //             }
  
  //             @include expect {
  //               row-gap: 0.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2\.5") {
  //         @include it("gap-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-2\.5;
  //             }
  
  //             @include expect {
  //               gap: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-2\.5;
  //             }
  
  //             @include expect {
  //               column-gap: 0.625rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-2\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-2\.5;
  //             }
  
  //             @include expect {
  //               row-gap: 0.625rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("3") {
  //         @include it("gap-3") {
  //           @include assert {
  //             @include output {
  //               @include gap-3;
  //             }
  
  //             @include expect {
  //               gap: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-3") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-3;
  //             }
  
  //             @include expect {
  //               column-gap: 0.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-3") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-3;
  //             }
  
  //             @include expect {
  //               row-gap: 0.75rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("3\.5") {
  //         @include it("gap-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-3\.5;
  //             }
  
  //             @include expect {
  //               gap: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-3\.5;
  //             }
  
  //             @include expect {
  //               column-gap: 0.875rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-3\.5") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-3\.5;
  //             }
  
  //             @include expect {
  //               row-gap: 0.875rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("4") {
  //         @include it("gap-4") {
  //           @include assert {
  //             @include output {
  //               @include gap-4;
  //             }
  
  //             @include expect {
  //               gap: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-4") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-4;
  //             }
  
  //             @include expect {
  //               column-gap: 1rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-4") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-4;
  //             }
  
  //             @include expect {
  //               row-gap: 1rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("5") {
  //         @include it("gap-5") {
  //           @include assert {
  //             @include output {
  //               @include gap-5;
  //             }
  
  //             @include expect {
  //               gap: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-5") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-5;
  //             }
  
  //             @include expect {
  //               column-gap: 1.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-5") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-5;
  //             }
  
  //             @include expect {
  //               row-gap: 1.25rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("6") {
  //         @include it("gap-6") {
  //           @include assert {
  //             @include output {
  //               @include gap-6;
  //             }
  
  //             @include expect {
  //               gap: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-6") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-6;
  //             }
  
  //             @include expect {
  //               column-gap: 1.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-6") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-6;
  //             }
  
  //             @include expect {
  //               row-gap: 1.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("7") {
  //         @include it("gap-7") {
  //           @include assert {
  //             @include output {
  //               @include gap-7;
  //             }
  
  //             @include expect {
  //               gap: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-7") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-7;
  //             }
  
  //             @include expect {
  //               column-gap: 1.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-7") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-7;
  //             }
  
  //             @include expect {
  //               row-gap: 1.75rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("8") {
  //         @include it("gap-8") {
  //           @include assert {
  //             @include output {
  //               @include gap-8;
  //             }
  
  //             @include expect {
  //               gap: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-8") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-8;
  //             }
  
  //             @include expect {
  //               column-gap: 2rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-8") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-8;
  //             }
  
  //             @include expect {
  //               row-gap: 2rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("9") {
  //         @include it("gap-9") {
  //           @include assert {
  //             @include output {
  //               @include gap-9;
  //             }
  
  //             @include expect {
  //               gap: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-9") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-9;
  //             }
  
  //             @include expect {
  //               column-gap: 2.25rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-9") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-9;
  //             }
  
  //             @include expect {
  //               row-gap: 2.25rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("10") {
  //         @include it("gap-10") {
  //           @include assert {
  //             @include output {
  //               @include gap-10;
  //             }
  
  //             @include expect {
  //               gap: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-10") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-10;
  //             }
  
  //             @include expect {
  //               column-gap: 2.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-10") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-10;
  //             }
  
  //             @include expect {
  //               row-gap: 2.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("11") {
  //         @include it("gap-11") {
  //           @include assert {
  //             @include output {
  //               @include gap-11;
  //             }
  
  //             @include expect {
  //               gap: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-11") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-11;
  //             }
  
  //             @include expect {
  //               column-gap: 2.75rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-11") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-11;
  //             }
  
  //             @include expect {
  //               row-gap: 2.75rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("12") {
  //         @include it("gap-12") {
  //           @include assert {
  //             @include output {
  //               @include gap-12;
  //             }
  
  //             @include expect {
  //               gap: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-12") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-12;
  //             }
  
  //             @include expect {
  //               column-gap: 3rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-12") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-12;
  //             }
  
  //             @include expect {
  //               row-gap: 3rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("14") {
  //         @include it("gap-14") {
  //           @include assert {
  //             @include output {
  //               @include gap-14;
  //             }
  
  //             @include expect {
  //               gap: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-14") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-14;
  //             }
  
  //             @include expect {
  //               column-gap: 3.5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-14") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-14;
  //             }
  
  //             @include expect {
  //               row-gap: 3.5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("16") {
  //         @include it("gap-16") {
  //           @include assert {
  //             @include output {
  //               @include gap-16;
  //             }
  
  //             @include expect {
  //               gap: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-16") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-16;
  //             }
  
  //             @include expect {
  //               column-gap: 4rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-16") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-16;
  //             }
  
  //             @include expect {
  //               row-gap: 4rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("20") {
  //         @include it("gap-20") {
  //           @include assert {
  //             @include output {
  //               @include gap-20;
  //             }
  
  //             @include expect {
  //               gap: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-20") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-20;
  //             }
  
  //             @include expect {
  //               column-gap: 5rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-20") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-20;
  //             }
  
  //             @include expect {
  //               row-gap: 5rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("24") {
  //         @include it("gap-24") {
  //           @include assert {
  //             @include output {
  //               @include gap-24;
  //             }
  
  //             @include expect {
  //               gap: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-24") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-24;
  //             }
  
  //             @include expect {
  //               column-gap: 6rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-24") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-24;
  //             }
  
  //             @include expect {
  //               row-gap: 6rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("28") {
  //         @include it("gap-28") {
  //           @include assert {
  //             @include output {
  //               @include gap-28;
  //             }
  
  //             @include expect {
  //               gap: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-28") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-28;
  //             }
  
  //             @include expect {
  //               column-gap: 7rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-28") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-28;
  //             }
  
  //             @include expect {
  //               row-gap: 7rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("32") {
  //         @include it("gap-32") {
  //           @include assert {
  //             @include output {
  //               @include gap-32;
  //             }
  
  //             @include expect {
  //               gap: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-32") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-32;
  //             }
  
  //             @include expect {
  //               column-gap: 8rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-32") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-32;
  //             }
  
  //             @include expect {
  //               row-gap: 8rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("36") {
  //         @include it("gap-36") {
  //           @include assert {
  //             @include output {
  //               @include gap-36;
  //             }
  
  //             @include expect {
  //               gap: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-36") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-36;
  //             }
  
  //             @include expect {
  //               column-gap: 9rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-36") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-36;
  //             }
  
  //             @include expect {
  //               row-gap: 9rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("40") {
  //         @include it("gap-40") {
  //           @include assert {
  //             @include output {
  //               @include gap-40;
  //             }
  
  //             @include expect {
  //               gap: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-40") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-40;
  //             }
  
  //             @include expect {
  //               column-gap: 10rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-40") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-40;
  //             }
  
  //             @include expect {
  //               row-gap: 10rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("44") {
  //         @include it("gap-44") {
  //           @include assert {
  //             @include output {
  //               @include gap-44;
  //             }
  
  //             @include expect {
  //               gap: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-44") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-44;
  //             }
  
  //             @include expect {
  //               column-gap: 11rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-44") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-44;
  //             }
  
  //             @include expect {
  //               row-gap: 11rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("48") {
  //         @include it("gap-48") {
  //           @include assert {
  //             @include output {
  //               @include gap-48;
  //             }
  
  //             @include expect {
  //               gap: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-48") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-48;
  //             }
  
  //             @include expect {
  //               column-gap: 12rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-48") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-48;
  //             }
  
  //             @include expect {
  //               row-gap: 12rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("52") {
  //         @include it("gap-52") {
  //           @include assert {
  //             @include output {
  //               @include gap-52;
  //             }
  
  //             @include expect {
  //               gap: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-52") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-52;
  //             }
  
  //             @include expect {
  //               column-gap: 13rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-52") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-52;
  //             }
  
  //             @include expect {
  //               row-gap: 13rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("56") {
  //         @include it("gap-56") {
  //           @include assert {
  //             @include output {
  //               @include gap-56;
  //             }
  
  //             @include expect {
  //               gap: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-56") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-56;
  //             }
  
  //             @include expect {
  //               column-gap: 14rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-56") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-56;
  //             }
  
  //             @include expect {
  //               row-gap: 14rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("60") {
  //         @include it("gap-60") {
  //           @include assert {
  //             @include output {
  //               @include gap-60;
  //             }
  
  //             @include expect {
  //               gap: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-60") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-60;
  //             }
  
  //             @include expect {
  //               column-gap: 15rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-60") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-60;
  //             }
  
  //             @include expect {
  //               row-gap: 15rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("64") {
  //         @include it("gap-64") {
  //           @include assert {
  //             @include output {
  //               @include gap-64;
  //             }
  
  //             @include expect {
  //               gap: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-64") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-64;
  //             }
  
  //             @include expect {
  //               column-gap: 16rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-64") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-64;
  //             }
  
  //             @include expect {
  //               row-gap: 16rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("72") {
  //         @include it("gap-72") {
  //           @include assert {
  //             @include output {
  //               @include gap-72;
  //             }
  
  //             @include expect {
  //               gap: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-72") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-72;
  //             }
  
  //             @include expect {
  //               column-gap: 18rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-72") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-72;
  //             }
  
  //             @include expect {
  //               row-gap: 18rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("80") {
  //         @include it("gap-80") {
  //           @include assert {
  //             @include output {
  //               @include gap-80;
  //             }
  
  //             @include expect {
  //               gap: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-80") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-80;
  //             }
  
  //             @include expect {
  //               column-gap: 20rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-80") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-80;
  //             }
  
  //             @include expect {
  //               row-gap: 20rem;
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("96") {
  //         @include it("gap-96") {
  //           @include assert {
  //             @include output {
  //               @include gap-96;
  //             }
  
  //             @include expect {
  //               gap: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-x-96") {
  //           @include assert {
  //             @include output {
  //               @include gap-x-96;
  //             }
  
  //             @include expect {
  //               column-gap: 24rem;
  //             }
  //           }
  //         }
  
  //         @include it("gap-y-96") {
  //           @include assert {
  //             @include output {
  //               @include gap-y-96;
  //             }
  
  //             @include expect {
  //               row-gap: 24rem;
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("gap-(2.75rem)") {
  //           @include assert {
  //             @include output {
  //               @include sm\:gap-(2.75rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 gap: 2.75rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("gap-(2.75rem)") {
  //           @include assert {
  //             @include output {
  //               @include md\:gap-(2.75rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 gap: 2.75rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("gap-(2.75rem)") {
  //           @include assert {
  //             @include output {
  //               @include lg\:gap-(2.75rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 gap: 2.75rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("gap-(2.75rem)") {
  //           @include assert {
  //             @include output {
  //               @include xl\:gap-(2.75rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 gap: 2.75rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("gap-(2.75rem)") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:gap-(2.75rem);
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 gap: 2.75rem;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("Custom") {
  //       @include it("gap-(2.75rem)") {
  //         @include assert {
  //           @include output {
  //             @include gap-(2.75rem);
  //           }
  
  //           @include expect {
  //             gap: 2.75rem;
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Justify Content") {
  //     @include describe("Basic") {
  //       @include it("justify-normal") {
  //         @include assert {
  //           @include output {
  //             @include justify-normal;
  //           }
  
  //           @include expect {
  //             justify-content: normal;
  //           }
  //         }
  //       }
  
  //       @include it("justify-start") {
  //         @include assert {
  //           @include output {
  //             @include justify-start;
  //           }
  
  //           @include expect {
  //             justify-content: flex-start;
  //           }
  //         }
  //       }
  
  //       @include it("justify-end") {
  //         @include assert {
  //           @include output {
  //             @include justify-end;
  //           }
  
  //           @include expect {
  //             justify-content: flex-end;
  //           }
  //         }
  //       }
  
  //       @include it("justify-center") {
  //         @include assert {
  //           @include output {
  //             @include justify-center;
  //           }
  
  //           @include expect {
  //             justify-content: center;
  //           }
  //         }
  //       }
  
  //       @include it("justify-between") {
  //         @include assert {
  //           @include output {
  //             @include justify-between;
  //           }
  
  //           @include expect {
  //             justify-content: space-between;
  //           }
  //         }
  //       }
  
  //       @include it("justify-around") {
  //         @include assert {
  //           @include output {
  //             @include justify-around;
  //           }
  
  //           @include expect {
  //             justify-content: space-around;
  //           }
  //         }
  //       }
  
  //       @include it("justify-evenly") {
  //         @include assert {
  //           @include output {
  //             @include justify-evenly;
  //           }
  
  //           @include expect {
  //             justify-content: space-evenly;
  //           }
  //         }
  //       }
  
  //       @include it("justify-stretch") {
  //         @include assert {
  //           @include output {
  //             @include justify-stretch;
  //           }
  
  //           @include expect {
  //             justify-content: stretch;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("justify-normal") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-normal;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-between") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-between;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-around") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-around;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-evenly") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-evenly;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("justify-normal") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-normal;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-between") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-between;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-around") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-around;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-evenly") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-evenly;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-stretch") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("justify-normal") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-normal;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-between") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-between;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-around") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-around;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-evenly") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-evenly;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("justify-normal") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-normal;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-between") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-between;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-around") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-around;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-evenly") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-evenly;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("justify-normal") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-normal;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-between") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-between;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-around") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-around;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-evenly") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-evenly;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Justify Items") {
  //     @include describe("Basic") {
  //       @include it("justify-items-start") {
  //         @include assert {
  //           @include output {
  //             @include justify-items-start;
  //           }
  
  //           @include expect {
  //             justify-items: start;
  //           }
  //         }
  //       }
  
  //       @include it("justify-items-end") {
  //         @include assert {
  //           @include output {
  //             @include justify-items-end;
  //           }
  
  //           @include expect {
  //             justify-items: end;
  //           }
  //         }
  //       }
  
  //       @include it("justify-items-center") {
  //         @include assert {
  //           @include output {
  //             @include justify-items-center;
  //           }
  
  //           @include expect {
  //             justify-items: center;
  //           }
  //         }
  //       }
  
  //       @include it("justify-items-stretch") {
  //         @include assert {
  //           @include output {
  //             @include justify-items-stretch;
  //           }
  
  //           @include expect {
  //             justify-items: stretch;
  //           }
  //         }
  //       }
  //     }
  
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("justify-items-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-items-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-items-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-items-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-items-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("justify-items-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-items-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-items-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-items-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-items-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("justify-items-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-items-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-items-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-items-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-items-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("justify-items-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-items-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-items-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-items-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-items-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("justify-items-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-items-start;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-items-end;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-items-center;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-items-stretch;
  //             }
  
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Justify Self") {
  //     @include describe("Basic") {
  //       @include it("justify-self-auto") {
  //         @include assert {
  //           @include output {
  //             @include justify-self-auto;
  //           }
    
  //           @include expect {
  //             justify-self: auto;
  //           }
  //         }
  //       }
  
  //       @include it("justify-self-start") {
  //         @include assert {
  //           @include output {
  //             @include justify-self-start;
  //           }
    
  //           @include expect {
  //             justify-self: start;
  //           }
  //         }
  //       }
  
  //       @include it("justify-self-end") {
  //         @include assert {
  //           @include output {
  //             @include justify-self-end;
  //           }
    
  //           @include expect {
  //             justify-self: end;
  //           }
  //         }
  //       }
  
  //       @include it("justify-self-center") {
  //         @include assert {
  //           @include output {
  //             @include justify-self-center;
  //           }
    
  //           @include expect {
  //             justify-self: center;
  //           }
  //         }
  //       }
  
  //       @include it("justify-self-stretch") {
  //         @include assert {
  //           @include output {
  //             @include justify-self-stretch;
  //           }
    
  //           @include expect {
  //             justify-self: stretch;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("justify-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:justify-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 justify-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("justify-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include md\:justify-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 justify-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("justify-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:justify-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 justify-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("justify-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:justify-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 justify-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("justify-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("justify-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:justify-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 justify-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Align Content") {
  //     @include describe("Basic") {
  //       @include it("content-normal") {
  //         @include assert {
  //           @include output {
  //             @include content-normal;
  //           }
    
  //           @include expect {
  //             align-content: normal;
  //           }
  //         }
  //       }
  
  //       @include it("content-center") {
  //         @include assert {
  //           @include output {
  //             @include content-center;
  //           }
    
  //           @include expect {
  //             align-content: center;
  //           }
  //         }
  //       }
  
  //       @include it("content-start") {
  //         @include assert {
  //           @include output {
  //             @include content-start;
  //           }
    
  //           @include expect {
  //             align-content: flex-start;
  //           }
  //         }
  //       }
  
  //       @include it("content-end") {
  //         @include assert {
  //           @include output {
  //             @include content-end;
  //           }
    
  //           @include expect {
  //             align-content: flex-end;
  //           }
  //         }
  //       }
  
  //       @include it("content-between") {
  //         @include assert {
  //           @include output {
  //             @include content-between;
  //           }
    
  //           @include expect {
  //             align-content: space-between;
  //           }
  //         }
  //       }
  
  //       @include it("content-around") {
  //         @include assert {
  //           @include output {
  //             @include content-around;
  //           }
    
  //           @include expect {
  //             align-content: space-around;
  //           }
  //         }
  //       }
  
  //       @include it("content-evenly") {
  //         @include assert {
  //           @include output {
  //             @include content-evenly;
  //           }
    
  //           @include expect {
  //             align-content: space-evenly;
  //           }
  //         }
  //       }
  
  //       @include it("content-baseline") {
  //         @include assert {
  //           @include output {
  //             @include content-baseline;
  //           }
    
  //           @include expect {
  //             align-content: baseline;
  //           }
  //         }
  //       }
  
  //       @include it("content-stretch") {
  //         @include assert {
  //           @include output {
  //             @include content-stretch;
  //           }
    
  //           @include expect {
  //             align-content: stretch;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("content-normal") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-normal;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-between") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-between;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-around") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-around;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-evenly") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-evenly;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("content-normal") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-normal;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-between") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-between;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-around") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-around;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-evenly") {
  //           @include assert {
  //             @include output {
  //               @include md\:content-evenly;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("content-normal") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-normal;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-between") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-between;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-around") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-around;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-evenly") {
  //           @include assert {
  //             @include output {
  //               @include lg\:content-evenly;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:content-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("content-normal") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-normal;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-between") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-between;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-around") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-around;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-evenly") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-evenly;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-baseline") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:content-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("content-normal") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-normal;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: normal;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-between") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-between;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-around") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-around;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-evenly") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-evenly;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-baseline") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("content-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:content-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  
  //   @include describe("Align Items") {
  //     @include describe("Basic") {
  //       @include it("items-start") {
  //         @include assert {
  //           @include output {
  //             @include items-start;
  //           }
    
  //           @include expect {
  //             align-items: flex-start;
  //           }
  //         }
  //       }
  
  //       @include it("items-end") {
  //         @include assert {
  //           @include output {
  //             @include items-end;
  //           }
    
  //           @include expect {
  //             align-items: flex-end;
  //           }
  //         }
  //       }
  
  //       @include it("items-center") {
  //         @include assert {
  //           @include output {
  //             @include items-center;
  //           }
    
  //           @include expect {
  //             align-items: center;
  //           }
  //         }
  //       }
  
  //       @include it("items-baseline") {
  //         @include assert {
  //           @include output {
  //             @include items-baseline;
  //           }
    
  //           @include expect {
  //             align-items: baseline;
  //           }
  //         }
  //       }
  
  //       @include it("items-stretch") {
  //         @include assert {
  //           @include output {
  //             @include items-stretch;
  //           }
    
  //           @include expect {
  //             align-items: stretch;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("items-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-items: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-items: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("items-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-items: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-items: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include md\:items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("items-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-items: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-items: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include lg\:items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("items-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-items: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-items: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include xl\:items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("items-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-items: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-items: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
    
  //   @include describe("Align Self") {
  //     @include describe("Basic") {
  //       @include it("self-auto") {
  //         @include assert {
  //           @include output {
  //             @include self-auto;
  //           }
    
  //           @include expect {
  //             align-self: auto;
  //           }
  //         }
  //       }
  
  //       @include it("self-start") {
  //         @include assert {
  //           @include output {
  //             @include self-start;
  //           }
    
  //           @include expect {
  //             align-self: flex-start;
  //           }
  //         }
  //       }
  
  //       @include it("self-end") {
  //         @include assert {
  //           @include output {
  //             @include self-end;
  //           }
    
  //           @include expect {
  //             align-self: flex-end;
  //           }
  //         }
  //       }
  
  //       @include it("self-center") {
  //         @include assert {
  //           @include output {
  //             @include self-center;
  //           }
    
  //           @include expect {
  //             align-self: center;
  //           }
  //         }
  //       }
  
  //       @include it("self-stretch") {
  //         @include assert {
  //           @include output {
  //             @include self-stretch;
  //           }
    
  //           @include expect {
  //             align-self: stretch;
  //           }
  //         }
  //       }
  
  //       @include it("self-baseline") {
  //         @include assert {
  //           @include output {
  //             @include self-baseline;
  //           }
    
  //           @include expect {
  //             align-self: baseline;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("self-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-self: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-self: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-self: stretch;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:self-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 align-self: baseline;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("self-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-self: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-self: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include md\:self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-self: stretch;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-baseline") {
  //           @include assert {
  //             @include output {
  //               @include md\:self-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 align-self: baseline;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("self-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-self: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-self: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-self: stretch;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-baseline") {
  //           @include assert {
  //             @include output {
  //               @include lg\:self-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 align-self: baseline;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("self-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-self: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-self: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-self: stretch;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-baseline") {
  //           @include assert {
  //             @include output {
  //               @include xl\:self-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 align-self: baseline;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("self-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-self: flex-start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-self: flex-end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-self: stretch;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("self-baseline") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:self-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 align-self: baseline;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
    
  //   @include describe("Place Content") {
  //     @include describe("Basic") {
  //       @include it("place-content-center") {
  //         @include assert {
  //           @include output {
  //             @include place-content-center;
  //           }
    
  //           @include expect {
  //             place-content: center;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-start") {
  //         @include assert {
  //           @include output {
  //             @include place-content-start;
  //           }
    
  //           @include expect {
  //             place-content: start;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-end") {
  //         @include assert {
  //           @include output {
  //             @include place-content-end;
  //           }
    
  //           @include expect {
  //             place-content: end;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-between") {
  //         @include assert {
  //           @include output {
  //             @include place-content-between;
  //           }
    
  //           @include expect {
  //             place-content: space-between;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-around") {
  //         @include assert {
  //           @include output {
  //             @include place-content-around;
  //           }
    
  //           @include expect {
  //             place-content: space-around;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-evenly") {
  //         @include assert {
  //           @include output {
  //             @include place-content-evenly;
  //           }
    
  //           @include expect {
  //             place-content: space-evenly;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-baseline") {
  //         @include assert {
  //           @include output {
  //             @include place-content-baseline;
  //           }
    
  //           @include expect {
  //             place-content: baseline;
  //           }
  //         }
  //       }
  
  //       @include it("place-content-stretch") {
  //         @include assert {
  //           @include output {
  //             @include place-content-stretch;
  //           }
    
  //           @include expect {
  //             place-content: stretch;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("place-content-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-between") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-between;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: space-between;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-around") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-around;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: space-around;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-evenly") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-evenly;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: space-evenly;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-content-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-content-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-content: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
    
  //   @include describe("Place Items") {
  //     @include describe("Basic") {
  //       @include it("place-items-start") {
  //         @include assert {
  //           @include output {
  //             @include place-items-start;
  //           }
    
  //           @include expect {
  //             place-items: start;
  //           }
  //         }
  //       }
  
  //       @include it("place-items-end") {
  //         @include assert {
  //           @include output {
  //             @include place-items-end;
  //           }
    
  //           @include expect {
  //             place-items: end;
  //           }
  //         }
  //       }
  
  //       @include it("place-items-center") {
  //         @include assert {
  //           @include output {
  //             @include place-items-center;
  //           }
    
  //           @include expect {
  //             place-items: center;
  //           }
  //         }
  //       }
  
  //       @include it("place-items-baseline") {
  //         @include assert {
  //           @include output {
  //             @include place-items-baseline;
  //           }
    
  //           @include expect {
  //             place-items: baseline;
  //           }
  //         }
  //       }
  
  //       @include it("place-items-stretch") {
  //         @include assert {
  //           @include output {
  //             @include place-items-stretch;
  //           }
    
  //           @include expect {
  //             place-items: stretch;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("place-items-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("place-items-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("place-items-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("place-items-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("place-items-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-items-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-items: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-items-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-items: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-items-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-items: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-baseline") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-items-baseline;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-items: baseline;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-items-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-items-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-items: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
    
  //   @include describe("Place Self") {
  //     @include describe("Basic") {
  //       @include it("place-self-auto") {
  //         @include assert {
  //           @include output {
  //             @include place-self-auto;
  //           }
    
  //           @include expect {
  //             place-self: auto;
  //           }
  //         }
  //       }
  
  //       @include it("place-self-start") {
  //         @include assert {
  //           @include output {
  //             @include place-self-start;
  //           }
    
  //           @include expect {
  //             place-self: start;
  //           }
  //         }
  //       }
  
  //       @include it("place-self-end") {
  //         @include assert {
  //           @include output {
  //             @include place-self-end;
  //           }
    
  //           @include expect {
  //             place-self: end;
  //           }
  //         }
  //       }
  
  //       @include it("place-self-center") {
  //         @include assert {
  //           @include output {
  //             @include place-self-center;
  //           }
    
  //           @include expect {
  //             place-self: center;
  //           }
  //         }
  //       }
  
  //       @include it("place-self-stretch") {
  //         @include assert {
  //           @include output {
  //             @include place-self-stretch;
  //           }
    
  //           @include expect {
  //             place-self: stretch;
  //           }
  //         }
  //       }
  //     }
    
  //     @include describe("RWD") {
  //       @include describe("SM") {
  //         @include it("place-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-start") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-end") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-center") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include sm\:place-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-SM) {
  //                 place-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("MD") {
  //         @include it("place-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-start") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-end") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-center") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include md\:place-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-MD) {
  //                 place-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("LG") {
  //         @include it("place-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-start") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-end") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-center") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include lg\:place-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-LG) {
  //                 place-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("XL") {
  //         @include it("place-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-start") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-end") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-center") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include xl\:place-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-XL) {
  //                 place-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  
  //       @include describe("2XL") {
  //         @include it("place-self-auto") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-self-auto;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-self: auto;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-start") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-self-start;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-self: start;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-end") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-self-end;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-self: end;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-center") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-self-center;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-self: center;
  //               }
  //             }
  //           }
  //         }
  
  //         @include it("place-self-stretch") {
  //           @include assert {
  //             @include output {
  //               @include \2xl\:place-self-stretch;
  //             }
    
  //             @include expect {
  //               @media (min-width: $__MEDIA-2XL) {
  //                 place-self: stretch;
  //               }
  //             }
  //           }
  //         }
  //       }
  //     }
  //   }
  // }

  
}
