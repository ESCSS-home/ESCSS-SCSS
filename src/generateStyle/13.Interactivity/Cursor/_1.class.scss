@use "../../setting" as *;

@if $Cursor {
  /* Cursor */
  @if $Basic {
    #mixin__cursor-auto {
      cursor: auto;
    }

    #mixin__cursor-default {
      cursor: default;
    }

    #mixin__cursor-pointer {
      cursor: pointer;
    }

    #mixin__cursor-wait {
      cursor: wait;
    }

    #mixin__cursor-text {
      cursor: text;
    }

    #mixin__cursor-move {
      cursor: move;
    }

    #mixin__cursor-help {
      cursor: help;
    }

    #mixin__cursor-not-allowed {
      cursor: not-allowed;
    }

    #mixin__cursor-none {
      cursor: none;
    }

    #mixin__cursor-context-menu {
      cursor: context-menu;
    }

    #mixin__cursor-progress {
      cursor: progress;
    }

    #mixin__cursor-cell {
      cursor: cell;
    }

    #mixin__cursor-crosshair {
      cursor: crosshair;
    }

    #mixin__cursor-vertical-text {
      cursor: vertical-text;
    }

    #mixin__cursor-alias {
      cursor: alias;
    }

    #mixin__cursor-copy {
      cursor: copy;
    }

    #mixin__cursor-no-drop {
      cursor: no-drop;
    }

    #mixin__cursor-grab {
      cursor: grab;
    }

    #mixin__cursor-grabbing {
      cursor: grabbing;
    }

    #mixin__cursor-all-scroll {
      cursor: all-scroll;
    }

    #mixin__cursor-col-resize {
      cursor: col-resize;
    }

    #mixin__cursor-row-resize {
      cursor: row-resize;
    }

    #mixin__cursor-n-resize {
      cursor: n-resize;
    }

    #mixin__cursor-e-resize {
      cursor: e-resize;
    }

    #mixin__cursor-s-resize {
      cursor: s-resize;
    }

    #mixin__cursor-w-resize {
      cursor: w-resize;
    }

    #mixin__cursor-ne-resize {
      cursor: ne-resize;
    }

    #mixin__cursor-nw-resize {
      cursor: nw-resize;
    }

    #mixin__cursor-se-resize {
      cursor: se-resize;
    }

    #mixin__cursor-sw-resize {
      cursor: sw-resize;
    }

    #mixin__cursor-ew-resize {
      cursor: ew-resize;
    }

    #mixin__cursor-ns-resize {
      cursor: ns-resize;
    }

    #mixin__cursor-nesw-resize {
      cursor: nesw-resize;
    }

    #mixin__cursor-nwse-resize {
      cursor: nwse-resize;
    }

    #mixin__cursor-zoom-in {
      cursor: zoom-in;
    }

    #mixin__cursor-zoom-out {
      cursor: zoom-out;
    }
  }

  @if $Rwd {
    // reducing size for updating speed
    @if $isLite {
      #mixin__sm\:cursor-v-v2-null {
        @media (min-width: $breakpoint-sm) {
          cursor: v, v2;
        }
      }

      #mixin__md\:cursor-v-v2-null {
        @media (min-width: $breakpoint-md) {
          cursor: v, v2;
        }
      }

      #mixin__lg\:cursor-v-v2-null {
        @media (min-width: $breakpoint-lg) {
          cursor: v, v2;
        }
      }

      #mixin__xl\:cursor-v-v2-null {
        @media (min-width: $breakpoint-xl) {
          cursor: v, v2;
        }
      }

      #mixin__\\2xl\:cursor-v-v2-null {
        @media (min-width: $breakpoint-2xl) {
          cursor: v, v2;
        }
      }
    }

    // tailwind default
    @else {
    }
  }

  @if $Custom {
    #mixin__cursor-v-v2-null {
      cursor: v, v2;
    }
  }
}
