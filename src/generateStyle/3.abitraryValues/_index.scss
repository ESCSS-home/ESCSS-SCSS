// Tailwind css v3.4.1 All Arbitrary values

// Layout
// Aspect Ratio
@mixin aspect-($value) {
  aspect-ratio: $value;
}

// Columns
@mixin columns-($value) {
  columns: $value;
}

// Object Position
@mixin object-($value) {
  object-position: $value;
}

// Top / Right / Bottom / Left
@mixin inset-($value) {
  inset: $value;
}

@mixin inset-x-($value) {
  left: $value;
  right: $value;
}

@mixin inset-y-($value) {
  top: $value;
  bottom: $value;
}

@mixin start-($value) {
  inset-inline-start: $value;
}

@mixin end-($value) {
  inset-inline-end: $value;
}

@mixin top-($value) {
  top: $value;
}

@mixin top-($value) {
  top: $value;
}

@mixin right-($value) {
  right: $value;
}

@mixin bottom-($value) {
  bottom: $value;
}

@mixin left-($value) {
  left: $value;
}

@mixin -inset-($value) {
  inset: -($value);
}

@mixin -inset-x-($value) {
  left: -($value);
  right: -($value);
}

@mixin -inset-y-($value) {
  top: -($value);
  bottom: -($value);
}

@mixin -start-($value) {
  inset-inline-start: -($value);
}

@mixin -end-($value) {
  inset-inline-end: -($value);
}

@mixin -top-($value) {
  top: -($value);
}

@mixin -top-($value) {
  top: -($value);
}

@mixin -right-($value) {
  right: -($value);
}

@mixin -bottom-($value) {
  bottom: -($value);
}

@mixin -left-($value) {
  left: -($value);
}

// Z-Index
@mixin z-($value) {
  z-index: $value;
}

@mixin -z-($value) {
  z-index: -($value);
}

// Flexbox & Grid
// Flex Basis
@mixin basis-($value) {
  flex-basis: $value;
}

// Flex
@mixin flex-($value) {
  flex: $value;
}

// Flex Grow
@mixin grow-($value) {
  flex-grow: $value;
}

// Flex Shrink
@mixin shrink-($value) {
  flex-shrink: $value;
}

// Order
@mixin order-($value) {
  order: $value;
}

@mixin -order-($value) {
  order: -($value);
}

// Grid Template Columns
@mixin grid-cols-($value) {
  grid-template-columns: $value;
}

// Grid Column Start / End
@mixin col-($value) {
  grid-column: $value;
}

@mixin col-start-($value) {
  grid-column-start: $value;
}

@mixin col-end-($value) {
  grid-column-end: $value;
}

// Grid Template Rows
@mixin grid-rows-($value) {
  grid-template-rows: $value;
}

// Grid Row Start / End
@mixin row-($value) {
  grid-row: $value;
}

@mixin row-start-($value) {
  grid-rows-start: $value;
}

@mixin row-end-($value) {
  grid-rows-end: $value;
}

// Grid Auto Columns
@mixin auto-cols-($value) {
  grid-auto-columns: $value;
}

// Grid Auto Rows
@mixin auto-rows-($value) {
  grid-auto-rows: $value;
}

// Gap
@mixin gap-($value) {
  gap: $value;
}

@mixin gap-x-($value) {
  column-gap: $value;
}

@mixin gap-y-($value) {
  row-gap: $value;
}

// Spacing
// Padding
@mixin p-($value) {
  padding: $value;
}

@mixin px-($value) {
  padding-left: $value;
  padding-right: $value;
}

@mixin py-($value) {
  padding-top: $value;
  padding-bottom: $value;
}

@mixin ps-($value) {
  padding-inline-start: $value;
}

@mixin pe-($value) {
  padding-inline-end: $value;
}

@mixin pt-($value) {
  padding-top: $value;
}

@mixin pr-($value) {
  padding-right: $value;
}

@mixin pb-($value) {
  padding-bottom: $value;
}

@mixin pl-($value) {
  padding-left: $value;
}

// Margin
@mixin m-($value) {
  margin: $value;
}

@mixin mx-($value) {
  margin-left: $value;
  margin-right: $value;
}

@mixin my-($value) {
  margin-top: $value;
  margin-bottom: $value;
}

@mixin ms-($value) {
  margin-inline-start: $value;
}

@mixin me-($value) {
  margin-inline-end: $value;
}

@mixin mt-($value) {
  margin-top: $value;
}

@mixin mr-($value) {
  margin-right: $value;
}

@mixin mb-($value) {
  margin-bottom: $value;
}

@mixin ml-($value) {
  margin-left: $value;
}

@mixin -m-($value) {
  margin: -($value);
}

@mixin -mx-($value) {
  margin-left: -($value);
  margin-right: -($value);
}

@mixin -my-($value) {
  margin-top: -($value);
  margin-bottom: -($value);
}

@mixin -ms-($value) {
  margin-inline-start: -($value);
}

@mixin -me-($value) {
  margin-inline-end: -($value);
}

@mixin -mt-($value) {
  margin-top: -($value);
}

@mixin -mr-($value) {
  margin-right: -($value);
}

@mixin -mb-($value) {
  margin-bottom: -($value);
}

@mixin -ml-($value) {
  margin-left: -($value);
}

// Space Between
@mixin space-x-($value) {
  > * + * {
    margin-left: $value;
  }
}

@mixin space-y-($value) {
  > * + * {
    margin-top: $value;
  }
}

@mixin -space-x-($value) {
  > * + * {
    margin-left: -($value);
  }
}

@mixin -space-y-($value) {
  > * + * {
    margin-top: -($value);
  }
}

// Sizing
// Width
@mixin w-($value) {
  width: $value;
}

// Min-Width
@mixin min-w-($value) {
  min-width: $value;
}

// Max-Width
@mixin max-w-($value) {
  max-width: $value;
}

// Height
@mixin h-($value) {
  height: $value;
}

// Min-Height
@mixin min-h-($value) {
  min-height: $value;
}

// Max-Height
@mixin max-h-($value) {
  max-height: $value;
}

// Size
@mixin size-($value) {
  width: $value;
  height: $value;
}

// Typography
// Font Family
// changed(name-conflict): font (tailwind arbitrary values)  --> font-family
@mixin font-family-($value) {
  font-family: $value;
}

// Font Size
@mixin text-($value) {
  font-size: $value;
}

// Font Weight
// changed(name-conflict): font (tailwind arbitrary values)  -->  font-weight
@mixin font-weight-($value) {
  font-weight: $value;
}

// Letter Spacing
@mixin tracking-($value) {
  letter-spacing: $value;
}

@mixin -tracking-($value) {
  letter-spacing: -($value);
}

// Line Clamp
@mixin line-clamp-($value) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $value;
}

// Line Height
@mixin leading-($value) {
  line-height: $value;
}

// List Style Image
@mixin list-image-($value) {
  list-style-image: $value;
}

// List Style Type
@mixin list-($value) {
  list-style-type: $value;
}

// Text Color
// changed(name-conflict): text (tailwind arbitrary values)  -->  text-color
@mixin text-color-($value) {
  color: $value;
}

// Text Decoration Color
// changed(name-conflict): decoration (tailwind arbitrary values)  -->  decoration-color
@mixin decoration-color-($value) {
  text-decoration-color: $value;
}

// Text Decoration Thickness
@mixin decoration-($value) {
  text-decoration-thickness: $value;
}

// Text Underline Offset
@mixin underline-offset-($value) {
  text-underline-offset: $value;
}

// Text Indent
@mixin indent-($value) {
  text-indent: $value;
}

@mixin -indent-($value) {
  text-indent: -($value);
}

// Vertical Align
@mixin align-($value) {
  vertical-align: $value;
}

// Content
@mixin content-($value) {
  content: $value;
}

// Backgrounds
// Background Color
// changed(name-conflict): bg (tailwind arbitrary values)  -->  bg-color
@mixin bg-color-($value) {
  background-color: $value;
}

// Background Position
// changed(name-conflict): bg (tailwind arbitrary values)  -->  bg-position
@mixin bg-position-($value) {
  background-position: $value;
}

// Background Size
// changed(name-conflict): bg (tailwind arbitrary values)  -->  bg-size
@mixin bg-size-($value) {
  background-size: $value;
}

// Background Image
// changed(name-conflict): bg (tailwind arbitrary values)  -->  bg-image
@mixin bg-image-($value) {
  background-image: $value;
}

// Gradient Color Stops
// changed(name-conflict): from (tailwind arbitrary values)  -->  from-color
@mixin from-color-($value) {
  --tw-gradient-from: #{$value} var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(#{get_HexToRgb($value)} / 0)
    var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

// changed(name-conflict): via (tailwind arbitrary values)  -->  via-color
@mixin via-color-($value) {
  --tw-gradient-to: rgb(#{get_HexToRgb($value)} / 0)
    var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from),
    #{$value} var(--tw-gradient-via-position), var(--tw-gradient-to);
}

// changed(name-conflict): to (tailwind arbitrary values)  -->  to-color
@mixin to-color-($value) {
  --tw-gradient-to: #{$value} var(--tw-gradient-to-position);
}

@mixin from-($value) {
  --tw-gradient-from-position: #{$value};
}

@mixin via-($value) {
  --tw-gradient-via-position: #{$value};
}

@mixin to-($value) {
  --tw-gradient-to-position: #{$value};
}

// Borders
// Border Radius
@mixin rounded-($value) {
  border-radius: $value;
}

@mixin rounded-s-($value) {
  border-start-start-radius: $value;
  border-end-start-radius: $value;
}

@mixin rounded-e-($value) {
  border-start-end-radius: $value;
  border-end-end-radius: $value;
}

@mixin rounded-t-($value) {
  border-top-left-radius: $value;
  border-top-right-radius: $value;
}

@mixin rounded-r-($value) {
  border-top-right-radius: $value;
  border-bottom-right-radius: $value;
}

@mixin rounded-b-($value) {
  border-bottom-right-radius: $value;
  border-bottom-left-radius: $value;
}

@mixin rounded-l-($value) {
  border-top-left-radius: $value;
  border-bottom-left-radius: $value;
}

@mixin rounded-ss-($value) {
  border-start-start-radius: $value;
}

@mixin rounded-se-($value) {
  border-start-end-radius: $value;
}

@mixin rounded-ee-($value) {
  border-end-end-radius: $value;
}

@mixin rounded-es-($value) {
  border-end-start-radius: $value;
}

@mixin rounded-tl-($value) {
  border-top-left-radius: $value;
}

@mixin rounded-tr-($value) {
  border-top-right-radius: $value;
}

@mixin rounded-br-($value) {
  border-bottom-right-radius: $value;
}

@mixin rounded-bl-($value) {
  border-bottom-left-radius: $value;
}

// Border Width
@mixin border-($value) {
  border-width: $value;
}

@mixin border-x-($value) {
  border-left-width: $value;
  border-right-width: $value;
}

@mixin border-y-($value) {
  border-top-width: $value;
  border-bottom-width: $value;
}

@mixin border-s-($value) {
  border-inline-start-width: $value;
}

@mixin border-e-($value) {
  border-inline-end-width: $value;
}

@mixin border-t-($value) {
  border-top-width: $value;
}

@mixin border-r-($value) {
  border-right-width: $value;
}

@mixin border-b-($value) {
  border-bottom-width: $value;
}

@mixin border-l-($value) {
  border-left-width: $value;
}

// Border Color
// changed(name-conflict): border (tailwind arbitrary values)  -->  border-color
@mixin border-color-($value) {
  border-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-x-color
@mixin border-x-color-($value) {
  border-left-color: $value;
  border-right-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-y-color
@mixin border-y-color-($value) {
  border-top-color: $value;
  border-bottom-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-s-color
@mixin border-s-color-($value) {
  border-inline-start-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-e-color
@mixin border-e-color-($value) {
  border-inline-end-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-t-color
@mixin border-t-color-($value) {
  border-top-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-r-color
@mixin border-r-color-($value) {
  border-right-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-b-color

@mixin border-b-color-($value) {
  border-bottom-color: $value;
}

// changed(name-conflict): border (tailwind arbitrary values)  -->  border-l-color
@mixin border-l-color-($value) {
  border-left-color: $value;
}

// Divide Width
@mixin divide-x-($value) {
  > * + * {
    border-right-width: 0px;
    border-left-width: $value;
  }
}

@mixin divide-y-($value) {
  > * + * {
    border-top-width: $value;
    border-bottom-width: 0px;
  }
}

// Divide Color
// changed(name-conflict): divide (tailwind arbitrary values)  -->  divide-color
@mixin divide-color-($value) {
  > * + * {
    border-color: $value;
  }
}

// Outline Width
@mixin outline-($value) {
  outline-width: $value;
}

// Outline Color
// changed(name-conflict): outline (tailwind arbitrary values)  -->  outline-color
@mixin outline-color-($value) {
  outline-color: $value;
}

// Outline Offset
@mixin outline-offset-($value) {
  outline-offset: $value;
}

// Ring Width
@mixin ring-($value) {
  box-shadow: var(--tw-ring-inset) 0 0 0
    calc($value + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

// Ring Color
// changed(name-conflict): ring (tailwind arbitrary values)  -->  ring-color
@mixin ring-color-($value) {
  --tw-ring-color: #{$value};
}

// Ring Offset Width
@mixin ring-offset-($value) {
  --tw-ring-offset-width: #{$value};
}

// Ring Offset Color
// changed(name-conflict): ring-offset (tailwind arbitrary values)  -->  ring-offset-color
@mixin ring-offset-color-($value) {
  --tw-ring-offset-color: #{$value};
}

// Effects
// Box Shadow
@mixin shadow-($value) {
  box-shadow: $value;
}

// Box Shadow Color
// changed(name-conflict): shadow (tailwind arbitrary values)  -->  shadow-color
@mixin shadow-color-($value) {
  --tw-shadow-color: #{$value};
}

// Opacity
@mixin opacity-($value) {
  opacity: $value;
}

// Filters
// Blur
@mixin blur-($value) {
  filter: blur($value);
}

// Brightness
@mixin brightness-($value) {
  filter: brightness($value);
}

// Contrast
@mixin contrast-($value) {
  filter: contrast($value);
}

// Drop Shadow
@mixin drop-shadow-($value) {
  filter: drop-shadow($value);
}

// Grayscale
@mixin grayscale-($value) {
  filter: grayscale($value);
}

// Hue Rotate
@mixin hue-rotate-($value) {
  filter: hue-rotate($value);
}

@mixin -hue-rotate-($value) {
  filter: hue-rotate(-($value));
}

// Invert
@mixin invert-($value) {
  filter: invert($value);
}

// Saturate
@mixin saturate-($value) {
  filter: saturate($value);
}

// Sepia
@mixin sepia-($value) {
  filter: sepia($value);
}

// Backdrop Blur
@mixin backdrop-blur-($value) {
  backdrop-filter: blur($value);
}

// Backdrop Brightness
@mixin backdrop-brightness-($value) {
  backdrop-filter: brightness($value);
}

// Backdrop Contrast
@mixin backdrop-contrast-($value) {
  backdrop-filter: contrast($value);
}

// Backdrop Grayscale
@mixin backdrop-grayscale-($value) {
  backdrop-filter: grayscale($value);
}

// Backdrop Hue Rotate
@mixin backdrop-hue-rotate-($value) {
  backdrop-filter: hue-rotate($value);
}

// Backdrop Invert
@mixin backdrop-invert-($value) {
  backdrop-filter: invert($value);
}

// Backdrop Opacity
@mixin backdrop-opacity-($value) {
  backdrop-filter: opacity($value);
}

// Backdrop Saturate
@mixin backdrop-saturate-($value) {
  backdrop-filter: saturate($value);
}

// Backdrop Sepia
@mixin backdrop-sepia-($value) {
  backdrop-filter: sepia($value);
}

// Tables
@mixin border-spacing-($value) {
  border-spacing: $value;
}

@mixin border-spacing-x-($value) {
  border-spacing: $value 0;
}

@mixin border-spacing-y-($value) {
  border-spacing: 0 $value;
}

// Transitions & Animation
// Transition Property
@mixin transition-($value) {
  transition-property: $value;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

// Transition Duration
@mixin duration-($value) {
  transition-duration: $value;
}

// Transition Timing Function
@mixin ease-($value) {
  transition-timing-function: $value;
}

// Transition Delay
@mixin delay-($value) {
  transition-delay: $value;
}

// Animation
@mixin animate-($value) {
  animation: $value;
}

// Transforms
// Scale
@mixin scale-($value) {
  transform: scale($value);
}

@mixin scale-x-($value) {
  transform: scaleX($value);
}

@mixin scale-y-($value) {
  transform: scaleY($value);
}

@mixin -scale-($value) {
  transform: scale(-($value));
}

@mixin -scale-x-($value) {
  transform: scaleX(-($value));
}

@mixin -scale-y-($value) {
  transform: scaleY(-($value));
}

// Rotate
@mixin rotate-($value) {
  transform: rotate($value);
}

@mixin -rotate-($value) {
  transform: rotate(-$value);
}

// Translate
@mixin translate-($value) {
  transform: translate($value);
}

@mixin translate-x-($value) {
  transform: translateX($value);
}

@mixin translate-y-($value) {
  transform: translateY($value);
}

@mixin -translate-($value) {
  transform: translate(-($value));
}

@mixin -translate-x-($value) {
  transform: translateX(-($value));
}

@mixin -translate-y-($value) {
  transform: translateY(-($value));
}

// Skew
@mixin skew-($value) {
  transform: skew($value);
}

@mixin skew-x-($value) {
  transform: skewX($value);
}

@mixin skew-y-($value) {
  transform: skewY($value);
}

@mixin -skew-($value) {
  transform: skew(-($value));
}

@mixin -skew-x-($value) {
  transform: skewX(-($value));
}

@mixin -skew-y-($value) {
  transform: skewY(-($value));
}

// Transform Origin
@mixin origin-($value) {
  transform-origin: $value;
}

// Interactivity
// Accent Color
// changed(name-conflict): accent (tailwind arbitrary values)  -->  accent-color
@mixin accent-color-($value) {
  accent-color: $value;
}

// Cursor
@mixin cursor-($value, $value2: null) {
  cursor: $value, $value2;
}

// Caret Color
// changed(name-conflict): caret (tailwind arbitrary values)  -->  caret-color
@mixin caret-color-($value) {
  caret-color: $value;
}

// Scroll Margin
@mixin scroll-m-($value) {
  scroll-margin: $value;
}

@mixin scroll-mx-($value) {
  scroll-margin-left: $value;
  scroll-margin-right: $value;
}

@mixin scroll-my-($value) {
  scroll-margin-top: $value;
  scroll-margin-bottom: $value;
}

@mixin scroll-ms-($value) {
  scroll-margin-inline-start: $value;
}

@mixin scroll-me-($value) {
  scroll-margin-inline-end: $value;
}

@mixin scroll-mt-($value) {
  scroll-margin-top: $value;
}

@mixin scroll-mr-($value) {
  scroll-margin-right: $value;
}

@mixin scroll-mb-($value) {
  scroll-margin-bottom: $value;
}

@mixin scroll-ml-($value) {
  scroll-margin-left: $value;
}

@mixin -scroll-m-($value) {
  scroll-margin: -($value);
}

@mixin -scroll-mx-($value) {
  scroll-margin-left: -($value);
  scroll-margin-right: -($value);
}

@mixin -scroll-my-($value) {
  scroll-margin-top: -($value);
  scroll-margin-bottom: -($value);
}

@mixin -scroll-ms-($value) {
  scroll-margin-inline-start: -($value);
}

@mixin -scroll-me-($value) {
  scroll-margin-inline-end: -($value);
}

@mixin -scroll-mt-($value) {
  scroll-margin-top: -($value);
}

@mixin -scroll-mr-($value) {
  scroll-margin-right: -($value);
}

@mixin -scroll-mb-($value) {
  scroll-margin-bottom: -($value);
}

@mixin -scroll-ml-($value) {
  scroll-margin-left: -($value);
}

// Scroll Padding
@mixin scroll-p-($value) {
  scroll-padding: $value;
}

@mixin scroll-px-($value) {
  scroll-padding-left: $value;
  scroll-padding-right: $value;
}

@mixin scroll-py-($value) {
  scroll-padding-top: $value;
  scroll-padding-bottom: $value;
}

@mixin scroll-ps-($value) {
  scroll-padding-inline-start: $value;
}

@mixin scroll-pe-($value) {
  scroll-padding-inline-end: $value;
}

@mixin scroll-pt-($value) {
  scroll-padding-top: $value;
}

@mixin scroll-pr-($value) {
  scroll-padding-right: $value;
}

@mixin scroll-pb-($value) {
  scroll-padding-bottom: $value;
}

@mixin scroll-pl-($value) {
  scroll-padding-left: $value;
}

// Will Change
@mixin will-change-($value, $value2: null) {
  will-change: $value, $value2;
}

// SVG
// Fill
@mixin fill-($value) {
  fill: $value;
}

// Stroke
@mixin stroke-($value) {
  stroke: $value;
}

// Stroke Width
// changed(name-conflict): stroke (tailwind arbitrary values)  -->  stroke-width
@mixin stroke-width-($value) {
  stroke-width: $value;
}
