@use "../../mode0" as *;
@use "true" as *;

// private member(prefix - or _) can't be import, so I put here for testing

@mixin -space-x-0 {
  @include space-x-(-($\0));
}

@mixin -space-y-0 {
  @include space-y-(-($\0));
}

@mixin -space-x-px {
  @include space-x-(-($\px));
}

@mixin -space-y-px {
  @include space-y-(-($\px));
}

@mixin -space-x-0\.5 {
  @include space-x-(-($\0\.5));
}

@mixin -space-y-0\.5 {
  @include space-y-(-($\0\.5));
}

@mixin -space-x-1 {
  @include space-x-(-($\1));
}

@mixin -space-y-1 {
  @include space-y-(-($\1));
}

@mixin -space-x-1\.5 {
  @include space-x-(-($\1\.5));
}

@mixin -space-y-1\.5 {
  @include space-y-(-($\1\.5));
}

@mixin -space-x-2 {
  @include space-x-(-($\2));
}

@mixin -space-y-2 {
  @include space-y-(-($\2));
}

@mixin -space-x-2\.5 {
  @include space-x-(-($\2\.5));
}

@mixin -space-y-2\.5 {
  @include space-y-(-($\2\.5));
}

@mixin -space-x-3 {
  @include space-x-(-($\3));
}

@mixin -space-y-3 {
  @include space-y-(-($\3));
}

@mixin -space-x-3\.5 {
  @include space-x-(-($\3\.5));
}

@mixin -space-y-3\.5 {
  @include space-y-(-($\3\.5));
}

@mixin -space-x-4 {
  @include space-x-(-($\4));
}

@mixin -space-y-4 {
  @include space-y-(-($\4));
}

@mixin -space-x-5 {
  @include space-x-(-($\5));
}

@mixin -space-y-5 {
  @include space-y-(-($\5));
}

@mixin -space-x-6 {
  @include space-x-(-($\6));
}

@mixin -space-y-6 {
  @include space-y-(-($\6));
}

@mixin -space-x-7 {
  @include space-x-(-($\7));
}

@mixin -space-y-7 {
  @include space-y-(-($\7));
}

@mixin -space-x-8 {
  @include space-x-(-($\8));
}

@mixin -space-y-8 {
  @include space-y-(-($\8));
}

@mixin -space-x-9 {
  @include space-x-(-($\9));
}

@mixin -space-y-9 {
  @include space-y-(-($\9));
}

@mixin -space-x-10 {
  @include space-x-(-($\10));
}

@mixin -space-y-10 {
  @include space-y-(-($\10));
}

@mixin -space-x-11 {
  @include space-x-(-($\11));
}

@mixin -space-y-11 {
  @include space-y-(-($\11));
}

@mixin -space-x-12 {
  @include space-x-(-($\12));
}

@mixin -space-y-12 {
  @include space-y-(-($\12));
}

@mixin -space-x-14 {
  @include space-x-(-($\14));
}

@mixin -space-y-14 {
  @include space-y-(-($\14));
}

@mixin -space-x-16 {
  @include space-x-(-($\16));
}

@mixin -space-y-16 {
  @include space-y-(-($\16));
}

@mixin -space-x-20 {
  @include space-x-(-($\20));
}

@mixin -space-y-20 {
  @include space-y-(-($\20));
}

@mixin -space-x-24 {
  @include space-x-(-($\24));
}

@mixin -space-y-24 {
  @include space-y-(-($\24));
}

@mixin -space-x-28 {
  @include space-x-(-($\28));
}

@mixin -space-y-28 {
  @include space-y-(-($\28));
}

@mixin -space-x-32 {
  @include space-x-(-($\32));
}

@mixin -space-y-32 {
  @include space-y-(-($\32));
}

@mixin -space-x-36 {
  @include space-x-(-($\36));
}

@mixin -space-y-36 {
  @include space-y-(-($\36));
}

@mixin -space-x-40 {
  @include space-x-(-($\40));
}

@mixin -space-y-40 {
  @include space-y-(-($\40));
}

@mixin -space-x-44 {
  @include space-x-(-($\44));
}

@mixin -space-y-44 {
  @include space-y-(-($\44));
}

@mixin -space-x-48 {
  @include space-x-(-($\48));
}

@mixin -space-y-48 {
  @include space-y-(-($\48));
}

@mixin -space-x-52 {
  @include space-x-(-($\52));
}

@mixin -space-y-52 {
  @include space-y-(-($\52));
}

@mixin -space-x-56 {
  @include space-x-(-($\56));
}

@mixin -space-y-56 {
  @include space-y-(-($\56));
}

@mixin -space-x-60 {
  @include space-x-(-($\60));
}

@mixin -space-y-60 {
  @include space-y-(-($\60));
}

@mixin -space-x-64 {
  @include space-x-(-($\64));
}

@mixin -space-y-64 {
  @include space-y-(-($\64));
}

@mixin -space-x-72 {
  @include space-x-(-($\72));
}

@mixin -space-y-72 {
  @include space-y-(-($\72));
}

@mixin -space-x-80 {
  @include space-x-(-($\80));
}

@mixin -space-y-80 {
  @include space-y-(-($\80));
}

@mixin -space-x-96 {
  @include space-x-(-($\96));
}

@mixin -space-y-96 {
  @include space-y-(-($\96));
}

@mixin sm\:-space-x-0 {
  @include space-x-(-($\0), $sm);
}

@mixin sm\:-space-y-0 {
  @include space-y-(-($\0), $sm);
}

@mixin sm\:-space-x-px {
  @include space-x-(-($\px), $sm);
}

@mixin sm\:-space-y-px {
  @include space-y-(-($\px), $sm);
}

@mixin sm\:-space-x-0\.5 {
  @include space-x-(-($\0\.5), $sm);
}

@mixin sm\:-space-y-0\.5 {
  @include space-y-(-($\0\.5), $sm);
}

@mixin sm\:-space-x-1 {
  @include space-x-(-($\1), $sm);
}

@mixin sm\:-space-y-1 {
  @include space-y-(-($\1), $sm);
}

@mixin sm\:-space-x-1\.5 {
  @include space-x-(-($\1\.5), $sm);
}

@mixin sm\:-space-y-1\.5 {
  @include space-y-(-($\1\.5), $sm);
}

@mixin sm\:-space-x-2 {
  @include space-x-(-($\2), $sm);
}

@mixin sm\:-space-y-2 {
  @include space-y-(-($\2), $sm);
}

@mixin sm\:-space-x-2\.5 {
  @include space-x-(-($\2\.5), $sm);
}

@mixin sm\:-space-y-2\.5 {
  @include space-y-(-($\2\.5), $sm);
}

@mixin sm\:-space-x-3 {
  @include space-x-(-($\3), $sm);
}

@mixin sm\:-space-y-3 {
  @include space-y-(-($\3), $sm);
}

@mixin sm\:-space-x-3\.5 {
  @include space-x-(-($\3\.5), $sm);
}

@mixin sm\:-space-y-3\.5 {
  @include space-y-(-($\3\.5), $sm);
}

@mixin sm\:-space-x-4 {
  @include space-x-(-($\4), $sm);
}

@mixin sm\:-space-y-4 {
  @include space-y-(-($\4), $sm);
}

@mixin sm\:-space-x-5 {
  @include space-x-(-($\5), $sm);
}

@mixin sm\:-space-y-5 {
  @include space-y-(-($\5), $sm);
}

@mixin sm\:-space-x-6 {
  @include space-x-(-($\6), $sm);
}

@mixin sm\:-space-y-6 {
  @include space-y-(-($\6), $sm);
}

@mixin sm\:-space-x-7 {
  @include space-x-(-($\7), $sm);
}

@mixin sm\:-space-y-7 {
  @include space-y-(-($\7), $sm);
}

@mixin sm\:-space-x-8 {
  @include space-x-(-($\8), $sm);
}

@mixin sm\:-space-y-8 {
  @include space-y-(-($\8), $sm);
}

@mixin sm\:-space-x-9 {
  @include space-x-(-($\9), $sm);
}

@mixin sm\:-space-y-9 {
  @include space-y-(-($\9), $sm);
}

@mixin sm\:-space-x-10 {
  @include space-x-(-($\10), $sm);
}

@mixin sm\:-space-y-10 {
  @include space-y-(-($\10), $sm);
}

@mixin sm\:-space-x-11 {
  @include space-x-(-($\11), $sm);
}

@mixin sm\:-space-y-11 {
  @include space-y-(-($\11), $sm);
}

@mixin sm\:-space-x-12 {
  @include space-x-(-($\12), $sm);
}

@mixin sm\:-space-y-12 {
  @include space-y-(-($\12), $sm);
}

@mixin sm\:-space-x-14 {
  @include space-x-(-($\14), $sm);
}

@mixin sm\:-space-y-14 {
  @include space-y-(-($\14), $sm);
}

@mixin sm\:-space-x-16 {
  @include space-x-(-($\16), $sm);
}

@mixin sm\:-space-y-16 {
  @include space-y-(-($\16), $sm);
}

@mixin sm\:-space-x-20 {
  @include space-x-(-($\20), $sm);
}

@mixin sm\:-space-y-20 {
  @include space-y-(-($\20), $sm);
}

@mixin sm\:-space-x-24 {
  @include space-x-(-($\24), $sm);
}

@mixin sm\:-space-y-24 {
  @include space-y-(-($\24), $sm);
}

@mixin sm\:-space-x-28 {
  @include space-x-(-($\28), $sm);
}

@mixin sm\:-space-y-28 {
  @include space-y-(-($\28), $sm);
}

@mixin sm\:-space-x-32 {
  @include space-x-(-($\32), $sm);
}

@mixin sm\:-space-y-32 {
  @include space-y-(-($\32), $sm);
}

@mixin sm\:-space-x-36 {
  @include space-x-(-($\36), $sm);
}

@mixin sm\:-space-y-36 {
  @include space-y-(-($\36), $sm);
}

@mixin sm\:-space-x-40 {
  @include space-x-(-($\40), $sm);
}

@mixin sm\:-space-y-40 {
  @include space-y-(-($\40), $sm);
}

@mixin sm\:-space-x-44 {
  @include space-x-(-($\44), $sm);
}

@mixin sm\:-space-y-44 {
  @include space-y-(-($\44), $sm);
}

@mixin sm\:-space-x-48 {
  @include space-x-(-($\48), $sm);
}

@mixin sm\:-space-y-48 {
  @include space-y-(-($\48), $sm);
}

@mixin sm\:-space-x-52 {
  @include space-x-(-($\52), $sm);
}

@mixin sm\:-space-y-52 {
  @include space-y-(-($\52), $sm);
}

@mixin sm\:-space-x-56 {
  @include space-x-(-($\56), $sm);
}

@mixin sm\:-space-y-56 {
  @include space-y-(-($\56), $sm);
}

@mixin sm\:-space-x-60 {
  @include space-x-(-($\60), $sm);
}

@mixin sm\:-space-y-60 {
  @include space-y-(-($\60), $sm);
}

@mixin sm\:-space-x-64 {
  @include space-x-(-($\64), $sm);
}

@mixin sm\:-space-y-64 {
  @include space-y-(-($\64), $sm);
}

@mixin sm\:-space-x-72 {
  @include space-x-(-($\72), $sm);
}

@mixin sm\:-space-y-72 {
  @include space-y-(-($\72), $sm);
}

@mixin sm\:-space-x-80 {
  @include space-x-(-($\80), $sm);
}

@mixin sm\:-space-y-80 {
  @include space-y-(-($\80), $sm);
}

@mixin sm\:-space-x-96 {
  @include space-x-(-($\96), $sm);
}

@mixin sm\:-space-y-96 {
  @include space-y-(-($\96), $sm);
}

@mixin md\:-space-x-0 {
  @include space-x-(-($\0), $md);
}

@mixin md\:-space-y-0 {
  @include space-y-(-($\0), $md);
}

@mixin md\:-space-x-px {
  @include space-x-(-($\px), $md);
}

@mixin md\:-space-y-px {
  @include space-y-(-($\px), $md);
}

@mixin md\:-space-x-0\.5 {
  @include space-x-(-($\0\.5), $md);
}

@mixin md\:-space-y-0\.5 {
  @include space-y-(-($\0\.5), $md);
}

@mixin md\:-space-x-1 {
  @include space-x-(-($\1), $md);
}

@mixin md\:-space-y-1 {
  @include space-y-(-($\1), $md);
}

@mixin md\:-space-x-1\.5 {
  @include space-x-(-($\1\.5), $md);
}

@mixin md\:-space-y-1\.5 {
  @include space-y-(-($\1\.5), $md);
}

@mixin md\:-space-x-2 {
  @include space-x-(-($\2), $md);
}

@mixin md\:-space-y-2 {
  @include space-y-(-($\2), $md);
}

@mixin md\:-space-x-2\.5 {
  @include space-x-(-($\2\.5), $md);
}

@mixin md\:-space-y-2\.5 {
  @include space-y-(-($\2\.5), $md);
}

@mixin md\:-space-x-3 {
  @include space-x-(-($\3), $md);
}

@mixin md\:-space-y-3 {
  @include space-y-(-($\3), $md);
}

@mixin md\:-space-x-3\.5 {
  @include space-x-(-($\3\.5), $md);
}

@mixin md\:-space-y-3\.5 {
  @include space-y-(-($\3\.5), $md);
}

@mixin md\:-space-x-4 {
  @include space-x-(-($\4), $md);
}

@mixin md\:-space-y-4 {
  @include space-y-(-($\4), $md);
}

@mixin md\:-space-x-5 {
  @include space-x-(-($\5), $md);
}

@mixin md\:-space-y-5 {
  @include space-y-(-($\5), $md);
}

@mixin md\:-space-x-6 {
  @include space-x-(-($\6), $md);
}

@mixin md\:-space-y-6 {
  @include space-y-(-($\6), $md);
}

@mixin md\:-space-x-7 {
  @include space-x-(-($\7), $md);
}

@mixin md\:-space-y-7 {
  @include space-y-(-($\7), $md);
}

@mixin md\:-space-x-8 {
  @include space-x-(-($\8), $md);
}

@mixin md\:-space-y-8 {
  @include space-y-(-($\8), $md);
}

@mixin md\:-space-x-9 {
  @include space-x-(-($\9), $md);
}

@mixin md\:-space-y-9 {
  @include space-y-(-($\9), $md);
}

@mixin md\:-space-x-10 {
  @include space-x-(-($\10), $md);
}

@mixin md\:-space-y-10 {
  @include space-y-(-($\10), $md);
}

@mixin md\:-space-x-11 {
  @include space-x-(-($\11), $md);
}

@mixin md\:-space-y-11 {
  @include space-y-(-($\11), $md);
}

@mixin md\:-space-x-12 {
  @include space-x-(-($\12), $md);
}

@mixin md\:-space-y-12 {
  @include space-y-(-($\12), $md);
}

@mixin md\:-space-x-14 {
  @include space-x-(-($\14), $md);
}

@mixin md\:-space-y-14 {
  @include space-y-(-($\14), $md);
}

@mixin md\:-space-x-16 {
  @include space-x-(-($\16), $md);
}

@mixin md\:-space-y-16 {
  @include space-y-(-($\16), $md);
}

@mixin md\:-space-x-20 {
  @include space-x-(-($\20), $md);
}

@mixin md\:-space-y-20 {
  @include space-y-(-($\20), $md);
}

@mixin md\:-space-x-24 {
  @include space-x-(-($\24), $md);
}

@mixin md\:-space-y-24 {
  @include space-y-(-($\24), $md);
}

@mixin md\:-space-x-28 {
  @include space-x-(-($\28), $md);
}

@mixin md\:-space-y-28 {
  @include space-y-(-($\28), $md);
}

@mixin md\:-space-x-32 {
  @include space-x-(-($\32), $md);
}

@mixin md\:-space-y-32 {
  @include space-y-(-($\32), $md);
}

@mixin md\:-space-x-36 {
  @include space-x-(-($\36), $md);
}

@mixin md\:-space-y-36 {
  @include space-y-(-($\36), $md);
}

@mixin md\:-space-x-40 {
  @include space-x-(-($\40), $md);
}

@mixin md\:-space-y-40 {
  @include space-y-(-($\40), $md);
}

@mixin md\:-space-x-44 {
  @include space-x-(-($\44), $md);
}

@mixin md\:-space-y-44 {
  @include space-y-(-($\44), $md);
}

@mixin md\:-space-x-48 {
  @include space-x-(-($\48), $md);
}

@mixin md\:-space-y-48 {
  @include space-y-(-($\48), $md);
}

@mixin md\:-space-x-52 {
  @include space-x-(-($\52), $md);
}

@mixin md\:-space-y-52 {
  @include space-y-(-($\52), $md);
}

@mixin md\:-space-x-56 {
  @include space-x-(-($\56), $md);
}

@mixin md\:-space-y-56 {
  @include space-y-(-($\56), $md);
}

@mixin md\:-space-x-60 {
  @include space-x-(-($\60), $md);
}

@mixin md\:-space-y-60 {
  @include space-y-(-($\60), $md);
}

@mixin md\:-space-x-64 {
  @include space-x-(-($\64), $md);
}

@mixin md\:-space-y-64 {
  @include space-y-(-($\64), $md);
}

@mixin md\:-space-x-72 {
  @include space-x-(-($\72), $md);
}

@mixin md\:-space-y-72 {
  @include space-y-(-($\72), $md);
}

@mixin md\:-space-x-80 {
  @include space-x-(-($\80), $md);
}

@mixin md\:-space-y-80 {
  @include space-y-(-($\80), $md);
}

@mixin md\:-space-x-96 {
  @include space-x-(-($\96), $md);
}

@mixin md\:-space-y-96 {
  @include space-y-(-($\96), $md);
}

@mixin lg\:-space-x-0 {
  @include space-x-(-($\0), $lg);
}

@mixin lg\:-space-y-0 {
  @include space-y-(-($\0), $lg);
}

@mixin lg\:-space-x-px {
  @include space-x-(-($\px), $lg);
}

@mixin lg\:-space-y-px {
  @include space-y-(-($\px), $lg);
}

@mixin lg\:-space-x-0\.5 {
  @include space-x-(-($\0\.5), $lg);
}

@mixin lg\:-space-y-0\.5 {
  @include space-y-(-($\0\.5), $lg);
}

@mixin lg\:-space-x-1 {
  @include space-x-(-($\1), $lg);
}

@mixin lg\:-space-y-1 {
  @include space-y-(-($\1), $lg);
}

@mixin lg\:-space-x-1\.5 {
  @include space-x-(-($\1\.5), $lg);
}

@mixin lg\:-space-y-1\.5 {
  @include space-y-(-($\1\.5), $lg);
}

@mixin lg\:-space-x-2 {
  @include space-x-(-($\2), $lg);
}

@mixin lg\:-space-y-2 {
  @include space-y-(-($\2), $lg);
}

@mixin lg\:-space-x-2\.5 {
  @include space-x-(-($\2\.5), $lg);
}

@mixin lg\:-space-y-2\.5 {
  @include space-y-(-($\2\.5), $lg);
}

@mixin lg\:-space-x-3 {
  @include space-x-(-($\3), $lg);
}

@mixin lg\:-space-y-3 {
  @include space-y-(-($\3), $lg);
}

@mixin lg\:-space-x-3\.5 {
  @include space-x-(-($\3\.5), $lg);
}

@mixin lg\:-space-y-3\.5 {
  @include space-y-(-($\3\.5), $lg);
}

@mixin lg\:-space-x-4 {
  @include space-x-(-($\4), $lg);
}

@mixin lg\:-space-y-4 {
  @include space-y-(-($\4), $lg);
}

@mixin lg\:-space-x-5 {
  @include space-x-(-($\5), $lg);
}

@mixin lg\:-space-y-5 {
  @include space-y-(-($\5), $lg);
}

@mixin lg\:-space-x-6 {
  @include space-x-(-($\6), $lg);
}

@mixin lg\:-space-y-6 {
  @include space-y-(-($\6), $lg);
}

@mixin lg\:-space-x-7 {
  @include space-x-(-($\7), $lg);
}

@mixin lg\:-space-y-7 {
  @include space-y-(-($\7), $lg);
}

@mixin lg\:-space-x-8 {
  @include space-x-(-($\8), $lg);
}

@mixin lg\:-space-y-8 {
  @include space-y-(-($\8), $lg);
}

@mixin lg\:-space-x-9 {
  @include space-x-(-($\9), $lg);
}

@mixin lg\:-space-y-9 {
  @include space-y-(-($\9), $lg);
}

@mixin lg\:-space-x-10 {
  @include space-x-(-($\10), $lg);
}

@mixin lg\:-space-y-10 {
  @include space-y-(-($\10), $lg);
}

@mixin lg\:-space-x-11 {
  @include space-x-(-($\11), $lg);
}

@mixin lg\:-space-y-11 {
  @include space-y-(-($\11), $lg);
}

@mixin lg\:-space-x-12 {
  @include space-x-(-($\12), $lg);
}

@mixin lg\:-space-y-12 {
  @include space-y-(-($\12), $lg);
}

@mixin lg\:-space-x-14 {
  @include space-x-(-($\14), $lg);
}

@mixin lg\:-space-y-14 {
  @include space-y-(-($\14), $lg);
}

@mixin lg\:-space-x-16 {
  @include space-x-(-($\16), $lg);
}

@mixin lg\:-space-y-16 {
  @include space-y-(-($\16), $lg);
}

@mixin lg\:-space-x-20 {
  @include space-x-(-($\20), $lg);
}

@mixin lg\:-space-y-20 {
  @include space-y-(-($\20), $lg);
}

@mixin lg\:-space-x-24 {
  @include space-x-(-($\24), $lg);
}

@mixin lg\:-space-y-24 {
  @include space-y-(-($\24), $lg);
}

@mixin lg\:-space-x-28 {
  @include space-x-(-($\28), $lg);
}

@mixin lg\:-space-y-28 {
  @include space-y-(-($\28), $lg);
}

@mixin lg\:-space-x-32 {
  @include space-x-(-($\32), $lg);
}

@mixin lg\:-space-y-32 {
  @include space-y-(-($\32), $lg);
}

@mixin lg\:-space-x-36 {
  @include space-x-(-($\36), $lg);
}

@mixin lg\:-space-y-36 {
  @include space-y-(-($\36), $lg);
}

@mixin lg\:-space-x-40 {
  @include space-x-(-($\40), $lg);
}

@mixin lg\:-space-y-40 {
  @include space-y-(-($\40), $lg);
}

@mixin lg\:-space-x-44 {
  @include space-x-(-($\44), $lg);
}

@mixin lg\:-space-y-44 {
  @include space-y-(-($\44), $lg);
}

@mixin lg\:-space-x-48 {
  @include space-x-(-($\48), $lg);
}

@mixin lg\:-space-y-48 {
  @include space-y-(-($\48), $lg);
}

@mixin lg\:-space-x-52 {
  @include space-x-(-($\52), $lg);
}

@mixin lg\:-space-y-52 {
  @include space-y-(-($\52), $lg);
}

@mixin lg\:-space-x-56 {
  @include space-x-(-($\56), $lg);
}

@mixin lg\:-space-y-56 {
  @include space-y-(-($\56), $lg);
}

@mixin lg\:-space-x-60 {
  @include space-x-(-($\60), $lg);
}

@mixin lg\:-space-y-60 {
  @include space-y-(-($\60), $lg);
}

@mixin lg\:-space-x-64 {
  @include space-x-(-($\64), $lg);
}

@mixin lg\:-space-y-64 {
  @include space-y-(-($\64), $lg);
}

@mixin lg\:-space-x-72 {
  @include space-x-(-($\72), $lg);
}

@mixin lg\:-space-y-72 {
  @include space-y-(-($\72), $lg);
}

@mixin lg\:-space-x-80 {
  @include space-x-(-($\80), $lg);
}

@mixin lg\:-space-y-80 {
  @include space-y-(-($\80), $lg);
}

@mixin lg\:-space-x-96 {
  @include space-x-(-($\96), $lg);
}

@mixin lg\:-space-y-96 {
  @include space-y-(-($\96), $lg);
}

@mixin xl\:-space-x-0 {
  @include space-x-(-($\0), $xl);
}

@mixin xl\:-space-y-0 {
  @include space-y-(-($\0), $xl);
}

@mixin xl\:-space-x-px {
  @include space-x-(-($\px), $xl);
}

@mixin xl\:-space-y-px {
  @include space-y-(-($\px), $xl);
}

@mixin xl\:-space-x-0\.5 {
  @include space-x-(-($\0\.5), $xl);
}

@mixin xl\:-space-y-0\.5 {
  @include space-y-(-($\0\.5), $xl);
}

@mixin xl\:-space-x-1 {
  @include space-x-(-($\1), $xl);
}

@mixin xl\:-space-y-1 {
  @include space-y-(-($\1), $xl);
}

@mixin xl\:-space-x-1\.5 {
  @include space-x-(-($\1\.5), $xl);
}

@mixin xl\:-space-y-1\.5 {
  @include space-y-(-($\1\.5), $xl);
}

@mixin xl\:-space-x-2 {
  @include space-x-(-($\2), $xl);
}

@mixin xl\:-space-y-2 {
  @include space-y-(-($\2), $xl);
}

@mixin xl\:-space-x-2\.5 {
  @include space-x-(-($\2\.5), $xl);
}

@mixin xl\:-space-y-2\.5 {
  @include space-y-(-($\2\.5), $xl);
}

@mixin xl\:-space-x-3 {
  @include space-x-(-($\3), $xl);
}

@mixin xl\:-space-y-3 {
  @include space-y-(-($\3), $xl);
}

@mixin xl\:-space-x-3\.5 {
  @include space-x-(-($\3\.5), $xl);
}

@mixin xl\:-space-y-3\.5 {
  @include space-y-(-($\3\.5), $xl);
}

@mixin xl\:-space-x-4 {
  @include space-x-(-($\4), $xl);
}

@mixin xl\:-space-y-4 {
  @include space-y-(-($\4), $xl);
}

@mixin xl\:-space-x-5 {
  @include space-x-(-($\5), $xl);
}

@mixin xl\:-space-y-5 {
  @include space-y-(-($\5), $xl);
}

@mixin xl\:-space-x-6 {
  @include space-x-(-($\6), $xl);
}

@mixin xl\:-space-y-6 {
  @include space-y-(-($\6), $xl);
}

@mixin xl\:-space-x-7 {
  @include space-x-(-($\7), $xl);
}

@mixin xl\:-space-y-7 {
  @include space-y-(-($\7), $xl);
}

@mixin xl\:-space-x-8 {
  @include space-x-(-($\8), $xl);
}

@mixin xl\:-space-y-8 {
  @include space-y-(-($\8), $xl);
}

@mixin xl\:-space-x-9 {
  @include space-x-(-($\9), $xl);
}

@mixin xl\:-space-y-9 {
  @include space-y-(-($\9), $xl);
}

@mixin xl\:-space-x-10 {
  @include space-x-(-($\10), $xl);
}

@mixin xl\:-space-y-10 {
  @include space-y-(-($\10), $xl);
}

@mixin xl\:-space-x-11 {
  @include space-x-(-($\11), $xl);
}

@mixin xl\:-space-y-11 {
  @include space-y-(-($\11), $xl);
}

@mixin xl\:-space-x-12 {
  @include space-x-(-($\12), $xl);
}

@mixin xl\:-space-y-12 {
  @include space-y-(-($\12), $xl);
}

@mixin xl\:-space-x-14 {
  @include space-x-(-($\14), $xl);
}

@mixin xl\:-space-y-14 {
  @include space-y-(-($\14), $xl);
}

@mixin xl\:-space-x-16 {
  @include space-x-(-($\16), $xl);
}

@mixin xl\:-space-y-16 {
  @include space-y-(-($\16), $xl);
}

@mixin xl\:-space-x-20 {
  @include space-x-(-($\20), $xl);
}

@mixin xl\:-space-y-20 {
  @include space-y-(-($\20), $xl);
}

@mixin xl\:-space-x-24 {
  @include space-x-(-($\24), $xl);
}

@mixin xl\:-space-y-24 {
  @include space-y-(-($\24), $xl);
}

@mixin xl\:-space-x-28 {
  @include space-x-(-($\28), $xl);
}

@mixin xl\:-space-y-28 {
  @include space-y-(-($\28), $xl);
}

@mixin xl\:-space-x-32 {
  @include space-x-(-($\32), $xl);
}

@mixin xl\:-space-y-32 {
  @include space-y-(-($\32), $xl);
}

@mixin xl\:-space-x-36 {
  @include space-x-(-($\36), $xl);
}

@mixin xl\:-space-y-36 {
  @include space-y-(-($\36), $xl);
}

@mixin xl\:-space-x-40 {
  @include space-x-(-($\40), $xl);
}

@mixin xl\:-space-y-40 {
  @include space-y-(-($\40), $xl);
}

@mixin xl\:-space-x-44 {
  @include space-x-(-($\44), $xl);
}

@mixin xl\:-space-y-44 {
  @include space-y-(-($\44), $xl);
}

@mixin xl\:-space-x-48 {
  @include space-x-(-($\48), $xl);
}

@mixin xl\:-space-y-48 {
  @include space-y-(-($\48), $xl);
}

@mixin xl\:-space-x-52 {
  @include space-x-(-($\52), $xl);
}

@mixin xl\:-space-y-52 {
  @include space-y-(-($\52), $xl);
}

@mixin xl\:-space-x-56 {
  @include space-x-(-($\56), $xl);
}

@mixin xl\:-space-y-56 {
  @include space-y-(-($\56), $xl);
}

@mixin xl\:-space-x-60 {
  @include space-x-(-($\60), $xl);
}

@mixin xl\:-space-y-60 {
  @include space-y-(-($\60), $xl);
}

@mixin xl\:-space-x-64 {
  @include space-x-(-($\64), $xl);
}

@mixin xl\:-space-y-64 {
  @include space-y-(-($\64), $xl);
}

@mixin xl\:-space-x-72 {
  @include space-x-(-($\72), $xl);
}

@mixin xl\:-space-y-72 {
  @include space-y-(-($\72), $xl);
}

@mixin xl\:-space-x-80 {
  @include space-x-(-($\80), $xl);
}

@mixin xl\:-space-y-80 {
  @include space-y-(-($\80), $xl);
}

@mixin xl\:-space-x-96 {
  @include space-x-(-($\96), $xl);
}

@mixin xl\:-space-y-96 {
  @include space-y-(-($\96), $xl);
}

@mixin \2xl\:-space-x-0 {
  @include space-x-(-($\0), $\2xl);
}

@mixin \2xl\:-space-y-0 {
  @include space-y-(-($\0), $\2xl);
}

@mixin \2xl\:-space-x-px {
  @include space-x-(-($\px), $\2xl);
}

@mixin \2xl\:-space-y-px {
  @include space-y-(-($\px), $\2xl);
}

@mixin \2xl\:-space-x-0\.5 {
  @include space-x-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-space-y-0\.5 {
  @include space-y-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-space-x-1 {
  @include space-x-(-($\1), $\2xl);
}

@mixin \2xl\:-space-y-1 {
  @include space-y-(-($\1), $\2xl);
}

@mixin \2xl\:-space-x-1\.5 {
  @include space-x-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-space-y-1\.5 {
  @include space-y-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-space-x-2 {
  @include space-x-(-($\2), $\2xl);
}

@mixin \2xl\:-space-y-2 {
  @include space-y-(-($\2), $\2xl);
}

@mixin \2xl\:-space-x-2\.5 {
  @include space-x-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-space-y-2\.5 {
  @include space-y-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-space-x-3 {
  @include space-x-(-($\3), $\2xl);
}

@mixin \2xl\:-space-y-3 {
  @include space-y-(-($\3), $\2xl);
}

@mixin \2xl\:-space-x-3\.5 {
  @include space-x-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-space-y-3\.5 {
  @include space-y-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-space-x-4 {
  @include space-x-(-($\4), $\2xl);
}

@mixin \2xl\:-space-y-4 {
  @include space-y-(-($\4), $\2xl);
}

@mixin \2xl\:-space-x-5 {
  @include space-x-(-($\5), $\2xl);
}

@mixin \2xl\:-space-y-5 {
  @include space-y-(-($\5), $\2xl);
}

@mixin \2xl\:-space-x-6 {
  @include space-x-(-($\6), $\2xl);
}

@mixin \2xl\:-space-y-6 {
  @include space-y-(-($\6), $\2xl);
}

@mixin \2xl\:-space-x-7 {
  @include space-x-(-($\7), $\2xl);
}

@mixin \2xl\:-space-y-7 {
  @include space-y-(-($\7), $\2xl);
}

@mixin \2xl\:-space-x-8 {
  @include space-x-(-($\8), $\2xl);
}

@mixin \2xl\:-space-y-8 {
  @include space-y-(-($\8), $\2xl);
}

@mixin \2xl\:-space-x-9 {
  @include space-x-(-($\9), $\2xl);
}

@mixin \2xl\:-space-y-9 {
  @include space-y-(-($\9), $\2xl);
}

@mixin \2xl\:-space-x-10 {
  @include space-x-(-($\10), $\2xl);
}

@mixin \2xl\:-space-y-10 {
  @include space-y-(-($\10), $\2xl);
}

@mixin \2xl\:-space-x-11 {
  @include space-x-(-($\11), $\2xl);
}

@mixin \2xl\:-space-y-11 {
  @include space-y-(-($\11), $\2xl);
}

@mixin \2xl\:-space-x-12 {
  @include space-x-(-($\12), $\2xl);
}

@mixin \2xl\:-space-y-12 {
  @include space-y-(-($\12), $\2xl);
}

@mixin \2xl\:-space-x-14 {
  @include space-x-(-($\14), $\2xl);
}

@mixin \2xl\:-space-y-14 {
  @include space-y-(-($\14), $\2xl);
}

@mixin \2xl\:-space-x-16 {
  @include space-x-(-($\16), $\2xl);
}

@mixin \2xl\:-space-y-16 {
  @include space-y-(-($\16), $\2xl);
}

@mixin \2xl\:-space-x-20 {
  @include space-x-(-($\20), $\2xl);
}

@mixin \2xl\:-space-y-20 {
  @include space-y-(-($\20), $\2xl);
}

@mixin \2xl\:-space-x-24 {
  @include space-x-(-($\24), $\2xl);
}

@mixin \2xl\:-space-y-24 {
  @include space-y-(-($\24), $\2xl);
}

@mixin \2xl\:-space-x-28 {
  @include space-x-(-($\28), $\2xl);
}

@mixin \2xl\:-space-y-28 {
  @include space-y-(-($\28), $\2xl);
}

@mixin \2xl\:-space-x-32 {
  @include space-x-(-($\32), $\2xl);
}

@mixin \2xl\:-space-y-32 {
  @include space-y-(-($\32), $\2xl);
}

@mixin \2xl\:-space-x-36 {
  @include space-x-(-($\36), $\2xl);
}

@mixin \2xl\:-space-y-36 {
  @include space-y-(-($\36), $\2xl);
}

@mixin \2xl\:-space-x-40 {
  @include space-x-(-($\40), $\2xl);
}

@mixin \2xl\:-space-y-40 {
  @include space-y-(-($\40), $\2xl);
}

@mixin \2xl\:-space-x-44 {
  @include space-x-(-($\44), $\2xl);
}

@mixin \2xl\:-space-y-44 {
  @include space-y-(-($\44), $\2xl);
}

@mixin \2xl\:-space-x-48 {
  @include space-x-(-($\48), $\2xl);
}

@mixin \2xl\:-space-y-48 {
  @include space-y-(-($\48), $\2xl);
}

@mixin \2xl\:-space-x-52 {
  @include space-x-(-($\52), $\2xl);
}

@mixin \2xl\:-space-y-52 {
  @include space-y-(-($\52), $\2xl);
}

@mixin \2xl\:-space-x-56 {
  @include space-x-(-($\56), $\2xl);
}

@mixin \2xl\:-space-y-56 {
  @include space-y-(-($\56), $\2xl);
}

@mixin \2xl\:-space-x-60 {
  @include space-x-(-($\60), $\2xl);
}

@mixin \2xl\:-space-y-60 {
  @include space-y-(-($\60), $\2xl);
}

@mixin \2xl\:-space-x-64 {
  @include space-x-(-($\64), $\2xl);
}

@mixin \2xl\:-space-y-64 {
  @include space-y-(-($\64), $\2xl);
}

@mixin \2xl\:-space-x-72 {
  @include space-x-(-($\72), $\2xl);
}

@mixin \2xl\:-space-y-72 {
  @include space-y-(-($\72), $\2xl);
}

@mixin \2xl\:-space-x-80 {
  @include space-x-(-($\80), $\2xl);
}

@mixin \2xl\:-space-y-80 {
  @include space-y-(-($\80), $\2xl);
}

@mixin \2xl\:-space-x-96 {
  @include space-x-(-($\96), $\2xl);
}

@mixin \2xl\:-space-y-96 {
  @include space-y-(-($\96), $\2xl);
}

@mixin -space-x-($v) {
  @include space-x-(-($v));
}

@mixin -space-y-($v) {
  @include space-y-(-($v));
}

@mixin sm\:-space-x-($v) {
  @include space-x-(-($v), $sm);
}

@mixin sm\:-space-y-($v) {
  @include space-y-(-($v), $sm);
}

@mixin md\:-space-x-($v) {
  @include space-x-(-($v), $md);
}

@mixin md\:-space-y-($v) {
  @include space-y-(-($v), $md);
}

@mixin lg\:-space-x-($v) {
  @include space-x-(-($v), $lg);
}

@mixin lg\:-space-y-($v) {
  @include space-y-(-($v), $lg);
}

@mixin xl\:-space-x-($v) {
  @include space-x-(-($v), $xl);
}

@mixin xl\:-space-y-($v) {
  @include space-y-(-($v), $xl);
}

@mixin \2xl\:-space-x-($v) {
  @include space-x-(-($v), $\2xl);
}

@mixin \2xl\:-space-y-($v) {
  @include space-y-(-($v), $\2xl);
}

@include describe("3.Spacing") {
  @include describe("Space Between") {
    @include describe("Basic") {
      @include it("space-x-0 ") {
        @include assert {
          @include output {
            @include space-x-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("space-y-0 ") {
        @include assert {
          @include output {
            @include space-y-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("space-x-0\.5 ") {
        @include assert {
          @include output {
            @include space-x-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.125rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-0\.5 ") {
        @include assert {
          @include output {
            @include space-y-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.125rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-1 ") {
        @include assert {
          @include output {
            @include space-x-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.25rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-1 ") {
        @include assert {
          @include output {
            @include space-y-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.25rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-1\.5 ") {
        @include assert {
          @include output {
            @include space-x-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.375rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-1\.5 ") {
        @include assert {
          @include output {
            @include space-y-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.375rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-2 ") {
        @include assert {
          @include output {
            @include space-x-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-2 ") {
        @include assert {
          @include output {
            @include space-y-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-2\.5 ") {
        @include assert {
          @include output {
            @include space-x-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.625rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-2\.5 ") {
        @include assert {
          @include output {
            @include space-y-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.625rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-3 ") {
        @include assert {
          @include output {
            @include space-x-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.75rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-3 ") {
        @include assert {
          @include output {
            @include space-y-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.75rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-3\.5 ") {
        @include assert {
          @include output {
            @include space-x-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 0.875rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-3\.5 ") {
        @include assert {
          @include output {
            @include space-y-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 0.875rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-4 ") {
        @include assert {
          @include output {
            @include space-x-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-4 ") {
        @include assert {
          @include output {
            @include space-y-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-5 ") {
        @include assert {
          @include output {
            @include space-x-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1.25rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-5 ") {
        @include assert {
          @include output {
            @include space-y-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1.25rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-6 ") {
        @include assert {
          @include output {
            @include space-x-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-6 ") {
        @include assert {
          @include output {
            @include space-y-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-7 ") {
        @include assert {
          @include output {
            @include space-x-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1.75rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-7 ") {
        @include assert {
          @include output {
            @include space-y-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1.75rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-8 ") {
        @include assert {
          @include output {
            @include space-x-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-8 ") {
        @include assert {
          @include output {
            @include space-y-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-9 ") {
        @include assert {
          @include output {
            @include space-x-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2.25rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-9 ") {
        @include assert {
          @include output {
            @include space-y-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2.25rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-10 ") {
        @include assert {
          @include output {
            @include space-x-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-10 ") {
        @include assert {
          @include output {
            @include space-y-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-11 ") {
        @include assert {
          @include output {
            @include space-x-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 2.75rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-11 ") {
        @include assert {
          @include output {
            @include space-y-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 2.75rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-12 ") {
        @include assert {
          @include output {
            @include space-x-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 3rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-12 ") {
        @include assert {
          @include output {
            @include space-y-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 3rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-14 ") {
        @include assert {
          @include output {
            @include space-x-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 3.5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-14 ") {
        @include assert {
          @include output {
            @include space-y-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 3.5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-16 ") {
        @include assert {
          @include output {
            @include space-x-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 4rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-16 ") {
        @include assert {
          @include output {
            @include space-y-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 4rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-20 ") {
        @include assert {
          @include output {
            @include space-x-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 5rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-20 ") {
        @include assert {
          @include output {
            @include space-y-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 5rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-24 ") {
        @include assert {
          @include output {
            @include space-x-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 6rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-24 ") {
        @include assert {
          @include output {
            @include space-y-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 6rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-28 ") {
        @include assert {
          @include output {
            @include space-x-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 7rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-28 ") {
        @include assert {
          @include output {
            @include space-y-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 7rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-32 ") {
        @include assert {
          @include output {
            @include space-x-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 8rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-32 ") {
        @include assert {
          @include output {
            @include space-y-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 8rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-36 ") {
        @include assert {
          @include output {
            @include space-x-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 9rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-36 ") {
        @include assert {
          @include output {
            @include space-y-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 9rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-40 ") {
        @include assert {
          @include output {
            @include space-x-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 10rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-40 ") {
        @include assert {
          @include output {
            @include space-y-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 10rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-44 ") {
        @include assert {
          @include output {
            @include space-x-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 11rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-44 ") {
        @include assert {
          @include output {
            @include space-y-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 11rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-48 ") {
        @include assert {
          @include output {
            @include space-x-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 12rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-48 ") {
        @include assert {
          @include output {
            @include space-y-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 12rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-52 ") {
        @include assert {
          @include output {
            @include space-x-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 13rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-52 ") {
        @include assert {
          @include output {
            @include space-y-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 13rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-56 ") {
        @include assert {
          @include output {
            @include space-x-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 14rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-56 ") {
        @include assert {
          @include output {
            @include space-y-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 14rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-60 ") {
        @include assert {
          @include output {
            @include space-x-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 15rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-60 ") {
        @include assert {
          @include output {
            @include space-y-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 15rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-64 ") {
        @include assert {
          @include output {
            @include space-x-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 16rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-64 ") {
        @include assert {
          @include output {
            @include space-y-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 16rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-72 ") {
        @include assert {
          @include output {
            @include space-x-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 18rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-72 ") {
        @include assert {
          @include output {
            @include space-y-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 18rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-80 ") {
        @include assert {
          @include output {
            @include space-x-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 20rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-80 ") {
        @include assert {
          @include output {
            @include space-y-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 20rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-96 ") {
        @include assert {
          @include output {
            @include space-x-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 24rem;
              margin-right: 0rem;
            }
          }
        }
      }

      @include it("space-y-96 ") {
        @include assert {
          @include output {
            @include space-y-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 24rem;
              margin-bottom: 0rem;
            }
          }
        }
      }

      @include it("space-x-px ") {
        @include assert {
          @include output {
            @include space-x-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("space-y-px ") {
        @include assert {
          @include output {
            @include space-y-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("space-y-reverse ") {
        @include assert {
          @include output {
            @include space-y-4;
            @include space-y-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 1rem;
              margin-bottom: 0rem;
            }

            > * ~ * {
              margin-top: 0rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("space-x-reverse ") {
        @include assert {
          @include output {
            @include space-x-4;
            @include space-x-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 1rem;
              margin-right: 0rem;
            }

            > * ~ * {
              margin-left: 0rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("-space-x-0 ") {
        @include assert {
          @include output {
            @include -space-x-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0px;
              margin-right: -0px;
            }
          }
        }
      }

      @include it("-space-y-0 ") {
        @include assert {
          @include output {
            @include -space-y-0;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0px;
              margin-bottom: -0px;
            }
          }
        }
      }

      @include it("-space-x-0\.5 ") {
        @include assert {
          @include output {
            @include -space-x-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.125rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-0\.5 ") {
        @include assert {
          @include output {
            @include -space-y-0\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.125rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-1 ") {
        @include assert {
          @include output {
            @include -space-x-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.25rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-1 ") {
        @include assert {
          @include output {
            @include -space-y-1;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.25rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-1\.5 ") {
        @include assert {
          @include output {
            @include -space-x-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.375rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-1\.5 ") {
        @include assert {
          @include output {
            @include -space-y-1\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.375rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-2 ") {
        @include assert {
          @include output {
            @include -space-x-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-2 ") {
        @include assert {
          @include output {
            @include -space-y-2;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-2\.5 ") {
        @include assert {
          @include output {
            @include -space-x-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.625rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-2\.5 ") {
        @include assert {
          @include output {
            @include -space-y-2\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.625rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-3 ") {
        @include assert {
          @include output {
            @include -space-x-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.75rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-3 ") {
        @include assert {
          @include output {
            @include -space-y-3;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.75rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-3\.5 ") {
        @include assert {
          @include output {
            @include -space-x-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -0.875rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-3\.5 ") {
        @include assert {
          @include output {
            @include -space-y-3\.5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -0.875rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-4 ") {
        @include assert {
          @include output {
            @include -space-x-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-4 ") {
        @include assert {
          @include output {
            @include -space-y-4;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-5 ") {
        @include assert {
          @include output {
            @include -space-x-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1.25rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-5 ") {
        @include assert {
          @include output {
            @include -space-y-5;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1.25rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-6 ") {
        @include assert {
          @include output {
            @include -space-x-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-6 ") {
        @include assert {
          @include output {
            @include -space-y-6;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-7 ") {
        @include assert {
          @include output {
            @include -space-x-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1.75rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-7 ") {
        @include assert {
          @include output {
            @include -space-y-7;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1.75rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-8 ") {
        @include assert {
          @include output {
            @include -space-x-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-8 ") {
        @include assert {
          @include output {
            @include -space-y-8;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-9 ") {
        @include assert {
          @include output {
            @include -space-x-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2.25rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-9 ") {
        @include assert {
          @include output {
            @include -space-y-9;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2.25rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-10 ") {
        @include assert {
          @include output {
            @include -space-x-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-10 ") {
        @include assert {
          @include output {
            @include -space-y-10;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-11 ") {
        @include assert {
          @include output {
            @include -space-x-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -2.75rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-11 ") {
        @include assert {
          @include output {
            @include -space-y-11;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -2.75rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-12 ") {
        @include assert {
          @include output {
            @include -space-x-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -3rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-12 ") {
        @include assert {
          @include output {
            @include -space-y-12;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -3rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-14 ") {
        @include assert {
          @include output {
            @include -space-x-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -3.5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-14 ") {
        @include assert {
          @include output {
            @include -space-y-14;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -3.5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-16 ") {
        @include assert {
          @include output {
            @include -space-x-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -4rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-16 ") {
        @include assert {
          @include output {
            @include -space-y-16;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -4rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-20 ") {
        @include assert {
          @include output {
            @include -space-x-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -5rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-20 ") {
        @include assert {
          @include output {
            @include -space-y-20;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -5rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-24 ") {
        @include assert {
          @include output {
            @include -space-x-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -6rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-24 ") {
        @include assert {
          @include output {
            @include -space-y-24;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -6rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-28 ") {
        @include assert {
          @include output {
            @include -space-x-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -7rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-28 ") {
        @include assert {
          @include output {
            @include -space-y-28;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -7rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-32 ") {
        @include assert {
          @include output {
            @include -space-x-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -8rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-32 ") {
        @include assert {
          @include output {
            @include -space-y-32;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -8rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-36 ") {
        @include assert {
          @include output {
            @include -space-x-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -9rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-36 ") {
        @include assert {
          @include output {
            @include -space-y-36;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -9rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-40 ") {
        @include assert {
          @include output {
            @include -space-x-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -10rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-40 ") {
        @include assert {
          @include output {
            @include -space-y-40;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -10rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-44 ") {
        @include assert {
          @include output {
            @include -space-x-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -11rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-44 ") {
        @include assert {
          @include output {
            @include -space-y-44;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -11rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-48 ") {
        @include assert {
          @include output {
            @include -space-x-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -12rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-48 ") {
        @include assert {
          @include output {
            @include -space-y-48;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -12rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-52 ") {
        @include assert {
          @include output {
            @include -space-x-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -13rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-52 ") {
        @include assert {
          @include output {
            @include -space-y-52;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -13rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-56 ") {
        @include assert {
          @include output {
            @include -space-x-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -14rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-56 ") {
        @include assert {
          @include output {
            @include -space-y-56;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -14rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-60 ") {
        @include assert {
          @include output {
            @include -space-x-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -15rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-60 ") {
        @include assert {
          @include output {
            @include -space-y-60;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -15rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-64 ") {
        @include assert {
          @include output {
            @include -space-x-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -16rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-64 ") {
        @include assert {
          @include output {
            @include -space-y-64;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -16rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-72 ") {
        @include assert {
          @include output {
            @include -space-x-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -18rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-72 ") {
        @include assert {
          @include output {
            @include -space-y-72;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -18rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-80 ") {
        @include assert {
          @include output {
            @include -space-x-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -20rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-80 ") {
        @include assert {
          @include output {
            @include -space-y-80;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -20rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-96 ") {
        @include assert {
          @include output {
            @include -space-x-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -24rem;
              margin-right: -0rem;
            }
          }
        }
      }

      @include it("-space-y-96 ") {
        @include assert {
          @include output {
            @include -space-y-96;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -24rem;
              margin-bottom: -0rem;
            }
          }
        }
      }

      @include it("-space-x-px ") {
        @include assert {
          @include output {
            @include -space-x-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1px;
              margin-right: -0px;
            }
          }
        }
      }

      @include it("-space-y-px ") {
        @include assert {
          @include output {
            @include -space-y-px;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1px;
              margin-bottom: -0px;
            }
          }
        }
      }

      @include it("space-y-reverse ") {
        @include assert {
          @include output {
            @include -space-y-4;
            @include space-y-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -1rem;
              margin-bottom: -0rem;
            }

            > * ~ * {
              margin-top: -0rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("space-x-reverse ") {
        @include assert {
          @include output {
            @include -space-x-4;
            @include space-x-reverse;
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -1rem;
              margin-right: -0rem;
            }

            > * ~ * {
              margin-left: -0rem;
              margin-right: -1rem;
            }
          }
        }
      }
    }

    @include describe("Rwd") {
      @include it("sm\:space-x-0 ") {
        @include assert {
          @include output {
            @include sm\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-0 ") {
        @include assert {
          @include output {
            @include sm\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-0\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-0\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-1 ") {
        @include assert {
          @include output {
            @include sm\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-1 ") {
        @include assert {
          @include output {
            @include sm\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-1\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-1\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-2 ") {
        @include assert {
          @include output {
            @include sm\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-2 ") {
        @include assert {
          @include output {
            @include sm\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-2\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-2\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-3 ") {
        @include assert {
          @include output {
            @include sm\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-3 ") {
        @include assert {
          @include output {
            @include sm\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-3\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-3\.5 ") {
        @include assert {
          @include output {
            @include sm\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-4 ") {
        @include assert {
          @include output {
            @include sm\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-4 ") {
        @include assert {
          @include output {
            @include sm\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-5 ") {
        @include assert {
          @include output {
            @include sm\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-5 ") {
        @include assert {
          @include output {
            @include sm\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-6 ") {
        @include assert {
          @include output {
            @include sm\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-6 ") {
        @include assert {
          @include output {
            @include sm\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-7 ") {
        @include assert {
          @include output {
            @include sm\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-7 ") {
        @include assert {
          @include output {
            @include sm\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-8 ") {
        @include assert {
          @include output {
            @include sm\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-8 ") {
        @include assert {
          @include output {
            @include sm\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-9 ") {
        @include assert {
          @include output {
            @include sm\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-9 ") {
        @include assert {
          @include output {
            @include sm\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-10 ") {
        @include assert {
          @include output {
            @include sm\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-10 ") {
        @include assert {
          @include output {
            @include sm\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-11 ") {
        @include assert {
          @include output {
            @include sm\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-11 ") {
        @include assert {
          @include output {
            @include sm\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-12 ") {
        @include assert {
          @include output {
            @include sm\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-12 ") {
        @include assert {
          @include output {
            @include sm\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-14 ") {
        @include assert {
          @include output {
            @include sm\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-14 ") {
        @include assert {
          @include output {
            @include sm\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-16 ") {
        @include assert {
          @include output {
            @include sm\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-16 ") {
        @include assert {
          @include output {
            @include sm\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-20 ") {
        @include assert {
          @include output {
            @include sm\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-20 ") {
        @include assert {
          @include output {
            @include sm\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-24 ") {
        @include assert {
          @include output {
            @include sm\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-24 ") {
        @include assert {
          @include output {
            @include sm\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-28 ") {
        @include assert {
          @include output {
            @include sm\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-28 ") {
        @include assert {
          @include output {
            @include sm\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-32 ") {
        @include assert {
          @include output {
            @include sm\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-32 ") {
        @include assert {
          @include output {
            @include sm\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-36 ") {
        @include assert {
          @include output {
            @include sm\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-36 ") {
        @include assert {
          @include output {
            @include sm\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-40 ") {
        @include assert {
          @include output {
            @include sm\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-40 ") {
        @include assert {
          @include output {
            @include sm\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-44 ") {
        @include assert {
          @include output {
            @include sm\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-44 ") {
        @include assert {
          @include output {
            @include sm\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-48 ") {
        @include assert {
          @include output {
            @include sm\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-48 ") {
        @include assert {
          @include output {
            @include sm\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-52 ") {
        @include assert {
          @include output {
            @include sm\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-52 ") {
        @include assert {
          @include output {
            @include sm\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-56 ") {
        @include assert {
          @include output {
            @include sm\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-56 ") {
        @include assert {
          @include output {
            @include sm\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-60 ") {
        @include assert {
          @include output {
            @include sm\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-60 ") {
        @include assert {
          @include output {
            @include sm\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-64 ") {
        @include assert {
          @include output {
            @include sm\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-64 ") {
        @include assert {
          @include output {
            @include sm\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-72 ") {
        @include assert {
          @include output {
            @include sm\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-72 ") {
        @include assert {
          @include output {
            @include sm\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-80 ") {
        @include assert {
          @include output {
            @include sm\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-80 ") {
        @include assert {
          @include output {
            @include sm\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-96 ") {
        @include assert {
          @include output {
            @include sm\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-96 ") {
        @include assert {
          @include output {
            @include sm\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-px ") {
        @include assert {
          @include output {
            @include sm\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-px ") {
        @include assert {
          @include output {
            @include sm\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("sm\:space-y-reverse ") {
        @include assert {
          @include output {
            @include sm\:space-y-4;
            @include sm\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-reverse ") {
        @include assert {
          @include output {
            @include sm\:space-x-4;
            @include sm\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-0 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-0 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-0\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-0\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-1 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-1 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-1\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-1\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-2 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-2 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-2\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-2\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-3 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-3 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-3\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-3\.5 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-4 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-4 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-5 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-5 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-6 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-6 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-7 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-7 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-8 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-8 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-9 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-9 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-10 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-10 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-11 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-11 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-12 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-12 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-14 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-14 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-16 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-16 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-20 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-20 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-24 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-24 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-28 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-28 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-32 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-32 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-36 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-36 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-40 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-40 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-44 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-44 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-48 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-48 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-52 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-52 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-56 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-56 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-60 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-60 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-64 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-64 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-72 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-72 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-80 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-80 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-96 ") {
        @include assert {
          @include output {
            @include sm\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-96 ") {
        @include assert {
          @include output {
            @include sm\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-px ") {
        @include assert {
          @include output {
            @include sm\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-px ") {
        @include assert {
          @include output {
            @include sm\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("md\:space-x-0 ") {
        @include assert {
          @include output {
            @include md\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("md\:space-y-0 ") {
        @include assert {
          @include output {
            @include md\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("md\:space-x-0\.5 ") {
        @include assert {
          @include output {
            @include md\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-0\.5 ") {
        @include assert {
          @include output {
            @include md\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-1 ") {
        @include assert {
          @include output {
            @include md\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-1 ") {
        @include assert {
          @include output {
            @include md\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-1\.5 ") {
        @include assert {
          @include output {
            @include md\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-1\.5 ") {
        @include assert {
          @include output {
            @include md\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-2 ") {
        @include assert {
          @include output {
            @include md\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-2 ") {
        @include assert {
          @include output {
            @include md\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-2\.5 ") {
        @include assert {
          @include output {
            @include md\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-2\.5 ") {
        @include assert {
          @include output {
            @include md\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-3 ") {
        @include assert {
          @include output {
            @include md\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-3 ") {
        @include assert {
          @include output {
            @include md\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-3\.5 ") {
        @include assert {
          @include output {
            @include md\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-3\.5 ") {
        @include assert {
          @include output {
            @include md\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-4 ") {
        @include assert {
          @include output {
            @include md\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-4 ") {
        @include assert {
          @include output {
            @include md\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-5 ") {
        @include assert {
          @include output {
            @include md\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-5 ") {
        @include assert {
          @include output {
            @include md\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-6 ") {
        @include assert {
          @include output {
            @include md\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-6 ") {
        @include assert {
          @include output {
            @include md\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-7 ") {
        @include assert {
          @include output {
            @include md\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-7 ") {
        @include assert {
          @include output {
            @include md\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-8 ") {
        @include assert {
          @include output {
            @include md\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-8 ") {
        @include assert {
          @include output {
            @include md\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-9 ") {
        @include assert {
          @include output {
            @include md\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-9 ") {
        @include assert {
          @include output {
            @include md\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-10 ") {
        @include assert {
          @include output {
            @include md\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-10 ") {
        @include assert {
          @include output {
            @include md\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-11 ") {
        @include assert {
          @include output {
            @include md\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-11 ") {
        @include assert {
          @include output {
            @include md\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-12 ") {
        @include assert {
          @include output {
            @include md\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-12 ") {
        @include assert {
          @include output {
            @include md\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-14 ") {
        @include assert {
          @include output {
            @include md\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-14 ") {
        @include assert {
          @include output {
            @include md\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-16 ") {
        @include assert {
          @include output {
            @include md\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-16 ") {
        @include assert {
          @include output {
            @include md\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-20 ") {
        @include assert {
          @include output {
            @include md\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-20 ") {
        @include assert {
          @include output {
            @include md\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-24 ") {
        @include assert {
          @include output {
            @include md\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-24 ") {
        @include assert {
          @include output {
            @include md\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-28 ") {
        @include assert {
          @include output {
            @include md\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-28 ") {
        @include assert {
          @include output {
            @include md\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-32 ") {
        @include assert {
          @include output {
            @include md\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-32 ") {
        @include assert {
          @include output {
            @include md\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-36 ") {
        @include assert {
          @include output {
            @include md\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-36 ") {
        @include assert {
          @include output {
            @include md\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-40 ") {
        @include assert {
          @include output {
            @include md\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-40 ") {
        @include assert {
          @include output {
            @include md\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-44 ") {
        @include assert {
          @include output {
            @include md\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-44 ") {
        @include assert {
          @include output {
            @include md\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-48 ") {
        @include assert {
          @include output {
            @include md\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-48 ") {
        @include assert {
          @include output {
            @include md\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-52 ") {
        @include assert {
          @include output {
            @include md\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-52 ") {
        @include assert {
          @include output {
            @include md\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-56 ") {
        @include assert {
          @include output {
            @include md\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-56 ") {
        @include assert {
          @include output {
            @include md\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-60 ") {
        @include assert {
          @include output {
            @include md\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-60 ") {
        @include assert {
          @include output {
            @include md\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-64 ") {
        @include assert {
          @include output {
            @include md\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-64 ") {
        @include assert {
          @include output {
            @include md\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-72 ") {
        @include assert {
          @include output {
            @include md\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-72 ") {
        @include assert {
          @include output {
            @include md\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-80 ") {
        @include assert {
          @include output {
            @include md\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-80 ") {
        @include assert {
          @include output {
            @include md\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-96 ") {
        @include assert {
          @include output {
            @include md\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-y-96 ") {
        @include assert {
          @include output {
            @include md\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-px ") {
        @include assert {
          @include output {
            @include md\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("md\:space-y-px ") {
        @include assert {
          @include output {
            @include md\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("md\:space-y-reverse ") {
        @include assert {
          @include output {
            @include md\:space-y-4;
            @include md\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $md) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it("md\:space-x-reverse ") {
        @include assert {
          @include output {
            @include md\:space-x-4;
            @include md\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $md) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-0 ") {
        @include assert {
          @include output {
            @include md\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-0 ") {
        @include assert {
          @include output {
            @include md\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-0\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-0\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-1 ") {
        @include assert {
          @include output {
            @include md\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-1 ") {
        @include assert {
          @include output {
            @include md\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-1\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-1\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-2 ") {
        @include assert {
          @include output {
            @include md\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-2 ") {
        @include assert {
          @include output {
            @include md\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-2\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-2\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-3 ") {
        @include assert {
          @include output {
            @include md\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-3 ") {
        @include assert {
          @include output {
            @include md\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-3\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-3\.5 ") {
        @include assert {
          @include output {
            @include md\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-4 ") {
        @include assert {
          @include output {
            @include md\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-4 ") {
        @include assert {
          @include output {
            @include md\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-5 ") {
        @include assert {
          @include output {
            @include md\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-5 ") {
        @include assert {
          @include output {
            @include md\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-6 ") {
        @include assert {
          @include output {
            @include md\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-6 ") {
        @include assert {
          @include output {
            @include md\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-7 ") {
        @include assert {
          @include output {
            @include md\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-7 ") {
        @include assert {
          @include output {
            @include md\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-8 ") {
        @include assert {
          @include output {
            @include md\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-8 ") {
        @include assert {
          @include output {
            @include md\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-9 ") {
        @include assert {
          @include output {
            @include md\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-9 ") {
        @include assert {
          @include output {
            @include md\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-10 ") {
        @include assert {
          @include output {
            @include md\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-10 ") {
        @include assert {
          @include output {
            @include md\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-11 ") {
        @include assert {
          @include output {
            @include md\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-11 ") {
        @include assert {
          @include output {
            @include md\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-12 ") {
        @include assert {
          @include output {
            @include md\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-12 ") {
        @include assert {
          @include output {
            @include md\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-14 ") {
        @include assert {
          @include output {
            @include md\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-14 ") {
        @include assert {
          @include output {
            @include md\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-16 ") {
        @include assert {
          @include output {
            @include md\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-16 ") {
        @include assert {
          @include output {
            @include md\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-20 ") {
        @include assert {
          @include output {
            @include md\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-20 ") {
        @include assert {
          @include output {
            @include md\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-24 ") {
        @include assert {
          @include output {
            @include md\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-24 ") {
        @include assert {
          @include output {
            @include md\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-28 ") {
        @include assert {
          @include output {
            @include md\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-28 ") {
        @include assert {
          @include output {
            @include md\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-32 ") {
        @include assert {
          @include output {
            @include md\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-32 ") {
        @include assert {
          @include output {
            @include md\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-36 ") {
        @include assert {
          @include output {
            @include md\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-36 ") {
        @include assert {
          @include output {
            @include md\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-40 ") {
        @include assert {
          @include output {
            @include md\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-40 ") {
        @include assert {
          @include output {
            @include md\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-44 ") {
        @include assert {
          @include output {
            @include md\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-44 ") {
        @include assert {
          @include output {
            @include md\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-48 ") {
        @include assert {
          @include output {
            @include md\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-48 ") {
        @include assert {
          @include output {
            @include md\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-52 ") {
        @include assert {
          @include output {
            @include md\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-52 ") {
        @include assert {
          @include output {
            @include md\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-56 ") {
        @include assert {
          @include output {
            @include md\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-56 ") {
        @include assert {
          @include output {
            @include md\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-60 ") {
        @include assert {
          @include output {
            @include md\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-60 ") {
        @include assert {
          @include output {
            @include md\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-64 ") {
        @include assert {
          @include output {
            @include md\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-64 ") {
        @include assert {
          @include output {
            @include md\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-72 ") {
        @include assert {
          @include output {
            @include md\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-72 ") {
        @include assert {
          @include output {
            @include md\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-80 ") {
        @include assert {
          @include output {
            @include md\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-80 ") {
        @include assert {
          @include output {
            @include md\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-96 ") {
        @include assert {
          @include output {
            @include md\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-96 ") {
        @include assert {
          @include output {
            @include md\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-px ") {
        @include assert {
          @include output {
            @include md\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-px ") {
        @include assert {
          @include output {
            @include md\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-0 ") {
        @include assert {
          @include output {
            @include lg\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-0 ") {
        @include assert {
          @include output {
            @include lg\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-0\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-0\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-1 ") {
        @include assert {
          @include output {
            @include lg\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-1 ") {
        @include assert {
          @include output {
            @include lg\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-1\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-1\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-2 ") {
        @include assert {
          @include output {
            @include lg\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-2 ") {
        @include assert {
          @include output {
            @include lg\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-2\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-2\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-3 ") {
        @include assert {
          @include output {
            @include lg\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-3 ") {
        @include assert {
          @include output {
            @include lg\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-3\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-3\.5 ") {
        @include assert {
          @include output {
            @include lg\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-4 ") {
        @include assert {
          @include output {
            @include lg\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-4 ") {
        @include assert {
          @include output {
            @include lg\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-5 ") {
        @include assert {
          @include output {
            @include lg\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-5 ") {
        @include assert {
          @include output {
            @include lg\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-6 ") {
        @include assert {
          @include output {
            @include lg\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-6 ") {
        @include assert {
          @include output {
            @include lg\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-7 ") {
        @include assert {
          @include output {
            @include lg\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-7 ") {
        @include assert {
          @include output {
            @include lg\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-8 ") {
        @include assert {
          @include output {
            @include lg\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-8 ") {
        @include assert {
          @include output {
            @include lg\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-9 ") {
        @include assert {
          @include output {
            @include lg\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-9 ") {
        @include assert {
          @include output {
            @include lg\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-10 ") {
        @include assert {
          @include output {
            @include lg\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-10 ") {
        @include assert {
          @include output {
            @include lg\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-11 ") {
        @include assert {
          @include output {
            @include lg\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-11 ") {
        @include assert {
          @include output {
            @include lg\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-12 ") {
        @include assert {
          @include output {
            @include lg\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-12 ") {
        @include assert {
          @include output {
            @include lg\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-14 ") {
        @include assert {
          @include output {
            @include lg\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-14 ") {
        @include assert {
          @include output {
            @include lg\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-16 ") {
        @include assert {
          @include output {
            @include lg\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-16 ") {
        @include assert {
          @include output {
            @include lg\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-20 ") {
        @include assert {
          @include output {
            @include lg\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-20 ") {
        @include assert {
          @include output {
            @include lg\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-24 ") {
        @include assert {
          @include output {
            @include lg\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-24 ") {
        @include assert {
          @include output {
            @include lg\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-28 ") {
        @include assert {
          @include output {
            @include lg\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-28 ") {
        @include assert {
          @include output {
            @include lg\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-32 ") {
        @include assert {
          @include output {
            @include lg\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-32 ") {
        @include assert {
          @include output {
            @include lg\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-36 ") {
        @include assert {
          @include output {
            @include lg\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-36 ") {
        @include assert {
          @include output {
            @include lg\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-40 ") {
        @include assert {
          @include output {
            @include lg\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-40 ") {
        @include assert {
          @include output {
            @include lg\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-44 ") {
        @include assert {
          @include output {
            @include lg\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-44 ") {
        @include assert {
          @include output {
            @include lg\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-48 ") {
        @include assert {
          @include output {
            @include lg\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-48 ") {
        @include assert {
          @include output {
            @include lg\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-52 ") {
        @include assert {
          @include output {
            @include lg\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-52 ") {
        @include assert {
          @include output {
            @include lg\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-56 ") {
        @include assert {
          @include output {
            @include lg\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-56 ") {
        @include assert {
          @include output {
            @include lg\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-60 ") {
        @include assert {
          @include output {
            @include lg\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-60 ") {
        @include assert {
          @include output {
            @include lg\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-64 ") {
        @include assert {
          @include output {
            @include lg\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-64 ") {
        @include assert {
          @include output {
            @include lg\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-72 ") {
        @include assert {
          @include output {
            @include lg\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-72 ") {
        @include assert {
          @include output {
            @include lg\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-80 ") {
        @include assert {
          @include output {
            @include lg\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-80 ") {
        @include assert {
          @include output {
            @include lg\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-96 ") {
        @include assert {
          @include output {
            @include lg\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-96 ") {
        @include assert {
          @include output {
            @include lg\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-px ") {
        @include assert {
          @include output {
            @include lg\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-px ") {
        @include assert {
          @include output {
            @include lg\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-reverse ") {
        @include assert {
          @include output {
            @include lg\:space-y-4;
            @include lg\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-reverse ") {
        @include assert {
          @include output {
            @include lg\:space-x-4;
            @include lg\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-0 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-0 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-0\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-0\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-1 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-1 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-1\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-1\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-2 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-2 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-2\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-2\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-3 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-3 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-3\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-3\.5 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-4 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-4 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-5 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-5 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-6 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-6 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-7 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-7 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-8 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-8 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-9 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-9 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-10 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-10 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-11 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-11 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-12 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-12 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-14 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-14 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-16 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-16 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-20 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-20 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-24 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-24 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-28 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-28 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-32 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-32 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-36 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-36 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-40 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-40 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-44 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-44 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-48 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-48 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-52 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-52 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-56 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-56 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-60 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-60 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-64 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-64 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-72 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-72 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-80 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-80 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-96 ") {
        @include assert {
          @include output {
            @include lg\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-96 ") {
        @include assert {
          @include output {
            @include lg\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-px ") {
        @include assert {
          @include output {
            @include lg\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-px ") {
        @include assert {
          @include output {
            @include lg\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-0 ") {
        @include assert {
          @include output {
            @include xl\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-0 ") {
        @include assert {
          @include output {
            @include xl\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-0\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-0\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-1 ") {
        @include assert {
          @include output {
            @include xl\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-1 ") {
        @include assert {
          @include output {
            @include xl\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-1\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-1\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-2 ") {
        @include assert {
          @include output {
            @include xl\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-2 ") {
        @include assert {
          @include output {
            @include xl\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-2\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-2\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-3 ") {
        @include assert {
          @include output {
            @include xl\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-3 ") {
        @include assert {
          @include output {
            @include xl\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-3\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-3\.5 ") {
        @include assert {
          @include output {
            @include xl\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-4 ") {
        @include assert {
          @include output {
            @include xl\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-4 ") {
        @include assert {
          @include output {
            @include xl\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-5 ") {
        @include assert {
          @include output {
            @include xl\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-5 ") {
        @include assert {
          @include output {
            @include xl\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-6 ") {
        @include assert {
          @include output {
            @include xl\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-6 ") {
        @include assert {
          @include output {
            @include xl\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-7 ") {
        @include assert {
          @include output {
            @include xl\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-7 ") {
        @include assert {
          @include output {
            @include xl\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-8 ") {
        @include assert {
          @include output {
            @include xl\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-8 ") {
        @include assert {
          @include output {
            @include xl\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-9 ") {
        @include assert {
          @include output {
            @include xl\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-9 ") {
        @include assert {
          @include output {
            @include xl\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-10 ") {
        @include assert {
          @include output {
            @include xl\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-10 ") {
        @include assert {
          @include output {
            @include xl\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-11 ") {
        @include assert {
          @include output {
            @include xl\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-11 ") {
        @include assert {
          @include output {
            @include xl\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-12 ") {
        @include assert {
          @include output {
            @include xl\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-12 ") {
        @include assert {
          @include output {
            @include xl\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-14 ") {
        @include assert {
          @include output {
            @include xl\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-14 ") {
        @include assert {
          @include output {
            @include xl\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-16 ") {
        @include assert {
          @include output {
            @include xl\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-16 ") {
        @include assert {
          @include output {
            @include xl\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-20 ") {
        @include assert {
          @include output {
            @include xl\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-20 ") {
        @include assert {
          @include output {
            @include xl\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-24 ") {
        @include assert {
          @include output {
            @include xl\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-24 ") {
        @include assert {
          @include output {
            @include xl\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-28 ") {
        @include assert {
          @include output {
            @include xl\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-28 ") {
        @include assert {
          @include output {
            @include xl\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-32 ") {
        @include assert {
          @include output {
            @include xl\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-32 ") {
        @include assert {
          @include output {
            @include xl\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-36 ") {
        @include assert {
          @include output {
            @include xl\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-36 ") {
        @include assert {
          @include output {
            @include xl\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-40 ") {
        @include assert {
          @include output {
            @include xl\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-40 ") {
        @include assert {
          @include output {
            @include xl\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-44 ") {
        @include assert {
          @include output {
            @include xl\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-44 ") {
        @include assert {
          @include output {
            @include xl\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-48 ") {
        @include assert {
          @include output {
            @include xl\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-48 ") {
        @include assert {
          @include output {
            @include xl\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-52 ") {
        @include assert {
          @include output {
            @include xl\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-52 ") {
        @include assert {
          @include output {
            @include xl\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-56 ") {
        @include assert {
          @include output {
            @include xl\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-56 ") {
        @include assert {
          @include output {
            @include xl\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-60 ") {
        @include assert {
          @include output {
            @include xl\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-60 ") {
        @include assert {
          @include output {
            @include xl\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-64 ") {
        @include assert {
          @include output {
            @include xl\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-64 ") {
        @include assert {
          @include output {
            @include xl\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-72 ") {
        @include assert {
          @include output {
            @include xl\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-72 ") {
        @include assert {
          @include output {
            @include xl\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-80 ") {
        @include assert {
          @include output {
            @include xl\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-80 ") {
        @include assert {
          @include output {
            @include xl\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-96 ") {
        @include assert {
          @include output {
            @include xl\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-96 ") {
        @include assert {
          @include output {
            @include xl\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-px ") {
        @include assert {
          @include output {
            @include xl\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-px ") {
        @include assert {
          @include output {
            @include xl\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-reverse ") {
        @include assert {
          @include output {
            @include xl\:space-y-4;
            @include xl\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-reverse ") {
        @include assert {
          @include output {
            @include xl\:space-x-4;
            @include xl\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-0 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-0 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-0\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-0\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-1 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-1 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-1\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-1\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-2 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-2 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-2\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-2\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-3 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-3 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-3\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-3\.5 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-4 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-4 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-5 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-5 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-6 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-6 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-7 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-7 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-8 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-8 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-9 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-9 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-10 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-10 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-11 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-11 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-12 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-12 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-14 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-14 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-16 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-16 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-20 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-20 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-24 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-24 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-28 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-28 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-32 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-32 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-36 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-36 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-40 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-40 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-44 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-44 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-48 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-48 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-52 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-52 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-56 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-56 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-60 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-60 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-64 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-64 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-72 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-72 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-80 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-80 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-96 ") {
        @include assert {
          @include output {
            @include xl\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-96 ") {
        @include assert {
          @include output {
            @include xl\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-px ") {
        @include assert {
          @include output {
            @include xl\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-px ") {
        @include assert {
          @include output {
            @include xl\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-0 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-0 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-0\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.125rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-0\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.125rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-1 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-1 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-1\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.375rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-1\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.375rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-2 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-2 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-2\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.625rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-2\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.625rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-3 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-3 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-3\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0.875rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-3\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0.875rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-4 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-4 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-5 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-6 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-6 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-7 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-7 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-8 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-8 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-9 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2.25rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-9 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2.25rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-10 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-10 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-11 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 2.75rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-11 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 2.75rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-12 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 3rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-12 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 3rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-14 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 3.5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-14 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 3.5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-16 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 4rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-16 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 4rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-20 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 5rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-20 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 5rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-24 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 6rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-24 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 6rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-28 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 7rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-28 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 7rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-32 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 8rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-32 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 8rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-36 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 9rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-36 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 9rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-40 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 10rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-40 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 10rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-44 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 11rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-44 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 11rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-48 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 12rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-48 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 12rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-52 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 13rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-52 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 13rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-56 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 14rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-56 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 14rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-60 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 15rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-60 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 15rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-64 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 16rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-64 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 16rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-72 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 18rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-72 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 18rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-80 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 20rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-80 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 20rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-96 ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 24rem;
                margin-right: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-96 ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 24rem;
                margin-bottom: 0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-px ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-px ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-reverse ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-4;
            @include \2xl\:space-y-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 1rem;
                margin-bottom: 0rem;
              }
            }

            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 0rem;
                margin-bottom: 1rem;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-reverse ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-4;
            @include \2xl\:space-x-reverse;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 1rem;
                margin-right: 0rem;
              }
            }

            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 0rem;
                margin-right: 1rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-0 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-0 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-0\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.125rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-0\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.125rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-1 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-1 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-1\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.375rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-1\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.375rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-2 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-2 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-2\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.625rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-2\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.625rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-3 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-3 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-3\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -0.875rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-3\.5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -0.875rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-4 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-4 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-5 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-6 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-6 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-7 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-7 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-8 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-8 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-9 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2.25rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-9 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2.25rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-10 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-10 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-11 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -2.75rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-11 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -2.75rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-12 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -3rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-12 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -3rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-14 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -3.5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-14 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -3.5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-16 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -4rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-16 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -4rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-20 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -5rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-20 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -5rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-24 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -6rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-24 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -6rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-28 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -7rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-28 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -7rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-32 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -8rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-32 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -8rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-36 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -9rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-36 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -9rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-40 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -10rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-40 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -10rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-44 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -11rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-44 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -11rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-48 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -12rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-48 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -12rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-52 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -13rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-52 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -13rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-56 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -14rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-56 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -14rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-60 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -15rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-60 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -15rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-64 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -16rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-64 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -16rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-72 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -18rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-72 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -18rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-80 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -20rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-80 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -20rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-96 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -24rem;
                margin-right: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-96 ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -24rem;
                margin-bottom: -0rem;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-px ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -1px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-px ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -1px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("space-y-(5px) ") {
        @include assert {
          @include output {
            @include space-y-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: 5px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("space-x-(5px) ") {
        @include assert {
          @include output {
            @include space-x-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: 5px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("-space-y-(5px) ") {
        @include assert {
          @include output {
            @include -space-y-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-top: -5px;
              margin-bottom: -0px;
            }
          }
        }
      }

      @include it("-space-x-(5px) ") {
        @include assert {
          @include output {
            @include -space-x-(5px);
            @include reset;
          }

          @include expect {
            > * ~ * {
              margin-left: -5px;
              margin-right: -0px;
            }
          }
        }
      }

      @include it("sm\:space-y-(5px) ") {
        @include assert {
          @include output {
            @include sm\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("sm\:space-x-(5px) ") {
        @include assert {
          @include output {
            @include sm\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("sm\:-space-y-(5px) ") {
        @include assert {
          @include output {
            @include sm\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("sm\:-space-x-(5px) ") {
        @include assert {
          @include output {
            @include sm\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("md\:space-y-(5px) ") {
        @include assert {
          @include output {
            @include md\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("md\:space-x-(5px) ") {
        @include assert {
          @include output {
            @include md\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("md\:-space-y-(5px) ") {
        @include assert {
          @include output {
            @include md\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("md\:-space-x-(5px) ") {
        @include assert {
          @include output {
            @include md\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-y-(5px) ") {
        @include assert {
          @include output {
            @include lg\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("lg\:space-x-(5px) ") {
        @include assert {
          @include output {
            @include lg\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("lg\:-space-y-(5px) ") {
        @include assert {
          @include output {
            @include lg\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("lg\:-space-x-(5px) ") {
        @include assert {
          @include output {
            @include lg\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-y-(5px) ") {
        @include assert {
          @include output {
            @include xl\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("xl\:space-x-(5px) ") {
        @include assert {
          @include output {
            @include xl\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("xl\:-space-y-(5px) ") {
        @include assert {
          @include output {
            @include xl\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("xl\:-space-x-(5px) ") {
        @include assert {
          @include output {
            @include xl\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-y-(5px) ") {
        @include assert {
          @include output {
            @include \2xl\:space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: 5px;
                margin-bottom: 0px;
              }
            }
          }
        }
      }

      @include it("2xl\:space-x-(5px) ") {
        @include assert {
          @include output {
            @include \2xl\:space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: 5px;
                margin-right: 0px;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-y-(5px) ") {
        @include assert {
          @include output {
            @include \2xl\:-space-y-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-top: -5px;
                margin-bottom: -0px;
              }
            }
          }
        }
      }

      @include it("2xl\:-space-x-(5px) ") {
        @include assert {
          @include output {
            @include \2xl\:-space-x-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              > * ~ * {
                margin-left: -5px;
                margin-right: -0px;
              }
            }
          }
        }
      }
    }
  }
}
