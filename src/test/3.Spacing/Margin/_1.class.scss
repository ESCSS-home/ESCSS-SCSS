@use "../../mode0" as *;
@use "true" as *;

// private member(prefix - or _) can't be import, so I put here for testing

@mixin -m-0 {
  @include m-(-($\0));
}

@mixin -mx-0 {
  @include mx-(-($\0));
}

@mixin -my-0 {
  @include my-(-($\0));
}

@mixin -ms-0 {
  @include ms-(-($\0));
}

@mixin -me-0 {
  @include me-(-($\0));
}

@mixin -mt-0 {
  @include mt-(-($\0));
}

@mixin -mr-0 {
  @include mr-(-($\0));
}

@mixin -mb-0 {
  @include mb-(-($\0));
}

@mixin -ml-0 {
  @include ml-(-($\0));
}

@mixin -m-px {
  @include m-(-($\px));
}

@mixin -mx-px {
  @include mx-(-($\px));
}

@mixin -my-px {
  @include my-(-($\px));
}

@mixin -ms-px {
  @include ms-(-($\px));
}

@mixin -me-px {
  @include me-(-($\px));
}

@mixin -mt-px {
  @include mt-(-($\px));
}

@mixin -mr-px {
  @include mr-(-($\px));
}

@mixin -mb-px {
  @include mb-(-($\px));
}

@mixin -ml-px {
  @include ml-(-($\px));
}

@mixin -m-0\.5 {
  @include m-(-($\0\.5));
}

@mixin -mx-0\.5 {
  @include mx-(-($\0\.5));
}

@mixin -my-0\.5 {
  @include my-(-($\0\.5));
}

@mixin -ms-0\.5 {
  @include ms-(-($\0\.5));
}

@mixin -me-0\.5 {
  @include me-(-($\0\.5));
}

@mixin -mt-0\.5 {
  @include mt-(-($\0\.5));
}

@mixin -mr-0\.5 {
  @include mr-(-($\0\.5));
}

@mixin -mb-0\.5 {
  @include mb-(-($\0\.5));
}

@mixin -ml-0\.5 {
  @include ml-(-($\0\.5));
}

@mixin -m-1 {
  @include m-(-($\1));
}

@mixin -mx-1 {
  @include mx-(-($\1));
}

@mixin -my-1 {
  @include my-(-($\1));
}

@mixin -ms-1 {
  @include ms-(-($\1));
}

@mixin -me-1 {
  @include me-(-($\1));
}

@mixin -mt-1 {
  @include mt-(-($\1));
}

@mixin -mr-1 {
  @include mr-(-($\1));
}

@mixin -mb-1 {
  @include mb-(-($\1));
}

@mixin -ml-1 {
  @include ml-(-($\1));
}

@mixin -m-1\.5 {
  @include m-(-($\1\.5));
}

@mixin -mx-1\.5 {
  @include mx-(-($\1\.5));
}

@mixin -my-1\.5 {
  @include my-(-($\1\.5));
}

@mixin -ms-1\.5 {
  @include ms-(-($\1\.5));
}

@mixin -me-1\.5 {
  @include me-(-($\1\.5));
}

@mixin -mt-1\.5 {
  @include mt-(-($\1\.5));
}

@mixin -mr-1\.5 {
  @include mr-(-($\1\.5));
}

@mixin -mb-1\.5 {
  @include mb-(-($\1\.5));
}

@mixin -ml-1\.5 {
  @include ml-(-($\1\.5));
}

@mixin -m-2 {
  @include m-(-($\2));
}

@mixin -mx-2 {
  @include mx-(-($\2));
}

@mixin -my-2 {
  @include my-(-($\2));
}

@mixin -ms-2 {
  @include ms-(-($\2));
}

@mixin -me-2 {
  @include me-(-($\2));
}

@mixin -mt-2 {
  @include mt-(-($\2));
}

@mixin -mr-2 {
  @include mr-(-($\2));
}

@mixin -mb-2 {
  @include mb-(-($\2));
}

@mixin -ml-2 {
  @include ml-(-($\2));
}

@mixin -m-2\.5 {
  @include m-(-($\2\.5));
}

@mixin -mx-2\.5 {
  @include mx-(-($\2\.5));
}

@mixin -my-2\.5 {
  @include my-(-($\2\.5));
}

@mixin -ms-2\.5 {
  @include ms-(-($\2\.5));
}

@mixin -me-2\.5 {
  @include me-(-($\2\.5));
}

@mixin -mt-2\.5 {
  @include mt-(-($\2\.5));
}

@mixin -mr-2\.5 {
  @include mr-(-($\2\.5));
}

@mixin -mb-2\.5 {
  @include mb-(-($\2\.5));
}

@mixin -ml-2\.5 {
  @include ml-(-($\2\.5));
}

@mixin -m-3 {
  @include m-(-($\3));
}

@mixin -mx-3 {
  @include mx-(-($\3));
}

@mixin -my-3 {
  @include my-(-($\3));
}

@mixin -ms-3 {
  @include ms-(-($\3));
}

@mixin -me-3 {
  @include me-(-($\3));
}

@mixin -mt-3 {
  @include mt-(-($\3));
}

@mixin -mr-3 {
  @include mr-(-($\3));
}

@mixin -mb-3 {
  @include mb-(-($\3));
}

@mixin -ml-3 {
  @include ml-(-($\3));
}

@mixin -m-3\.5 {
  @include m-(-($\3\.5));
}

@mixin -mx-3\.5 {
  @include mx-(-($\3\.5));
}

@mixin -my-3\.5 {
  @include my-(-($\3\.5));
}

@mixin -ms-3\.5 {
  @include ms-(-($\3\.5));
}

@mixin -me-3\.5 {
  @include me-(-($\3\.5));
}

@mixin -mt-3\.5 {
  @include mt-(-($\3\.5));
}

@mixin -mr-3\.5 {
  @include mr-(-($\3\.5));
}

@mixin -mb-3\.5 {
  @include mb-(-($\3\.5));
}

@mixin -ml-3\.5 {
  @include ml-(-($\3\.5));
}

@mixin -m-4 {
  @include m-(-($\4));
}

@mixin -mx-4 {
  @include mx-(-($\4));
}

@mixin -my-4 {
  @include my-(-($\4));
}

@mixin -ms-4 {
  @include ms-(-($\4));
}

@mixin -me-4 {
  @include me-(-($\4));
}

@mixin -mt-4 {
  @include mt-(-($\4));
}

@mixin -mr-4 {
  @include mr-(-($\4));
}

@mixin -mb-4 {
  @include mb-(-($\4));
}

@mixin -ml-4 {
  @include ml-(-($\4));
}

@mixin -m-5 {
  @include m-(-($\5));
}

@mixin -mx-5 {
  @include mx-(-($\5));
}

@mixin -my-5 {
  @include my-(-($\5));
}

@mixin -ms-5 {
  @include ms-(-($\5));
}

@mixin -me-5 {
  @include me-(-($\5));
}

@mixin -mt-5 {
  @include mt-(-($\5));
}

@mixin -mr-5 {
  @include mr-(-($\5));
}

@mixin -mb-5 {
  @include mb-(-($\5));
}

@mixin -ml-5 {
  @include ml-(-($\5));
}

@mixin -m-6 {
  @include m-(-($\6));
}

@mixin -mx-6 {
  @include mx-(-($\6));
}

@mixin -my-6 {
  @include my-(-($\6));
}

@mixin -ms-6 {
  @include ms-(-($\6));
}

@mixin -me-6 {
  @include me-(-($\6));
}

@mixin -mt-6 {
  @include mt-(-($\6));
}

@mixin -mr-6 {
  @include mr-(-($\6));
}

@mixin -mb-6 {
  @include mb-(-($\6));
}

@mixin -ml-6 {
  @include ml-(-($\6));
}

@mixin -m-7 {
  @include m-(-($\7));
}

@mixin -mx-7 {
  @include mx-(-($\7));
}

@mixin -my-7 {
  @include my-(-($\7));
}

@mixin -ms-7 {
  @include ms-(-($\7));
}

@mixin -me-7 {
  @include me-(-($\7));
}

@mixin -mt-7 {
  @include mt-(-($\7));
}

@mixin -mr-7 {
  @include mr-(-($\7));
}

@mixin -mb-7 {
  @include mb-(-($\7));
}

@mixin -ml-7 {
  @include ml-(-($\7));
}

@mixin -m-8 {
  @include m-(-($\8));
}

@mixin -mx-8 {
  @include mx-(-($\8));
}

@mixin -my-8 {
  @include my-(-($\8));
}

@mixin -ms-8 {
  @include ms-(-($\8));
}

@mixin -me-8 {
  @include me-(-($\8));
}

@mixin -mt-8 {
  @include mt-(-($\8));
}

@mixin -mr-8 {
  @include mr-(-($\8));
}

@mixin -mb-8 {
  @include mb-(-($\8));
}

@mixin -ml-8 {
  @include ml-(-($\8));
}

@mixin -m-9 {
  @include m-(-($\9));
}

@mixin -mx-9 {
  @include mx-(-($\9));
}

@mixin -my-9 {
  @include my-(-($\9));
}

@mixin -ms-9 {
  @include ms-(-($\9));
}

@mixin -me-9 {
  @include me-(-($\9));
}

@mixin -mt-9 {
  @include mt-(-($\9));
}

@mixin -mr-9 {
  @include mr-(-($\9));
}

@mixin -mb-9 {
  @include mb-(-($\9));
}

@mixin -ml-9 {
  @include ml-(-($\9));
}

@mixin -m-10 {
  @include m-(-($\10));
}

@mixin -mx-10 {
  @include mx-(-($\10));
}

@mixin -my-10 {
  @include my-(-($\10));
}

@mixin -ms-10 {
  @include ms-(-($\10));
}

@mixin -me-10 {
  @include me-(-($\10));
}

@mixin -mt-10 {
  @include mt-(-($\10));
}

@mixin -mr-10 {
  @include mr-(-($\10));
}

@mixin -mb-10 {
  @include mb-(-($\10));
}

@mixin -ml-10 {
  @include ml-(-($\10));
}

@mixin -m-11 {
  @include m-(-($\11));
}

@mixin -mx-11 {
  @include mx-(-($\11));
}

@mixin -my-11 {
  @include my-(-($\11));
}

@mixin -ms-11 {
  @include ms-(-($\11));
}

@mixin -me-11 {
  @include me-(-($\11));
}

@mixin -mt-11 {
  @include mt-(-($\11));
}

@mixin -mr-11 {
  @include mr-(-($\11));
}

@mixin -mb-11 {
  @include mb-(-($\11));
}

@mixin -ml-11 {
  @include ml-(-($\11));
}

@mixin -m-12 {
  @include m-(-($\12));
}

@mixin -mx-12 {
  @include mx-(-($\12));
}

@mixin -my-12 {
  @include my-(-($\12));
}

@mixin -ms-12 {
  @include ms-(-($\12));
}

@mixin -me-12 {
  @include me-(-($\12));
}

@mixin -mt-12 {
  @include mt-(-($\12));
}

@mixin -mr-12 {
  @include mr-(-($\12));
}

@mixin -mb-12 {
  @include mb-(-($\12));
}

@mixin -ml-12 {
  @include ml-(-($\12));
}

@mixin -m-14 {
  @include m-(-($\14));
}

@mixin -mx-14 {
  @include mx-(-($\14));
}

@mixin -my-14 {
  @include my-(-($\14));
}

@mixin -ms-14 {
  @include ms-(-($\14));
}

@mixin -me-14 {
  @include me-(-($\14));
}

@mixin -mt-14 {
  @include mt-(-($\14));
}

@mixin -mr-14 {
  @include mr-(-($\14));
}

@mixin -mb-14 {
  @include mb-(-($\14));
}

@mixin -ml-14 {
  @include ml-(-($\14));
}

@mixin -m-16 {
  @include m-(-($\16));
}

@mixin -mx-16 {
  @include mx-(-($\16));
}

@mixin -my-16 {
  @include my-(-($\16));
}

@mixin -ms-16 {
  @include ms-(-($\16));
}

@mixin -me-16 {
  @include me-(-($\16));
}

@mixin -mt-16 {
  @include mt-(-($\16));
}

@mixin -mr-16 {
  @include mr-(-($\16));
}

@mixin -mb-16 {
  @include mb-(-($\16));
}

@mixin -ml-16 {
  @include ml-(-($\16));
}

@mixin -m-20 {
  @include m-(-($\20));
}

@mixin -mx-20 {
  @include mx-(-($\20));
}

@mixin -my-20 {
  @include my-(-($\20));
}

@mixin -ms-20 {
  @include ms-(-($\20));
}

@mixin -me-20 {
  @include me-(-($\20));
}

@mixin -mt-20 {
  @include mt-(-($\20));
}

@mixin -mr-20 {
  @include mr-(-($\20));
}

@mixin -mb-20 {
  @include mb-(-($\20));
}

@mixin -ml-20 {
  @include ml-(-($\20));
}

@mixin -m-24 {
  @include m-(-($\24));
}

@mixin -mx-24 {
  @include mx-(-($\24));
}

@mixin -my-24 {
  @include my-(-($\24));
}

@mixin -ms-24 {
  @include ms-(-($\24));
}

@mixin -me-24 {
  @include me-(-($\24));
}

@mixin -mt-24 {
  @include mt-(-($\24));
}

@mixin -mr-24 {
  @include mr-(-($\24));
}

@mixin -mb-24 {
  @include mb-(-($\24));
}

@mixin -ml-24 {
  @include ml-(-($\24));
}

@mixin -m-28 {
  @include m-(-($\28));
}

@mixin -mx-28 {
  @include mx-(-($\28));
}

@mixin -my-28 {
  @include my-(-($\28));
}

@mixin -ms-28 {
  @include ms-(-($\28));
}

@mixin -me-28 {
  @include me-(-($\28));
}

@mixin -mt-28 {
  @include mt-(-($\28));
}

@mixin -mr-28 {
  @include mr-(-($\28));
}

@mixin -mb-28 {
  @include mb-(-($\28));
}

@mixin -ml-28 {
  @include ml-(-($\28));
}

@mixin -m-32 {
  @include m-(-($\32));
}

@mixin -mx-32 {
  @include mx-(-($\32));
}

@mixin -my-32 {
  @include my-(-($\32));
}

@mixin -ms-32 {
  @include ms-(-($\32));
}

@mixin -me-32 {
  @include me-(-($\32));
}

@mixin -mt-32 {
  @include mt-(-($\32));
}

@mixin -mr-32 {
  @include mr-(-($\32));
}

@mixin -mb-32 {
  @include mb-(-($\32));
}

@mixin -ml-32 {
  @include ml-(-($\32));
}

@mixin -m-36 {
  @include m-(-($\36));
}

@mixin -mx-36 {
  @include mx-(-($\36));
}

@mixin -my-36 {
  @include my-(-($\36));
}

@mixin -ms-36 {
  @include ms-(-($\36));
}

@mixin -me-36 {
  @include me-(-($\36));
}

@mixin -mt-36 {
  @include mt-(-($\36));
}

@mixin -mr-36 {
  @include mr-(-($\36));
}

@mixin -mb-36 {
  @include mb-(-($\36));
}

@mixin -ml-36 {
  @include ml-(-($\36));
}

@mixin -m-40 {
  @include m-(-($\40));
}

@mixin -mx-40 {
  @include mx-(-($\40));
}

@mixin -my-40 {
  @include my-(-($\40));
}

@mixin -ms-40 {
  @include ms-(-($\40));
}

@mixin -me-40 {
  @include me-(-($\40));
}

@mixin -mt-40 {
  @include mt-(-($\40));
}

@mixin -mr-40 {
  @include mr-(-($\40));
}

@mixin -mb-40 {
  @include mb-(-($\40));
}

@mixin -ml-40 {
  @include ml-(-($\40));
}

@mixin -m-44 {
  @include m-(-($\44));
}

@mixin -mx-44 {
  @include mx-(-($\44));
}

@mixin -my-44 {
  @include my-(-($\44));
}

@mixin -ms-44 {
  @include ms-(-($\44));
}

@mixin -me-44 {
  @include me-(-($\44));
}

@mixin -mt-44 {
  @include mt-(-($\44));
}

@mixin -mr-44 {
  @include mr-(-($\44));
}

@mixin -mb-44 {
  @include mb-(-($\44));
}

@mixin -ml-44 {
  @include ml-(-($\44));
}

@mixin -m-48 {
  @include m-(-($\48));
}

@mixin -mx-48 {
  @include mx-(-($\48));
}

@mixin -my-48 {
  @include my-(-($\48));
}

@mixin -ms-48 {
  @include ms-(-($\48));
}

@mixin -me-48 {
  @include me-(-($\48));
}

@mixin -mt-48 {
  @include mt-(-($\48));
}

@mixin -mr-48 {
  @include mr-(-($\48));
}

@mixin -mb-48 {
  @include mb-(-($\48));
}

@mixin -ml-48 {
  @include ml-(-($\48));
}

@mixin -m-52 {
  @include m-(-($\52));
}

@mixin -mx-52 {
  @include mx-(-($\52));
}

@mixin -my-52 {
  @include my-(-($\52));
}

@mixin -ms-52 {
  @include ms-(-($\52));
}

@mixin -me-52 {
  @include me-(-($\52));
}

@mixin -mt-52 {
  @include mt-(-($\52));
}

@mixin -mr-52 {
  @include mr-(-($\52));
}

@mixin -mb-52 {
  @include mb-(-($\52));
}

@mixin -ml-52 {
  @include ml-(-($\52));
}

@mixin -m-56 {
  @include m-(-($\56));
}

@mixin -mx-56 {
  @include mx-(-($\56));
}

@mixin -my-56 {
  @include my-(-($\56));
}

@mixin -ms-56 {
  @include ms-(-($\56));
}

@mixin -me-56 {
  @include me-(-($\56));
}

@mixin -mt-56 {
  @include mt-(-($\56));
}

@mixin -mr-56 {
  @include mr-(-($\56));
}

@mixin -mb-56 {
  @include mb-(-($\56));
}

@mixin -ml-56 {
  @include ml-(-($\56));
}

@mixin -m-60 {
  @include m-(-($\60));
}

@mixin -mx-60 {
  @include mx-(-($\60));
}

@mixin -my-60 {
  @include my-(-($\60));
}

@mixin -ms-60 {
  @include ms-(-($\60));
}

@mixin -me-60 {
  @include me-(-($\60));
}

@mixin -mt-60 {
  @include mt-(-($\60));
}

@mixin -mr-60 {
  @include mr-(-($\60));
}

@mixin -mb-60 {
  @include mb-(-($\60));
}

@mixin -ml-60 {
  @include ml-(-($\60));
}

@mixin -m-64 {
  @include m-(-($\64));
}

@mixin -mx-64 {
  @include mx-(-($\64));
}

@mixin -my-64 {
  @include my-(-($\64));
}

@mixin -ms-64 {
  @include ms-(-($\64));
}

@mixin -me-64 {
  @include me-(-($\64));
}

@mixin -mt-64 {
  @include mt-(-($\64));
}

@mixin -mr-64 {
  @include mr-(-($\64));
}

@mixin -mb-64 {
  @include mb-(-($\64));
}

@mixin -ml-64 {
  @include ml-(-($\64));
}

@mixin -m-72 {
  @include m-(-($\72));
}

@mixin -mx-72 {
  @include mx-(-($\72));
}

@mixin -my-72 {
  @include my-(-($\72));
}

@mixin -ms-72 {
  @include ms-(-($\72));
}

@mixin -me-72 {
  @include me-(-($\72));
}

@mixin -mt-72 {
  @include mt-(-($\72));
}

@mixin -mr-72 {
  @include mr-(-($\72));
}

@mixin -mb-72 {
  @include mb-(-($\72));
}

@mixin -ml-72 {
  @include ml-(-($\72));
}

@mixin -m-80 {
  @include m-(-($\80));
}

@mixin -mx-80 {
  @include mx-(-($\80));
}

@mixin -my-80 {
  @include my-(-($\80));
}

@mixin -ms-80 {
  @include ms-(-($\80));
}

@mixin -me-80 {
  @include me-(-($\80));
}

@mixin -mt-80 {
  @include mt-(-($\80));
}

@mixin -mr-80 {
  @include mr-(-($\80));
}

@mixin -mb-80 {
  @include mb-(-($\80));
}

@mixin -ml-80 {
  @include ml-(-($\80));
}

@mixin -m-96 {
  @include m-(-($\96));
}

@mixin -mx-96 {
  @include mx-(-($\96));
}

@mixin -my-96 {
  @include my-(-($\96));
}

@mixin -ms-96 {
  @include ms-(-($\96));
}

@mixin -me-96 {
  @include me-(-($\96));
}

@mixin -mt-96 {
  @include mt-(-($\96));
}

@mixin -mr-96 {
  @include mr-(-($\96));
}

@mixin -mb-96 {
  @include mb-(-($\96));
}

@mixin -ml-96 {
  @include ml-(-($\96));
}

@mixin sm\:-m-0 {
  @include m-(-($\0), $sm);
}

@mixin sm\:-mx-0 {
  @include mx-(-($\0), $sm);
}

@mixin sm\:-my-0 {
  @include my-(-($\0), $sm);
}

@mixin sm\:-ms-0 {
  @include ms-(-($\0), $sm);
}

@mixin sm\:-me-0 {
  @include me-(-($\0), $sm);
}

@mixin sm\:-mt-0 {
  @include mt-(-($\0), $sm);
}

@mixin sm\:-mr-0 {
  @include mr-(-($\0), $sm);
}

@mixin sm\:-mb-0 {
  @include mb-(-($\0), $sm);
}

@mixin sm\:-ml-0 {
  @include ml-(-($\0), $sm);
}

@mixin sm\:-m-px {
  @include m-(-($\px), $sm);
}

@mixin sm\:-mx-px {
  @include mx-(-($\px), $sm);
}

@mixin sm\:-my-px {
  @include my-(-($\px), $sm);
}

@mixin sm\:-ms-px {
  @include ms-(-($\px), $sm);
}

@mixin sm\:-me-px {
  @include me-(-($\px), $sm);
}

@mixin sm\:-mt-px {
  @include mt-(-($\px), $sm);
}

@mixin sm\:-mr-px {
  @include mr-(-($\px), $sm);
}

@mixin sm\:-mb-px {
  @include mb-(-($\px), $sm);
}

@mixin sm\:-ml-px {
  @include ml-(-($\px), $sm);
}

@mixin sm\:-m-0\.5 {
  @include m-(-($\0\.5), $sm);
}

@mixin sm\:-mx-0\.5 {
  @include mx-(-($\0\.5), $sm);
}

@mixin sm\:-my-0\.5 {
  @include my-(-($\0\.5), $sm);
}

@mixin sm\:-ms-0\.5 {
  @include ms-(-($\0\.5), $sm);
}

@mixin sm\:-me-0\.5 {
  @include me-(-($\0\.5), $sm);
}

@mixin sm\:-mt-0\.5 {
  @include mt-(-($\0\.5), $sm);
}

@mixin sm\:-mr-0\.5 {
  @include mr-(-($\0\.5), $sm);
}

@mixin sm\:-mb-0\.5 {
  @include mb-(-($\0\.5), $sm);
}

@mixin sm\:-ml-0\.5 {
  @include ml-(-($\0\.5), $sm);
}

@mixin sm\:-m-1 {
  @include m-(-($\1), $sm);
}

@mixin sm\:-mx-1 {
  @include mx-(-($\1), $sm);
}

@mixin sm\:-my-1 {
  @include my-(-($\1), $sm);
}

@mixin sm\:-ms-1 {
  @include ms-(-($\1), $sm);
}

@mixin sm\:-me-1 {
  @include me-(-($\1), $sm);
}

@mixin sm\:-mt-1 {
  @include mt-(-($\1), $sm);
}

@mixin sm\:-mr-1 {
  @include mr-(-($\1), $sm);
}

@mixin sm\:-mb-1 {
  @include mb-(-($\1), $sm);
}

@mixin sm\:-ml-1 {
  @include ml-(-($\1), $sm);
}

@mixin sm\:-m-1\.5 {
  @include m-(-($\1\.5), $sm);
}

@mixin sm\:-mx-1\.5 {
  @include mx-(-($\1\.5), $sm);
}

@mixin sm\:-my-1\.5 {
  @include my-(-($\1\.5), $sm);
}

@mixin sm\:-ms-1\.5 {
  @include ms-(-($\1\.5), $sm);
}

@mixin sm\:-me-1\.5 {
  @include me-(-($\1\.5), $sm);
}

@mixin sm\:-mt-1\.5 {
  @include mt-(-($\1\.5), $sm);
}

@mixin sm\:-mr-1\.5 {
  @include mr-(-($\1\.5), $sm);
}

@mixin sm\:-mb-1\.5 {
  @include mb-(-($\1\.5), $sm);
}

@mixin sm\:-ml-1\.5 {
  @include ml-(-($\1\.5), $sm);
}

@mixin sm\:-m-2 {
  @include m-(-($\2), $sm);
}

@mixin sm\:-mx-2 {
  @include mx-(-($\2), $sm);
}

@mixin sm\:-my-2 {
  @include my-(-($\2), $sm);
}

@mixin sm\:-ms-2 {
  @include ms-(-($\2), $sm);
}

@mixin sm\:-me-2 {
  @include me-(-($\2), $sm);
}

@mixin sm\:-mt-2 {
  @include mt-(-($\2), $sm);
}

@mixin sm\:-mr-2 {
  @include mr-(-($\2), $sm);
}

@mixin sm\:-mb-2 {
  @include mb-(-($\2), $sm);
}

@mixin sm\:-ml-2 {
  @include ml-(-($\2), $sm);
}

@mixin sm\:-m-2\.5 {
  @include m-(-($\2\.5), $sm);
}

@mixin sm\:-mx-2\.5 {
  @include mx-(-($\2\.5), $sm);
}

@mixin sm\:-my-2\.5 {
  @include my-(-($\2\.5), $sm);
}

@mixin sm\:-ms-2\.5 {
  @include ms-(-($\2\.5), $sm);
}

@mixin sm\:-me-2\.5 {
  @include me-(-($\2\.5), $sm);
}

@mixin sm\:-mt-2\.5 {
  @include mt-(-($\2\.5), $sm);
}

@mixin sm\:-mr-2\.5 {
  @include mr-(-($\2\.5), $sm);
}

@mixin sm\:-mb-2\.5 {
  @include mb-(-($\2\.5), $sm);
}

@mixin sm\:-ml-2\.5 {
  @include ml-(-($\2\.5), $sm);
}

@mixin sm\:-m-3 {
  @include m-(-($\3), $sm);
}

@mixin sm\:-mx-3 {
  @include mx-(-($\3), $sm);
}

@mixin sm\:-my-3 {
  @include my-(-($\3), $sm);
}

@mixin sm\:-ms-3 {
  @include ms-(-($\3), $sm);
}

@mixin sm\:-me-3 {
  @include me-(-($\3), $sm);
}

@mixin sm\:-mt-3 {
  @include mt-(-($\3), $sm);
}

@mixin sm\:-mr-3 {
  @include mr-(-($\3), $sm);
}

@mixin sm\:-mb-3 {
  @include mb-(-($\3), $sm);
}

@mixin sm\:-ml-3 {
  @include ml-(-($\3), $sm);
}

@mixin sm\:-m-3\.5 {
  @include m-(-($\3\.5), $sm);
}

@mixin sm\:-mx-3\.5 {
  @include mx-(-($\3\.5), $sm);
}

@mixin sm\:-my-3\.5 {
  @include my-(-($\3\.5), $sm);
}

@mixin sm\:-ms-3\.5 {
  @include ms-(-($\3\.5), $sm);
}

@mixin sm\:-me-3\.5 {
  @include me-(-($\3\.5), $sm);
}

@mixin sm\:-mt-3\.5 {
  @include mt-(-($\3\.5), $sm);
}

@mixin sm\:-mr-3\.5 {
  @include mr-(-($\3\.5), $sm);
}

@mixin sm\:-mb-3\.5 {
  @include mb-(-($\3\.5), $sm);
}

@mixin sm\:-ml-3\.5 {
  @include ml-(-($\3\.5), $sm);
}

@mixin sm\:-m-4 {
  @include m-(-($\4), $sm);
}

@mixin sm\:-mx-4 {
  @include mx-(-($\4), $sm);
}

@mixin sm\:-my-4 {
  @include my-(-($\4), $sm);
}

@mixin sm\:-ms-4 {
  @include ms-(-($\4), $sm);
}

@mixin sm\:-me-4 {
  @include me-(-($\4), $sm);
}

@mixin sm\:-mt-4 {
  @include mt-(-($\4), $sm);
}

@mixin sm\:-mr-4 {
  @include mr-(-($\4), $sm);
}

@mixin sm\:-mb-4 {
  @include mb-(-($\4), $sm);
}

@mixin sm\:-ml-4 {
  @include ml-(-($\4), $sm);
}

@mixin sm\:-m-5 {
  @include m-(-($\5), $sm);
}

@mixin sm\:-mx-5 {
  @include mx-(-($\5), $sm);
}

@mixin sm\:-my-5 {
  @include my-(-($\5), $sm);
}

@mixin sm\:-ms-5 {
  @include ms-(-($\5), $sm);
}

@mixin sm\:-me-5 {
  @include me-(-($\5), $sm);
}

@mixin sm\:-mt-5 {
  @include mt-(-($\5), $sm);
}

@mixin sm\:-mr-5 {
  @include mr-(-($\5), $sm);
}

@mixin sm\:-mb-5 {
  @include mb-(-($\5), $sm);
}

@mixin sm\:-ml-5 {
  @include ml-(-($\5), $sm);
}

@mixin sm\:-m-6 {
  @include m-(-($\6), $sm);
}

@mixin sm\:-mx-6 {
  @include mx-(-($\6), $sm);
}

@mixin sm\:-my-6 {
  @include my-(-($\6), $sm);
}

@mixin sm\:-ms-6 {
  @include ms-(-($\6), $sm);
}

@mixin sm\:-me-6 {
  @include me-(-($\6), $sm);
}

@mixin sm\:-mt-6 {
  @include mt-(-($\6), $sm);
}

@mixin sm\:-mr-6 {
  @include mr-(-($\6), $sm);
}

@mixin sm\:-mb-6 {
  @include mb-(-($\6), $sm);
}

@mixin sm\:-ml-6 {
  @include ml-(-($\6), $sm);
}

@mixin sm\:-m-7 {
  @include m-(-($\7), $sm);
}

@mixin sm\:-mx-7 {
  @include mx-(-($\7), $sm);
}

@mixin sm\:-my-7 {
  @include my-(-($\7), $sm);
}

@mixin sm\:-ms-7 {
  @include ms-(-($\7), $sm);
}

@mixin sm\:-me-7 {
  @include me-(-($\7), $sm);
}

@mixin sm\:-mt-7 {
  @include mt-(-($\7), $sm);
}

@mixin sm\:-mr-7 {
  @include mr-(-($\7), $sm);
}

@mixin sm\:-mb-7 {
  @include mb-(-($\7), $sm);
}

@mixin sm\:-ml-7 {
  @include ml-(-($\7), $sm);
}

@mixin sm\:-m-8 {
  @include m-(-($\8), $sm);
}

@mixin sm\:-mx-8 {
  @include mx-(-($\8), $sm);
}

@mixin sm\:-my-8 {
  @include my-(-($\8), $sm);
}

@mixin sm\:-ms-8 {
  @include ms-(-($\8), $sm);
}

@mixin sm\:-me-8 {
  @include me-(-($\8), $sm);
}

@mixin sm\:-mt-8 {
  @include mt-(-($\8), $sm);
}

@mixin sm\:-mr-8 {
  @include mr-(-($\8), $sm);
}

@mixin sm\:-mb-8 {
  @include mb-(-($\8), $sm);
}

@mixin sm\:-ml-8 {
  @include ml-(-($\8), $sm);
}

@mixin sm\:-m-9 {
  @include m-(-($\9), $sm);
}

@mixin sm\:-mx-9 {
  @include mx-(-($\9), $sm);
}

@mixin sm\:-my-9 {
  @include my-(-($\9), $sm);
}

@mixin sm\:-ms-9 {
  @include ms-(-($\9), $sm);
}

@mixin sm\:-me-9 {
  @include me-(-($\9), $sm);
}

@mixin sm\:-mt-9 {
  @include mt-(-($\9), $sm);
}

@mixin sm\:-mr-9 {
  @include mr-(-($\9), $sm);
}

@mixin sm\:-mb-9 {
  @include mb-(-($\9), $sm);
}

@mixin sm\:-ml-9 {
  @include ml-(-($\9), $sm);
}

@mixin sm\:-m-10 {
  @include m-(-($\10), $sm);
}

@mixin sm\:-mx-10 {
  @include mx-(-($\10), $sm);
}

@mixin sm\:-my-10 {
  @include my-(-($\10), $sm);
}

@mixin sm\:-ms-10 {
  @include ms-(-($\10), $sm);
}

@mixin sm\:-me-10 {
  @include me-(-($\10), $sm);
}

@mixin sm\:-mt-10 {
  @include mt-(-($\10), $sm);
}

@mixin sm\:-mr-10 {
  @include mr-(-($\10), $sm);
}

@mixin sm\:-mb-10 {
  @include mb-(-($\10), $sm);
}

@mixin sm\:-ml-10 {
  @include ml-(-($\10), $sm);
}

@mixin sm\:-m-11 {
  @include m-(-($\11), $sm);
}

@mixin sm\:-mx-11 {
  @include mx-(-($\11), $sm);
}

@mixin sm\:-my-11 {
  @include my-(-($\11), $sm);
}

@mixin sm\:-ms-11 {
  @include ms-(-($\11), $sm);
}

@mixin sm\:-me-11 {
  @include me-(-($\11), $sm);
}

@mixin sm\:-mt-11 {
  @include mt-(-($\11), $sm);
}

@mixin sm\:-mr-11 {
  @include mr-(-($\11), $sm);
}

@mixin sm\:-mb-11 {
  @include mb-(-($\11), $sm);
}

@mixin sm\:-ml-11 {
  @include ml-(-($\11), $sm);
}

@mixin sm\:-m-12 {
  @include m-(-($\12), $sm);
}

@mixin sm\:-mx-12 {
  @include mx-(-($\12), $sm);
}

@mixin sm\:-my-12 {
  @include my-(-($\12), $sm);
}

@mixin sm\:-ms-12 {
  @include ms-(-($\12), $sm);
}

@mixin sm\:-me-12 {
  @include me-(-($\12), $sm);
}

@mixin sm\:-mt-12 {
  @include mt-(-($\12), $sm);
}

@mixin sm\:-mr-12 {
  @include mr-(-($\12), $sm);
}

@mixin sm\:-mb-12 {
  @include mb-(-($\12), $sm);
}

@mixin sm\:-ml-12 {
  @include ml-(-($\12), $sm);
}

@mixin sm\:-m-14 {
  @include m-(-($\14), $sm);
}

@mixin sm\:-mx-14 {
  @include mx-(-($\14), $sm);
}

@mixin sm\:-my-14 {
  @include my-(-($\14), $sm);
}

@mixin sm\:-ms-14 {
  @include ms-(-($\14), $sm);
}

@mixin sm\:-me-14 {
  @include me-(-($\14), $sm);
}

@mixin sm\:-mt-14 {
  @include mt-(-($\14), $sm);
}

@mixin sm\:-mr-14 {
  @include mr-(-($\14), $sm);
}

@mixin sm\:-mb-14 {
  @include mb-(-($\14), $sm);
}

@mixin sm\:-ml-14 {
  @include ml-(-($\14), $sm);
}

@mixin sm\:-m-16 {
  @include m-(-($\16), $sm);
}

@mixin sm\:-mx-16 {
  @include mx-(-($\16), $sm);
}

@mixin sm\:-my-16 {
  @include my-(-($\16), $sm);
}

@mixin sm\:-ms-16 {
  @include ms-(-($\16), $sm);
}

@mixin sm\:-me-16 {
  @include me-(-($\16), $sm);
}

@mixin sm\:-mt-16 {
  @include mt-(-($\16), $sm);
}

@mixin sm\:-mr-16 {
  @include mr-(-($\16), $sm);
}

@mixin sm\:-mb-16 {
  @include mb-(-($\16), $sm);
}

@mixin sm\:-ml-16 {
  @include ml-(-($\16), $sm);
}

@mixin sm\:-m-20 {
  @include m-(-($\20), $sm);
}

@mixin sm\:-mx-20 {
  @include mx-(-($\20), $sm);
}

@mixin sm\:-my-20 {
  @include my-(-($\20), $sm);
}

@mixin sm\:-ms-20 {
  @include ms-(-($\20), $sm);
}

@mixin sm\:-me-20 {
  @include me-(-($\20), $sm);
}

@mixin sm\:-mt-20 {
  @include mt-(-($\20), $sm);
}

@mixin sm\:-mr-20 {
  @include mr-(-($\20), $sm);
}

@mixin sm\:-mb-20 {
  @include mb-(-($\20), $sm);
}

@mixin sm\:-ml-20 {
  @include ml-(-($\20), $sm);
}

@mixin sm\:-m-24 {
  @include m-(-($\24), $sm);
}

@mixin sm\:-mx-24 {
  @include mx-(-($\24), $sm);
}

@mixin sm\:-my-24 {
  @include my-(-($\24), $sm);
}

@mixin sm\:-ms-24 {
  @include ms-(-($\24), $sm);
}

@mixin sm\:-me-24 {
  @include me-(-($\24), $sm);
}

@mixin sm\:-mt-24 {
  @include mt-(-($\24), $sm);
}

@mixin sm\:-mr-24 {
  @include mr-(-($\24), $sm);
}

@mixin sm\:-mb-24 {
  @include mb-(-($\24), $sm);
}

@mixin sm\:-ml-24 {
  @include ml-(-($\24), $sm);
}

@mixin sm\:-m-28 {
  @include m-(-($\28), $sm);
}

@mixin sm\:-mx-28 {
  @include mx-(-($\28), $sm);
}

@mixin sm\:-my-28 {
  @include my-(-($\28), $sm);
}

@mixin sm\:-ms-28 {
  @include ms-(-($\28), $sm);
}

@mixin sm\:-me-28 {
  @include me-(-($\28), $sm);
}

@mixin sm\:-mt-28 {
  @include mt-(-($\28), $sm);
}

@mixin sm\:-mr-28 {
  @include mr-(-($\28), $sm);
}

@mixin sm\:-mb-28 {
  @include mb-(-($\28), $sm);
}

@mixin sm\:-ml-28 {
  @include ml-(-($\28), $sm);
}

@mixin sm\:-m-32 {
  @include m-(-($\32), $sm);
}

@mixin sm\:-mx-32 {
  @include mx-(-($\32), $sm);
}

@mixin sm\:-my-32 {
  @include my-(-($\32), $sm);
}

@mixin sm\:-ms-32 {
  @include ms-(-($\32), $sm);
}

@mixin sm\:-me-32 {
  @include me-(-($\32), $sm);
}

@mixin sm\:-mt-32 {
  @include mt-(-($\32), $sm);
}

@mixin sm\:-mr-32 {
  @include mr-(-($\32), $sm);
}

@mixin sm\:-mb-32 {
  @include mb-(-($\32), $sm);
}

@mixin sm\:-ml-32 {
  @include ml-(-($\32), $sm);
}

@mixin sm\:-m-36 {
  @include m-(-($\36), $sm);
}

@mixin sm\:-mx-36 {
  @include mx-(-($\36), $sm);
}

@mixin sm\:-my-36 {
  @include my-(-($\36), $sm);
}

@mixin sm\:-ms-36 {
  @include ms-(-($\36), $sm);
}

@mixin sm\:-me-36 {
  @include me-(-($\36), $sm);
}

@mixin sm\:-mt-36 {
  @include mt-(-($\36), $sm);
}

@mixin sm\:-mr-36 {
  @include mr-(-($\36), $sm);
}

@mixin sm\:-mb-36 {
  @include mb-(-($\36), $sm);
}

@mixin sm\:-ml-36 {
  @include ml-(-($\36), $sm);
}

@mixin sm\:-m-40 {
  @include m-(-($\40), $sm);
}

@mixin sm\:-mx-40 {
  @include mx-(-($\40), $sm);
}

@mixin sm\:-my-40 {
  @include my-(-($\40), $sm);
}

@mixin sm\:-ms-40 {
  @include ms-(-($\40), $sm);
}

@mixin sm\:-me-40 {
  @include me-(-($\40), $sm);
}

@mixin sm\:-mt-40 {
  @include mt-(-($\40), $sm);
}

@mixin sm\:-mr-40 {
  @include mr-(-($\40), $sm);
}

@mixin sm\:-mb-40 {
  @include mb-(-($\40), $sm);
}

@mixin sm\:-ml-40 {
  @include ml-(-($\40), $sm);
}

@mixin sm\:-m-44 {
  @include m-(-($\44), $sm);
}

@mixin sm\:-mx-44 {
  @include mx-(-($\44), $sm);
}

@mixin sm\:-my-44 {
  @include my-(-($\44), $sm);
}

@mixin sm\:-ms-44 {
  @include ms-(-($\44), $sm);
}

@mixin sm\:-me-44 {
  @include me-(-($\44), $sm);
}

@mixin sm\:-mt-44 {
  @include mt-(-($\44), $sm);
}

@mixin sm\:-mr-44 {
  @include mr-(-($\44), $sm);
}

@mixin sm\:-mb-44 {
  @include mb-(-($\44), $sm);
}

@mixin sm\:-ml-44 {
  @include ml-(-($\44), $sm);
}

@mixin sm\:-m-48 {
  @include m-(-($\48), $sm);
}

@mixin sm\:-mx-48 {
  @include mx-(-($\48), $sm);
}

@mixin sm\:-my-48 {
  @include my-(-($\48), $sm);
}

@mixin sm\:-ms-48 {
  @include ms-(-($\48), $sm);
}

@mixin sm\:-me-48 {
  @include me-(-($\48), $sm);
}

@mixin sm\:-mt-48 {
  @include mt-(-($\48), $sm);
}

@mixin sm\:-mr-48 {
  @include mr-(-($\48), $sm);
}

@mixin sm\:-mb-48 {
  @include mb-(-($\48), $sm);
}

@mixin sm\:-ml-48 {
  @include ml-(-($\48), $sm);
}

@mixin sm\:-m-52 {
  @include m-(-($\52), $sm);
}

@mixin sm\:-mx-52 {
  @include mx-(-($\52), $sm);
}

@mixin sm\:-my-52 {
  @include my-(-($\52), $sm);
}

@mixin sm\:-ms-52 {
  @include ms-(-($\52), $sm);
}

@mixin sm\:-me-52 {
  @include me-(-($\52), $sm);
}

@mixin sm\:-mt-52 {
  @include mt-(-($\52), $sm);
}

@mixin sm\:-mr-52 {
  @include mr-(-($\52), $sm);
}

@mixin sm\:-mb-52 {
  @include mb-(-($\52), $sm);
}

@mixin sm\:-ml-52 {
  @include ml-(-($\52), $sm);
}

@mixin sm\:-m-56 {
  @include m-(-($\56), $sm);
}

@mixin sm\:-mx-56 {
  @include mx-(-($\56), $sm);
}

@mixin sm\:-my-56 {
  @include my-(-($\56), $sm);
}

@mixin sm\:-ms-56 {
  @include ms-(-($\56), $sm);
}

@mixin sm\:-me-56 {
  @include me-(-($\56), $sm);
}

@mixin sm\:-mt-56 {
  @include mt-(-($\56), $sm);
}

@mixin sm\:-mr-56 {
  @include mr-(-($\56), $sm);
}

@mixin sm\:-mb-56 {
  @include mb-(-($\56), $sm);
}

@mixin sm\:-ml-56 {
  @include ml-(-($\56), $sm);
}

@mixin sm\:-m-60 {
  @include m-(-($\60), $sm);
}

@mixin sm\:-mx-60 {
  @include mx-(-($\60), $sm);
}

@mixin sm\:-my-60 {
  @include my-(-($\60), $sm);
}

@mixin sm\:-ms-60 {
  @include ms-(-($\60), $sm);
}

@mixin sm\:-me-60 {
  @include me-(-($\60), $sm);
}

@mixin sm\:-mt-60 {
  @include mt-(-($\60), $sm);
}

@mixin sm\:-mr-60 {
  @include mr-(-($\60), $sm);
}

@mixin sm\:-mb-60 {
  @include mb-(-($\60), $sm);
}

@mixin sm\:-ml-60 {
  @include ml-(-($\60), $sm);
}

@mixin sm\:-m-64 {
  @include m-(-($\64), $sm);
}

@mixin sm\:-mx-64 {
  @include mx-(-($\64), $sm);
}

@mixin sm\:-my-64 {
  @include my-(-($\64), $sm);
}

@mixin sm\:-ms-64 {
  @include ms-(-($\64), $sm);
}

@mixin sm\:-me-64 {
  @include me-(-($\64), $sm);
}

@mixin sm\:-mt-64 {
  @include mt-(-($\64), $sm);
}

@mixin sm\:-mr-64 {
  @include mr-(-($\64), $sm);
}

@mixin sm\:-mb-64 {
  @include mb-(-($\64), $sm);
}

@mixin sm\:-ml-64 {
  @include ml-(-($\64), $sm);
}

@mixin sm\:-m-72 {
  @include m-(-($\72), $sm);
}

@mixin sm\:-mx-72 {
  @include mx-(-($\72), $sm);
}

@mixin sm\:-my-72 {
  @include my-(-($\72), $sm);
}

@mixin sm\:-ms-72 {
  @include ms-(-($\72), $sm);
}

@mixin sm\:-me-72 {
  @include me-(-($\72), $sm);
}

@mixin sm\:-mt-72 {
  @include mt-(-($\72), $sm);
}

@mixin sm\:-mr-72 {
  @include mr-(-($\72), $sm);
}

@mixin sm\:-mb-72 {
  @include mb-(-($\72), $sm);
}

@mixin sm\:-ml-72 {
  @include ml-(-($\72), $sm);
}

@mixin sm\:-m-80 {
  @include m-(-($\80), $sm);
}

@mixin sm\:-mx-80 {
  @include mx-(-($\80), $sm);
}

@mixin sm\:-my-80 {
  @include my-(-($\80), $sm);
}

@mixin sm\:-ms-80 {
  @include ms-(-($\80), $sm);
}

@mixin sm\:-me-80 {
  @include me-(-($\80), $sm);
}

@mixin sm\:-mt-80 {
  @include mt-(-($\80), $sm);
}

@mixin sm\:-mr-80 {
  @include mr-(-($\80), $sm);
}

@mixin sm\:-mb-80 {
  @include mb-(-($\80), $sm);
}

@mixin sm\:-ml-80 {
  @include ml-(-($\80), $sm);
}

@mixin sm\:-m-96 {
  @include m-(-($\96), $sm);
}

@mixin sm\:-mx-96 {
  @include mx-(-($\96), $sm);
}

@mixin sm\:-my-96 {
  @include my-(-($\96), $sm);
}

@mixin sm\:-ms-96 {
  @include ms-(-($\96), $sm);
}

@mixin sm\:-me-96 {
  @include me-(-($\96), $sm);
}

@mixin sm\:-mt-96 {
  @include mt-(-($\96), $sm);
}

@mixin sm\:-mr-96 {
  @include mr-(-($\96), $sm);
}

@mixin sm\:-mb-96 {
  @include mb-(-($\96), $sm);
}

@mixin sm\:-ml-96 {
  @include ml-(-($\96), $sm);
}

@mixin md\:-m-0 {
  @include m-(-($\0), $md);
}

@mixin md\:-mx-0 {
  @include mx-(-($\0), $md);
}

@mixin md\:-my-0 {
  @include my-(-($\0), $md);
}

@mixin md\:-ms-0 {
  @include ms-(-($\0), $md);
}

@mixin md\:-me-0 {
  @include me-(-($\0), $md);
}

@mixin md\:-mt-0 {
  @include mt-(-($\0), $md);
}

@mixin md\:-mr-0 {
  @include mr-(-($\0), $md);
}

@mixin md\:-mb-0 {
  @include mb-(-($\0), $md);
}

@mixin md\:-ml-0 {
  @include ml-(-($\0), $md);
}

@mixin md\:-m-px {
  @include m-(-($\px), $md);
}

@mixin md\:-mx-px {
  @include mx-(-($\px), $md);
}

@mixin md\:-my-px {
  @include my-(-($\px), $md);
}

@mixin md\:-ms-px {
  @include ms-(-($\px), $md);
}

@mixin md\:-me-px {
  @include me-(-($\px), $md);
}

@mixin md\:-mt-px {
  @include mt-(-($\px), $md);
}

@mixin md\:-mr-px {
  @include mr-(-($\px), $md);
}

@mixin md\:-mb-px {
  @include mb-(-($\px), $md);
}

@mixin md\:-ml-px {
  @include ml-(-($\px), $md);
}

@mixin md\:-m-0\.5 {
  @include m-(-($\0\.5), $md);
}

@mixin md\:-mx-0\.5 {
  @include mx-(-($\0\.5), $md);
}

@mixin md\:-my-0\.5 {
  @include my-(-($\0\.5), $md);
}

@mixin md\:-ms-0\.5 {
  @include ms-(-($\0\.5), $md);
}

@mixin md\:-me-0\.5 {
  @include me-(-($\0\.5), $md);
}

@mixin md\:-mt-0\.5 {
  @include mt-(-($\0\.5), $md);
}

@mixin md\:-mr-0\.5 {
  @include mr-(-($\0\.5), $md);
}

@mixin md\:-mb-0\.5 {
  @include mb-(-($\0\.5), $md);
}

@mixin md\:-ml-0\.5 {
  @include ml-(-($\0\.5), $md);
}

@mixin md\:-m-1 {
  @include m-(-($\1), $md);
}

@mixin md\:-mx-1 {
  @include mx-(-($\1), $md);
}

@mixin md\:-my-1 {
  @include my-(-($\1), $md);
}

@mixin md\:-ms-1 {
  @include ms-(-($\1), $md);
}

@mixin md\:-me-1 {
  @include me-(-($\1), $md);
}

@mixin md\:-mt-1 {
  @include mt-(-($\1), $md);
}

@mixin md\:-mr-1 {
  @include mr-(-($\1), $md);
}

@mixin md\:-mb-1 {
  @include mb-(-($\1), $md);
}

@mixin md\:-ml-1 {
  @include ml-(-($\1), $md);
}

@mixin md\:-m-1\.5 {
  @include m-(-($\1\.5), $md);
}

@mixin md\:-mx-1\.5 {
  @include mx-(-($\1\.5), $md);
}

@mixin md\:-my-1\.5 {
  @include my-(-($\1\.5), $md);
}

@mixin md\:-ms-1\.5 {
  @include ms-(-($\1\.5), $md);
}

@mixin md\:-me-1\.5 {
  @include me-(-($\1\.5), $md);
}

@mixin md\:-mt-1\.5 {
  @include mt-(-($\1\.5), $md);
}

@mixin md\:-mr-1\.5 {
  @include mr-(-($\1\.5), $md);
}

@mixin md\:-mb-1\.5 {
  @include mb-(-($\1\.5), $md);
}

@mixin md\:-ml-1\.5 {
  @include ml-(-($\1\.5), $md);
}

@mixin md\:-m-2 {
  @include m-(-($\2), $md);
}

@mixin md\:-mx-2 {
  @include mx-(-($\2), $md);
}

@mixin md\:-my-2 {
  @include my-(-($\2), $md);
}

@mixin md\:-ms-2 {
  @include ms-(-($\2), $md);
}

@mixin md\:-me-2 {
  @include me-(-($\2), $md);
}

@mixin md\:-mt-2 {
  @include mt-(-($\2), $md);
}

@mixin md\:-mr-2 {
  @include mr-(-($\2), $md);
}

@mixin md\:-mb-2 {
  @include mb-(-($\2), $md);
}

@mixin md\:-ml-2 {
  @include ml-(-($\2), $md);
}

@mixin md\:-m-2\.5 {
  @include m-(-($\2\.5), $md);
}

@mixin md\:-mx-2\.5 {
  @include mx-(-($\2\.5), $md);
}

@mixin md\:-my-2\.5 {
  @include my-(-($\2\.5), $md);
}

@mixin md\:-ms-2\.5 {
  @include ms-(-($\2\.5), $md);
}

@mixin md\:-me-2\.5 {
  @include me-(-($\2\.5), $md);
}

@mixin md\:-mt-2\.5 {
  @include mt-(-($\2\.5), $md);
}

@mixin md\:-mr-2\.5 {
  @include mr-(-($\2\.5), $md);
}

@mixin md\:-mb-2\.5 {
  @include mb-(-($\2\.5), $md);
}

@mixin md\:-ml-2\.5 {
  @include ml-(-($\2\.5), $md);
}

@mixin md\:-m-3 {
  @include m-(-($\3), $md);
}

@mixin md\:-mx-3 {
  @include mx-(-($\3), $md);
}

@mixin md\:-my-3 {
  @include my-(-($\3), $md);
}

@mixin md\:-ms-3 {
  @include ms-(-($\3), $md);
}

@mixin md\:-me-3 {
  @include me-(-($\3), $md);
}

@mixin md\:-mt-3 {
  @include mt-(-($\3), $md);
}

@mixin md\:-mr-3 {
  @include mr-(-($\3), $md);
}

@mixin md\:-mb-3 {
  @include mb-(-($\3), $md);
}

@mixin md\:-ml-3 {
  @include ml-(-($\3), $md);
}

@mixin md\:-m-3\.5 {
  @include m-(-($\3\.5), $md);
}

@mixin md\:-mx-3\.5 {
  @include mx-(-($\3\.5), $md);
}

@mixin md\:-my-3\.5 {
  @include my-(-($\3\.5), $md);
}

@mixin md\:-ms-3\.5 {
  @include ms-(-($\3\.5), $md);
}

@mixin md\:-me-3\.5 {
  @include me-(-($\3\.5), $md);
}

@mixin md\:-mt-3\.5 {
  @include mt-(-($\3\.5), $md);
}

@mixin md\:-mr-3\.5 {
  @include mr-(-($\3\.5), $md);
}

@mixin md\:-mb-3\.5 {
  @include mb-(-($\3\.5), $md);
}

@mixin md\:-ml-3\.5 {
  @include ml-(-($\3\.5), $md);
}

@mixin md\:-m-4 {
  @include m-(-($\4), $md);
}

@mixin md\:-mx-4 {
  @include mx-(-($\4), $md);
}

@mixin md\:-my-4 {
  @include my-(-($\4), $md);
}

@mixin md\:-ms-4 {
  @include ms-(-($\4), $md);
}

@mixin md\:-me-4 {
  @include me-(-($\4), $md);
}

@mixin md\:-mt-4 {
  @include mt-(-($\4), $md);
}

@mixin md\:-mr-4 {
  @include mr-(-($\4), $md);
}

@mixin md\:-mb-4 {
  @include mb-(-($\4), $md);
}

@mixin md\:-ml-4 {
  @include ml-(-($\4), $md);
}

@mixin md\:-m-5 {
  @include m-(-($\5), $md);
}

@mixin md\:-mx-5 {
  @include mx-(-($\5), $md);
}

@mixin md\:-my-5 {
  @include my-(-($\5), $md);
}

@mixin md\:-ms-5 {
  @include ms-(-($\5), $md);
}

@mixin md\:-me-5 {
  @include me-(-($\5), $md);
}

@mixin md\:-mt-5 {
  @include mt-(-($\5), $md);
}

@mixin md\:-mr-5 {
  @include mr-(-($\5), $md);
}

@mixin md\:-mb-5 {
  @include mb-(-($\5), $md);
}

@mixin md\:-ml-5 {
  @include ml-(-($\5), $md);
}

@mixin md\:-m-6 {
  @include m-(-($\6), $md);
}

@mixin md\:-mx-6 {
  @include mx-(-($\6), $md);
}

@mixin md\:-my-6 {
  @include my-(-($\6), $md);
}

@mixin md\:-ms-6 {
  @include ms-(-($\6), $md);
}

@mixin md\:-me-6 {
  @include me-(-($\6), $md);
}

@mixin md\:-mt-6 {
  @include mt-(-($\6), $md);
}

@mixin md\:-mr-6 {
  @include mr-(-($\6), $md);
}

@mixin md\:-mb-6 {
  @include mb-(-($\6), $md);
}

@mixin md\:-ml-6 {
  @include ml-(-($\6), $md);
}

@mixin md\:-m-7 {
  @include m-(-($\7), $md);
}

@mixin md\:-mx-7 {
  @include mx-(-($\7), $md);
}

@mixin md\:-my-7 {
  @include my-(-($\7), $md);
}

@mixin md\:-ms-7 {
  @include ms-(-($\7), $md);
}

@mixin md\:-me-7 {
  @include me-(-($\7), $md);
}

@mixin md\:-mt-7 {
  @include mt-(-($\7), $md);
}

@mixin md\:-mr-7 {
  @include mr-(-($\7), $md);
}

@mixin md\:-mb-7 {
  @include mb-(-($\7), $md);
}

@mixin md\:-ml-7 {
  @include ml-(-($\7), $md);
}

@mixin md\:-m-8 {
  @include m-(-($\8), $md);
}

@mixin md\:-mx-8 {
  @include mx-(-($\8), $md);
}

@mixin md\:-my-8 {
  @include my-(-($\8), $md);
}

@mixin md\:-ms-8 {
  @include ms-(-($\8), $md);
}

@mixin md\:-me-8 {
  @include me-(-($\8), $md);
}

@mixin md\:-mt-8 {
  @include mt-(-($\8), $md);
}

@mixin md\:-mr-8 {
  @include mr-(-($\8), $md);
}

@mixin md\:-mb-8 {
  @include mb-(-($\8), $md);
}

@mixin md\:-ml-8 {
  @include ml-(-($\8), $md);
}

@mixin md\:-m-9 {
  @include m-(-($\9), $md);
}

@mixin md\:-mx-9 {
  @include mx-(-($\9), $md);
}

@mixin md\:-my-9 {
  @include my-(-($\9), $md);
}

@mixin md\:-ms-9 {
  @include ms-(-($\9), $md);
}

@mixin md\:-me-9 {
  @include me-(-($\9), $md);
}

@mixin md\:-mt-9 {
  @include mt-(-($\9), $md);
}

@mixin md\:-mr-9 {
  @include mr-(-($\9), $md);
}

@mixin md\:-mb-9 {
  @include mb-(-($\9), $md);
}

@mixin md\:-ml-9 {
  @include ml-(-($\9), $md);
}

@mixin md\:-m-10 {
  @include m-(-($\10), $md);
}

@mixin md\:-mx-10 {
  @include mx-(-($\10), $md);
}

@mixin md\:-my-10 {
  @include my-(-($\10), $md);
}

@mixin md\:-ms-10 {
  @include ms-(-($\10), $md);
}

@mixin md\:-me-10 {
  @include me-(-($\10), $md);
}

@mixin md\:-mt-10 {
  @include mt-(-($\10), $md);
}

@mixin md\:-mr-10 {
  @include mr-(-($\10), $md);
}

@mixin md\:-mb-10 {
  @include mb-(-($\10), $md);
}

@mixin md\:-ml-10 {
  @include ml-(-($\10), $md);
}

@mixin md\:-m-11 {
  @include m-(-($\11), $md);
}

@mixin md\:-mx-11 {
  @include mx-(-($\11), $md);
}

@mixin md\:-my-11 {
  @include my-(-($\11), $md);
}

@mixin md\:-ms-11 {
  @include ms-(-($\11), $md);
}

@mixin md\:-me-11 {
  @include me-(-($\11), $md);
}

@mixin md\:-mt-11 {
  @include mt-(-($\11), $md);
}

@mixin md\:-mr-11 {
  @include mr-(-($\11), $md);
}

@mixin md\:-mb-11 {
  @include mb-(-($\11), $md);
}

@mixin md\:-ml-11 {
  @include ml-(-($\11), $md);
}

@mixin md\:-m-12 {
  @include m-(-($\12), $md);
}

@mixin md\:-mx-12 {
  @include mx-(-($\12), $md);
}

@mixin md\:-my-12 {
  @include my-(-($\12), $md);
}

@mixin md\:-ms-12 {
  @include ms-(-($\12), $md);
}

@mixin md\:-me-12 {
  @include me-(-($\12), $md);
}

@mixin md\:-mt-12 {
  @include mt-(-($\12), $md);
}

@mixin md\:-mr-12 {
  @include mr-(-($\12), $md);
}

@mixin md\:-mb-12 {
  @include mb-(-($\12), $md);
}

@mixin md\:-ml-12 {
  @include ml-(-($\12), $md);
}

@mixin md\:-m-14 {
  @include m-(-($\14), $md);
}

@mixin md\:-mx-14 {
  @include mx-(-($\14), $md);
}

@mixin md\:-my-14 {
  @include my-(-($\14), $md);
}

@mixin md\:-ms-14 {
  @include ms-(-($\14), $md);
}

@mixin md\:-me-14 {
  @include me-(-($\14), $md);
}

@mixin md\:-mt-14 {
  @include mt-(-($\14), $md);
}

@mixin md\:-mr-14 {
  @include mr-(-($\14), $md);
}

@mixin md\:-mb-14 {
  @include mb-(-($\14), $md);
}

@mixin md\:-ml-14 {
  @include ml-(-($\14), $md);
}

@mixin md\:-m-16 {
  @include m-(-($\16), $md);
}

@mixin md\:-mx-16 {
  @include mx-(-($\16), $md);
}

@mixin md\:-my-16 {
  @include my-(-($\16), $md);
}

@mixin md\:-ms-16 {
  @include ms-(-($\16), $md);
}

@mixin md\:-me-16 {
  @include me-(-($\16), $md);
}

@mixin md\:-mt-16 {
  @include mt-(-($\16), $md);
}

@mixin md\:-mr-16 {
  @include mr-(-($\16), $md);
}

@mixin md\:-mb-16 {
  @include mb-(-($\16), $md);
}

@mixin md\:-ml-16 {
  @include ml-(-($\16), $md);
}

@mixin md\:-m-20 {
  @include m-(-($\20), $md);
}

@mixin md\:-mx-20 {
  @include mx-(-($\20), $md);
}

@mixin md\:-my-20 {
  @include my-(-($\20), $md);
}

@mixin md\:-ms-20 {
  @include ms-(-($\20), $md);
}

@mixin md\:-me-20 {
  @include me-(-($\20), $md);
}

@mixin md\:-mt-20 {
  @include mt-(-($\20), $md);
}

@mixin md\:-mr-20 {
  @include mr-(-($\20), $md);
}

@mixin md\:-mb-20 {
  @include mb-(-($\20), $md);
}

@mixin md\:-ml-20 {
  @include ml-(-($\20), $md);
}

@mixin md\:-m-24 {
  @include m-(-($\24), $md);
}

@mixin md\:-mx-24 {
  @include mx-(-($\24), $md);
}

@mixin md\:-my-24 {
  @include my-(-($\24), $md);
}

@mixin md\:-ms-24 {
  @include ms-(-($\24), $md);
}

@mixin md\:-me-24 {
  @include me-(-($\24), $md);
}

@mixin md\:-mt-24 {
  @include mt-(-($\24), $md);
}

@mixin md\:-mr-24 {
  @include mr-(-($\24), $md);
}

@mixin md\:-mb-24 {
  @include mb-(-($\24), $md);
}

@mixin md\:-ml-24 {
  @include ml-(-($\24), $md);
}

@mixin md\:-m-28 {
  @include m-(-($\28), $md);
}

@mixin md\:-mx-28 {
  @include mx-(-($\28), $md);
}

@mixin md\:-my-28 {
  @include my-(-($\28), $md);
}

@mixin md\:-ms-28 {
  @include ms-(-($\28), $md);
}

@mixin md\:-me-28 {
  @include me-(-($\28), $md);
}

@mixin md\:-mt-28 {
  @include mt-(-($\28), $md);
}

@mixin md\:-mr-28 {
  @include mr-(-($\28), $md);
}

@mixin md\:-mb-28 {
  @include mb-(-($\28), $md);
}

@mixin md\:-ml-28 {
  @include ml-(-($\28), $md);
}

@mixin md\:-m-32 {
  @include m-(-($\32), $md);
}

@mixin md\:-mx-32 {
  @include mx-(-($\32), $md);
}

@mixin md\:-my-32 {
  @include my-(-($\32), $md);
}

@mixin md\:-ms-32 {
  @include ms-(-($\32), $md);
}

@mixin md\:-me-32 {
  @include me-(-($\32), $md);
}

@mixin md\:-mt-32 {
  @include mt-(-($\32), $md);
}

@mixin md\:-mr-32 {
  @include mr-(-($\32), $md);
}

@mixin md\:-mb-32 {
  @include mb-(-($\32), $md);
}

@mixin md\:-ml-32 {
  @include ml-(-($\32), $md);
}

@mixin md\:-m-36 {
  @include m-(-($\36), $md);
}

@mixin md\:-mx-36 {
  @include mx-(-($\36), $md);
}

@mixin md\:-my-36 {
  @include my-(-($\36), $md);
}

@mixin md\:-ms-36 {
  @include ms-(-($\36), $md);
}

@mixin md\:-me-36 {
  @include me-(-($\36), $md);
}

@mixin md\:-mt-36 {
  @include mt-(-($\36), $md);
}

@mixin md\:-mr-36 {
  @include mr-(-($\36), $md);
}

@mixin md\:-mb-36 {
  @include mb-(-($\36), $md);
}

@mixin md\:-ml-36 {
  @include ml-(-($\36), $md);
}

@mixin md\:-m-40 {
  @include m-(-($\40), $md);
}

@mixin md\:-mx-40 {
  @include mx-(-($\40), $md);
}

@mixin md\:-my-40 {
  @include my-(-($\40), $md);
}

@mixin md\:-ms-40 {
  @include ms-(-($\40), $md);
}

@mixin md\:-me-40 {
  @include me-(-($\40), $md);
}

@mixin md\:-mt-40 {
  @include mt-(-($\40), $md);
}

@mixin md\:-mr-40 {
  @include mr-(-($\40), $md);
}

@mixin md\:-mb-40 {
  @include mb-(-($\40), $md);
}

@mixin md\:-ml-40 {
  @include ml-(-($\40), $md);
}

@mixin md\:-m-44 {
  @include m-(-($\44), $md);
}

@mixin md\:-mx-44 {
  @include mx-(-($\44), $md);
}

@mixin md\:-my-44 {
  @include my-(-($\44), $md);
}

@mixin md\:-ms-44 {
  @include ms-(-($\44), $md);
}

@mixin md\:-me-44 {
  @include me-(-($\44), $md);
}

@mixin md\:-mt-44 {
  @include mt-(-($\44), $md);
}

@mixin md\:-mr-44 {
  @include mr-(-($\44), $md);
}

@mixin md\:-mb-44 {
  @include mb-(-($\44), $md);
}

@mixin md\:-ml-44 {
  @include ml-(-($\44), $md);
}

@mixin md\:-m-48 {
  @include m-(-($\48), $md);
}

@mixin md\:-mx-48 {
  @include mx-(-($\48), $md);
}

@mixin md\:-my-48 {
  @include my-(-($\48), $md);
}

@mixin md\:-ms-48 {
  @include ms-(-($\48), $md);
}

@mixin md\:-me-48 {
  @include me-(-($\48), $md);
}

@mixin md\:-mt-48 {
  @include mt-(-($\48), $md);
}

@mixin md\:-mr-48 {
  @include mr-(-($\48), $md);
}

@mixin md\:-mb-48 {
  @include mb-(-($\48), $md);
}

@mixin md\:-ml-48 {
  @include ml-(-($\48), $md);
}

@mixin md\:-m-52 {
  @include m-(-($\52), $md);
}

@mixin md\:-mx-52 {
  @include mx-(-($\52), $md);
}

@mixin md\:-my-52 {
  @include my-(-($\52), $md);
}

@mixin md\:-ms-52 {
  @include ms-(-($\52), $md);
}

@mixin md\:-me-52 {
  @include me-(-($\52), $md);
}

@mixin md\:-mt-52 {
  @include mt-(-($\52), $md);
}

@mixin md\:-mr-52 {
  @include mr-(-($\52), $md);
}

@mixin md\:-mb-52 {
  @include mb-(-($\52), $md);
}

@mixin md\:-ml-52 {
  @include ml-(-($\52), $md);
}

@mixin md\:-m-56 {
  @include m-(-($\56), $md);
}

@mixin md\:-mx-56 {
  @include mx-(-($\56), $md);
}

@mixin md\:-my-56 {
  @include my-(-($\56), $md);
}

@mixin md\:-ms-56 {
  @include ms-(-($\56), $md);
}

@mixin md\:-me-56 {
  @include me-(-($\56), $md);
}

@mixin md\:-mt-56 {
  @include mt-(-($\56), $md);
}

@mixin md\:-mr-56 {
  @include mr-(-($\56), $md);
}

@mixin md\:-mb-56 {
  @include mb-(-($\56), $md);
}

@mixin md\:-ml-56 {
  @include ml-(-($\56), $md);
}

@mixin md\:-m-60 {
  @include m-(-($\60), $md);
}

@mixin md\:-mx-60 {
  @include mx-(-($\60), $md);
}

@mixin md\:-my-60 {
  @include my-(-($\60), $md);
}

@mixin md\:-ms-60 {
  @include ms-(-($\60), $md);
}

@mixin md\:-me-60 {
  @include me-(-($\60), $md);
}

@mixin md\:-mt-60 {
  @include mt-(-($\60), $md);
}

@mixin md\:-mr-60 {
  @include mr-(-($\60), $md);
}

@mixin md\:-mb-60 {
  @include mb-(-($\60), $md);
}

@mixin md\:-ml-60 {
  @include ml-(-($\60), $md);
}

@mixin md\:-m-64 {
  @include m-(-($\64), $md);
}

@mixin md\:-mx-64 {
  @include mx-(-($\64), $md);
}

@mixin md\:-my-64 {
  @include my-(-($\64), $md);
}

@mixin md\:-ms-64 {
  @include ms-(-($\64), $md);
}

@mixin md\:-me-64 {
  @include me-(-($\64), $md);
}

@mixin md\:-mt-64 {
  @include mt-(-($\64), $md);
}

@mixin md\:-mr-64 {
  @include mr-(-($\64), $md);
}

@mixin md\:-mb-64 {
  @include mb-(-($\64), $md);
}

@mixin md\:-ml-64 {
  @include ml-(-($\64), $md);
}

@mixin md\:-m-72 {
  @include m-(-($\72), $md);
}

@mixin md\:-mx-72 {
  @include mx-(-($\72), $md);
}

@mixin md\:-my-72 {
  @include my-(-($\72), $md);
}

@mixin md\:-ms-72 {
  @include ms-(-($\72), $md);
}

@mixin md\:-me-72 {
  @include me-(-($\72), $md);
}

@mixin md\:-mt-72 {
  @include mt-(-($\72), $md);
}

@mixin md\:-mr-72 {
  @include mr-(-($\72), $md);
}

@mixin md\:-mb-72 {
  @include mb-(-($\72), $md);
}

@mixin md\:-ml-72 {
  @include ml-(-($\72), $md);
}

@mixin md\:-m-80 {
  @include m-(-($\80), $md);
}

@mixin md\:-mx-80 {
  @include mx-(-($\80), $md);
}

@mixin md\:-my-80 {
  @include my-(-($\80), $md);
}

@mixin md\:-ms-80 {
  @include ms-(-($\80), $md);
}

@mixin md\:-me-80 {
  @include me-(-($\80), $md);
}

@mixin md\:-mt-80 {
  @include mt-(-($\80), $md);
}

@mixin md\:-mr-80 {
  @include mr-(-($\80), $md);
}

@mixin md\:-mb-80 {
  @include mb-(-($\80), $md);
}

@mixin md\:-ml-80 {
  @include ml-(-($\80), $md);
}

@mixin md\:-m-96 {
  @include m-(-($\96), $md);
}

@mixin md\:-mx-96 {
  @include mx-(-($\96), $md);
}

@mixin md\:-my-96 {
  @include my-(-($\96), $md);
}

@mixin md\:-ms-96 {
  @include ms-(-($\96), $md);
}

@mixin md\:-me-96 {
  @include me-(-($\96), $md);
}

@mixin md\:-mt-96 {
  @include mt-(-($\96), $md);
}

@mixin md\:-mr-96 {
  @include mr-(-($\96), $md);
}

@mixin md\:-mb-96 {
  @include mb-(-($\96), $md);
}

@mixin md\:-ml-96 {
  @include ml-(-($\96), $md);
}

@mixin lg\:-m-0 {
  @include m-(-($\0), $lg);
}

@mixin lg\:-mx-0 {
  @include mx-(-($\0), $lg);
}

@mixin lg\:-my-0 {
  @include my-(-($\0), $lg);
}

@mixin lg\:-ms-0 {
  @include ms-(-($\0), $lg);
}

@mixin lg\:-me-0 {
  @include me-(-($\0), $lg);
}

@mixin lg\:-mt-0 {
  @include mt-(-($\0), $lg);
}

@mixin lg\:-mr-0 {
  @include mr-(-($\0), $lg);
}

@mixin lg\:-mb-0 {
  @include mb-(-($\0), $lg);
}

@mixin lg\:-ml-0 {
  @include ml-(-($\0), $lg);
}

@mixin lg\:-m-px {
  @include m-(-($\px), $lg);
}

@mixin lg\:-mx-px {
  @include mx-(-($\px), $lg);
}

@mixin lg\:-my-px {
  @include my-(-($\px), $lg);
}

@mixin lg\:-ms-px {
  @include ms-(-($\px), $lg);
}

@mixin lg\:-me-px {
  @include me-(-($\px), $lg);
}

@mixin lg\:-mt-px {
  @include mt-(-($\px), $lg);
}

@mixin lg\:-mr-px {
  @include mr-(-($\px), $lg);
}

@mixin lg\:-mb-px {
  @include mb-(-($\px), $lg);
}

@mixin lg\:-ml-px {
  @include ml-(-($\px), $lg);
}

@mixin lg\:-m-0\.5 {
  @include m-(-($\0\.5), $lg);
}

@mixin lg\:-mx-0\.5 {
  @include mx-(-($\0\.5), $lg);
}

@mixin lg\:-my-0\.5 {
  @include my-(-($\0\.5), $lg);
}

@mixin lg\:-ms-0\.5 {
  @include ms-(-($\0\.5), $lg);
}

@mixin lg\:-me-0\.5 {
  @include me-(-($\0\.5), $lg);
}

@mixin lg\:-mt-0\.5 {
  @include mt-(-($\0\.5), $lg);
}

@mixin lg\:-mr-0\.5 {
  @include mr-(-($\0\.5), $lg);
}

@mixin lg\:-mb-0\.5 {
  @include mb-(-($\0\.5), $lg);
}

@mixin lg\:-ml-0\.5 {
  @include ml-(-($\0\.5), $lg);
}

@mixin lg\:-m-1 {
  @include m-(-($\1), $lg);
}

@mixin lg\:-mx-1 {
  @include mx-(-($\1), $lg);
}

@mixin lg\:-my-1 {
  @include my-(-($\1), $lg);
}

@mixin lg\:-ms-1 {
  @include ms-(-($\1), $lg);
}

@mixin lg\:-me-1 {
  @include me-(-($\1), $lg);
}

@mixin lg\:-mt-1 {
  @include mt-(-($\1), $lg);
}

@mixin lg\:-mr-1 {
  @include mr-(-($\1), $lg);
}

@mixin lg\:-mb-1 {
  @include mb-(-($\1), $lg);
}

@mixin lg\:-ml-1 {
  @include ml-(-($\1), $lg);
}

@mixin lg\:-m-1\.5 {
  @include m-(-($\1\.5), $lg);
}

@mixin lg\:-mx-1\.5 {
  @include mx-(-($\1\.5), $lg);
}

@mixin lg\:-my-1\.5 {
  @include my-(-($\1\.5), $lg);
}

@mixin lg\:-ms-1\.5 {
  @include ms-(-($\1\.5), $lg);
}

@mixin lg\:-me-1\.5 {
  @include me-(-($\1\.5), $lg);
}

@mixin lg\:-mt-1\.5 {
  @include mt-(-($\1\.5), $lg);
}

@mixin lg\:-mr-1\.5 {
  @include mr-(-($\1\.5), $lg);
}

@mixin lg\:-mb-1\.5 {
  @include mb-(-($\1\.5), $lg);
}

@mixin lg\:-ml-1\.5 {
  @include ml-(-($\1\.5), $lg);
}

@mixin lg\:-m-2 {
  @include m-(-($\2), $lg);
}

@mixin lg\:-mx-2 {
  @include mx-(-($\2), $lg);
}

@mixin lg\:-my-2 {
  @include my-(-($\2), $lg);
}

@mixin lg\:-ms-2 {
  @include ms-(-($\2), $lg);
}

@mixin lg\:-me-2 {
  @include me-(-($\2), $lg);
}

@mixin lg\:-mt-2 {
  @include mt-(-($\2), $lg);
}

@mixin lg\:-mr-2 {
  @include mr-(-($\2), $lg);
}

@mixin lg\:-mb-2 {
  @include mb-(-($\2), $lg);
}

@mixin lg\:-ml-2 {
  @include ml-(-($\2), $lg);
}

@mixin lg\:-m-2\.5 {
  @include m-(-($\2\.5), $lg);
}

@mixin lg\:-mx-2\.5 {
  @include mx-(-($\2\.5), $lg);
}

@mixin lg\:-my-2\.5 {
  @include my-(-($\2\.5), $lg);
}

@mixin lg\:-ms-2\.5 {
  @include ms-(-($\2\.5), $lg);
}

@mixin lg\:-me-2\.5 {
  @include me-(-($\2\.5), $lg);
}

@mixin lg\:-mt-2\.5 {
  @include mt-(-($\2\.5), $lg);
}

@mixin lg\:-mr-2\.5 {
  @include mr-(-($\2\.5), $lg);
}

@mixin lg\:-mb-2\.5 {
  @include mb-(-($\2\.5), $lg);
}

@mixin lg\:-ml-2\.5 {
  @include ml-(-($\2\.5), $lg);
}

@mixin lg\:-m-3 {
  @include m-(-($\3), $lg);
}

@mixin lg\:-mx-3 {
  @include mx-(-($\3), $lg);
}

@mixin lg\:-my-3 {
  @include my-(-($\3), $lg);
}

@mixin lg\:-ms-3 {
  @include ms-(-($\3), $lg);
}

@mixin lg\:-me-3 {
  @include me-(-($\3), $lg);
}

@mixin lg\:-mt-3 {
  @include mt-(-($\3), $lg);
}

@mixin lg\:-mr-3 {
  @include mr-(-($\3), $lg);
}

@mixin lg\:-mb-3 {
  @include mb-(-($\3), $lg);
}

@mixin lg\:-ml-3 {
  @include ml-(-($\3), $lg);
}

@mixin lg\:-m-3\.5 {
  @include m-(-($\3\.5), $lg);
}

@mixin lg\:-mx-3\.5 {
  @include mx-(-($\3\.5), $lg);
}

@mixin lg\:-my-3\.5 {
  @include my-(-($\3\.5), $lg);
}

@mixin lg\:-ms-3\.5 {
  @include ms-(-($\3\.5), $lg);
}

@mixin lg\:-me-3\.5 {
  @include me-(-($\3\.5), $lg);
}

@mixin lg\:-mt-3\.5 {
  @include mt-(-($\3\.5), $lg);
}

@mixin lg\:-mr-3\.5 {
  @include mr-(-($\3\.5), $lg);
}

@mixin lg\:-mb-3\.5 {
  @include mb-(-($\3\.5), $lg);
}

@mixin lg\:-ml-3\.5 {
  @include ml-(-($\3\.5), $lg);
}

@mixin lg\:-m-4 {
  @include m-(-($\4), $lg);
}

@mixin lg\:-mx-4 {
  @include mx-(-($\4), $lg);
}

@mixin lg\:-my-4 {
  @include my-(-($\4), $lg);
}

@mixin lg\:-ms-4 {
  @include ms-(-($\4), $lg);
}

@mixin lg\:-me-4 {
  @include me-(-($\4), $lg);
}

@mixin lg\:-mt-4 {
  @include mt-(-($\4), $lg);
}

@mixin lg\:-mr-4 {
  @include mr-(-($\4), $lg);
}

@mixin lg\:-mb-4 {
  @include mb-(-($\4), $lg);
}

@mixin lg\:-ml-4 {
  @include ml-(-($\4), $lg);
}

@mixin lg\:-m-5 {
  @include m-(-($\5), $lg);
}

@mixin lg\:-mx-5 {
  @include mx-(-($\5), $lg);
}

@mixin lg\:-my-5 {
  @include my-(-($\5), $lg);
}

@mixin lg\:-ms-5 {
  @include ms-(-($\5), $lg);
}

@mixin lg\:-me-5 {
  @include me-(-($\5), $lg);
}

@mixin lg\:-mt-5 {
  @include mt-(-($\5), $lg);
}

@mixin lg\:-mr-5 {
  @include mr-(-($\5), $lg);
}

@mixin lg\:-mb-5 {
  @include mb-(-($\5), $lg);
}

@mixin lg\:-ml-5 {
  @include ml-(-($\5), $lg);
}

@mixin lg\:-m-6 {
  @include m-(-($\6), $lg);
}

@mixin lg\:-mx-6 {
  @include mx-(-($\6), $lg);
}

@mixin lg\:-my-6 {
  @include my-(-($\6), $lg);
}

@mixin lg\:-ms-6 {
  @include ms-(-($\6), $lg);
}

@mixin lg\:-me-6 {
  @include me-(-($\6), $lg);
}

@mixin lg\:-mt-6 {
  @include mt-(-($\6), $lg);
}

@mixin lg\:-mr-6 {
  @include mr-(-($\6), $lg);
}

@mixin lg\:-mb-6 {
  @include mb-(-($\6), $lg);
}

@mixin lg\:-ml-6 {
  @include ml-(-($\6), $lg);
}

@mixin lg\:-m-7 {
  @include m-(-($\7), $lg);
}

@mixin lg\:-mx-7 {
  @include mx-(-($\7), $lg);
}

@mixin lg\:-my-7 {
  @include my-(-($\7), $lg);
}

@mixin lg\:-ms-7 {
  @include ms-(-($\7), $lg);
}

@mixin lg\:-me-7 {
  @include me-(-($\7), $lg);
}

@mixin lg\:-mt-7 {
  @include mt-(-($\7), $lg);
}

@mixin lg\:-mr-7 {
  @include mr-(-($\7), $lg);
}

@mixin lg\:-mb-7 {
  @include mb-(-($\7), $lg);
}

@mixin lg\:-ml-7 {
  @include ml-(-($\7), $lg);
}

@mixin lg\:-m-8 {
  @include m-(-($\8), $lg);
}

@mixin lg\:-mx-8 {
  @include mx-(-($\8), $lg);
}

@mixin lg\:-my-8 {
  @include my-(-($\8), $lg);
}

@mixin lg\:-ms-8 {
  @include ms-(-($\8), $lg);
}

@mixin lg\:-me-8 {
  @include me-(-($\8), $lg);
}

@mixin lg\:-mt-8 {
  @include mt-(-($\8), $lg);
}

@mixin lg\:-mr-8 {
  @include mr-(-($\8), $lg);
}

@mixin lg\:-mb-8 {
  @include mb-(-($\8), $lg);
}

@mixin lg\:-ml-8 {
  @include ml-(-($\8), $lg);
}

@mixin lg\:-m-9 {
  @include m-(-($\9), $lg);
}

@mixin lg\:-mx-9 {
  @include mx-(-($\9), $lg);
}

@mixin lg\:-my-9 {
  @include my-(-($\9), $lg);
}

@mixin lg\:-ms-9 {
  @include ms-(-($\9), $lg);
}

@mixin lg\:-me-9 {
  @include me-(-($\9), $lg);
}

@mixin lg\:-mt-9 {
  @include mt-(-($\9), $lg);
}

@mixin lg\:-mr-9 {
  @include mr-(-($\9), $lg);
}

@mixin lg\:-mb-9 {
  @include mb-(-($\9), $lg);
}

@mixin lg\:-ml-9 {
  @include ml-(-($\9), $lg);
}

@mixin lg\:-m-10 {
  @include m-(-($\10), $lg);
}

@mixin lg\:-mx-10 {
  @include mx-(-($\10), $lg);
}

@mixin lg\:-my-10 {
  @include my-(-($\10), $lg);
}

@mixin lg\:-ms-10 {
  @include ms-(-($\10), $lg);
}

@mixin lg\:-me-10 {
  @include me-(-($\10), $lg);
}

@mixin lg\:-mt-10 {
  @include mt-(-($\10), $lg);
}

@mixin lg\:-mr-10 {
  @include mr-(-($\10), $lg);
}

@mixin lg\:-mb-10 {
  @include mb-(-($\10), $lg);
}

@mixin lg\:-ml-10 {
  @include ml-(-($\10), $lg);
}

@mixin lg\:-m-11 {
  @include m-(-($\11), $lg);
}

@mixin lg\:-mx-11 {
  @include mx-(-($\11), $lg);
}

@mixin lg\:-my-11 {
  @include my-(-($\11), $lg);
}

@mixin lg\:-ms-11 {
  @include ms-(-($\11), $lg);
}

@mixin lg\:-me-11 {
  @include me-(-($\11), $lg);
}

@mixin lg\:-mt-11 {
  @include mt-(-($\11), $lg);
}

@mixin lg\:-mr-11 {
  @include mr-(-($\11), $lg);
}

@mixin lg\:-mb-11 {
  @include mb-(-($\11), $lg);
}

@mixin lg\:-ml-11 {
  @include ml-(-($\11), $lg);
}

@mixin lg\:-m-12 {
  @include m-(-($\12), $lg);
}

@mixin lg\:-mx-12 {
  @include mx-(-($\12), $lg);
}

@mixin lg\:-my-12 {
  @include my-(-($\12), $lg);
}

@mixin lg\:-ms-12 {
  @include ms-(-($\12), $lg);
}

@mixin lg\:-me-12 {
  @include me-(-($\12), $lg);
}

@mixin lg\:-mt-12 {
  @include mt-(-($\12), $lg);
}

@mixin lg\:-mr-12 {
  @include mr-(-($\12), $lg);
}

@mixin lg\:-mb-12 {
  @include mb-(-($\12), $lg);
}

@mixin lg\:-ml-12 {
  @include ml-(-($\12), $lg);
}

@mixin lg\:-m-14 {
  @include m-(-($\14), $lg);
}

@mixin lg\:-mx-14 {
  @include mx-(-($\14), $lg);
}

@mixin lg\:-my-14 {
  @include my-(-($\14), $lg);
}

@mixin lg\:-ms-14 {
  @include ms-(-($\14), $lg);
}

@mixin lg\:-me-14 {
  @include me-(-($\14), $lg);
}

@mixin lg\:-mt-14 {
  @include mt-(-($\14), $lg);
}

@mixin lg\:-mr-14 {
  @include mr-(-($\14), $lg);
}

@mixin lg\:-mb-14 {
  @include mb-(-($\14), $lg);
}

@mixin lg\:-ml-14 {
  @include ml-(-($\14), $lg);
}

@mixin lg\:-m-16 {
  @include m-(-($\16), $lg);
}

@mixin lg\:-mx-16 {
  @include mx-(-($\16), $lg);
}

@mixin lg\:-my-16 {
  @include my-(-($\16), $lg);
}

@mixin lg\:-ms-16 {
  @include ms-(-($\16), $lg);
}

@mixin lg\:-me-16 {
  @include me-(-($\16), $lg);
}

@mixin lg\:-mt-16 {
  @include mt-(-($\16), $lg);
}

@mixin lg\:-mr-16 {
  @include mr-(-($\16), $lg);
}

@mixin lg\:-mb-16 {
  @include mb-(-($\16), $lg);
}

@mixin lg\:-ml-16 {
  @include ml-(-($\16), $lg);
}

@mixin lg\:-m-20 {
  @include m-(-($\20), $lg);
}

@mixin lg\:-mx-20 {
  @include mx-(-($\20), $lg);
}

@mixin lg\:-my-20 {
  @include my-(-($\20), $lg);
}

@mixin lg\:-ms-20 {
  @include ms-(-($\20), $lg);
}

@mixin lg\:-me-20 {
  @include me-(-($\20), $lg);
}

@mixin lg\:-mt-20 {
  @include mt-(-($\20), $lg);
}

@mixin lg\:-mr-20 {
  @include mr-(-($\20), $lg);
}

@mixin lg\:-mb-20 {
  @include mb-(-($\20), $lg);
}

@mixin lg\:-ml-20 {
  @include ml-(-($\20), $lg);
}

@mixin lg\:-m-24 {
  @include m-(-($\24), $lg);
}

@mixin lg\:-mx-24 {
  @include mx-(-($\24), $lg);
}

@mixin lg\:-my-24 {
  @include my-(-($\24), $lg);
}

@mixin lg\:-ms-24 {
  @include ms-(-($\24), $lg);
}

@mixin lg\:-me-24 {
  @include me-(-($\24), $lg);
}

@mixin lg\:-mt-24 {
  @include mt-(-($\24), $lg);
}

@mixin lg\:-mr-24 {
  @include mr-(-($\24), $lg);
}

@mixin lg\:-mb-24 {
  @include mb-(-($\24), $lg);
}

@mixin lg\:-ml-24 {
  @include ml-(-($\24), $lg);
}

@mixin lg\:-m-28 {
  @include m-(-($\28), $lg);
}

@mixin lg\:-mx-28 {
  @include mx-(-($\28), $lg);
}

@mixin lg\:-my-28 {
  @include my-(-($\28), $lg);
}

@mixin lg\:-ms-28 {
  @include ms-(-($\28), $lg);
}

@mixin lg\:-me-28 {
  @include me-(-($\28), $lg);
}

@mixin lg\:-mt-28 {
  @include mt-(-($\28), $lg);
}

@mixin lg\:-mr-28 {
  @include mr-(-($\28), $lg);
}

@mixin lg\:-mb-28 {
  @include mb-(-($\28), $lg);
}

@mixin lg\:-ml-28 {
  @include ml-(-($\28), $lg);
}

@mixin lg\:-m-32 {
  @include m-(-($\32), $lg);
}

@mixin lg\:-mx-32 {
  @include mx-(-($\32), $lg);
}

@mixin lg\:-my-32 {
  @include my-(-($\32), $lg);
}

@mixin lg\:-ms-32 {
  @include ms-(-($\32), $lg);
}

@mixin lg\:-me-32 {
  @include me-(-($\32), $lg);
}

@mixin lg\:-mt-32 {
  @include mt-(-($\32), $lg);
}

@mixin lg\:-mr-32 {
  @include mr-(-($\32), $lg);
}

@mixin lg\:-mb-32 {
  @include mb-(-($\32), $lg);
}

@mixin lg\:-ml-32 {
  @include ml-(-($\32), $lg);
}

@mixin lg\:-m-36 {
  @include m-(-($\36), $lg);
}

@mixin lg\:-mx-36 {
  @include mx-(-($\36), $lg);
}

@mixin lg\:-my-36 {
  @include my-(-($\36), $lg);
}

@mixin lg\:-ms-36 {
  @include ms-(-($\36), $lg);
}

@mixin lg\:-me-36 {
  @include me-(-($\36), $lg);
}

@mixin lg\:-mt-36 {
  @include mt-(-($\36), $lg);
}

@mixin lg\:-mr-36 {
  @include mr-(-($\36), $lg);
}

@mixin lg\:-mb-36 {
  @include mb-(-($\36), $lg);
}

@mixin lg\:-ml-36 {
  @include ml-(-($\36), $lg);
}

@mixin lg\:-m-40 {
  @include m-(-($\40), $lg);
}

@mixin lg\:-mx-40 {
  @include mx-(-($\40), $lg);
}

@mixin lg\:-my-40 {
  @include my-(-($\40), $lg);
}

@mixin lg\:-ms-40 {
  @include ms-(-($\40), $lg);
}

@mixin lg\:-me-40 {
  @include me-(-($\40), $lg);
}

@mixin lg\:-mt-40 {
  @include mt-(-($\40), $lg);
}

@mixin lg\:-mr-40 {
  @include mr-(-($\40), $lg);
}

@mixin lg\:-mb-40 {
  @include mb-(-($\40), $lg);
}

@mixin lg\:-ml-40 {
  @include ml-(-($\40), $lg);
}

@mixin lg\:-m-44 {
  @include m-(-($\44), $lg);
}

@mixin lg\:-mx-44 {
  @include mx-(-($\44), $lg);
}

@mixin lg\:-my-44 {
  @include my-(-($\44), $lg);
}

@mixin lg\:-ms-44 {
  @include ms-(-($\44), $lg);
}

@mixin lg\:-me-44 {
  @include me-(-($\44), $lg);
}

@mixin lg\:-mt-44 {
  @include mt-(-($\44), $lg);
}

@mixin lg\:-mr-44 {
  @include mr-(-($\44), $lg);
}

@mixin lg\:-mb-44 {
  @include mb-(-($\44), $lg);
}

@mixin lg\:-ml-44 {
  @include ml-(-($\44), $lg);
}

@mixin lg\:-m-48 {
  @include m-(-($\48), $lg);
}

@mixin lg\:-mx-48 {
  @include mx-(-($\48), $lg);
}

@mixin lg\:-my-48 {
  @include my-(-($\48), $lg);
}

@mixin lg\:-ms-48 {
  @include ms-(-($\48), $lg);
}

@mixin lg\:-me-48 {
  @include me-(-($\48), $lg);
}

@mixin lg\:-mt-48 {
  @include mt-(-($\48), $lg);
}

@mixin lg\:-mr-48 {
  @include mr-(-($\48), $lg);
}

@mixin lg\:-mb-48 {
  @include mb-(-($\48), $lg);
}

@mixin lg\:-ml-48 {
  @include ml-(-($\48), $lg);
}

@mixin lg\:-m-52 {
  @include m-(-($\52), $lg);
}

@mixin lg\:-mx-52 {
  @include mx-(-($\52), $lg);
}

@mixin lg\:-my-52 {
  @include my-(-($\52), $lg);
}

@mixin lg\:-ms-52 {
  @include ms-(-($\52), $lg);
}

@mixin lg\:-me-52 {
  @include me-(-($\52), $lg);
}

@mixin lg\:-mt-52 {
  @include mt-(-($\52), $lg);
}

@mixin lg\:-mr-52 {
  @include mr-(-($\52), $lg);
}

@mixin lg\:-mb-52 {
  @include mb-(-($\52), $lg);
}

@mixin lg\:-ml-52 {
  @include ml-(-($\52), $lg);
}

@mixin lg\:-m-56 {
  @include m-(-($\56), $lg);
}

@mixin lg\:-mx-56 {
  @include mx-(-($\56), $lg);
}

@mixin lg\:-my-56 {
  @include my-(-($\56), $lg);
}

@mixin lg\:-ms-56 {
  @include ms-(-($\56), $lg);
}

@mixin lg\:-me-56 {
  @include me-(-($\56), $lg);
}

@mixin lg\:-mt-56 {
  @include mt-(-($\56), $lg);
}

@mixin lg\:-mr-56 {
  @include mr-(-($\56), $lg);
}

@mixin lg\:-mb-56 {
  @include mb-(-($\56), $lg);
}

@mixin lg\:-ml-56 {
  @include ml-(-($\56), $lg);
}

@mixin lg\:-m-60 {
  @include m-(-($\60), $lg);
}

@mixin lg\:-mx-60 {
  @include mx-(-($\60), $lg);
}

@mixin lg\:-my-60 {
  @include my-(-($\60), $lg);
}

@mixin lg\:-ms-60 {
  @include ms-(-($\60), $lg);
}

@mixin lg\:-me-60 {
  @include me-(-($\60), $lg);
}

@mixin lg\:-mt-60 {
  @include mt-(-($\60), $lg);
}

@mixin lg\:-mr-60 {
  @include mr-(-($\60), $lg);
}

@mixin lg\:-mb-60 {
  @include mb-(-($\60), $lg);
}

@mixin lg\:-ml-60 {
  @include ml-(-($\60), $lg);
}

@mixin lg\:-m-64 {
  @include m-(-($\64), $lg);
}

@mixin lg\:-mx-64 {
  @include mx-(-($\64), $lg);
}

@mixin lg\:-my-64 {
  @include my-(-($\64), $lg);
}

@mixin lg\:-ms-64 {
  @include ms-(-($\64), $lg);
}

@mixin lg\:-me-64 {
  @include me-(-($\64), $lg);
}

@mixin lg\:-mt-64 {
  @include mt-(-($\64), $lg);
}

@mixin lg\:-mr-64 {
  @include mr-(-($\64), $lg);
}

@mixin lg\:-mb-64 {
  @include mb-(-($\64), $lg);
}

@mixin lg\:-ml-64 {
  @include ml-(-($\64), $lg);
}

@mixin lg\:-m-72 {
  @include m-(-($\72), $lg);
}

@mixin lg\:-mx-72 {
  @include mx-(-($\72), $lg);
}

@mixin lg\:-my-72 {
  @include my-(-($\72), $lg);
}

@mixin lg\:-ms-72 {
  @include ms-(-($\72), $lg);
}

@mixin lg\:-me-72 {
  @include me-(-($\72), $lg);
}

@mixin lg\:-mt-72 {
  @include mt-(-($\72), $lg);
}

@mixin lg\:-mr-72 {
  @include mr-(-($\72), $lg);
}

@mixin lg\:-mb-72 {
  @include mb-(-($\72), $lg);
}

@mixin lg\:-ml-72 {
  @include ml-(-($\72), $lg);
}

@mixin lg\:-m-80 {
  @include m-(-($\80), $lg);
}

@mixin lg\:-mx-80 {
  @include mx-(-($\80), $lg);
}

@mixin lg\:-my-80 {
  @include my-(-($\80), $lg);
}

@mixin lg\:-ms-80 {
  @include ms-(-($\80), $lg);
}

@mixin lg\:-me-80 {
  @include me-(-($\80), $lg);
}

@mixin lg\:-mt-80 {
  @include mt-(-($\80), $lg);
}

@mixin lg\:-mr-80 {
  @include mr-(-($\80), $lg);
}

@mixin lg\:-mb-80 {
  @include mb-(-($\80), $lg);
}

@mixin lg\:-ml-80 {
  @include ml-(-($\80), $lg);
}

@mixin lg\:-m-96 {
  @include m-(-($\96), $lg);
}

@mixin lg\:-mx-96 {
  @include mx-(-($\96), $lg);
}

@mixin lg\:-my-96 {
  @include my-(-($\96), $lg);
}

@mixin lg\:-ms-96 {
  @include ms-(-($\96), $lg);
}

@mixin lg\:-me-96 {
  @include me-(-($\96), $lg);
}

@mixin lg\:-mt-96 {
  @include mt-(-($\96), $lg);
}

@mixin lg\:-mr-96 {
  @include mr-(-($\96), $lg);
}

@mixin lg\:-mb-96 {
  @include mb-(-($\96), $lg);
}

@mixin lg\:-ml-96 {
  @include ml-(-($\96), $lg);
}

@mixin xl\:-m-0 {
  @include m-(-($\0), $xl);
}

@mixin xl\:-mx-0 {
  @include mx-(-($\0), $xl);
}

@mixin xl\:-my-0 {
  @include my-(-($\0), $xl);
}

@mixin xl\:-ms-0 {
  @include ms-(-($\0), $xl);
}

@mixin xl\:-me-0 {
  @include me-(-($\0), $xl);
}

@mixin xl\:-mt-0 {
  @include mt-(-($\0), $xl);
}

@mixin xl\:-mr-0 {
  @include mr-(-($\0), $xl);
}

@mixin xl\:-mb-0 {
  @include mb-(-($\0), $xl);
}

@mixin xl\:-ml-0 {
  @include ml-(-($\0), $xl);
}

@mixin xl\:-m-px {
  @include m-(-($\px), $xl);
}

@mixin xl\:-mx-px {
  @include mx-(-($\px), $xl);
}

@mixin xl\:-my-px {
  @include my-(-($\px), $xl);
}

@mixin xl\:-ms-px {
  @include ms-(-($\px), $xl);
}

@mixin xl\:-me-px {
  @include me-(-($\px), $xl);
}

@mixin xl\:-mt-px {
  @include mt-(-($\px), $xl);
}

@mixin xl\:-mr-px {
  @include mr-(-($\px), $xl);
}

@mixin xl\:-mb-px {
  @include mb-(-($\px), $xl);
}

@mixin xl\:-ml-px {
  @include ml-(-($\px), $xl);
}

@mixin xl\:-m-0\.5 {
  @include m-(-($\0\.5), $xl);
}

@mixin xl\:-mx-0\.5 {
  @include mx-(-($\0\.5), $xl);
}

@mixin xl\:-my-0\.5 {
  @include my-(-($\0\.5), $xl);
}

@mixin xl\:-ms-0\.5 {
  @include ms-(-($\0\.5), $xl);
}

@mixin xl\:-me-0\.5 {
  @include me-(-($\0\.5), $xl);
}

@mixin xl\:-mt-0\.5 {
  @include mt-(-($\0\.5), $xl);
}

@mixin xl\:-mr-0\.5 {
  @include mr-(-($\0\.5), $xl);
}

@mixin xl\:-mb-0\.5 {
  @include mb-(-($\0\.5), $xl);
}

@mixin xl\:-ml-0\.5 {
  @include ml-(-($\0\.5), $xl);
}

@mixin xl\:-m-1 {
  @include m-(-($\1), $xl);
}

@mixin xl\:-mx-1 {
  @include mx-(-($\1), $xl);
}

@mixin xl\:-my-1 {
  @include my-(-($\1), $xl);
}

@mixin xl\:-ms-1 {
  @include ms-(-($\1), $xl);
}

@mixin xl\:-me-1 {
  @include me-(-($\1), $xl);
}

@mixin xl\:-mt-1 {
  @include mt-(-($\1), $xl);
}

@mixin xl\:-mr-1 {
  @include mr-(-($\1), $xl);
}

@mixin xl\:-mb-1 {
  @include mb-(-($\1), $xl);
}

@mixin xl\:-ml-1 {
  @include ml-(-($\1), $xl);
}

@mixin xl\:-m-1\.5 {
  @include m-(-($\1\.5), $xl);
}

@mixin xl\:-mx-1\.5 {
  @include mx-(-($\1\.5), $xl);
}

@mixin xl\:-my-1\.5 {
  @include my-(-($\1\.5), $xl);
}

@mixin xl\:-ms-1\.5 {
  @include ms-(-($\1\.5), $xl);
}

@mixin xl\:-me-1\.5 {
  @include me-(-($\1\.5), $xl);
}

@mixin xl\:-mt-1\.5 {
  @include mt-(-($\1\.5), $xl);
}

@mixin xl\:-mr-1\.5 {
  @include mr-(-($\1\.5), $xl);
}

@mixin xl\:-mb-1\.5 {
  @include mb-(-($\1\.5), $xl);
}

@mixin xl\:-ml-1\.5 {
  @include ml-(-($\1\.5), $xl);
}

@mixin xl\:-m-2 {
  @include m-(-($\2), $xl);
}

@mixin xl\:-mx-2 {
  @include mx-(-($\2), $xl);
}

@mixin xl\:-my-2 {
  @include my-(-($\2), $xl);
}

@mixin xl\:-ms-2 {
  @include ms-(-($\2), $xl);
}

@mixin xl\:-me-2 {
  @include me-(-($\2), $xl);
}

@mixin xl\:-mt-2 {
  @include mt-(-($\2), $xl);
}

@mixin xl\:-mr-2 {
  @include mr-(-($\2), $xl);
}

@mixin xl\:-mb-2 {
  @include mb-(-($\2), $xl);
}

@mixin xl\:-ml-2 {
  @include ml-(-($\2), $xl);
}

@mixin xl\:-m-2\.5 {
  @include m-(-($\2\.5), $xl);
}

@mixin xl\:-mx-2\.5 {
  @include mx-(-($\2\.5), $xl);
}

@mixin xl\:-my-2\.5 {
  @include my-(-($\2\.5), $xl);
}

@mixin xl\:-ms-2\.5 {
  @include ms-(-($\2\.5), $xl);
}

@mixin xl\:-me-2\.5 {
  @include me-(-($\2\.5), $xl);
}

@mixin xl\:-mt-2\.5 {
  @include mt-(-($\2\.5), $xl);
}

@mixin xl\:-mr-2\.5 {
  @include mr-(-($\2\.5), $xl);
}

@mixin xl\:-mb-2\.5 {
  @include mb-(-($\2\.5), $xl);
}

@mixin xl\:-ml-2\.5 {
  @include ml-(-($\2\.5), $xl);
}

@mixin xl\:-m-3 {
  @include m-(-($\3), $xl);
}

@mixin xl\:-mx-3 {
  @include mx-(-($\3), $xl);
}

@mixin xl\:-my-3 {
  @include my-(-($\3), $xl);
}

@mixin xl\:-ms-3 {
  @include ms-(-($\3), $xl);
}

@mixin xl\:-me-3 {
  @include me-(-($\3), $xl);
}

@mixin xl\:-mt-3 {
  @include mt-(-($\3), $xl);
}

@mixin xl\:-mr-3 {
  @include mr-(-($\3), $xl);
}

@mixin xl\:-mb-3 {
  @include mb-(-($\3), $xl);
}

@mixin xl\:-ml-3 {
  @include ml-(-($\3), $xl);
}

@mixin xl\:-m-3\.5 {
  @include m-(-($\3\.5), $xl);
}

@mixin xl\:-mx-3\.5 {
  @include mx-(-($\3\.5), $xl);
}

@mixin xl\:-my-3\.5 {
  @include my-(-($\3\.5), $xl);
}

@mixin xl\:-ms-3\.5 {
  @include ms-(-($\3\.5), $xl);
}

@mixin xl\:-me-3\.5 {
  @include me-(-($\3\.5), $xl);
}

@mixin xl\:-mt-3\.5 {
  @include mt-(-($\3\.5), $xl);
}

@mixin xl\:-mr-3\.5 {
  @include mr-(-($\3\.5), $xl);
}

@mixin xl\:-mb-3\.5 {
  @include mb-(-($\3\.5), $xl);
}

@mixin xl\:-ml-3\.5 {
  @include ml-(-($\3\.5), $xl);
}

@mixin xl\:-m-4 {
  @include m-(-($\4), $xl);
}

@mixin xl\:-mx-4 {
  @include mx-(-($\4), $xl);
}

@mixin xl\:-my-4 {
  @include my-(-($\4), $xl);
}

@mixin xl\:-ms-4 {
  @include ms-(-($\4), $xl);
}

@mixin xl\:-me-4 {
  @include me-(-($\4), $xl);
}

@mixin xl\:-mt-4 {
  @include mt-(-($\4), $xl);
}

@mixin xl\:-mr-4 {
  @include mr-(-($\4), $xl);
}

@mixin xl\:-mb-4 {
  @include mb-(-($\4), $xl);
}

@mixin xl\:-ml-4 {
  @include ml-(-($\4), $xl);
}

@mixin xl\:-m-5 {
  @include m-(-($\5), $xl);
}

@mixin xl\:-mx-5 {
  @include mx-(-($\5), $xl);
}

@mixin xl\:-my-5 {
  @include my-(-($\5), $xl);
}

@mixin xl\:-ms-5 {
  @include ms-(-($\5), $xl);
}

@mixin xl\:-me-5 {
  @include me-(-($\5), $xl);
}

@mixin xl\:-mt-5 {
  @include mt-(-($\5), $xl);
}

@mixin xl\:-mr-5 {
  @include mr-(-($\5), $xl);
}

@mixin xl\:-mb-5 {
  @include mb-(-($\5), $xl);
}

@mixin xl\:-ml-5 {
  @include ml-(-($\5), $xl);
}

@mixin xl\:-m-6 {
  @include m-(-($\6), $xl);
}

@mixin xl\:-mx-6 {
  @include mx-(-($\6), $xl);
}

@mixin xl\:-my-6 {
  @include my-(-($\6), $xl);
}

@mixin xl\:-ms-6 {
  @include ms-(-($\6), $xl);
}

@mixin xl\:-me-6 {
  @include me-(-($\6), $xl);
}

@mixin xl\:-mt-6 {
  @include mt-(-($\6), $xl);
}

@mixin xl\:-mr-6 {
  @include mr-(-($\6), $xl);
}

@mixin xl\:-mb-6 {
  @include mb-(-($\6), $xl);
}

@mixin xl\:-ml-6 {
  @include ml-(-($\6), $xl);
}

@mixin xl\:-m-7 {
  @include m-(-($\7), $xl);
}

@mixin xl\:-mx-7 {
  @include mx-(-($\7), $xl);
}

@mixin xl\:-my-7 {
  @include my-(-($\7), $xl);
}

@mixin xl\:-ms-7 {
  @include ms-(-($\7), $xl);
}

@mixin xl\:-me-7 {
  @include me-(-($\7), $xl);
}

@mixin xl\:-mt-7 {
  @include mt-(-($\7), $xl);
}

@mixin xl\:-mr-7 {
  @include mr-(-($\7), $xl);
}

@mixin xl\:-mb-7 {
  @include mb-(-($\7), $xl);
}

@mixin xl\:-ml-7 {
  @include ml-(-($\7), $xl);
}

@mixin xl\:-m-8 {
  @include m-(-($\8), $xl);
}

@mixin xl\:-mx-8 {
  @include mx-(-($\8), $xl);
}

@mixin xl\:-my-8 {
  @include my-(-($\8), $xl);
}

@mixin xl\:-ms-8 {
  @include ms-(-($\8), $xl);
}

@mixin xl\:-me-8 {
  @include me-(-($\8), $xl);
}

@mixin xl\:-mt-8 {
  @include mt-(-($\8), $xl);
}

@mixin xl\:-mr-8 {
  @include mr-(-($\8), $xl);
}

@mixin xl\:-mb-8 {
  @include mb-(-($\8), $xl);
}

@mixin xl\:-ml-8 {
  @include ml-(-($\8), $xl);
}

@mixin xl\:-m-9 {
  @include m-(-($\9), $xl);
}

@mixin xl\:-mx-9 {
  @include mx-(-($\9), $xl);
}

@mixin xl\:-my-9 {
  @include my-(-($\9), $xl);
}

@mixin xl\:-ms-9 {
  @include ms-(-($\9), $xl);
}

@mixin xl\:-me-9 {
  @include me-(-($\9), $xl);
}

@mixin xl\:-mt-9 {
  @include mt-(-($\9), $xl);
}

@mixin xl\:-mr-9 {
  @include mr-(-($\9), $xl);
}

@mixin xl\:-mb-9 {
  @include mb-(-($\9), $xl);
}

@mixin xl\:-ml-9 {
  @include ml-(-($\9), $xl);
}

@mixin xl\:-m-10 {
  @include m-(-($\10), $xl);
}

@mixin xl\:-mx-10 {
  @include mx-(-($\10), $xl);
}

@mixin xl\:-my-10 {
  @include my-(-($\10), $xl);
}

@mixin xl\:-ms-10 {
  @include ms-(-($\10), $xl);
}

@mixin xl\:-me-10 {
  @include me-(-($\10), $xl);
}

@mixin xl\:-mt-10 {
  @include mt-(-($\10), $xl);
}

@mixin xl\:-mr-10 {
  @include mr-(-($\10), $xl);
}

@mixin xl\:-mb-10 {
  @include mb-(-($\10), $xl);
}

@mixin xl\:-ml-10 {
  @include ml-(-($\10), $xl);
}

@mixin xl\:-m-11 {
  @include m-(-($\11), $xl);
}

@mixin xl\:-mx-11 {
  @include mx-(-($\11), $xl);
}

@mixin xl\:-my-11 {
  @include my-(-($\11), $xl);
}

@mixin xl\:-ms-11 {
  @include ms-(-($\11), $xl);
}

@mixin xl\:-me-11 {
  @include me-(-($\11), $xl);
}

@mixin xl\:-mt-11 {
  @include mt-(-($\11), $xl);
}

@mixin xl\:-mr-11 {
  @include mr-(-($\11), $xl);
}

@mixin xl\:-mb-11 {
  @include mb-(-($\11), $xl);
}

@mixin xl\:-ml-11 {
  @include ml-(-($\11), $xl);
}

@mixin xl\:-m-12 {
  @include m-(-($\12), $xl);
}

@mixin xl\:-mx-12 {
  @include mx-(-($\12), $xl);
}

@mixin xl\:-my-12 {
  @include my-(-($\12), $xl);
}

@mixin xl\:-ms-12 {
  @include ms-(-($\12), $xl);
}

@mixin xl\:-me-12 {
  @include me-(-($\12), $xl);
}

@mixin xl\:-mt-12 {
  @include mt-(-($\12), $xl);
}

@mixin xl\:-mr-12 {
  @include mr-(-($\12), $xl);
}

@mixin xl\:-mb-12 {
  @include mb-(-($\12), $xl);
}

@mixin xl\:-ml-12 {
  @include ml-(-($\12), $xl);
}

@mixin xl\:-m-14 {
  @include m-(-($\14), $xl);
}

@mixin xl\:-mx-14 {
  @include mx-(-($\14), $xl);
}

@mixin xl\:-my-14 {
  @include my-(-($\14), $xl);
}

@mixin xl\:-ms-14 {
  @include ms-(-($\14), $xl);
}

@mixin xl\:-me-14 {
  @include me-(-($\14), $xl);
}

@mixin xl\:-mt-14 {
  @include mt-(-($\14), $xl);
}

@mixin xl\:-mr-14 {
  @include mr-(-($\14), $xl);
}

@mixin xl\:-mb-14 {
  @include mb-(-($\14), $xl);
}

@mixin xl\:-ml-14 {
  @include ml-(-($\14), $xl);
}

@mixin xl\:-m-16 {
  @include m-(-($\16), $xl);
}

@mixin xl\:-mx-16 {
  @include mx-(-($\16), $xl);
}

@mixin xl\:-my-16 {
  @include my-(-($\16), $xl);
}

@mixin xl\:-ms-16 {
  @include ms-(-($\16), $xl);
}

@mixin xl\:-me-16 {
  @include me-(-($\16), $xl);
}

@mixin xl\:-mt-16 {
  @include mt-(-($\16), $xl);
}

@mixin xl\:-mr-16 {
  @include mr-(-($\16), $xl);
}

@mixin xl\:-mb-16 {
  @include mb-(-($\16), $xl);
}

@mixin xl\:-ml-16 {
  @include ml-(-($\16), $xl);
}

@mixin xl\:-m-20 {
  @include m-(-($\20), $xl);
}

@mixin xl\:-mx-20 {
  @include mx-(-($\20), $xl);
}

@mixin xl\:-my-20 {
  @include my-(-($\20), $xl);
}

@mixin xl\:-ms-20 {
  @include ms-(-($\20), $xl);
}

@mixin xl\:-me-20 {
  @include me-(-($\20), $xl);
}

@mixin xl\:-mt-20 {
  @include mt-(-($\20), $xl);
}

@mixin xl\:-mr-20 {
  @include mr-(-($\20), $xl);
}

@mixin xl\:-mb-20 {
  @include mb-(-($\20), $xl);
}

@mixin xl\:-ml-20 {
  @include ml-(-($\20), $xl);
}

@mixin xl\:-m-24 {
  @include m-(-($\24), $xl);
}

@mixin xl\:-mx-24 {
  @include mx-(-($\24), $xl);
}

@mixin xl\:-my-24 {
  @include my-(-($\24), $xl);
}

@mixin xl\:-ms-24 {
  @include ms-(-($\24), $xl);
}

@mixin xl\:-me-24 {
  @include me-(-($\24), $xl);
}

@mixin xl\:-mt-24 {
  @include mt-(-($\24), $xl);
}

@mixin xl\:-mr-24 {
  @include mr-(-($\24), $xl);
}

@mixin xl\:-mb-24 {
  @include mb-(-($\24), $xl);
}

@mixin xl\:-ml-24 {
  @include ml-(-($\24), $xl);
}

@mixin xl\:-m-28 {
  @include m-(-($\28), $xl);
}

@mixin xl\:-mx-28 {
  @include mx-(-($\28), $xl);
}

@mixin xl\:-my-28 {
  @include my-(-($\28), $xl);
}

@mixin xl\:-ms-28 {
  @include ms-(-($\28), $xl);
}

@mixin xl\:-me-28 {
  @include me-(-($\28), $xl);
}

@mixin xl\:-mt-28 {
  @include mt-(-($\28), $xl);
}

@mixin xl\:-mr-28 {
  @include mr-(-($\28), $xl);
}

@mixin xl\:-mb-28 {
  @include mb-(-($\28), $xl);
}

@mixin xl\:-ml-28 {
  @include ml-(-($\28), $xl);
}

@mixin xl\:-m-32 {
  @include m-(-($\32), $xl);
}

@mixin xl\:-mx-32 {
  @include mx-(-($\32), $xl);
}

@mixin xl\:-my-32 {
  @include my-(-($\32), $xl);
}

@mixin xl\:-ms-32 {
  @include ms-(-($\32), $xl);
}

@mixin xl\:-me-32 {
  @include me-(-($\32), $xl);
}

@mixin xl\:-mt-32 {
  @include mt-(-($\32), $xl);
}

@mixin xl\:-mr-32 {
  @include mr-(-($\32), $xl);
}

@mixin xl\:-mb-32 {
  @include mb-(-($\32), $xl);
}

@mixin xl\:-ml-32 {
  @include ml-(-($\32), $xl);
}

@mixin xl\:-m-36 {
  @include m-(-($\36), $xl);
}

@mixin xl\:-mx-36 {
  @include mx-(-($\36), $xl);
}

@mixin xl\:-my-36 {
  @include my-(-($\36), $xl);
}

@mixin xl\:-ms-36 {
  @include ms-(-($\36), $xl);
}

@mixin xl\:-me-36 {
  @include me-(-($\36), $xl);
}

@mixin xl\:-mt-36 {
  @include mt-(-($\36), $xl);
}

@mixin xl\:-mr-36 {
  @include mr-(-($\36), $xl);
}

@mixin xl\:-mb-36 {
  @include mb-(-($\36), $xl);
}

@mixin xl\:-ml-36 {
  @include ml-(-($\36), $xl);
}

@mixin xl\:-m-40 {
  @include m-(-($\40), $xl);
}

@mixin xl\:-mx-40 {
  @include mx-(-($\40), $xl);
}

@mixin xl\:-my-40 {
  @include my-(-($\40), $xl);
}

@mixin xl\:-ms-40 {
  @include ms-(-($\40), $xl);
}

@mixin xl\:-me-40 {
  @include me-(-($\40), $xl);
}

@mixin xl\:-mt-40 {
  @include mt-(-($\40), $xl);
}

@mixin xl\:-mr-40 {
  @include mr-(-($\40), $xl);
}

@mixin xl\:-mb-40 {
  @include mb-(-($\40), $xl);
}

@mixin xl\:-ml-40 {
  @include ml-(-($\40), $xl);
}

@mixin xl\:-m-44 {
  @include m-(-($\44), $xl);
}

@mixin xl\:-mx-44 {
  @include mx-(-($\44), $xl);
}

@mixin xl\:-my-44 {
  @include my-(-($\44), $xl);
}

@mixin xl\:-ms-44 {
  @include ms-(-($\44), $xl);
}

@mixin xl\:-me-44 {
  @include me-(-($\44), $xl);
}

@mixin xl\:-mt-44 {
  @include mt-(-($\44), $xl);
}

@mixin xl\:-mr-44 {
  @include mr-(-($\44), $xl);
}

@mixin xl\:-mb-44 {
  @include mb-(-($\44), $xl);
}

@mixin xl\:-ml-44 {
  @include ml-(-($\44), $xl);
}

@mixin xl\:-m-48 {
  @include m-(-($\48), $xl);
}

@mixin xl\:-mx-48 {
  @include mx-(-($\48), $xl);
}

@mixin xl\:-my-48 {
  @include my-(-($\48), $xl);
}

@mixin xl\:-ms-48 {
  @include ms-(-($\48), $xl);
}

@mixin xl\:-me-48 {
  @include me-(-($\48), $xl);
}

@mixin xl\:-mt-48 {
  @include mt-(-($\48), $xl);
}

@mixin xl\:-mr-48 {
  @include mr-(-($\48), $xl);
}

@mixin xl\:-mb-48 {
  @include mb-(-($\48), $xl);
}

@mixin xl\:-ml-48 {
  @include ml-(-($\48), $xl);
}

@mixin xl\:-m-52 {
  @include m-(-($\52), $xl);
}

@mixin xl\:-mx-52 {
  @include mx-(-($\52), $xl);
}

@mixin xl\:-my-52 {
  @include my-(-($\52), $xl);
}

@mixin xl\:-ms-52 {
  @include ms-(-($\52), $xl);
}

@mixin xl\:-me-52 {
  @include me-(-($\52), $xl);
}

@mixin xl\:-mt-52 {
  @include mt-(-($\52), $xl);
}

@mixin xl\:-mr-52 {
  @include mr-(-($\52), $xl);
}

@mixin xl\:-mb-52 {
  @include mb-(-($\52), $xl);
}

@mixin xl\:-ml-52 {
  @include ml-(-($\52), $xl);
}

@mixin xl\:-m-56 {
  @include m-(-($\56), $xl);
}

@mixin xl\:-mx-56 {
  @include mx-(-($\56), $xl);
}

@mixin xl\:-my-56 {
  @include my-(-($\56), $xl);
}

@mixin xl\:-ms-56 {
  @include ms-(-($\56), $xl);
}

@mixin xl\:-me-56 {
  @include me-(-($\56), $xl);
}

@mixin xl\:-mt-56 {
  @include mt-(-($\56), $xl);
}

@mixin xl\:-mr-56 {
  @include mr-(-($\56), $xl);
}

@mixin xl\:-mb-56 {
  @include mb-(-($\56), $xl);
}

@mixin xl\:-ml-56 {
  @include ml-(-($\56), $xl);
}

@mixin xl\:-m-60 {
  @include m-(-($\60), $xl);
}

@mixin xl\:-mx-60 {
  @include mx-(-($\60), $xl);
}

@mixin xl\:-my-60 {
  @include my-(-($\60), $xl);
}

@mixin xl\:-ms-60 {
  @include ms-(-($\60), $xl);
}

@mixin xl\:-me-60 {
  @include me-(-($\60), $xl);
}

@mixin xl\:-mt-60 {
  @include mt-(-($\60), $xl);
}

@mixin xl\:-mr-60 {
  @include mr-(-($\60), $xl);
}

@mixin xl\:-mb-60 {
  @include mb-(-($\60), $xl);
}

@mixin xl\:-ml-60 {
  @include ml-(-($\60), $xl);
}

@mixin xl\:-m-64 {
  @include m-(-($\64), $xl);
}

@mixin xl\:-mx-64 {
  @include mx-(-($\64), $xl);
}

@mixin xl\:-my-64 {
  @include my-(-($\64), $xl);
}

@mixin xl\:-ms-64 {
  @include ms-(-($\64), $xl);
}

@mixin xl\:-me-64 {
  @include me-(-($\64), $xl);
}

@mixin xl\:-mt-64 {
  @include mt-(-($\64), $xl);
}

@mixin xl\:-mr-64 {
  @include mr-(-($\64), $xl);
}

@mixin xl\:-mb-64 {
  @include mb-(-($\64), $xl);
}

@mixin xl\:-ml-64 {
  @include ml-(-($\64), $xl);
}

@mixin xl\:-m-72 {
  @include m-(-($\72), $xl);
}

@mixin xl\:-mx-72 {
  @include mx-(-($\72), $xl);
}

@mixin xl\:-my-72 {
  @include my-(-($\72), $xl);
}

@mixin xl\:-ms-72 {
  @include ms-(-($\72), $xl);
}

@mixin xl\:-me-72 {
  @include me-(-($\72), $xl);
}

@mixin xl\:-mt-72 {
  @include mt-(-($\72), $xl);
}

@mixin xl\:-mr-72 {
  @include mr-(-($\72), $xl);
}

@mixin xl\:-mb-72 {
  @include mb-(-($\72), $xl);
}

@mixin xl\:-ml-72 {
  @include ml-(-($\72), $xl);
}

@mixin xl\:-m-80 {
  @include m-(-($\80), $xl);
}

@mixin xl\:-mx-80 {
  @include mx-(-($\80), $xl);
}

@mixin xl\:-my-80 {
  @include my-(-($\80), $xl);
}

@mixin xl\:-ms-80 {
  @include ms-(-($\80), $xl);
}

@mixin xl\:-me-80 {
  @include me-(-($\80), $xl);
}

@mixin xl\:-mt-80 {
  @include mt-(-($\80), $xl);
}

@mixin xl\:-mr-80 {
  @include mr-(-($\80), $xl);
}

@mixin xl\:-mb-80 {
  @include mb-(-($\80), $xl);
}

@mixin xl\:-ml-80 {
  @include ml-(-($\80), $xl);
}

@mixin xl\:-m-96 {
  @include m-(-($\96), $xl);
}

@mixin xl\:-mx-96 {
  @include mx-(-($\96), $xl);
}

@mixin xl\:-my-96 {
  @include my-(-($\96), $xl);
}

@mixin xl\:-ms-96 {
  @include ms-(-($\96), $xl);
}

@mixin xl\:-me-96 {
  @include me-(-($\96), $xl);
}

@mixin xl\:-mt-96 {
  @include mt-(-($\96), $xl);
}

@mixin xl\:-mr-96 {
  @include mr-(-($\96), $xl);
}

@mixin xl\:-mb-96 {
  @include mb-(-($\96), $xl);
}

@mixin xl\:-ml-96 {
  @include ml-(-($\96), $xl);
}

@mixin \2xl\:-m-0 {
  @include m-(-($\0), $\2xl);
}

@mixin \2xl\:-mx-0 {
  @include mx-(-($\0), $\2xl);
}

@mixin \2xl\:-my-0 {
  @include my-(-($\0), $\2xl);
}

@mixin \2xl\:-ms-0 {
  @include ms-(-($\0), $\2xl);
}

@mixin \2xl\:-me-0 {
  @include me-(-($\0), $\2xl);
}

@mixin \2xl\:-mt-0 {
  @include mt-(-($\0), $\2xl);
}

@mixin \2xl\:-mr-0 {
  @include mr-(-($\0), $\2xl);
}

@mixin \2xl\:-mb-0 {
  @include mb-(-($\0), $\2xl);
}

@mixin \2xl\:-ml-0 {
  @include ml-(-($\0), $\2xl);
}

@mixin \2xl\:-m-px {
  @include m-(-($\px), $\2xl);
}

@mixin \2xl\:-mx-px {
  @include mx-(-($\px), $\2xl);
}

@mixin \2xl\:-my-px {
  @include my-(-($\px), $\2xl);
}

@mixin \2xl\:-ms-px {
  @include ms-(-($\px), $\2xl);
}

@mixin \2xl\:-me-px {
  @include me-(-($\px), $\2xl);
}

@mixin \2xl\:-mt-px {
  @include mt-(-($\px), $\2xl);
}

@mixin \2xl\:-mr-px {
  @include mr-(-($\px), $\2xl);
}

@mixin \2xl\:-mb-px {
  @include mb-(-($\px), $\2xl);
}

@mixin \2xl\:-ml-px {
  @include ml-(-($\px), $\2xl);
}

@mixin \2xl\:-m-0\.5 {
  @include m-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-mx-0\.5 {
  @include mx-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-my-0\.5 {
  @include my-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-ms-0\.5 {
  @include ms-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-me-0\.5 {
  @include me-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-mt-0\.5 {
  @include mt-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-mr-0\.5 {
  @include mr-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-mb-0\.5 {
  @include mb-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-ml-0\.5 {
  @include ml-(-($\0\.5), $\2xl);
}

@mixin \2xl\:-m-1 {
  @include m-(-($\1), $\2xl);
}

@mixin \2xl\:-mx-1 {
  @include mx-(-($\1), $\2xl);
}

@mixin \2xl\:-my-1 {
  @include my-(-($\1), $\2xl);
}

@mixin \2xl\:-ms-1 {
  @include ms-(-($\1), $\2xl);
}

@mixin \2xl\:-me-1 {
  @include me-(-($\1), $\2xl);
}

@mixin \2xl\:-mt-1 {
  @include mt-(-($\1), $\2xl);
}

@mixin \2xl\:-mr-1 {
  @include mr-(-($\1), $\2xl);
}

@mixin \2xl\:-mb-1 {
  @include mb-(-($\1), $\2xl);
}

@mixin \2xl\:-ml-1 {
  @include ml-(-($\1), $\2xl);
}

@mixin \2xl\:-m-1\.5 {
  @include m-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-mx-1\.5 {
  @include mx-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-my-1\.5 {
  @include my-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-ms-1\.5 {
  @include ms-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-me-1\.5 {
  @include me-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-mt-1\.5 {
  @include mt-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-mr-1\.5 {
  @include mr-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-mb-1\.5 {
  @include mb-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-ml-1\.5 {
  @include ml-(-($\1\.5), $\2xl);
}

@mixin \2xl\:-m-2 {
  @include m-(-($\2), $\2xl);
}

@mixin \2xl\:-mx-2 {
  @include mx-(-($\2), $\2xl);
}

@mixin \2xl\:-my-2 {
  @include my-(-($\2), $\2xl);
}

@mixin \2xl\:-ms-2 {
  @include ms-(-($\2), $\2xl);
}

@mixin \2xl\:-me-2 {
  @include me-(-($\2), $\2xl);
}

@mixin \2xl\:-mt-2 {
  @include mt-(-($\2), $\2xl);
}

@mixin \2xl\:-mr-2 {
  @include mr-(-($\2), $\2xl);
}

@mixin \2xl\:-mb-2 {
  @include mb-(-($\2), $\2xl);
}

@mixin \2xl\:-ml-2 {
  @include ml-(-($\2), $\2xl);
}

@mixin \2xl\:-m-2\.5 {
  @include m-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-mx-2\.5 {
  @include mx-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-my-2\.5 {
  @include my-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-ms-2\.5 {
  @include ms-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-me-2\.5 {
  @include me-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-mt-2\.5 {
  @include mt-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-mr-2\.5 {
  @include mr-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-mb-2\.5 {
  @include mb-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-ml-2\.5 {
  @include ml-(-($\2\.5), $\2xl);
}

@mixin \2xl\:-m-3 {
  @include m-(-($\3), $\2xl);
}

@mixin \2xl\:-mx-3 {
  @include mx-(-($\3), $\2xl);
}

@mixin \2xl\:-my-3 {
  @include my-(-($\3), $\2xl);
}

@mixin \2xl\:-ms-3 {
  @include ms-(-($\3), $\2xl);
}

@mixin \2xl\:-me-3 {
  @include me-(-($\3), $\2xl);
}

@mixin \2xl\:-mt-3 {
  @include mt-(-($\3), $\2xl);
}

@mixin \2xl\:-mr-3 {
  @include mr-(-($\3), $\2xl);
}

@mixin \2xl\:-mb-3 {
  @include mb-(-($\3), $\2xl);
}

@mixin \2xl\:-ml-3 {
  @include ml-(-($\3), $\2xl);
}

@mixin \2xl\:-m-3\.5 {
  @include m-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-mx-3\.5 {
  @include mx-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-my-3\.5 {
  @include my-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-ms-3\.5 {
  @include ms-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-me-3\.5 {
  @include me-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-mt-3\.5 {
  @include mt-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-mr-3\.5 {
  @include mr-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-mb-3\.5 {
  @include mb-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-ml-3\.5 {
  @include ml-(-($\3\.5), $\2xl);
}

@mixin \2xl\:-m-4 {
  @include m-(-($\4), $\2xl);
}

@mixin \2xl\:-mx-4 {
  @include mx-(-($\4), $\2xl);
}

@mixin \2xl\:-my-4 {
  @include my-(-($\4), $\2xl);
}

@mixin \2xl\:-ms-4 {
  @include ms-(-($\4), $\2xl);
}

@mixin \2xl\:-me-4 {
  @include me-(-($\4), $\2xl);
}

@mixin \2xl\:-mt-4 {
  @include mt-(-($\4), $\2xl);
}

@mixin \2xl\:-mr-4 {
  @include mr-(-($\4), $\2xl);
}

@mixin \2xl\:-mb-4 {
  @include mb-(-($\4), $\2xl);
}

@mixin \2xl\:-ml-4 {
  @include ml-(-($\4), $\2xl);
}

@mixin \2xl\:-m-5 {
  @include m-(-($\5), $\2xl);
}

@mixin \2xl\:-mx-5 {
  @include mx-(-($\5), $\2xl);
}

@mixin \2xl\:-my-5 {
  @include my-(-($\5), $\2xl);
}

@mixin \2xl\:-ms-5 {
  @include ms-(-($\5), $\2xl);
}

@mixin \2xl\:-me-5 {
  @include me-(-($\5), $\2xl);
}

@mixin \2xl\:-mt-5 {
  @include mt-(-($\5), $\2xl);
}

@mixin \2xl\:-mr-5 {
  @include mr-(-($\5), $\2xl);
}

@mixin \2xl\:-mb-5 {
  @include mb-(-($\5), $\2xl);
}

@mixin \2xl\:-ml-5 {
  @include ml-(-($\5), $\2xl);
}

@mixin \2xl\:-m-6 {
  @include m-(-($\6), $\2xl);
}

@mixin \2xl\:-mx-6 {
  @include mx-(-($\6), $\2xl);
}

@mixin \2xl\:-my-6 {
  @include my-(-($\6), $\2xl);
}

@mixin \2xl\:-ms-6 {
  @include ms-(-($\6), $\2xl);
}

@mixin \2xl\:-me-6 {
  @include me-(-($\6), $\2xl);
}

@mixin \2xl\:-mt-6 {
  @include mt-(-($\6), $\2xl);
}

@mixin \2xl\:-mr-6 {
  @include mr-(-($\6), $\2xl);
}

@mixin \2xl\:-mb-6 {
  @include mb-(-($\6), $\2xl);
}

@mixin \2xl\:-ml-6 {
  @include ml-(-($\6), $\2xl);
}

@mixin \2xl\:-m-7 {
  @include m-(-($\7), $\2xl);
}

@mixin \2xl\:-mx-7 {
  @include mx-(-($\7), $\2xl);
}

@mixin \2xl\:-my-7 {
  @include my-(-($\7), $\2xl);
}

@mixin \2xl\:-ms-7 {
  @include ms-(-($\7), $\2xl);
}

@mixin \2xl\:-me-7 {
  @include me-(-($\7), $\2xl);
}

@mixin \2xl\:-mt-7 {
  @include mt-(-($\7), $\2xl);
}

@mixin \2xl\:-mr-7 {
  @include mr-(-($\7), $\2xl);
}

@mixin \2xl\:-mb-7 {
  @include mb-(-($\7), $\2xl);
}

@mixin \2xl\:-ml-7 {
  @include ml-(-($\7), $\2xl);
}

@mixin \2xl\:-m-8 {
  @include m-(-($\8), $\2xl);
}

@mixin \2xl\:-mx-8 {
  @include mx-(-($\8), $\2xl);
}

@mixin \2xl\:-my-8 {
  @include my-(-($\8), $\2xl);
}

@mixin \2xl\:-ms-8 {
  @include ms-(-($\8), $\2xl);
}

@mixin \2xl\:-me-8 {
  @include me-(-($\8), $\2xl);
}

@mixin \2xl\:-mt-8 {
  @include mt-(-($\8), $\2xl);
}

@mixin \2xl\:-mr-8 {
  @include mr-(-($\8), $\2xl);
}

@mixin \2xl\:-mb-8 {
  @include mb-(-($\8), $\2xl);
}

@mixin \2xl\:-ml-8 {
  @include ml-(-($\8), $\2xl);
}

@mixin \2xl\:-m-9 {
  @include m-(-($\9), $\2xl);
}

@mixin \2xl\:-mx-9 {
  @include mx-(-($\9), $\2xl);
}

@mixin \2xl\:-my-9 {
  @include my-(-($\9), $\2xl);
}

@mixin \2xl\:-ms-9 {
  @include ms-(-($\9), $\2xl);
}

@mixin \2xl\:-me-9 {
  @include me-(-($\9), $\2xl);
}

@mixin \2xl\:-mt-9 {
  @include mt-(-($\9), $\2xl);
}

@mixin \2xl\:-mr-9 {
  @include mr-(-($\9), $\2xl);
}

@mixin \2xl\:-mb-9 {
  @include mb-(-($\9), $\2xl);
}

@mixin \2xl\:-ml-9 {
  @include ml-(-($\9), $\2xl);
}

@mixin \2xl\:-m-10 {
  @include m-(-($\10), $\2xl);
}

@mixin \2xl\:-mx-10 {
  @include mx-(-($\10), $\2xl);
}

@mixin \2xl\:-my-10 {
  @include my-(-($\10), $\2xl);
}

@mixin \2xl\:-ms-10 {
  @include ms-(-($\10), $\2xl);
}

@mixin \2xl\:-me-10 {
  @include me-(-($\10), $\2xl);
}

@mixin \2xl\:-mt-10 {
  @include mt-(-($\10), $\2xl);
}

@mixin \2xl\:-mr-10 {
  @include mr-(-($\10), $\2xl);
}

@mixin \2xl\:-mb-10 {
  @include mb-(-($\10), $\2xl);
}

@mixin \2xl\:-ml-10 {
  @include ml-(-($\10), $\2xl);
}

@mixin \2xl\:-m-11 {
  @include m-(-($\11), $\2xl);
}

@mixin \2xl\:-mx-11 {
  @include mx-(-($\11), $\2xl);
}

@mixin \2xl\:-my-11 {
  @include my-(-($\11), $\2xl);
}

@mixin \2xl\:-ms-11 {
  @include ms-(-($\11), $\2xl);
}

@mixin \2xl\:-me-11 {
  @include me-(-($\11), $\2xl);
}

@mixin \2xl\:-mt-11 {
  @include mt-(-($\11), $\2xl);
}

@mixin \2xl\:-mr-11 {
  @include mr-(-($\11), $\2xl);
}

@mixin \2xl\:-mb-11 {
  @include mb-(-($\11), $\2xl);
}

@mixin \2xl\:-ml-11 {
  @include ml-(-($\11), $\2xl);
}

@mixin \2xl\:-m-12 {
  @include m-(-($\12), $\2xl);
}

@mixin \2xl\:-mx-12 {
  @include mx-(-($\12), $\2xl);
}

@mixin \2xl\:-my-12 {
  @include my-(-($\12), $\2xl);
}

@mixin \2xl\:-ms-12 {
  @include ms-(-($\12), $\2xl);
}

@mixin \2xl\:-me-12 {
  @include me-(-($\12), $\2xl);
}

@mixin \2xl\:-mt-12 {
  @include mt-(-($\12), $\2xl);
}

@mixin \2xl\:-mr-12 {
  @include mr-(-($\12), $\2xl);
}

@mixin \2xl\:-mb-12 {
  @include mb-(-($\12), $\2xl);
}

@mixin \2xl\:-ml-12 {
  @include ml-(-($\12), $\2xl);
}

@mixin \2xl\:-m-14 {
  @include m-(-($\14), $\2xl);
}

@mixin \2xl\:-mx-14 {
  @include mx-(-($\14), $\2xl);
}

@mixin \2xl\:-my-14 {
  @include my-(-($\14), $\2xl);
}

@mixin \2xl\:-ms-14 {
  @include ms-(-($\14), $\2xl);
}

@mixin \2xl\:-me-14 {
  @include me-(-($\14), $\2xl);
}

@mixin \2xl\:-mt-14 {
  @include mt-(-($\14), $\2xl);
}

@mixin \2xl\:-mr-14 {
  @include mr-(-($\14), $\2xl);
}

@mixin \2xl\:-mb-14 {
  @include mb-(-($\14), $\2xl);
}

@mixin \2xl\:-ml-14 {
  @include ml-(-($\14), $\2xl);
}

@mixin \2xl\:-m-16 {
  @include m-(-($\16), $\2xl);
}

@mixin \2xl\:-mx-16 {
  @include mx-(-($\16), $\2xl);
}

@mixin \2xl\:-my-16 {
  @include my-(-($\16), $\2xl);
}

@mixin \2xl\:-ms-16 {
  @include ms-(-($\16), $\2xl);
}

@mixin \2xl\:-me-16 {
  @include me-(-($\16), $\2xl);
}

@mixin \2xl\:-mt-16 {
  @include mt-(-($\16), $\2xl);
}

@mixin \2xl\:-mr-16 {
  @include mr-(-($\16), $\2xl);
}

@mixin \2xl\:-mb-16 {
  @include mb-(-($\16), $\2xl);
}

@mixin \2xl\:-ml-16 {
  @include ml-(-($\16), $\2xl);
}

@mixin \2xl\:-m-20 {
  @include m-(-($\20), $\2xl);
}

@mixin \2xl\:-mx-20 {
  @include mx-(-($\20), $\2xl);
}

@mixin \2xl\:-my-20 {
  @include my-(-($\20), $\2xl);
}

@mixin \2xl\:-ms-20 {
  @include ms-(-($\20), $\2xl);
}

@mixin \2xl\:-me-20 {
  @include me-(-($\20), $\2xl);
}

@mixin \2xl\:-mt-20 {
  @include mt-(-($\20), $\2xl);
}

@mixin \2xl\:-mr-20 {
  @include mr-(-($\20), $\2xl);
}

@mixin \2xl\:-mb-20 {
  @include mb-(-($\20), $\2xl);
}

@mixin \2xl\:-ml-20 {
  @include ml-(-($\20), $\2xl);
}

@mixin \2xl\:-m-24 {
  @include m-(-($\24), $\2xl);
}

@mixin \2xl\:-mx-24 {
  @include mx-(-($\24), $\2xl);
}

@mixin \2xl\:-my-24 {
  @include my-(-($\24), $\2xl);
}

@mixin \2xl\:-ms-24 {
  @include ms-(-($\24), $\2xl);
}

@mixin \2xl\:-me-24 {
  @include me-(-($\24), $\2xl);
}

@mixin \2xl\:-mt-24 {
  @include mt-(-($\24), $\2xl);
}

@mixin \2xl\:-mr-24 {
  @include mr-(-($\24), $\2xl);
}

@mixin \2xl\:-mb-24 {
  @include mb-(-($\24), $\2xl);
}

@mixin \2xl\:-ml-24 {
  @include ml-(-($\24), $\2xl);
}

@mixin \2xl\:-m-28 {
  @include m-(-($\28), $\2xl);
}

@mixin \2xl\:-mx-28 {
  @include mx-(-($\28), $\2xl);
}

@mixin \2xl\:-my-28 {
  @include my-(-($\28), $\2xl);
}

@mixin \2xl\:-ms-28 {
  @include ms-(-($\28), $\2xl);
}

@mixin \2xl\:-me-28 {
  @include me-(-($\28), $\2xl);
}

@mixin \2xl\:-mt-28 {
  @include mt-(-($\28), $\2xl);
}

@mixin \2xl\:-mr-28 {
  @include mr-(-($\28), $\2xl);
}

@mixin \2xl\:-mb-28 {
  @include mb-(-($\28), $\2xl);
}

@mixin \2xl\:-ml-28 {
  @include ml-(-($\28), $\2xl);
}

@mixin \2xl\:-m-32 {
  @include m-(-($\32), $\2xl);
}

@mixin \2xl\:-mx-32 {
  @include mx-(-($\32), $\2xl);
}

@mixin \2xl\:-my-32 {
  @include my-(-($\32), $\2xl);
}

@mixin \2xl\:-ms-32 {
  @include ms-(-($\32), $\2xl);
}

@mixin \2xl\:-me-32 {
  @include me-(-($\32), $\2xl);
}

@mixin \2xl\:-mt-32 {
  @include mt-(-($\32), $\2xl);
}

@mixin \2xl\:-mr-32 {
  @include mr-(-($\32), $\2xl);
}

@mixin \2xl\:-mb-32 {
  @include mb-(-($\32), $\2xl);
}

@mixin \2xl\:-ml-32 {
  @include ml-(-($\32), $\2xl);
}

@mixin \2xl\:-m-36 {
  @include m-(-($\36), $\2xl);
}

@mixin \2xl\:-mx-36 {
  @include mx-(-($\36), $\2xl);
}

@mixin \2xl\:-my-36 {
  @include my-(-($\36), $\2xl);
}

@mixin \2xl\:-ms-36 {
  @include ms-(-($\36), $\2xl);
}

@mixin \2xl\:-me-36 {
  @include me-(-($\36), $\2xl);
}

@mixin \2xl\:-mt-36 {
  @include mt-(-($\36), $\2xl);
}

@mixin \2xl\:-mr-36 {
  @include mr-(-($\36), $\2xl);
}

@mixin \2xl\:-mb-36 {
  @include mb-(-($\36), $\2xl);
}

@mixin \2xl\:-ml-36 {
  @include ml-(-($\36), $\2xl);
}

@mixin \2xl\:-m-40 {
  @include m-(-($\40), $\2xl);
}

@mixin \2xl\:-mx-40 {
  @include mx-(-($\40), $\2xl);
}

@mixin \2xl\:-my-40 {
  @include my-(-($\40), $\2xl);
}

@mixin \2xl\:-ms-40 {
  @include ms-(-($\40), $\2xl);
}

@mixin \2xl\:-me-40 {
  @include me-(-($\40), $\2xl);
}

@mixin \2xl\:-mt-40 {
  @include mt-(-($\40), $\2xl);
}

@mixin \2xl\:-mr-40 {
  @include mr-(-($\40), $\2xl);
}

@mixin \2xl\:-mb-40 {
  @include mb-(-($\40), $\2xl);
}

@mixin \2xl\:-ml-40 {
  @include ml-(-($\40), $\2xl);
}

@mixin \2xl\:-m-44 {
  @include m-(-($\44), $\2xl);
}

@mixin \2xl\:-mx-44 {
  @include mx-(-($\44), $\2xl);
}

@mixin \2xl\:-my-44 {
  @include my-(-($\44), $\2xl);
}

@mixin \2xl\:-ms-44 {
  @include ms-(-($\44), $\2xl);
}

@mixin \2xl\:-me-44 {
  @include me-(-($\44), $\2xl);
}

@mixin \2xl\:-mt-44 {
  @include mt-(-($\44), $\2xl);
}

@mixin \2xl\:-mr-44 {
  @include mr-(-($\44), $\2xl);
}

@mixin \2xl\:-mb-44 {
  @include mb-(-($\44), $\2xl);
}

@mixin \2xl\:-ml-44 {
  @include ml-(-($\44), $\2xl);
}

@mixin \2xl\:-m-48 {
  @include m-(-($\48), $\2xl);
}

@mixin \2xl\:-mx-48 {
  @include mx-(-($\48), $\2xl);
}

@mixin \2xl\:-my-48 {
  @include my-(-($\48), $\2xl);
}

@mixin \2xl\:-ms-48 {
  @include ms-(-($\48), $\2xl);
}

@mixin \2xl\:-me-48 {
  @include me-(-($\48), $\2xl);
}

@mixin \2xl\:-mt-48 {
  @include mt-(-($\48), $\2xl);
}

@mixin \2xl\:-mr-48 {
  @include mr-(-($\48), $\2xl);
}

@mixin \2xl\:-mb-48 {
  @include mb-(-($\48), $\2xl);
}

@mixin \2xl\:-ml-48 {
  @include ml-(-($\48), $\2xl);
}

@mixin \2xl\:-m-52 {
  @include m-(-($\52), $\2xl);
}

@mixin \2xl\:-mx-52 {
  @include mx-(-($\52), $\2xl);
}

@mixin \2xl\:-my-52 {
  @include my-(-($\52), $\2xl);
}

@mixin \2xl\:-ms-52 {
  @include ms-(-($\52), $\2xl);
}

@mixin \2xl\:-me-52 {
  @include me-(-($\52), $\2xl);
}

@mixin \2xl\:-mt-52 {
  @include mt-(-($\52), $\2xl);
}

@mixin \2xl\:-mr-52 {
  @include mr-(-($\52), $\2xl);
}

@mixin \2xl\:-mb-52 {
  @include mb-(-($\52), $\2xl);
}

@mixin \2xl\:-ml-52 {
  @include ml-(-($\52), $\2xl);
}

@mixin \2xl\:-m-56 {
  @include m-(-($\56), $\2xl);
}

@mixin \2xl\:-mx-56 {
  @include mx-(-($\56), $\2xl);
}

@mixin \2xl\:-my-56 {
  @include my-(-($\56), $\2xl);
}

@mixin \2xl\:-ms-56 {
  @include ms-(-($\56), $\2xl);
}

@mixin \2xl\:-me-56 {
  @include me-(-($\56), $\2xl);
}

@mixin \2xl\:-mt-56 {
  @include mt-(-($\56), $\2xl);
}

@mixin \2xl\:-mr-56 {
  @include mr-(-($\56), $\2xl);
}

@mixin \2xl\:-mb-56 {
  @include mb-(-($\56), $\2xl);
}

@mixin \2xl\:-ml-56 {
  @include ml-(-($\56), $\2xl);
}

@mixin \2xl\:-m-60 {
  @include m-(-($\60), $\2xl);
}

@mixin \2xl\:-mx-60 {
  @include mx-(-($\60), $\2xl);
}

@mixin \2xl\:-my-60 {
  @include my-(-($\60), $\2xl);
}

@mixin \2xl\:-ms-60 {
  @include ms-(-($\60), $\2xl);
}

@mixin \2xl\:-me-60 {
  @include me-(-($\60), $\2xl);
}

@mixin \2xl\:-mt-60 {
  @include mt-(-($\60), $\2xl);
}

@mixin \2xl\:-mr-60 {
  @include mr-(-($\60), $\2xl);
}

@mixin \2xl\:-mb-60 {
  @include mb-(-($\60), $\2xl);
}

@mixin \2xl\:-ml-60 {
  @include ml-(-($\60), $\2xl);
}

@mixin \2xl\:-m-64 {
  @include m-(-($\64), $\2xl);
}

@mixin \2xl\:-mx-64 {
  @include mx-(-($\64), $\2xl);
}

@mixin \2xl\:-my-64 {
  @include my-(-($\64), $\2xl);
}

@mixin \2xl\:-ms-64 {
  @include ms-(-($\64), $\2xl);
}

@mixin \2xl\:-me-64 {
  @include me-(-($\64), $\2xl);
}

@mixin \2xl\:-mt-64 {
  @include mt-(-($\64), $\2xl);
}

@mixin \2xl\:-mr-64 {
  @include mr-(-($\64), $\2xl);
}

@mixin \2xl\:-mb-64 {
  @include mb-(-($\64), $\2xl);
}

@mixin \2xl\:-ml-64 {
  @include ml-(-($\64), $\2xl);
}

@mixin \2xl\:-m-72 {
  @include m-(-($\72), $\2xl);
}

@mixin \2xl\:-mx-72 {
  @include mx-(-($\72), $\2xl);
}

@mixin \2xl\:-my-72 {
  @include my-(-($\72), $\2xl);
}

@mixin \2xl\:-ms-72 {
  @include ms-(-($\72), $\2xl);
}

@mixin \2xl\:-me-72 {
  @include me-(-($\72), $\2xl);
}

@mixin \2xl\:-mt-72 {
  @include mt-(-($\72), $\2xl);
}

@mixin \2xl\:-mr-72 {
  @include mr-(-($\72), $\2xl);
}

@mixin \2xl\:-mb-72 {
  @include mb-(-($\72), $\2xl);
}

@mixin \2xl\:-ml-72 {
  @include ml-(-($\72), $\2xl);
}

@mixin \2xl\:-m-80 {
  @include m-(-($\80), $\2xl);
}

@mixin \2xl\:-mx-80 {
  @include mx-(-($\80), $\2xl);
}

@mixin \2xl\:-my-80 {
  @include my-(-($\80), $\2xl);
}

@mixin \2xl\:-ms-80 {
  @include ms-(-($\80), $\2xl);
}

@mixin \2xl\:-me-80 {
  @include me-(-($\80), $\2xl);
}

@mixin \2xl\:-mt-80 {
  @include mt-(-($\80), $\2xl);
}

@mixin \2xl\:-mr-80 {
  @include mr-(-($\80), $\2xl);
}

@mixin \2xl\:-mb-80 {
  @include mb-(-($\80), $\2xl);
}

@mixin \2xl\:-ml-80 {
  @include ml-(-($\80), $\2xl);
}

@mixin \2xl\:-m-96 {
  @include m-(-($\96), $\2xl);
}

@mixin \2xl\:-mx-96 {
  @include mx-(-($\96), $\2xl);
}

@mixin \2xl\:-my-96 {
  @include my-(-($\96), $\2xl);
}

@mixin \2xl\:-ms-96 {
  @include ms-(-($\96), $\2xl);
}

@mixin \2xl\:-me-96 {
  @include me-(-($\96), $\2xl);
}

@mixin \2xl\:-mt-96 {
  @include mt-(-($\96), $\2xl);
}

@mixin \2xl\:-mr-96 {
  @include mr-(-($\96), $\2xl);
}

@mixin \2xl\:-mb-96 {
  @include mb-(-($\96), $\2xl);
}

@mixin \2xl\:-ml-96 {
  @include ml-(-($\96), $\2xl);
}

@mixin -m-($v) {
  @include m-(-($v));
}

@mixin -mx-($v) {
  @include mx-(-($v));
}

@mixin -my-($v) {
  @include my-(-($v));
}

@mixin -ms-($v) {
  @include ms-(-($v));
}

@mixin -me-($v) {
  @include me-(-($v));
}

@mixin -mt-($v) {
  @include mt-(-($v));
}

@mixin -mr-($v) {
  @include mr-(-($v));
}

@mixin -mb-($v) {
  @include mb-(-($v));
}

@mixin -ml-($v) {
  @include ml-(-($v));
}

@mixin sm\:-m-($v) {
  @include m-(-($v), $sm);
}

@mixin sm\:-mx-($v) {
  @include mx-(-($v), $sm);
}

@mixin sm\:-my-($v) {
  @include my-(-($v), $sm);
}

@mixin sm\:-ms-($v) {
  @include ms-(-($v), $sm);
}

@mixin sm\:-me-($v) {
  @include me-(-($v), $sm);
}

@mixin sm\:-mt-($v) {
  @include mt-(-($v), $sm);
}

@mixin sm\:-mr-($v) {
  @include mr-(-($v), $sm);
}

@mixin sm\:-mb-($v) {
  @include mb-(-($v), $sm);
}

@mixin sm\:-ml-($v) {
  @include ml-(-($v), $sm);
}

@mixin md\:-m-($v) {
  @include m-(-($v), $md);
}

@mixin md\:-mx-($v) {
  @include mx-(-($v), $md);
}

@mixin md\:-my-($v) {
  @include my-(-($v), $md);
}

@mixin md\:-ms-($v) {
  @include ms-(-($v), $md);
}

@mixin md\:-me-($v) {
  @include me-(-($v), $md);
}

@mixin md\:-mt-($v) {
  @include mt-(-($v), $md);
}

@mixin md\:-mr-($v) {
  @include mr-(-($v), $md);
}

@mixin md\:-mb-($v) {
  @include mb-(-($v), $md);
}

@mixin md\:-ml-($v) {
  @include ml-(-($v), $md);
}

@mixin lg\:-m-($v) {
  @include m-(-($v), $lg);
}

@mixin lg\:-mx-($v) {
  @include mx-(-($v), $lg);
}

@mixin lg\:-my-($v) {
  @include my-(-($v), $lg);
}

@mixin lg\:-ms-($v) {
  @include ms-(-($v), $lg);
}

@mixin lg\:-me-($v) {
  @include me-(-($v), $lg);
}

@mixin lg\:-mt-($v) {
  @include mt-(-($v), $lg);
}

@mixin lg\:-mr-($v) {
  @include mr-(-($v), $lg);
}

@mixin lg\:-mb-($v) {
  @include mb-(-($v), $lg);
}

@mixin lg\:-ml-($v) {
  @include ml-(-($v), $lg);
}

@mixin xl\:-m-($v) {
  @include m-(-($v), $xl);
}

@mixin xl\:-mx-($v) {
  @include mx-(-($v), $xl);
}

@mixin xl\:-my-($v) {
  @include my-(-($v), $xl);
}

@mixin xl\:-ms-($v) {
  @include ms-(-($v), $xl);
}

@mixin xl\:-me-($v) {
  @include me-(-($v), $xl);
}

@mixin xl\:-mt-($v) {
  @include mt-(-($v), $xl);
}

@mixin xl\:-mr-($v) {
  @include mr-(-($v), $xl);
}

@mixin xl\:-mb-($v) {
  @include mb-(-($v), $xl);
}

@mixin xl\:-ml-($v) {
  @include ml-(-($v), $xl);
}

@mixin \2xl\:-m-($v) {
  @include m-(-($v), $\2xl);
}

@mixin \2xl\:-mx-($v) {
  @include mx-(-($v), $\2xl);
}

@mixin \2xl\:-my-($v) {
  @include my-(-($v), $\2xl);
}

@mixin \2xl\:-ms-($v) {
  @include ms-(-($v), $\2xl);
}

@mixin \2xl\:-me-($v) {
  @include me-(-($v), $\2xl);
}

@mixin \2xl\:-mt-($v) {
  @include mt-(-($v), $\2xl);
}

@mixin \2xl\:-mr-($v) {
  @include mr-(-($v), $\2xl);
}

@mixin \2xl\:-mb-($v) {
  @include mb-(-($v), $\2xl);
}

@mixin \2xl\:-ml-($v) {
  @include ml-(-($v), $\2xl);
}

@include describe("3.Spacing") {
  @include describe("Margin") {
    @include describe("Basic") {
      @include it("m-0") {
        @include assert {
          @include output {
            @include m-0;
            @include reset;
          }

          @include expect {
            margin: 0px;
          }
        }
      }

      @include it("mx-0") {
        @include assert {
          @include output {
            @include mx-0;
            @include reset;
          }

          @include expect {
            margin-left: 0px;
            margin-right: 0px;
          }
        }
      }

      @include it("my-0") {
        @include assert {
          @include output {
            @include my-0;
            @include reset;
          }

          @include expect {
            margin-top: 0px;
            margin-bottom: 0px;
          }
        }
      }

      @include it("ms-0") {
        @include assert {
          @include output {
            @include ms-0;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0px;
          }
        }
      }

      @include it("me-0") {
        @include assert {
          @include output {
            @include me-0;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0px;
          }
        }
      }

      @include it("mt-0") {
        @include assert {
          @include output {
            @include mt-0;
            @include reset;
          }

          @include expect {
            margin-top: 0px;
          }
        }
      }

      @include it("mr-0") {
        @include assert {
          @include output {
            @include mr-0;
            @include reset;
          }

          @include expect {
            margin-right: 0px;
          }
        }
      }

      @include it("mb-0") {
        @include assert {
          @include output {
            @include mb-0;
            @include reset;
          }

          @include expect {
            margin-bottom: 0px;
          }
        }
      }

      @include it("ml-0") {
        @include assert {
          @include output {
            @include ml-0;
            @include reset;
          }

          @include expect {
            margin-left: 0px;
          }
        }
      }

      @include it("m-px") {
        @include assert {
          @include output {
            @include m-px;
            @include reset;
          }

          @include expect {
            margin: 1px;
          }
        }
      }

      @include it("mx-px") {
        @include assert {
          @include output {
            @include mx-px;
            @include reset;
          }

          @include expect {
            margin-left: 1px;
            margin-right: 1px;
          }
        }
      }

      @include it("my-px") {
        @include assert {
          @include output {
            @include my-px;
            @include reset;
          }

          @include expect {
            margin-top: 1px;
            margin-bottom: 1px;
          }
        }
      }

      @include it("ms-px") {
        @include assert {
          @include output {
            @include ms-px;
            @include reset;
          }

          @include expect {
            margin-inline-start: 1px;
          }
        }
      }

      @include it("me-px") {
        @include assert {
          @include output {
            @include me-px;
            @include reset;
          }

          @include expect {
            margin-inline-end: 1px;
          }
        }
      }

      @include it("mt-px") {
        @include assert {
          @include output {
            @include mt-px;
            @include reset;
          }

          @include expect {
            margin-top: 1px;
          }
        }
      }

      @include it("mr-px") {
        @include assert {
          @include output {
            @include mr-px;
            @include reset;
          }

          @include expect {
            margin-right: 1px;
          }
        }
      }

      @include it("mb-px") {
        @include assert {
          @include output {
            @include mb-px;
            @include reset;
          }

          @include expect {
            margin-bottom: 1px;
          }
        }
      }

      @include it("ml-px") {
        @include assert {
          @include output {
            @include ml-px;
            @include reset;
          }

          @include expect {
            margin-left: 1px;
          }
        }
      }

      @include it("m-0\.5") {
        @include assert {
          @include output {
            @include m-0\.5;
            @include reset;
          }

          @include expect {
            margin: 0.125rem;
          }
        }
      }

      @include it("mx-0\.5") {
        @include assert {
          @include output {
            @include mx-0\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.125rem;
            margin-right: 0.125rem;
          }
        }
      }

      @include it("my-0\.5") {
        @include assert {
          @include output {
            @include my-0\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.125rem;
            margin-bottom: 0.125rem;
          }
        }
      }

      @include it("ms-0\.5") {
        @include assert {
          @include output {
            @include ms-0\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.125rem;
          }
        }
      }

      @include it("me-0\.5") {
        @include assert {
          @include output {
            @include me-0\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.125rem;
          }
        }
      }

      @include it("mt-0\.5") {
        @include assert {
          @include output {
            @include mt-0\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.125rem;
          }
        }
      }

      @include it("mr-0\.5") {
        @include assert {
          @include output {
            @include mr-0\.5;
            @include reset;
          }

          @include expect {
            margin-right: 0.125rem;
          }
        }
      }

      @include it("mb-0\.5") {
        @include assert {
          @include output {
            @include mb-0\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.125rem;
          }
        }
      }

      @include it("ml-0\.5") {
        @include assert {
          @include output {
            @include ml-0\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.125rem;
          }
        }
      }

      @include it("m-1") {
        @include assert {
          @include output {
            @include m-1;
            @include reset;
          }

          @include expect {
            margin: 0.25rem;
          }
        }
      }

      @include it("mx-1") {
        @include assert {
          @include output {
            @include mx-1;
            @include reset;
          }

          @include expect {
            margin-left: 0.25rem;
            margin-right: 0.25rem;
          }
        }
      }

      @include it("my-1") {
        @include assert {
          @include output {
            @include my-1;
            @include reset;
          }

          @include expect {
            margin-top: 0.25rem;
            margin-bottom: 0.25rem;
          }
        }
      }

      @include it("ms-1") {
        @include assert {
          @include output {
            @include ms-1;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.25rem;
          }
        }
      }

      @include it("me-1") {
        @include assert {
          @include output {
            @include me-1;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.25rem;
          }
        }
      }

      @include it("mt-1") {
        @include assert {
          @include output {
            @include mt-1;
            @include reset;
          }

          @include expect {
            margin-top: 0.25rem;
          }
        }
      }

      @include it("mr-1") {
        @include assert {
          @include output {
            @include mr-1;
            @include reset;
          }

          @include expect {
            margin-right: 0.25rem;
          }
        }
      }

      @include it("mb-1") {
        @include assert {
          @include output {
            @include mb-1;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.25rem;
          }
        }
      }

      @include it("ml-1") {
        @include assert {
          @include output {
            @include ml-1;
            @include reset;
          }

          @include expect {
            margin-left: 0.25rem;
          }
        }
      }

      @include it("m-1\.5") {
        @include assert {
          @include output {
            @include m-1\.5;
            @include reset;
          }

          @include expect {
            margin: 0.375rem;
          }
        }
      }

      @include it("mx-1\.5") {
        @include assert {
          @include output {
            @include mx-1\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.375rem;
            margin-right: 0.375rem;
          }
        }
      }

      @include it("my-1\.5") {
        @include assert {
          @include output {
            @include my-1\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.375rem;
            margin-bottom: 0.375rem;
          }
        }
      }

      @include it("ms-1\.5") {
        @include assert {
          @include output {
            @include ms-1\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.375rem;
          }
        }
      }

      @include it("me-1\.5") {
        @include assert {
          @include output {
            @include me-1\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.375rem;
          }
        }
      }

      @include it("mt-1\.5") {
        @include assert {
          @include output {
            @include mt-1\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.375rem;
          }
        }
      }

      @include it("mr-1\.5") {
        @include assert {
          @include output {
            @include mr-1\.5;
            @include reset;
          }

          @include expect {
            margin-right: 0.375rem;
          }
        }
      }

      @include it("mb-1\.5") {
        @include assert {
          @include output {
            @include mb-1\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.375rem;
          }
        }
      }

      @include it("ml-1\.5") {
        @include assert {
          @include output {
            @include ml-1\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.375rem;
          }
        }
      }

      @include it("m-2") {
        @include assert {
          @include output {
            @include m-2;
            @include reset;
          }

          @include expect {
            margin: 0.5rem;
          }
        }
      }

      @include it("mx-2") {
        @include assert {
          @include output {
            @include mx-2;
            @include reset;
          }

          @include expect {
            margin-left: 0.5rem;
            margin-right: 0.5rem;
          }
        }
      }

      @include it("my-2") {
        @include assert {
          @include output {
            @include my-2;
            @include reset;
          }

          @include expect {
            margin-top: 0.5rem;
            margin-bottom: 0.5rem;
          }
        }
      }

      @include it("ms-2") {
        @include assert {
          @include output {
            @include ms-2;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.5rem;
          }
        }
      }

      @include it("me-2") {
        @include assert {
          @include output {
            @include me-2;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.5rem;
          }
        }
      }

      @include it("mt-2") {
        @include assert {
          @include output {
            @include mt-2;
            @include reset;
          }

          @include expect {
            margin-top: 0.5rem;
          }
        }
      }

      @include it("mr-2") {
        @include assert {
          @include output {
            @include mr-2;
            @include reset;
          }

          @include expect {
            margin-right: 0.5rem;
          }
        }
      }

      @include it("mb-2") {
        @include assert {
          @include output {
            @include mb-2;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.5rem;
          }
        }
      }

      @include it("ml-2") {
        @include assert {
          @include output {
            @include ml-2;
            @include reset;
          }

          @include expect {
            margin-left: 0.5rem;
          }
        }
      }

      @include it("m-2\.5") {
        @include assert {
          @include output {
            @include m-2\.5;
            @include reset;
          }

          @include expect {
            margin: 0.625rem;
          }
        }
      }

      @include it("mx-2\.5") {
        @include assert {
          @include output {
            @include mx-2\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.625rem;
            margin-right: 0.625rem;
          }
        }
      }

      @include it("my-2\.5") {
        @include assert {
          @include output {
            @include my-2\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.625rem;
            margin-bottom: 0.625rem;
          }
        }
      }

      @include it("ms-2\.5") {
        @include assert {
          @include output {
            @include ms-2\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.625rem;
          }
        }
      }

      @include it("me-2\.5") {
        @include assert {
          @include output {
            @include me-2\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.625rem;
          }
        }
      }

      @include it("mt-2\.5") {
        @include assert {
          @include output {
            @include mt-2\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.625rem;
          }
        }
      }

      @include it("mr-2\.5") {
        @include assert {
          @include output {
            @include mr-2\.5;
            @include reset;
          }

          @include expect {
            margin-right: 0.625rem;
          }
        }
      }

      @include it("mb-2\.5") {
        @include assert {
          @include output {
            @include mb-2\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.625rem;
          }
        }
      }

      @include it("ml-2\.5") {
        @include assert {
          @include output {
            @include ml-2\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.625rem;
          }
        }
      }

      @include it("m-3") {
        @include assert {
          @include output {
            @include m-3;
            @include reset;
          }

          @include expect {
            margin: 0.75rem;
          }
        }
      }

      @include it("mx-3") {
        @include assert {
          @include output {
            @include mx-3;
            @include reset;
          }

          @include expect {
            margin-left: 0.75rem;
            margin-right: 0.75rem;
          }
        }
      }

      @include it("my-3") {
        @include assert {
          @include output {
            @include my-3;
            @include reset;
          }

          @include expect {
            margin-top: 0.75rem;
            margin-bottom: 0.75rem;
          }
        }
      }

      @include it("ms-3") {
        @include assert {
          @include output {
            @include ms-3;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.75rem;
          }
        }
      }

      @include it("me-3") {
        @include assert {
          @include output {
            @include me-3;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.75rem;
          }
        }
      }

      @include it("mt-3") {
        @include assert {
          @include output {
            @include mt-3;
            @include reset;
          }

          @include expect {
            margin-top: 0.75rem;
          }
        }
      }

      @include it("mr-3") {
        @include assert {
          @include output {
            @include mr-3;
            @include reset;
          }

          @include expect {
            margin-right: 0.75rem;
          }
        }
      }

      @include it("mb-3") {
        @include assert {
          @include output {
            @include mb-3;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.75rem;
          }
        }
      }

      @include it("ml-3") {
        @include assert {
          @include output {
            @include ml-3;
            @include reset;
          }

          @include expect {
            margin-left: 0.75rem;
          }
        }
      }

      @include it("m-3\.5") {
        @include assert {
          @include output {
            @include m-3\.5;
            @include reset;
          }

          @include expect {
            margin: 0.875rem;
          }
        }
      }

      @include it("mx-3\.5") {
        @include assert {
          @include output {
            @include mx-3\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.875rem;
            margin-right: 0.875rem;
          }
        }
      }

      @include it("my-3\.5") {
        @include assert {
          @include output {
            @include my-3\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.875rem;
            margin-bottom: 0.875rem;
          }
        }
      }

      @include it("ms-3\.5") {
        @include assert {
          @include output {
            @include ms-3\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0.875rem;
          }
        }
      }

      @include it("me-3\.5") {
        @include assert {
          @include output {
            @include me-3\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0.875rem;
          }
        }
      }

      @include it("mt-3\.5") {
        @include assert {
          @include output {
            @include mt-3\.5;
            @include reset;
          }

          @include expect {
            margin-top: 0.875rem;
          }
        }
      }

      @include it("mr-3\.5") {
        @include assert {
          @include output {
            @include mr-3\.5;
            @include reset;
          }

          @include expect {
            margin-right: 0.875rem;
          }
        }
      }

      @include it("mb-3\.5") {
        @include assert {
          @include output {
            @include mb-3\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: 0.875rem;
          }
        }
      }

      @include it("ml-3\.5") {
        @include assert {
          @include output {
            @include ml-3\.5;
            @include reset;
          }

          @include expect {
            margin-left: 0.875rem;
          }
        }
      }

      @include it("m-4") {
        @include assert {
          @include output {
            @include m-4;
            @include reset;
          }

          @include expect {
            margin: 1rem;
          }
        }
      }

      @include it("mx-4") {
        @include assert {
          @include output {
            @include mx-4;
            @include reset;
          }

          @include expect {
            margin-left: 1rem;
            margin-right: 1rem;
          }
        }
      }

      @include it("my-4") {
        @include assert {
          @include output {
            @include my-4;
            @include reset;
          }

          @include expect {
            margin-top: 1rem;
            margin-bottom: 1rem;
          }
        }
      }

      @include it("ms-4") {
        @include assert {
          @include output {
            @include ms-4;
            @include reset;
          }

          @include expect {
            margin-inline-start: 1rem;
          }
        }
      }

      @include it("me-4") {
        @include assert {
          @include output {
            @include me-4;
            @include reset;
          }

          @include expect {
            margin-inline-end: 1rem;
          }
        }
      }

      @include it("mt-4") {
        @include assert {
          @include output {
            @include mt-4;
            @include reset;
          }

          @include expect {
            margin-top: 1rem;
          }
        }
      }

      @include it("mr-4") {
        @include assert {
          @include output {
            @include mr-4;
            @include reset;
          }

          @include expect {
            margin-right: 1rem;
          }
        }
      }

      @include it("mb-4") {
        @include assert {
          @include output {
            @include mb-4;
            @include reset;
          }

          @include expect {
            margin-bottom: 1rem;
          }
        }
      }

      @include it("ml-4") {
        @include assert {
          @include output {
            @include ml-4;
            @include reset;
          }

          @include expect {
            margin-left: 1rem;
          }
        }
      }

      @include it("m-5") {
        @include assert {
          @include output {
            @include m-5;
            @include reset;
          }

          @include expect {
            margin: 1.25rem;
          }
        }
      }

      @include it("mx-5") {
        @include assert {
          @include output {
            @include mx-5;
            @include reset;
          }

          @include expect {
            margin-left: 1.25rem;
            margin-right: 1.25rem;
          }
        }
      }

      @include it("my-5") {
        @include assert {
          @include output {
            @include my-5;
            @include reset;
          }

          @include expect {
            margin-top: 1.25rem;
            margin-bottom: 1.25rem;
          }
        }
      }

      @include it("ms-5") {
        @include assert {
          @include output {
            @include ms-5;
            @include reset;
          }

          @include expect {
            margin-inline-start: 1.25rem;
          }
        }
      }

      @include it("me-5") {
        @include assert {
          @include output {
            @include me-5;
            @include reset;
          }

          @include expect {
            margin-inline-end: 1.25rem;
          }
        }
      }

      @include it("mt-5") {
        @include assert {
          @include output {
            @include mt-5;
            @include reset;
          }

          @include expect {
            margin-top: 1.25rem;
          }
        }
      }

      @include it("mr-5") {
        @include assert {
          @include output {
            @include mr-5;
            @include reset;
          }

          @include expect {
            margin-right: 1.25rem;
          }
        }
      }

      @include it("mb-5") {
        @include assert {
          @include output {
            @include mb-5;
            @include reset;
          }

          @include expect {
            margin-bottom: 1.25rem;
          }
        }
      }

      @include it("ml-5") {
        @include assert {
          @include output {
            @include ml-5;
            @include reset;
          }

          @include expect {
            margin-left: 1.25rem;
          }
        }
      }

      @include it("m-6") {
        @include assert {
          @include output {
            @include m-6;
            @include reset;
          }

          @include expect {
            margin: 1.5rem;
          }
        }
      }

      @include it("mx-6") {
        @include assert {
          @include output {
            @include mx-6;
            @include reset;
          }

          @include expect {
            margin-left: 1.5rem;
            margin-right: 1.5rem;
          }
        }
      }

      @include it("my-6") {
        @include assert {
          @include output {
            @include my-6;
            @include reset;
          }

          @include expect {
            margin-top: 1.5rem;
            margin-bottom: 1.5rem;
          }
        }
      }

      @include it("ms-6") {
        @include assert {
          @include output {
            @include ms-6;
            @include reset;
          }

          @include expect {
            margin-inline-start: 1.5rem;
          }
        }
      }

      @include it("me-6") {
        @include assert {
          @include output {
            @include me-6;
            @include reset;
          }

          @include expect {
            margin-inline-end: 1.5rem;
          }
        }
      }

      @include it("mt-6") {
        @include assert {
          @include output {
            @include mt-6;
            @include reset;
          }

          @include expect {
            margin-top: 1.5rem;
          }
        }
      }

      @include it("mr-6") {
        @include assert {
          @include output {
            @include mr-6;
            @include reset;
          }

          @include expect {
            margin-right: 1.5rem;
          }
        }
      }

      @include it("mb-6") {
        @include assert {
          @include output {
            @include mb-6;
            @include reset;
          }

          @include expect {
            margin-bottom: 1.5rem;
          }
        }
      }

      @include it("ml-6") {
        @include assert {
          @include output {
            @include ml-6;
            @include reset;
          }

          @include expect {
            margin-left: 1.5rem;
          }
        }
      }

      @include it("m-7") {
        @include assert {
          @include output {
            @include m-7;
            @include reset;
          }

          @include expect {
            margin: 1.75rem;
          }
        }
      }

      @include it("mx-7") {
        @include assert {
          @include output {
            @include mx-7;
            @include reset;
          }

          @include expect {
            margin-left: 1.75rem;
            margin-right: 1.75rem;
          }
        }
      }

      @include it("my-7") {
        @include assert {
          @include output {
            @include my-7;
            @include reset;
          }

          @include expect {
            margin-top: 1.75rem;
            margin-bottom: 1.75rem;
          }
        }
      }

      @include it("ms-7") {
        @include assert {
          @include output {
            @include ms-7;
            @include reset;
          }

          @include expect {
            margin-inline-start: 1.75rem;
          }
        }
      }

      @include it("me-7") {
        @include assert {
          @include output {
            @include me-7;
            @include reset;
          }

          @include expect {
            margin-inline-end: 1.75rem;
          }
        }
      }

      @include it("mt-7") {
        @include assert {
          @include output {
            @include mt-7;
            @include reset;
          }

          @include expect {
            margin-top: 1.75rem;
          }
        }
      }

      @include it("mr-7") {
        @include assert {
          @include output {
            @include mr-7;
            @include reset;
          }

          @include expect {
            margin-right: 1.75rem;
          }
        }
      }

      @include it("mb-7") {
        @include assert {
          @include output {
            @include mb-7;
            @include reset;
          }

          @include expect {
            margin-bottom: 1.75rem;
          }
        }
      }

      @include it("ml-7") {
        @include assert {
          @include output {
            @include ml-7;
            @include reset;
          }

          @include expect {
            margin-left: 1.75rem;
          }
        }
      }

      @include it("m-8") {
        @include assert {
          @include output {
            @include m-8;
            @include reset;
          }

          @include expect {
            margin: 2rem;
          }
        }
      }

      @include it("mx-8") {
        @include assert {
          @include output {
            @include mx-8;
            @include reset;
          }

          @include expect {
            margin-left: 2rem;
            margin-right: 2rem;
          }
        }
      }

      @include it("my-8") {
        @include assert {
          @include output {
            @include my-8;
            @include reset;
          }

          @include expect {
            margin-top: 2rem;
            margin-bottom: 2rem;
          }
        }
      }

      @include it("ms-8") {
        @include assert {
          @include output {
            @include ms-8;
            @include reset;
          }

          @include expect {
            margin-inline-start: 2rem;
          }
        }
      }

      @include it("me-8") {
        @include assert {
          @include output {
            @include me-8;
            @include reset;
          }

          @include expect {
            margin-inline-end: 2rem;
          }
        }
      }

      @include it("mt-8") {
        @include assert {
          @include output {
            @include mt-8;
            @include reset;
          }

          @include expect {
            margin-top: 2rem;
          }
        }
      }

      @include it("mr-8") {
        @include assert {
          @include output {
            @include mr-8;
            @include reset;
          }

          @include expect {
            margin-right: 2rem;
          }
        }
      }

      @include it("mb-8") {
        @include assert {
          @include output {
            @include mb-8;
            @include reset;
          }

          @include expect {
            margin-bottom: 2rem;
          }
        }
      }

      @include it("ml-8") {
        @include assert {
          @include output {
            @include ml-8;
            @include reset;
          }

          @include expect {
            margin-left: 2rem;
          }
        }
      }

      @include it("m-9") {
        @include assert {
          @include output {
            @include m-9;
            @include reset;
          }

          @include expect {
            margin: 2.25rem;
          }
        }
      }

      @include it("mx-9") {
        @include assert {
          @include output {
            @include mx-9;
            @include reset;
          }

          @include expect {
            margin-left: 2.25rem;
            margin-right: 2.25rem;
          }
        }
      }

      @include it("my-9") {
        @include assert {
          @include output {
            @include my-9;
            @include reset;
          }

          @include expect {
            margin-top: 2.25rem;
            margin-bottom: 2.25rem;
          }
        }
      }

      @include it("ms-9") {
        @include assert {
          @include output {
            @include ms-9;
            @include reset;
          }

          @include expect {
            margin-inline-start: 2.25rem;
          }
        }
      }

      @include it("me-9") {
        @include assert {
          @include output {
            @include me-9;
            @include reset;
          }

          @include expect {
            margin-inline-end: 2.25rem;
          }
        }
      }

      @include it("mt-9") {
        @include assert {
          @include output {
            @include mt-9;
            @include reset;
          }

          @include expect {
            margin-top: 2.25rem;
          }
        }
      }

      @include it("mr-9") {
        @include assert {
          @include output {
            @include mr-9;
            @include reset;
          }

          @include expect {
            margin-right: 2.25rem;
          }
        }
      }

      @include it("mb-9") {
        @include assert {
          @include output {
            @include mb-9;
            @include reset;
          }

          @include expect {
            margin-bottom: 2.25rem;
          }
        }
      }

      @include it("ml-9") {
        @include assert {
          @include output {
            @include ml-9;
            @include reset;
          }

          @include expect {
            margin-left: 2.25rem;
          }
        }
      }

      @include it("m-10") {
        @include assert {
          @include output {
            @include m-10;
            @include reset;
          }

          @include expect {
            margin: 2.5rem;
          }
        }
      }

      @include it("mx-10") {
        @include assert {
          @include output {
            @include mx-10;
            @include reset;
          }

          @include expect {
            margin-left: 2.5rem;
            margin-right: 2.5rem;
          }
        }
      }

      @include it("my-10") {
        @include assert {
          @include output {
            @include my-10;
            @include reset;
          }

          @include expect {
            margin-top: 2.5rem;
            margin-bottom: 2.5rem;
          }
        }
      }

      @include it("ms-10") {
        @include assert {
          @include output {
            @include ms-10;
            @include reset;
          }

          @include expect {
            margin-inline-start: 2.5rem;
          }
        }
      }

      @include it("me-10") {
        @include assert {
          @include output {
            @include me-10;
            @include reset;
          }

          @include expect {
            margin-inline-end: 2.5rem;
          }
        }
      }

      @include it("mt-10") {
        @include assert {
          @include output {
            @include mt-10;
            @include reset;
          }

          @include expect {
            margin-top: 2.5rem;
          }
        }
      }

      @include it("mr-10") {
        @include assert {
          @include output {
            @include mr-10;
            @include reset;
          }

          @include expect {
            margin-right: 2.5rem;
          }
        }
      }

      @include it("mb-10") {
        @include assert {
          @include output {
            @include mb-10;
            @include reset;
          }

          @include expect {
            margin-bottom: 2.5rem;
          }
        }
      }

      @include it("ml-10") {
        @include assert {
          @include output {
            @include ml-10;
            @include reset;
          }

          @include expect {
            margin-left: 2.5rem;
          }
        }
      }

      @include it("m-11") {
        @include assert {
          @include output {
            @include m-11;
            @include reset;
          }

          @include expect {
            margin: 2.75rem;
          }
        }
      }

      @include it("mx-11") {
        @include assert {
          @include output {
            @include mx-11;
            @include reset;
          }

          @include expect {
            margin-left: 2.75rem;
            margin-right: 2.75rem;
          }
        }
      }

      @include it("my-11") {
        @include assert {
          @include output {
            @include my-11;
            @include reset;
          }

          @include expect {
            margin-top: 2.75rem;
            margin-bottom: 2.75rem;
          }
        }
      }

      @include it("ms-11") {
        @include assert {
          @include output {
            @include ms-11;
            @include reset;
          }

          @include expect {
            margin-inline-start: 2.75rem;
          }
        }
      }

      @include it("me-11") {
        @include assert {
          @include output {
            @include me-11;
            @include reset;
          }

          @include expect {
            margin-inline-end: 2.75rem;
          }
        }
      }

      @include it("mt-11") {
        @include assert {
          @include output {
            @include mt-11;
            @include reset;
          }

          @include expect {
            margin-top: 2.75rem;
          }
        }
      }

      @include it("mr-11") {
        @include assert {
          @include output {
            @include mr-11;
            @include reset;
          }

          @include expect {
            margin-right: 2.75rem;
          }
        }
      }

      @include it("mb-11") {
        @include assert {
          @include output {
            @include mb-11;
            @include reset;
          }

          @include expect {
            margin-bottom: 2.75rem;
          }
        }
      }

      @include it("ml-11") {
        @include assert {
          @include output {
            @include ml-11;
            @include reset;
          }

          @include expect {
            margin-left: 2.75rem;
          }
        }
      }

      @include it("m-12") {
        @include assert {
          @include output {
            @include m-12;
            @include reset;
          }

          @include expect {
            margin: 3rem;
          }
        }
      }

      @include it("mx-12") {
        @include assert {
          @include output {
            @include mx-12;
            @include reset;
          }

          @include expect {
            margin-left: 3rem;
            margin-right: 3rem;
          }
        }
      }

      @include it("my-12") {
        @include assert {
          @include output {
            @include my-12;
            @include reset;
          }

          @include expect {
            margin-top: 3rem;
            margin-bottom: 3rem;
          }
        }
      }

      @include it("ms-12") {
        @include assert {
          @include output {
            @include ms-12;
            @include reset;
          }

          @include expect {
            margin-inline-start: 3rem;
          }
        }
      }

      @include it("me-12") {
        @include assert {
          @include output {
            @include me-12;
            @include reset;
          }

          @include expect {
            margin-inline-end: 3rem;
          }
        }
      }

      @include it("mt-12") {
        @include assert {
          @include output {
            @include mt-12;
            @include reset;
          }

          @include expect {
            margin-top: 3rem;
          }
        }
      }

      @include it("mr-12") {
        @include assert {
          @include output {
            @include mr-12;
            @include reset;
          }

          @include expect {
            margin-right: 3rem;
          }
        }
      }

      @include it("mb-12") {
        @include assert {
          @include output {
            @include mb-12;
            @include reset;
          }

          @include expect {
            margin-bottom: 3rem;
          }
        }
      }

      @include it("ml-12") {
        @include assert {
          @include output {
            @include ml-12;
            @include reset;
          }

          @include expect {
            margin-left: 3rem;
          }
        }
      }

      @include it("m-14") {
        @include assert {
          @include output {
            @include m-14;
            @include reset;
          }

          @include expect {
            margin: 3.5rem;
          }
        }
      }

      @include it("mx-14") {
        @include assert {
          @include output {
            @include mx-14;
            @include reset;
          }

          @include expect {
            margin-left: 3.5rem;
            margin-right: 3.5rem;
          }
        }
      }

      @include it("my-14") {
        @include assert {
          @include output {
            @include my-14;
            @include reset;
          }

          @include expect {
            margin-top: 3.5rem;
            margin-bottom: 3.5rem;
          }
        }
      }

      @include it("ms-14") {
        @include assert {
          @include output {
            @include ms-14;
            @include reset;
          }

          @include expect {
            margin-inline-start: 3.5rem;
          }
        }
      }

      @include it("me-14") {
        @include assert {
          @include output {
            @include me-14;
            @include reset;
          }

          @include expect {
            margin-inline-end: 3.5rem;
          }
        }
      }

      @include it("mt-14") {
        @include assert {
          @include output {
            @include mt-14;
            @include reset;
          }

          @include expect {
            margin-top: 3.5rem;
          }
        }
      }

      @include it("mr-14") {
        @include assert {
          @include output {
            @include mr-14;
            @include reset;
          }

          @include expect {
            margin-right: 3.5rem;
          }
        }
      }

      @include it("mb-14") {
        @include assert {
          @include output {
            @include mb-14;
            @include reset;
          }

          @include expect {
            margin-bottom: 3.5rem;
          }
        }
      }

      @include it("ml-14") {
        @include assert {
          @include output {
            @include ml-14;
            @include reset;
          }

          @include expect {
            margin-left: 3.5rem;
          }
        }
      }

      @include it("m-16") {
        @include assert {
          @include output {
            @include m-16;
            @include reset;
          }

          @include expect {
            margin: 4rem;
          }
        }
      }

      @include it("mx-16") {
        @include assert {
          @include output {
            @include mx-16;
            @include reset;
          }

          @include expect {
            margin-left: 4rem;
            margin-right: 4rem;
          }
        }
      }

      @include it("my-16") {
        @include assert {
          @include output {
            @include my-16;
            @include reset;
          }

          @include expect {
            margin-top: 4rem;
            margin-bottom: 4rem;
          }
        }
      }

      @include it("ms-16") {
        @include assert {
          @include output {
            @include ms-16;
            @include reset;
          }

          @include expect {
            margin-inline-start: 4rem;
          }
        }
      }

      @include it("me-16") {
        @include assert {
          @include output {
            @include me-16;
            @include reset;
          }

          @include expect {
            margin-inline-end: 4rem;
          }
        }
      }

      @include it("mt-16") {
        @include assert {
          @include output {
            @include mt-16;
            @include reset;
          }

          @include expect {
            margin-top: 4rem;
          }
        }
      }

      @include it("mr-16") {
        @include assert {
          @include output {
            @include mr-16;
            @include reset;
          }

          @include expect {
            margin-right: 4rem;
          }
        }
      }

      @include it("mb-16") {
        @include assert {
          @include output {
            @include mb-16;
            @include reset;
          }

          @include expect {
            margin-bottom: 4rem;
          }
        }
      }

      @include it("ml-16") {
        @include assert {
          @include output {
            @include ml-16;
            @include reset;
          }

          @include expect {
            margin-left: 4rem;
          }
        }
      }

      @include it("m-20") {
        @include assert {
          @include output {
            @include m-20;
            @include reset;
          }

          @include expect {
            margin: 5rem;
          }
        }
      }

      @include it("mx-20") {
        @include assert {
          @include output {
            @include mx-20;
            @include reset;
          }

          @include expect {
            margin-left: 5rem;
            margin-right: 5rem;
          }
        }
      }

      @include it("my-20") {
        @include assert {
          @include output {
            @include my-20;
            @include reset;
          }

          @include expect {
            margin-top: 5rem;
            margin-bottom: 5rem;
          }
        }
      }

      @include it("ms-20") {
        @include assert {
          @include output {
            @include ms-20;
            @include reset;
          }

          @include expect {
            margin-inline-start: 5rem;
          }
        }
      }

      @include it("me-20") {
        @include assert {
          @include output {
            @include me-20;
            @include reset;
          }

          @include expect {
            margin-inline-end: 5rem;
          }
        }
      }

      @include it("mt-20") {
        @include assert {
          @include output {
            @include mt-20;
            @include reset;
          }

          @include expect {
            margin-top: 5rem;
          }
        }
      }

      @include it("mr-20") {
        @include assert {
          @include output {
            @include mr-20;
            @include reset;
          }

          @include expect {
            margin-right: 5rem;
          }
        }
      }

      @include it("mb-20") {
        @include assert {
          @include output {
            @include mb-20;
            @include reset;
          }

          @include expect {
            margin-bottom: 5rem;
          }
        }
      }

      @include it("ml-20") {
        @include assert {
          @include output {
            @include ml-20;
            @include reset;
          }

          @include expect {
            margin-left: 5rem;
          }
        }
      }

      @include it("m-24") {
        @include assert {
          @include output {
            @include m-24;
            @include reset;
          }

          @include expect {
            margin: 6rem;
          }
        }
      }

      @include it("mx-24") {
        @include assert {
          @include output {
            @include mx-24;
            @include reset;
          }

          @include expect {
            margin-left: 6rem;
            margin-right: 6rem;
          }
        }
      }

      @include it("my-24") {
        @include assert {
          @include output {
            @include my-24;
            @include reset;
          }

          @include expect {
            margin-top: 6rem;
            margin-bottom: 6rem;
          }
        }
      }

      @include it("ms-24") {
        @include assert {
          @include output {
            @include ms-24;
            @include reset;
          }

          @include expect {
            margin-inline-start: 6rem;
          }
        }
      }

      @include it("me-24") {
        @include assert {
          @include output {
            @include me-24;
            @include reset;
          }

          @include expect {
            margin-inline-end: 6rem;
          }
        }
      }

      @include it("mt-24") {
        @include assert {
          @include output {
            @include mt-24;
            @include reset;
          }

          @include expect {
            margin-top: 6rem;
          }
        }
      }

      @include it("mr-24") {
        @include assert {
          @include output {
            @include mr-24;
            @include reset;
          }

          @include expect {
            margin-right: 6rem;
          }
        }
      }

      @include it("mb-24") {
        @include assert {
          @include output {
            @include mb-24;
            @include reset;
          }

          @include expect {
            margin-bottom: 6rem;
          }
        }
      }

      @include it("ml-24") {
        @include assert {
          @include output {
            @include ml-24;
            @include reset;
          }

          @include expect {
            margin-left: 6rem;
          }
        }
      }

      @include it("m-28") {
        @include assert {
          @include output {
            @include m-28;
            @include reset;
          }

          @include expect {
            margin: 7rem;
          }
        }
      }

      @include it("mx-28") {
        @include assert {
          @include output {
            @include mx-28;
            @include reset;
          }

          @include expect {
            margin-left: 7rem;
            margin-right: 7rem;
          }
        }
      }

      @include it("my-28") {
        @include assert {
          @include output {
            @include my-28;
            @include reset;
          }

          @include expect {
            margin-top: 7rem;
            margin-bottom: 7rem;
          }
        }
      }

      @include it("ms-28") {
        @include assert {
          @include output {
            @include ms-28;
            @include reset;
          }

          @include expect {
            margin-inline-start: 7rem;
          }
        }
      }

      @include it("me-28") {
        @include assert {
          @include output {
            @include me-28;
            @include reset;
          }

          @include expect {
            margin-inline-end: 7rem;
          }
        }
      }

      @include it("mt-28") {
        @include assert {
          @include output {
            @include mt-28;
            @include reset;
          }

          @include expect {
            margin-top: 7rem;
          }
        }
      }

      @include it("mr-28") {
        @include assert {
          @include output {
            @include mr-28;
            @include reset;
          }

          @include expect {
            margin-right: 7rem;
          }
        }
      }

      @include it("mb-28") {
        @include assert {
          @include output {
            @include mb-28;
            @include reset;
          }

          @include expect {
            margin-bottom: 7rem;
          }
        }
      }

      @include it("ml-28") {
        @include assert {
          @include output {
            @include ml-28;
            @include reset;
          }

          @include expect {
            margin-left: 7rem;
          }
        }
      }

      @include it("m-32") {
        @include assert {
          @include output {
            @include m-32;
            @include reset;
          }

          @include expect {
            margin: 8rem;
          }
        }
      }

      @include it("mx-32") {
        @include assert {
          @include output {
            @include mx-32;
            @include reset;
          }

          @include expect {
            margin-left: 8rem;
            margin-right: 8rem;
          }
        }
      }

      @include it("my-32") {
        @include assert {
          @include output {
            @include my-32;
            @include reset;
          }

          @include expect {
            margin-top: 8rem;
            margin-bottom: 8rem;
          }
        }
      }

      @include it("ms-32") {
        @include assert {
          @include output {
            @include ms-32;
            @include reset;
          }

          @include expect {
            margin-inline-start: 8rem;
          }
        }
      }

      @include it("me-32") {
        @include assert {
          @include output {
            @include me-32;
            @include reset;
          }

          @include expect {
            margin-inline-end: 8rem;
          }
        }
      }

      @include it("mt-32") {
        @include assert {
          @include output {
            @include mt-32;
            @include reset;
          }

          @include expect {
            margin-top: 8rem;
          }
        }
      }

      @include it("mr-32") {
        @include assert {
          @include output {
            @include mr-32;
            @include reset;
          }

          @include expect {
            margin-right: 8rem;
          }
        }
      }

      @include it("mb-32") {
        @include assert {
          @include output {
            @include mb-32;
            @include reset;
          }

          @include expect {
            margin-bottom: 8rem;
          }
        }
      }

      @include it("ml-32") {
        @include assert {
          @include output {
            @include ml-32;
            @include reset;
          }

          @include expect {
            margin-left: 8rem;
          }
        }
      }

      @include it("m-36") {
        @include assert {
          @include output {
            @include m-36;
            @include reset;
          }

          @include expect {
            margin: 9rem;
          }
        }
      }

      @include it("mx-36") {
        @include assert {
          @include output {
            @include mx-36;
            @include reset;
          }

          @include expect {
            margin-left: 9rem;
            margin-right: 9rem;
          }
        }
      }

      @include it("my-36") {
        @include assert {
          @include output {
            @include my-36;
            @include reset;
          }

          @include expect {
            margin-top: 9rem;
            margin-bottom: 9rem;
          }
        }
      }

      @include it("ms-36") {
        @include assert {
          @include output {
            @include ms-36;
            @include reset;
          }

          @include expect {
            margin-inline-start: 9rem;
          }
        }
      }

      @include it("me-36") {
        @include assert {
          @include output {
            @include me-36;
            @include reset;
          }

          @include expect {
            margin-inline-end: 9rem;
          }
        }
      }

      @include it("mt-36") {
        @include assert {
          @include output {
            @include mt-36;
            @include reset;
          }

          @include expect {
            margin-top: 9rem;
          }
        }
      }

      @include it("mr-36") {
        @include assert {
          @include output {
            @include mr-36;
            @include reset;
          }

          @include expect {
            margin-right: 9rem;
          }
        }
      }

      @include it("mb-36") {
        @include assert {
          @include output {
            @include mb-36;
            @include reset;
          }

          @include expect {
            margin-bottom: 9rem;
          }
        }
      }

      @include it("ml-36") {
        @include assert {
          @include output {
            @include ml-36;
            @include reset;
          }

          @include expect {
            margin-left: 9rem;
          }
        }
      }

      @include it("m-40") {
        @include assert {
          @include output {
            @include m-40;
            @include reset;
          }

          @include expect {
            margin: 10rem;
          }
        }
      }

      @include it("mx-40") {
        @include assert {
          @include output {
            @include mx-40;
            @include reset;
          }

          @include expect {
            margin-left: 10rem;
            margin-right: 10rem;
          }
        }
      }

      @include it("my-40") {
        @include assert {
          @include output {
            @include my-40;
            @include reset;
          }

          @include expect {
            margin-top: 10rem;
            margin-bottom: 10rem;
          }
        }
      }

      @include it("ms-40") {
        @include assert {
          @include output {
            @include ms-40;
            @include reset;
          }

          @include expect {
            margin-inline-start: 10rem;
          }
        }
      }

      @include it("me-40") {
        @include assert {
          @include output {
            @include me-40;
            @include reset;
          }

          @include expect {
            margin-inline-end: 10rem;
          }
        }
      }

      @include it("mt-40") {
        @include assert {
          @include output {
            @include mt-40;
            @include reset;
          }

          @include expect {
            margin-top: 10rem;
          }
        }
      }

      @include it("mr-40") {
        @include assert {
          @include output {
            @include mr-40;
            @include reset;
          }

          @include expect {
            margin-right: 10rem;
          }
        }
      }

      @include it("mb-40") {
        @include assert {
          @include output {
            @include mb-40;
            @include reset;
          }

          @include expect {
            margin-bottom: 10rem;
          }
        }
      }

      @include it("ml-40") {
        @include assert {
          @include output {
            @include ml-40;
            @include reset;
          }

          @include expect {
            margin-left: 10rem;
          }
        }
      }

      @include it("m-44") {
        @include assert {
          @include output {
            @include m-44;
            @include reset;
          }

          @include expect {
            margin: 11rem;
          }
        }
      }

      @include it("mx-44") {
        @include assert {
          @include output {
            @include mx-44;
            @include reset;
          }

          @include expect {
            margin-left: 11rem;
            margin-right: 11rem;
          }
        }
      }

      @include it("my-44") {
        @include assert {
          @include output {
            @include my-44;
            @include reset;
          }

          @include expect {
            margin-top: 11rem;
            margin-bottom: 11rem;
          }
        }
      }

      @include it("ms-44") {
        @include assert {
          @include output {
            @include ms-44;
            @include reset;
          }

          @include expect {
            margin-inline-start: 11rem;
          }
        }
      }

      @include it("me-44") {
        @include assert {
          @include output {
            @include me-44;
            @include reset;
          }

          @include expect {
            margin-inline-end: 11rem;
          }
        }
      }

      @include it("mt-44") {
        @include assert {
          @include output {
            @include mt-44;
            @include reset;
          }

          @include expect {
            margin-top: 11rem;
          }
        }
      }

      @include it("mr-44") {
        @include assert {
          @include output {
            @include mr-44;
            @include reset;
          }

          @include expect {
            margin-right: 11rem;
          }
        }
      }

      @include it("mb-44") {
        @include assert {
          @include output {
            @include mb-44;
            @include reset;
          }

          @include expect {
            margin-bottom: 11rem;
          }
        }
      }

      @include it("ml-44") {
        @include assert {
          @include output {
            @include ml-44;
            @include reset;
          }

          @include expect {
            margin-left: 11rem;
          }
        }
      }

      @include it("m-48") {
        @include assert {
          @include output {
            @include m-48;
            @include reset;
          }

          @include expect {
            margin: 12rem;
          }
        }
      }

      @include it("mx-48") {
        @include assert {
          @include output {
            @include mx-48;
            @include reset;
          }

          @include expect {
            margin-left: 12rem;
            margin-right: 12rem;
          }
        }
      }

      @include it("my-48") {
        @include assert {
          @include output {
            @include my-48;
            @include reset;
          }

          @include expect {
            margin-top: 12rem;
            margin-bottom: 12rem;
          }
        }
      }

      @include it("ms-48") {
        @include assert {
          @include output {
            @include ms-48;
            @include reset;
          }

          @include expect {
            margin-inline-start: 12rem;
          }
        }
      }

      @include it("me-48") {
        @include assert {
          @include output {
            @include me-48;
            @include reset;
          }

          @include expect {
            margin-inline-end: 12rem;
          }
        }
      }

      @include it("mt-48") {
        @include assert {
          @include output {
            @include mt-48;
            @include reset;
          }

          @include expect {
            margin-top: 12rem;
          }
        }
      }

      @include it("mr-48") {
        @include assert {
          @include output {
            @include mr-48;
            @include reset;
          }

          @include expect {
            margin-right: 12rem;
          }
        }
      }

      @include it("mb-48") {
        @include assert {
          @include output {
            @include mb-48;
            @include reset;
          }

          @include expect {
            margin-bottom: 12rem;
          }
        }
      }

      @include it("ml-48") {
        @include assert {
          @include output {
            @include ml-48;
            @include reset;
          }

          @include expect {
            margin-left: 12rem;
          }
        }
      }

      @include it("m-52") {
        @include assert {
          @include output {
            @include m-52;
            @include reset;
          }

          @include expect {
            margin: 13rem;
          }
        }
      }

      @include it("mx-52") {
        @include assert {
          @include output {
            @include mx-52;
            @include reset;
          }

          @include expect {
            margin-left: 13rem;
            margin-right: 13rem;
          }
        }
      }

      @include it("my-52") {
        @include assert {
          @include output {
            @include my-52;
            @include reset;
          }

          @include expect {
            margin-top: 13rem;
            margin-bottom: 13rem;
          }
        }
      }

      @include it("ms-52") {
        @include assert {
          @include output {
            @include ms-52;
            @include reset;
          }

          @include expect {
            margin-inline-start: 13rem;
          }
        }
      }

      @include it("me-52") {
        @include assert {
          @include output {
            @include me-52;
            @include reset;
          }

          @include expect {
            margin-inline-end: 13rem;
          }
        }
      }

      @include it("mt-52") {
        @include assert {
          @include output {
            @include mt-52;
            @include reset;
          }

          @include expect {
            margin-top: 13rem;
          }
        }
      }

      @include it("mr-52") {
        @include assert {
          @include output {
            @include mr-52;
            @include reset;
          }

          @include expect {
            margin-right: 13rem;
          }
        }
      }

      @include it("mb-52") {
        @include assert {
          @include output {
            @include mb-52;
            @include reset;
          }

          @include expect {
            margin-bottom: 13rem;
          }
        }
      }

      @include it("ml-52") {
        @include assert {
          @include output {
            @include ml-52;
            @include reset;
          }

          @include expect {
            margin-left: 13rem;
          }
        }
      }

      @include it("m-56") {
        @include assert {
          @include output {
            @include m-56;
            @include reset;
          }

          @include expect {
            margin: 14rem;
          }
        }
      }

      @include it("mx-56") {
        @include assert {
          @include output {
            @include mx-56;
            @include reset;
          }

          @include expect {
            margin-left: 14rem;
            margin-right: 14rem;
          }
        }
      }

      @include it("my-56") {
        @include assert {
          @include output {
            @include my-56;
            @include reset;
          }

          @include expect {
            margin-top: 14rem;
            margin-bottom: 14rem;
          }
        }
      }

      @include it("ms-56") {
        @include assert {
          @include output {
            @include ms-56;
            @include reset;
          }

          @include expect {
            margin-inline-start: 14rem;
          }
        }
      }

      @include it("me-56") {
        @include assert {
          @include output {
            @include me-56;
            @include reset;
          }

          @include expect {
            margin-inline-end: 14rem;
          }
        }
      }

      @include it("mt-56") {
        @include assert {
          @include output {
            @include mt-56;
            @include reset;
          }

          @include expect {
            margin-top: 14rem;
          }
        }
      }

      @include it("mr-56") {
        @include assert {
          @include output {
            @include mr-56;
            @include reset;
          }

          @include expect {
            margin-right: 14rem;
          }
        }
      }

      @include it("mb-56") {
        @include assert {
          @include output {
            @include mb-56;
            @include reset;
          }

          @include expect {
            margin-bottom: 14rem;
          }
        }
      }

      @include it("ml-56") {
        @include assert {
          @include output {
            @include ml-56;
            @include reset;
          }

          @include expect {
            margin-left: 14rem;
          }
        }
      }

      @include it("m-60") {
        @include assert {
          @include output {
            @include m-60;
            @include reset;
          }

          @include expect {
            margin: 15rem;
          }
        }
      }

      @include it("mx-60") {
        @include assert {
          @include output {
            @include mx-60;
            @include reset;
          }

          @include expect {
            margin-left: 15rem;
            margin-right: 15rem;
          }
        }
      }

      @include it("my-60") {
        @include assert {
          @include output {
            @include my-60;
            @include reset;
          }

          @include expect {
            margin-top: 15rem;
            margin-bottom: 15rem;
          }
        }
      }

      @include it("ms-60") {
        @include assert {
          @include output {
            @include ms-60;
            @include reset;
          }

          @include expect {
            margin-inline-start: 15rem;
          }
        }
      }

      @include it("me-60") {
        @include assert {
          @include output {
            @include me-60;
            @include reset;
          }

          @include expect {
            margin-inline-end: 15rem;
          }
        }
      }

      @include it("mt-60") {
        @include assert {
          @include output {
            @include mt-60;
            @include reset;
          }

          @include expect {
            margin-top: 15rem;
          }
        }
      }

      @include it("mr-60") {
        @include assert {
          @include output {
            @include mr-60;
            @include reset;
          }

          @include expect {
            margin-right: 15rem;
          }
        }
      }

      @include it("mb-60") {
        @include assert {
          @include output {
            @include mb-60;
            @include reset;
          }

          @include expect {
            margin-bottom: 15rem;
          }
        }
      }

      @include it("ml-60") {
        @include assert {
          @include output {
            @include ml-60;
            @include reset;
          }

          @include expect {
            margin-left: 15rem;
          }
        }
      }

      @include it("m-64") {
        @include assert {
          @include output {
            @include m-64;
            @include reset;
          }

          @include expect {
            margin: 16rem;
          }
        }
      }

      @include it("mx-64") {
        @include assert {
          @include output {
            @include mx-64;
            @include reset;
          }

          @include expect {
            margin-left: 16rem;
            margin-right: 16rem;
          }
        }
      }

      @include it("my-64") {
        @include assert {
          @include output {
            @include my-64;
            @include reset;
          }

          @include expect {
            margin-top: 16rem;
            margin-bottom: 16rem;
          }
        }
      }

      @include it("ms-64") {
        @include assert {
          @include output {
            @include ms-64;
            @include reset;
          }

          @include expect {
            margin-inline-start: 16rem;
          }
        }
      }

      @include it("me-64") {
        @include assert {
          @include output {
            @include me-64;
            @include reset;
          }

          @include expect {
            margin-inline-end: 16rem;
          }
        }
      }

      @include it("mt-64") {
        @include assert {
          @include output {
            @include mt-64;
            @include reset;
          }

          @include expect {
            margin-top: 16rem;
          }
        }
      }

      @include it("mr-64") {
        @include assert {
          @include output {
            @include mr-64;
            @include reset;
          }

          @include expect {
            margin-right: 16rem;
          }
        }
      }

      @include it("mb-64") {
        @include assert {
          @include output {
            @include mb-64;
            @include reset;
          }

          @include expect {
            margin-bottom: 16rem;
          }
        }
      }

      @include it("ml-64") {
        @include assert {
          @include output {
            @include ml-64;
            @include reset;
          }

          @include expect {
            margin-left: 16rem;
          }
        }
      }

      @include it("m-72") {
        @include assert {
          @include output {
            @include m-72;
            @include reset;
          }

          @include expect {
            margin: 18rem;
          }
        }
      }

      @include it("mx-72") {
        @include assert {
          @include output {
            @include mx-72;
            @include reset;
          }

          @include expect {
            margin-left: 18rem;
            margin-right: 18rem;
          }
        }
      }

      @include it("my-72") {
        @include assert {
          @include output {
            @include my-72;
            @include reset;
          }

          @include expect {
            margin-top: 18rem;
            margin-bottom: 18rem;
          }
        }
      }

      @include it("ms-72") {
        @include assert {
          @include output {
            @include ms-72;
            @include reset;
          }

          @include expect {
            margin-inline-start: 18rem;
          }
        }
      }

      @include it("me-72") {
        @include assert {
          @include output {
            @include me-72;
            @include reset;
          }

          @include expect {
            margin-inline-end: 18rem;
          }
        }
      }

      @include it("mt-72") {
        @include assert {
          @include output {
            @include mt-72;
            @include reset;
          }

          @include expect {
            margin-top: 18rem;
          }
        }
      }

      @include it("mr-72") {
        @include assert {
          @include output {
            @include mr-72;
            @include reset;
          }

          @include expect {
            margin-right: 18rem;
          }
        }
      }

      @include it("mb-72") {
        @include assert {
          @include output {
            @include mb-72;
            @include reset;
          }

          @include expect {
            margin-bottom: 18rem;
          }
        }
      }

      @include it("ml-72") {
        @include assert {
          @include output {
            @include ml-72;
            @include reset;
          }

          @include expect {
            margin-left: 18rem;
          }
        }
      }

      @include it("m-80") {
        @include assert {
          @include output {
            @include m-80;
            @include reset;
          }

          @include expect {
            margin: 20rem;
          }
        }
      }

      @include it("mx-80") {
        @include assert {
          @include output {
            @include mx-80;
            @include reset;
          }

          @include expect {
            margin-left: 20rem;
            margin-right: 20rem;
          }
        }
      }

      @include it("my-80") {
        @include assert {
          @include output {
            @include my-80;
            @include reset;
          }

          @include expect {
            margin-top: 20rem;
            margin-bottom: 20rem;
          }
        }
      }

      @include it("ms-80") {
        @include assert {
          @include output {
            @include ms-80;
            @include reset;
          }

          @include expect {
            margin-inline-start: 20rem;
          }
        }
      }

      @include it("me-80") {
        @include assert {
          @include output {
            @include me-80;
            @include reset;
          }

          @include expect {
            margin-inline-end: 20rem;
          }
        }
      }

      @include it("mt-80") {
        @include assert {
          @include output {
            @include mt-80;
            @include reset;
          }

          @include expect {
            margin-top: 20rem;
          }
        }
      }

      @include it("mr-80") {
        @include assert {
          @include output {
            @include mr-80;
            @include reset;
          }

          @include expect {
            margin-right: 20rem;
          }
        }
      }

      @include it("mb-80") {
        @include assert {
          @include output {
            @include mb-80;
            @include reset;
          }

          @include expect {
            margin-bottom: 20rem;
          }
        }
      }

      @include it("ml-80") {
        @include assert {
          @include output {
            @include ml-80;
            @include reset;
          }

          @include expect {
            margin-left: 20rem;
          }
        }
      }

      @include it("m-96") {
        @include assert {
          @include output {
            @include m-96;
            @include reset;
          }

          @include expect {
            margin: 24rem;
          }
        }
      }

      @include it("mx-96") {
        @include assert {
          @include output {
            @include mx-96;
            @include reset;
          }

          @include expect {
            margin-left: 24rem;
            margin-right: 24rem;
          }
        }
      }

      @include it("my-96") {
        @include assert {
          @include output {
            @include my-96;
            @include reset;
          }

          @include expect {
            margin-top: 24rem;
            margin-bottom: 24rem;
          }
        }
      }

      @include it("ms-96") {
        @include assert {
          @include output {
            @include ms-96;
            @include reset;
          }

          @include expect {
            margin-inline-start: 24rem;
          }
        }
      }

      @include it("me-96") {
        @include assert {
          @include output {
            @include me-96;
            @include reset;
          }

          @include expect {
            margin-inline-end: 24rem;
          }
        }
      }

      @include it("mt-96") {
        @include assert {
          @include output {
            @include mt-96;
            @include reset;
          }

          @include expect {
            margin-top: 24rem;
          }
        }
      }

      @include it("mr-96") {
        @include assert {
          @include output {
            @include mr-96;
            @include reset;
          }

          @include expect {
            margin-right: 24rem;
          }
        }
      }

      @include it("mb-96") {
        @include assert {
          @include output {
            @include mb-96;
            @include reset;
          }

          @include expect {
            margin-bottom: 24rem;
          }
        }
      }

      @include it("ml-96") {
        @include assert {
          @include output {
            @include ml-96;
            @include reset;
          }

          @include expect {
            margin-left: 24rem;
          }
        }
      }

      @include it("m-auto") {
        @include assert {
          @include output {
            @include m-auto;
            @include reset;
          }

          @include expect {
            margin: auto;
          }
        }
      }

      @include it("mx-auto") {
        @include assert {
          @include output {
            @include mx-auto;
            @include reset;
          }

          @include expect {
            margin-left: auto;
            margin-right: auto;
          }
        }
      }

      @include it("my-auto") {
        @include assert {
          @include output {
            @include my-auto;
            @include reset;
          }

          @include expect {
            margin-top: auto;
            margin-bottom: auto;
          }
        }
      }

      @include it("ms-auto") {
        @include assert {
          @include output {
            @include ms-auto;
            @include reset;
          }

          @include expect {
            margin-inline-start: auto;
          }
        }
      }

      @include it("me-auto") {
        @include assert {
          @include output {
            @include me-auto;
            @include reset;
          }

          @include expect {
            margin-inline-end: auto;
          }
        }
      }

      @include it("mt-auto") {
        @include assert {
          @include output {
            @include mt-auto;
            @include reset;
          }

          @include expect {
            margin-top: auto;
          }
        }
      }

      @include it("mr-auto") {
        @include assert {
          @include output {
            @include mr-auto;
            @include reset;
          }

          @include expect {
            margin-right: auto;
          }
        }
      }

      @include it("mb-auto") {
        @include assert {
          @include output {
            @include mb-auto;
            @include reset;
          }

          @include expect {
            margin-bottom: auto;
          }
        }
      }

      @include it("ml-auto") {
        @include assert {
          @include output {
            @include ml-auto;
            @include reset;
          }

          @include expect {
            margin-left: auto;
          }
        }
      }

      @include it("-m-0	") {
        @include assert {
          @include output {
            @include -m-0;
            @include reset;
          }

          @include expect {
            margin: 0px;
          }
        }
      }

      @include it("-mx-0	") {
        @include assert {
          @include output {
            @include -mx-0;
            @include reset;
          }

          @include expect {
            margin-left: 0px;
            margin-right: 0px;
          }
        }
      }

      @include it("-my-0	") {
        @include assert {
          @include output {
            @include -my-0;
            @include reset;
          }

          @include expect {
            margin-top: 0px;
            margin-bottom: 0px;
          }
        }
      }

      @include it("-ms-0	") {
        @include assert {
          @include output {
            @include -ms-0;
            @include reset;
          }

          @include expect {
            margin-inline-start: 0px;
          }
        }
      }

      @include it("-me-0	") {
        @include assert {
          @include output {
            @include -me-0;
            @include reset;
          }

          @include expect {
            margin-inline-end: 0px;
          }
        }
      }

      @include it("-mt-0	") {
        @include assert {
          @include output {
            @include -mt-0;
            @include reset;
          }

          @include expect {
            margin-top: 0px;
          }
        }
      }

      @include it("-mr-0	") {
        @include assert {
          @include output {
            @include -mr-0;
            @include reset;
          }

          @include expect {
            margin-right: 0px;
          }
        }
      }

      @include it("-mb-0	") {
        @include assert {
          @include output {
            @include -mb-0;
            @include reset;
          }

          @include expect {
            margin-bottom: 0px;
          }
        }
      }

      @include it("-ml-0	") {
        @include assert {
          @include output {
            @include -ml-0;
            @include reset;
          }

          @include expect {
            margin-left: 0px;
          }
        }
      }

      @include it("-m-px	") {
        @include assert {
          @include output {
            @include -m-px;
            @include reset;
          }

          @include expect {
            margin: -1px;
          }
        }
      }

      @include it("-mx-px	") {
        @include assert {
          @include output {
            @include -mx-px;
            @include reset;
          }

          @include expect {
            margin-left: -1px;
            margin-right: -1px;
          }
        }
      }

      @include it("-my-px	") {
        @include assert {
          @include output {
            @include -my-px;
            @include reset;
          }

          @include expect {
            margin-top: -1px;
            margin-bottom: -1px;
          }
        }
      }

      @include it("-ms-px	") {
        @include assert {
          @include output {
            @include -ms-px;
            @include reset;
          }

          @include expect {
            margin-inline-start: -1px;
          }
        }
      }

      @include it("-me-px	") {
        @include assert {
          @include output {
            @include -me-px;
            @include reset;
          }

          @include expect {
            margin-inline-end: -1px;
          }
        }
      }

      @include it("-mt-px	") {
        @include assert {
          @include output {
            @include -mt-px;
            @include reset;
          }

          @include expect {
            margin-top: -1px;
          }
        }
      }

      @include it("-mr-px	") {
        @include assert {
          @include output {
            @include -mr-px;
            @include reset;
          }

          @include expect {
            margin-right: -1px;
          }
        }
      }

      @include it("-mb-px	") {
        @include assert {
          @include output {
            @include -mb-px;
            @include reset;
          }

          @include expect {
            margin-bottom: -1px;
          }
        }
      }

      @include it("-ml-px	") {
        @include assert {
          @include output {
            @include -ml-px;
            @include reset;
          }

          @include expect {
            margin-left: -1px;
          }
        }
      }

      @include it("-m-0\.5	") {
        @include assert {
          @include output {
            @include -m-0\.5;
            @include reset;
          }

          @include expect {
            margin: -0.125rem;
          }
        }
      }

      @include it("-mx-0\.5	") {
        @include assert {
          @include output {
            @include -mx-0\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.125rem;
            margin-right: -0.125rem;
          }
        }
      }

      @include it("-my-0\.5	") {
        @include assert {
          @include output {
            @include -my-0\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.125rem;
            margin-bottom: -0.125rem;
          }
        }
      }

      @include it("-ms-0\.5	") {
        @include assert {
          @include output {
            @include -ms-0\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.125rem;
          }
        }
      }

      @include it("-me-0\.5	") {
        @include assert {
          @include output {
            @include -me-0\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.125rem;
          }
        }
      }

      @include it("-mt-0\.5	") {
        @include assert {
          @include output {
            @include -mt-0\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.125rem;
          }
        }
      }

      @include it("-mr-0\.5	") {
        @include assert {
          @include output {
            @include -mr-0\.5;
            @include reset;
          }

          @include expect {
            margin-right: -0.125rem;
          }
        }
      }

      @include it("-mb-0\.5	") {
        @include assert {
          @include output {
            @include -mb-0\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.125rem;
          }
        }
      }

      @include it("-ml-0\.5	") {
        @include assert {
          @include output {
            @include -ml-0\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.125rem;
          }
        }
      }

      @include it("-m-1	") {
        @include assert {
          @include output {
            @include -m-1;
            @include reset;
          }

          @include expect {
            margin: -0.25rem;
          }
        }
      }

      @include it("-mx-1	") {
        @include assert {
          @include output {
            @include -mx-1;
            @include reset;
          }

          @include expect {
            margin-left: -0.25rem;
            margin-right: -0.25rem;
          }
        }
      }

      @include it("-my-1	") {
        @include assert {
          @include output {
            @include -my-1;
            @include reset;
          }

          @include expect {
            margin-top: -0.25rem;
            margin-bottom: -0.25rem;
          }
        }
      }

      @include it("-ms-1	") {
        @include assert {
          @include output {
            @include -ms-1;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.25rem;
          }
        }
      }

      @include it("-me-1	") {
        @include assert {
          @include output {
            @include -me-1;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.25rem;
          }
        }
      }

      @include it("-mt-1	") {
        @include assert {
          @include output {
            @include -mt-1;
            @include reset;
          }

          @include expect {
            margin-top: -0.25rem;
          }
        }
      }

      @include it("-mr-1	") {
        @include assert {
          @include output {
            @include -mr-1;
            @include reset;
          }

          @include expect {
            margin-right: -0.25rem;
          }
        }
      }

      @include it("-mb-1	") {
        @include assert {
          @include output {
            @include -mb-1;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.25rem;
          }
        }
      }

      @include it("-ml-1	") {
        @include assert {
          @include output {
            @include -ml-1;
            @include reset;
          }

          @include expect {
            margin-left: -0.25rem;
          }
        }
      }

      @include it("-m-1\.5	") {
        @include assert {
          @include output {
            @include -m-1\.5;
            @include reset;
          }

          @include expect {
            margin: -0.375rem;
          }
        }
      }

      @include it("-mx-1\.5	") {
        @include assert {
          @include output {
            @include -mx-1\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.375rem;
            margin-right: -0.375rem;
          }
        }
      }

      @include it("-my-1\.5	") {
        @include assert {
          @include output {
            @include -my-1\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.375rem;
            margin-bottom: -0.375rem;
          }
        }
      }

      @include it("-ms-1\.5	") {
        @include assert {
          @include output {
            @include -ms-1\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.375rem;
          }
        }
      }

      @include it("-me-1\.5	") {
        @include assert {
          @include output {
            @include -me-1\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.375rem;
          }
        }
      }

      @include it("-mt-1\.5	") {
        @include assert {
          @include output {
            @include -mt-1\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.375rem;
          }
        }
      }

      @include it("-mr-1\.5	") {
        @include assert {
          @include output {
            @include -mr-1\.5;
            @include reset;
          }

          @include expect {
            margin-right: -0.375rem;
          }
        }
      }

      @include it("-mb-1\.5	") {
        @include assert {
          @include output {
            @include -mb-1\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.375rem;
          }
        }
      }

      @include it("-ml-1\.5	") {
        @include assert {
          @include output {
            @include -ml-1\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.375rem;
          }
        }
      }

      @include it("-m-2	") {
        @include assert {
          @include output {
            @include -m-2;
            @include reset;
          }

          @include expect {
            margin: -0.5rem;
          }
        }
      }

      @include it("-mx-2	") {
        @include assert {
          @include output {
            @include -mx-2;
            @include reset;
          }

          @include expect {
            margin-left: -0.5rem;
            margin-right: -0.5rem;
          }
        }
      }

      @include it("-my-2	") {
        @include assert {
          @include output {
            @include -my-2;
            @include reset;
          }

          @include expect {
            margin-top: -0.5rem;
            margin-bottom: -0.5rem;
          }
        }
      }

      @include it("-ms-2	") {
        @include assert {
          @include output {
            @include -ms-2;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.5rem;
          }
        }
      }

      @include it("-me-2	") {
        @include assert {
          @include output {
            @include -me-2;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.5rem;
          }
        }
      }

      @include it("-mt-2	") {
        @include assert {
          @include output {
            @include -mt-2;
            @include reset;
          }

          @include expect {
            margin-top: -0.5rem;
          }
        }
      }

      @include it("-mr-2	") {
        @include assert {
          @include output {
            @include -mr-2;
            @include reset;
          }

          @include expect {
            margin-right: -0.5rem;
          }
        }
      }

      @include it("-mb-2	") {
        @include assert {
          @include output {
            @include -mb-2;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.5rem;
          }
        }
      }

      @include it("-ml-2	") {
        @include assert {
          @include output {
            @include -ml-2;
            @include reset;
          }

          @include expect {
            margin-left: -0.5rem;
          }
        }
      }

      @include it("-m-2\.5	") {
        @include assert {
          @include output {
            @include -m-2\.5;
            @include reset;
          }

          @include expect {
            margin: -0.625rem;
          }
        }
      }

      @include it("-mx-2\.5	") {
        @include assert {
          @include output {
            @include -mx-2\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.625rem;
            margin-right: -0.625rem;
          }
        }
      }

      @include it("-my-2\.5	") {
        @include assert {
          @include output {
            @include -my-2\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.625rem;
            margin-bottom: -0.625rem;
          }
        }
      }

      @include it("-ms-2\.5	") {
        @include assert {
          @include output {
            @include -ms-2\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.625rem;
          }
        }
      }

      @include it("-me-2\.5	") {
        @include assert {
          @include output {
            @include -me-2\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.625rem;
          }
        }
      }

      @include it("-mt-2\.5	") {
        @include assert {
          @include output {
            @include -mt-2\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.625rem;
          }
        }
      }

      @include it("-mr-2\.5	") {
        @include assert {
          @include output {
            @include -mr-2\.5;
            @include reset;
          }

          @include expect {
            margin-right: -0.625rem;
          }
        }
      }

      @include it("-mb-2\.5	") {
        @include assert {
          @include output {
            @include -mb-2\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.625rem;
          }
        }
      }

      @include it("-ml-2\.5	") {
        @include assert {
          @include output {
            @include -ml-2\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.625rem;
          }
        }
      }

      @include it("-m-3	") {
        @include assert {
          @include output {
            @include -m-3;
            @include reset;
          }

          @include expect {
            margin: -0.75rem;
          }
        }
      }

      @include it("-mx-3	") {
        @include assert {
          @include output {
            @include -mx-3;
            @include reset;
          }

          @include expect {
            margin-left: -0.75rem;
            margin-right: -0.75rem;
          }
        }
      }

      @include it("-my-3	") {
        @include assert {
          @include output {
            @include -my-3;
            @include reset;
          }

          @include expect {
            margin-top: -0.75rem;
            margin-bottom: -0.75rem;
          }
        }
      }

      @include it("-ms-3	") {
        @include assert {
          @include output {
            @include -ms-3;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.75rem;
          }
        }
      }

      @include it("-me-3	") {
        @include assert {
          @include output {
            @include -me-3;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.75rem;
          }
        }
      }

      @include it("-mt-3	") {
        @include assert {
          @include output {
            @include -mt-3;
            @include reset;
          }

          @include expect {
            margin-top: -0.75rem;
          }
        }
      }

      @include it("-mr-3	") {
        @include assert {
          @include output {
            @include -mr-3;
            @include reset;
          }

          @include expect {
            margin-right: -0.75rem;
          }
        }
      }

      @include it("-mb-3	") {
        @include assert {
          @include output {
            @include -mb-3;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.75rem;
          }
        }
      }

      @include it("-ml-3	") {
        @include assert {
          @include output {
            @include -ml-3;
            @include reset;
          }

          @include expect {
            margin-left: -0.75rem;
          }
        }
      }

      @include it("-m-3\.5	") {
        @include assert {
          @include output {
            @include -m-3\.5;
            @include reset;
          }

          @include expect {
            margin: -0.875rem;
          }
        }
      }

      @include it("-mx-3\.5	") {
        @include assert {
          @include output {
            @include -mx-3\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.875rem;
            margin-right: -0.875rem;
          }
        }
      }

      @include it("-my-3\.5	") {
        @include assert {
          @include output {
            @include -my-3\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.875rem;
            margin-bottom: -0.875rem;
          }
        }
      }

      @include it("-ms-3\.5	") {
        @include assert {
          @include output {
            @include -ms-3\.5;
            @include reset;
          }

          @include expect {
            margin-inline-start: -0.875rem;
          }
        }
      }

      @include it("-me-3\.5	") {
        @include assert {
          @include output {
            @include -me-3\.5;
            @include reset;
          }

          @include expect {
            margin-inline-end: -0.875rem;
          }
        }
      }

      @include it("-mt-3\.5	") {
        @include assert {
          @include output {
            @include -mt-3\.5;
            @include reset;
          }

          @include expect {
            margin-top: -0.875rem;
          }
        }
      }

      @include it("-mr-3\.5	") {
        @include assert {
          @include output {
            @include -mr-3\.5;
            @include reset;
          }

          @include expect {
            margin-right: -0.875rem;
          }
        }
      }

      @include it("-mb-3\.5	") {
        @include assert {
          @include output {
            @include -mb-3\.5;
            @include reset;
          }

          @include expect {
            margin-bottom: -0.875rem;
          }
        }
      }

      @include it("-ml-3\.5	") {
        @include assert {
          @include output {
            @include -ml-3\.5;
            @include reset;
          }

          @include expect {
            margin-left: -0.875rem;
          }
        }
      }

      @include it("-m-4	") {
        @include assert {
          @include output {
            @include -m-4;
            @include reset;
          }

          @include expect {
            margin: -1rem;
          }
        }
      }

      @include it("-mx-4	") {
        @include assert {
          @include output {
            @include -mx-4;
            @include reset;
          }

          @include expect {
            margin-left: -1rem;
            margin-right: -1rem;
          }
        }
      }

      @include it("-my-4	") {
        @include assert {
          @include output {
            @include -my-4;
            @include reset;
          }

          @include expect {
            margin-top: -1rem;
            margin-bottom: -1rem;
          }
        }
      }

      @include it("-ms-4	") {
        @include assert {
          @include output {
            @include -ms-4;
            @include reset;
          }

          @include expect {
            margin-inline-start: -1rem;
          }
        }
      }

      @include it("-me-4	") {
        @include assert {
          @include output {
            @include -me-4;
            @include reset;
          }

          @include expect {
            margin-inline-end: -1rem;
          }
        }
      }

      @include it("-mt-4	") {
        @include assert {
          @include output {
            @include -mt-4;
            @include reset;
          }

          @include expect {
            margin-top: -1rem;
          }
        }
      }

      @include it("-mr-4	") {
        @include assert {
          @include output {
            @include -mr-4;
            @include reset;
          }

          @include expect {
            margin-right: -1rem;
          }
        }
      }

      @include it("-mb-4	") {
        @include assert {
          @include output {
            @include -mb-4;
            @include reset;
          }

          @include expect {
            margin-bottom: -1rem;
          }
        }
      }

      @include it("-ml-4	") {
        @include assert {
          @include output {
            @include -ml-4;
            @include reset;
          }

          @include expect {
            margin-left: -1rem;
          }
        }
      }

      @include it("-m-5	") {
        @include assert {
          @include output {
            @include -m-5;
            @include reset;
          }

          @include expect {
            margin: -1.25rem;
          }
        }
      }

      @include it("-mx-5	") {
        @include assert {
          @include output {
            @include -mx-5;
            @include reset;
          }

          @include expect {
            margin-left: -1.25rem;
            margin-right: -1.25rem;
          }
        }
      }

      @include it("-my-5	") {
        @include assert {
          @include output {
            @include -my-5;
            @include reset;
          }

          @include expect {
            margin-top: -1.25rem;
            margin-bottom: -1.25rem;
          }
        }
      }

      @include it("-ms-5	") {
        @include assert {
          @include output {
            @include -ms-5;
            @include reset;
          }

          @include expect {
            margin-inline-start: -1.25rem;
          }
        }
      }

      @include it("-me-5	") {
        @include assert {
          @include output {
            @include -me-5;
            @include reset;
          }

          @include expect {
            margin-inline-end: -1.25rem;
          }
        }
      }

      @include it("-mt-5	") {
        @include assert {
          @include output {
            @include -mt-5;
            @include reset;
          }

          @include expect {
            margin-top: -1.25rem;
          }
        }
      }

      @include it("-mr-5	") {
        @include assert {
          @include output {
            @include -mr-5;
            @include reset;
          }

          @include expect {
            margin-right: -1.25rem;
          }
        }
      }

      @include it("-mb-5	") {
        @include assert {
          @include output {
            @include -mb-5;
            @include reset;
          }

          @include expect {
            margin-bottom: -1.25rem;
          }
        }
      }

      @include it("-ml-5	") {
        @include assert {
          @include output {
            @include -ml-5;
            @include reset;
          }

          @include expect {
            margin-left: -1.25rem;
          }
        }
      }

      @include it("-m-6	") {
        @include assert {
          @include output {
            @include -m-6;
            @include reset;
          }

          @include expect {
            margin: -1.5rem;
          }
        }
      }

      @include it("-mx-6	") {
        @include assert {
          @include output {
            @include -mx-6;
            @include reset;
          }

          @include expect {
            margin-left: -1.5rem;
            margin-right: -1.5rem;
          }
        }
      }

      @include it("-my-6	") {
        @include assert {
          @include output {
            @include -my-6;
            @include reset;
          }

          @include expect {
            margin-top: -1.5rem;
            margin-bottom: -1.5rem;
          }
        }
      }

      @include it("-ms-6	") {
        @include assert {
          @include output {
            @include -ms-6;
            @include reset;
          }

          @include expect {
            margin-inline-start: -1.5rem;
          }
        }
      }

      @include it("-me-6	") {
        @include assert {
          @include output {
            @include -me-6;
            @include reset;
          }

          @include expect {
            margin-inline-end: -1.5rem;
          }
        }
      }

      @include it("-mt-6	") {
        @include assert {
          @include output {
            @include -mt-6;
            @include reset;
          }

          @include expect {
            margin-top: -1.5rem;
          }
        }
      }

      @include it("-mr-6	") {
        @include assert {
          @include output {
            @include -mr-6;
            @include reset;
          }

          @include expect {
            margin-right: -1.5rem;
          }
        }
      }

      @include it("-mb-6	") {
        @include assert {
          @include output {
            @include -mb-6;
            @include reset;
          }

          @include expect {
            margin-bottom: -1.5rem;
          }
        }
      }

      @include it("-ml-6	") {
        @include assert {
          @include output {
            @include -ml-6;
            @include reset;
          }

          @include expect {
            margin-left: -1.5rem;
          }
        }
      }

      @include it("-m-7	") {
        @include assert {
          @include output {
            @include -m-7;
            @include reset;
          }

          @include expect {
            margin: -1.75rem;
          }
        }
      }

      @include it("-mx-7	") {
        @include assert {
          @include output {
            @include -mx-7;
            @include reset;
          }

          @include expect {
            margin-left: -1.75rem;
            margin-right: -1.75rem;
          }
        }
      }

      @include it("-my-7	") {
        @include assert {
          @include output {
            @include -my-7;
            @include reset;
          }

          @include expect {
            margin-top: -1.75rem;
            margin-bottom: -1.75rem;
          }
        }
      }

      @include it("-ms-7	") {
        @include assert {
          @include output {
            @include -ms-7;
            @include reset;
          }

          @include expect {
            margin-inline-start: -1.75rem;
          }
        }
      }

      @include it("-me-7	") {
        @include assert {
          @include output {
            @include -me-7;
            @include reset;
          }

          @include expect {
            margin-inline-end: -1.75rem;
          }
        }
      }

      @include it("-mt-7	") {
        @include assert {
          @include output {
            @include -mt-7;
            @include reset;
          }

          @include expect {
            margin-top: -1.75rem;
          }
        }
      }

      @include it("-mr-7	") {
        @include assert {
          @include output {
            @include -mr-7;
            @include reset;
          }

          @include expect {
            margin-right: -1.75rem;
          }
        }
      }

      @include it("-mb-7	") {
        @include assert {
          @include output {
            @include -mb-7;
            @include reset;
          }

          @include expect {
            margin-bottom: -1.75rem;
          }
        }
      }

      @include it("-ml-7	") {
        @include assert {
          @include output {
            @include -ml-7;
            @include reset;
          }

          @include expect {
            margin-left: -1.75rem;
          }
        }
      }

      @include it("-m-8	") {
        @include assert {
          @include output {
            @include -m-8;
            @include reset;
          }

          @include expect {
            margin: -2rem;
          }
        }
      }

      @include it("-mx-8	") {
        @include assert {
          @include output {
            @include -mx-8;
            @include reset;
          }

          @include expect {
            margin-left: -2rem;
            margin-right: -2rem;
          }
        }
      }

      @include it("-my-8	") {
        @include assert {
          @include output {
            @include -my-8;
            @include reset;
          }

          @include expect {
            margin-top: -2rem;
            margin-bottom: -2rem;
          }
        }
      }

      @include it("-ms-8	") {
        @include assert {
          @include output {
            @include -ms-8;
            @include reset;
          }

          @include expect {
            margin-inline-start: -2rem;
          }
        }
      }

      @include it("-me-8	") {
        @include assert {
          @include output {
            @include -me-8;
            @include reset;
          }

          @include expect {
            margin-inline-end: -2rem;
          }
        }
      }

      @include it("-mt-8	") {
        @include assert {
          @include output {
            @include -mt-8;
            @include reset;
          }

          @include expect {
            margin-top: -2rem;
          }
        }
      }

      @include it("-mr-8	") {
        @include assert {
          @include output {
            @include -mr-8;
            @include reset;
          }

          @include expect {
            margin-right: -2rem;
          }
        }
      }

      @include it("-mb-8	") {
        @include assert {
          @include output {
            @include -mb-8;
            @include reset;
          }

          @include expect {
            margin-bottom: -2rem;
          }
        }
      }

      @include it("-ml-8	") {
        @include assert {
          @include output {
            @include -ml-8;
            @include reset;
          }

          @include expect {
            margin-left: -2rem;
          }
        }
      }

      @include it("-m-9	") {
        @include assert {
          @include output {
            @include -m-9;
            @include reset;
          }

          @include expect {
            margin: -2.25rem;
          }
        }
      }

      @include it("-mx-9	") {
        @include assert {
          @include output {
            @include -mx-9;
            @include reset;
          }

          @include expect {
            margin-left: -2.25rem;
            margin-right: -2.25rem;
          }
        }
      }

      @include it("-my-9	") {
        @include assert {
          @include output {
            @include -my-9;
            @include reset;
          }

          @include expect {
            margin-top: -2.25rem;
            margin-bottom: -2.25rem;
          }
        }
      }

      @include it("-ms-9	") {
        @include assert {
          @include output {
            @include -ms-9;
            @include reset;
          }

          @include expect {
            margin-inline-start: -2.25rem;
          }
        }
      }

      @include it("-me-9	") {
        @include assert {
          @include output {
            @include -me-9;
            @include reset;
          }

          @include expect {
            margin-inline-end: -2.25rem;
          }
        }
      }

      @include it("-mt-9	") {
        @include assert {
          @include output {
            @include -mt-9;
            @include reset;
          }

          @include expect {
            margin-top: -2.25rem;
          }
        }
      }

      @include it("-mr-9	") {
        @include assert {
          @include output {
            @include -mr-9;
            @include reset;
          }

          @include expect {
            margin-right: -2.25rem;
          }
        }
      }

      @include it("-mb-9	") {
        @include assert {
          @include output {
            @include -mb-9;
            @include reset;
          }

          @include expect {
            margin-bottom: -2.25rem;
          }
        }
      }

      @include it("-ml-9	") {
        @include assert {
          @include output {
            @include -ml-9;
            @include reset;
          }

          @include expect {
            margin-left: -2.25rem;
          }
        }
      }

      @include it("-m-10	") {
        @include assert {
          @include output {
            @include -m-10;
            @include reset;
          }

          @include expect {
            margin: -2.5rem;
          }
        }
      }

      @include it("-mx-10	") {
        @include assert {
          @include output {
            @include -mx-10;
            @include reset;
          }

          @include expect {
            margin-left: -2.5rem;
            margin-right: -2.5rem;
          }
        }
      }

      @include it("-my-10	") {
        @include assert {
          @include output {
            @include -my-10;
            @include reset;
          }

          @include expect {
            margin-top: -2.5rem;
            margin-bottom: -2.5rem;
          }
        }
      }

      @include it("-ms-10	") {
        @include assert {
          @include output {
            @include -ms-10;
            @include reset;
          }

          @include expect {
            margin-inline-start: -2.5rem;
          }
        }
      }

      @include it("-me-10	") {
        @include assert {
          @include output {
            @include -me-10;
            @include reset;
          }

          @include expect {
            margin-inline-end: -2.5rem;
          }
        }
      }

      @include it("-mt-10	") {
        @include assert {
          @include output {
            @include -mt-10;
            @include reset;
          }

          @include expect {
            margin-top: -2.5rem;
          }
        }
      }

      @include it("-mr-10	") {
        @include assert {
          @include output {
            @include -mr-10;
            @include reset;
          }

          @include expect {
            margin-right: -2.5rem;
          }
        }
      }

      @include it("-mb-10	") {
        @include assert {
          @include output {
            @include -mb-10;
            @include reset;
          }

          @include expect {
            margin-bottom: -2.5rem;
          }
        }
      }

      @include it("-ml-10	") {
        @include assert {
          @include output {
            @include -ml-10;
            @include reset;
          }

          @include expect {
            margin-left: -2.5rem;
          }
        }
      }

      @include it("-m-11	") {
        @include assert {
          @include output {
            @include -m-11;
            @include reset;
          }

          @include expect {
            margin: -2.75rem;
          }
        }
      }

      @include it("-mx-11	") {
        @include assert {
          @include output {
            @include -mx-11;
            @include reset;
          }

          @include expect {
            margin-left: -2.75rem;
            margin-right: -2.75rem;
          }
        }
      }

      @include it("-my-11	") {
        @include assert {
          @include output {
            @include -my-11;
            @include reset;
          }

          @include expect {
            margin-top: -2.75rem;
            margin-bottom: -2.75rem;
          }
        }
      }

      @include it("-ms-11	") {
        @include assert {
          @include output {
            @include -ms-11;
            @include reset;
          }

          @include expect {
            margin-inline-start: -2.75rem;
          }
        }
      }

      @include it("-me-11	") {
        @include assert {
          @include output {
            @include -me-11;
            @include reset;
          }

          @include expect {
            margin-inline-end: -2.75rem;
          }
        }
      }

      @include it("-mt-11	") {
        @include assert {
          @include output {
            @include -mt-11;
            @include reset;
          }

          @include expect {
            margin-top: -2.75rem;
          }
        }
      }

      @include it("-mr-11	") {
        @include assert {
          @include output {
            @include -mr-11;
            @include reset;
          }

          @include expect {
            margin-right: -2.75rem;
          }
        }
      }

      @include it("-mb-11	") {
        @include assert {
          @include output {
            @include -mb-11;
            @include reset;
          }

          @include expect {
            margin-bottom: -2.75rem;
          }
        }
      }

      @include it("-ml-11	") {
        @include assert {
          @include output {
            @include -ml-11;
            @include reset;
          }

          @include expect {
            margin-left: -2.75rem;
          }
        }
      }

      @include it("-m-12	") {
        @include assert {
          @include output {
            @include -m-12;
            @include reset;
          }

          @include expect {
            margin: -3rem;
          }
        }
      }

      @include it("-mx-12	") {
        @include assert {
          @include output {
            @include -mx-12;
            @include reset;
          }

          @include expect {
            margin-left: -3rem;
            margin-right: -3rem;
          }
        }
      }

      @include it("-my-12	") {
        @include assert {
          @include output {
            @include -my-12;
            @include reset;
          }

          @include expect {
            margin-top: -3rem;
            margin-bottom: -3rem;
          }
        }
      }

      @include it("-ms-12	") {
        @include assert {
          @include output {
            @include -ms-12;
            @include reset;
          }

          @include expect {
            margin-inline-start: -3rem;
          }
        }
      }

      @include it("-me-12	") {
        @include assert {
          @include output {
            @include -me-12;
            @include reset;
          }

          @include expect {
            margin-inline-end: -3rem;
          }
        }
      }

      @include it("-mt-12	") {
        @include assert {
          @include output {
            @include -mt-12;
            @include reset;
          }

          @include expect {
            margin-top: -3rem;
          }
        }
      }

      @include it("-mr-12	") {
        @include assert {
          @include output {
            @include -mr-12;
            @include reset;
          }

          @include expect {
            margin-right: -3rem;
          }
        }
      }

      @include it("-mb-12	") {
        @include assert {
          @include output {
            @include -mb-12;
            @include reset;
          }

          @include expect {
            margin-bottom: -3rem;
          }
        }
      }

      @include it("-ml-12	") {
        @include assert {
          @include output {
            @include -ml-12;
            @include reset;
          }

          @include expect {
            margin-left: -3rem;
          }
        }
      }

      @include it("-m-14	") {
        @include assert {
          @include output {
            @include -m-14;
            @include reset;
          }

          @include expect {
            margin: -3.5rem;
          }
        }
      }

      @include it("-mx-14	") {
        @include assert {
          @include output {
            @include -mx-14;
            @include reset;
          }

          @include expect {
            margin-left: -3.5rem;
            margin-right: -3.5rem;
          }
        }
      }

      @include it("-my-14	") {
        @include assert {
          @include output {
            @include -my-14;
            @include reset;
          }

          @include expect {
            margin-top: -3.5rem;
            margin-bottom: -3.5rem;
          }
        }
      }

      @include it("-ms-14	") {
        @include assert {
          @include output {
            @include -ms-14;
            @include reset;
          }

          @include expect {
            margin-inline-start: -3.5rem;
          }
        }
      }

      @include it("-me-14	") {
        @include assert {
          @include output {
            @include -me-14;
            @include reset;
          }

          @include expect {
            margin-inline-end: -3.5rem;
          }
        }
      }

      @include it("-mt-14	") {
        @include assert {
          @include output {
            @include -mt-14;
            @include reset;
          }

          @include expect {
            margin-top: -3.5rem;
          }
        }
      }

      @include it("-mr-14	") {
        @include assert {
          @include output {
            @include -mr-14;
            @include reset;
          }

          @include expect {
            margin-right: -3.5rem;
          }
        }
      }

      @include it("-mb-14	") {
        @include assert {
          @include output {
            @include -mb-14;
            @include reset;
          }

          @include expect {
            margin-bottom: -3.5rem;
          }
        }
      }

      @include it("-ml-14	") {
        @include assert {
          @include output {
            @include -ml-14;
            @include reset;
          }

          @include expect {
            margin-left: -3.5rem;
          }
        }
      }

      @include it("-m-16	") {
        @include assert {
          @include output {
            @include -m-16;
            @include reset;
          }

          @include expect {
            margin: -4rem;
          }
        }
      }

      @include it("-mx-16	") {
        @include assert {
          @include output {
            @include -mx-16;
            @include reset;
          }

          @include expect {
            margin-left: -4rem;
            margin-right: -4rem;
          }
        }
      }

      @include it("-my-16	") {
        @include assert {
          @include output {
            @include -my-16;
            @include reset;
          }

          @include expect {
            margin-top: -4rem;
            margin-bottom: -4rem;
          }
        }
      }

      @include it("-ms-16	") {
        @include assert {
          @include output {
            @include -ms-16;
            @include reset;
          }

          @include expect {
            margin-inline-start: -4rem;
          }
        }
      }

      @include it("-me-16	") {
        @include assert {
          @include output {
            @include -me-16;
            @include reset;
          }

          @include expect {
            margin-inline-end: -4rem;
          }
        }
      }

      @include it("-mt-16	") {
        @include assert {
          @include output {
            @include -mt-16;
            @include reset;
          }

          @include expect {
            margin-top: -4rem;
          }
        }
      }

      @include it("-mr-16	") {
        @include assert {
          @include output {
            @include -mr-16;
            @include reset;
          }

          @include expect {
            margin-right: -4rem;
          }
        }
      }

      @include it("-mb-16	") {
        @include assert {
          @include output {
            @include -mb-16;
            @include reset;
          }

          @include expect {
            margin-bottom: -4rem;
          }
        }
      }

      @include it("-ml-16	") {
        @include assert {
          @include output {
            @include -ml-16;
            @include reset;
          }

          @include expect {
            margin-left: -4rem;
          }
        }
      }

      @include it("-m-20	") {
        @include assert {
          @include output {
            @include -m-20;
            @include reset;
          }

          @include expect {
            margin: -5rem;
          }
        }
      }

      @include it("-mx-20	") {
        @include assert {
          @include output {
            @include -mx-20;
            @include reset;
          }

          @include expect {
            margin-left: -5rem;
            margin-right: -5rem;
          }
        }
      }

      @include it("-my-20	") {
        @include assert {
          @include output {
            @include -my-20;
            @include reset;
          }

          @include expect {
            margin-top: -5rem;
            margin-bottom: -5rem;
          }
        }
      }

      @include it("-ms-20	") {
        @include assert {
          @include output {
            @include -ms-20;
            @include reset;
          }

          @include expect {
            margin-inline-start: -5rem;
          }
        }
      }

      @include it("-me-20	") {
        @include assert {
          @include output {
            @include -me-20;
            @include reset;
          }

          @include expect {
            margin-inline-end: -5rem;
          }
        }
      }

      @include it("-mt-20	") {
        @include assert {
          @include output {
            @include -mt-20;
            @include reset;
          }

          @include expect {
            margin-top: -5rem;
          }
        }
      }

      @include it("-mr-20	") {
        @include assert {
          @include output {
            @include -mr-20;
            @include reset;
          }

          @include expect {
            margin-right: -5rem;
          }
        }
      }

      @include it("-mb-20	") {
        @include assert {
          @include output {
            @include -mb-20;
            @include reset;
          }

          @include expect {
            margin-bottom: -5rem;
          }
        }
      }

      @include it("-ml-20	") {
        @include assert {
          @include output {
            @include -ml-20;
            @include reset;
          }

          @include expect {
            margin-left: -5rem;
          }
        }
      }

      @include it("-m-24	") {
        @include assert {
          @include output {
            @include -m-24;
            @include reset;
          }

          @include expect {
            margin: -6rem;
          }
        }
      }

      @include it("-mx-24	") {
        @include assert {
          @include output {
            @include -mx-24;
            @include reset;
          }

          @include expect {
            margin-left: -6rem;
            margin-right: -6rem;
          }
        }
      }

      @include it("-my-24	") {
        @include assert {
          @include output {
            @include -my-24;
            @include reset;
          }

          @include expect {
            margin-top: -6rem;
            margin-bottom: -6rem;
          }
        }
      }

      @include it("-ms-24	") {
        @include assert {
          @include output {
            @include -ms-24;
            @include reset;
          }

          @include expect {
            margin-inline-start: -6rem;
          }
        }
      }

      @include it("-me-24	") {
        @include assert {
          @include output {
            @include -me-24;
            @include reset;
          }

          @include expect {
            margin-inline-end: -6rem;
          }
        }
      }

      @include it("-mt-24	") {
        @include assert {
          @include output {
            @include -mt-24;
            @include reset;
          }

          @include expect {
            margin-top: -6rem;
          }
        }
      }

      @include it("-mr-24	") {
        @include assert {
          @include output {
            @include -mr-24;
            @include reset;
          }

          @include expect {
            margin-right: -6rem;
          }
        }
      }

      @include it("-mb-24	") {
        @include assert {
          @include output {
            @include -mb-24;
            @include reset;
          }

          @include expect {
            margin-bottom: -6rem;
          }
        }
      }

      @include it("-ml-24	") {
        @include assert {
          @include output {
            @include -ml-24;
            @include reset;
          }

          @include expect {
            margin-left: -6rem;
          }
        }
      }

      @include it("-m-28	") {
        @include assert {
          @include output {
            @include -m-28;
            @include reset;
          }

          @include expect {
            margin: -7rem;
          }
        }
      }

      @include it("-mx-28	") {
        @include assert {
          @include output {
            @include -mx-28;
            @include reset;
          }

          @include expect {
            margin-left: -7rem;
            margin-right: -7rem;
          }
        }
      }

      @include it("-my-28	") {
        @include assert {
          @include output {
            @include -my-28;
            @include reset;
          }

          @include expect {
            margin-top: -7rem;
            margin-bottom: -7rem;
          }
        }
      }

      @include it("-ms-28	") {
        @include assert {
          @include output {
            @include -ms-28;
            @include reset;
          }

          @include expect {
            margin-inline-start: -7rem;
          }
        }
      }

      @include it("-me-28	") {
        @include assert {
          @include output {
            @include -me-28;
            @include reset;
          }

          @include expect {
            margin-inline-end: -7rem;
          }
        }
      }

      @include it("-mt-28	") {
        @include assert {
          @include output {
            @include -mt-28;
            @include reset;
          }

          @include expect {
            margin-top: -7rem;
          }
        }
      }

      @include it("-mr-28	") {
        @include assert {
          @include output {
            @include -mr-28;
            @include reset;
          }

          @include expect {
            margin-right: -7rem;
          }
        }
      }

      @include it("-mb-28	") {
        @include assert {
          @include output {
            @include -mb-28;
            @include reset;
          }

          @include expect {
            margin-bottom: -7rem;
          }
        }
      }

      @include it("-ml-28	") {
        @include assert {
          @include output {
            @include -ml-28;
            @include reset;
          }

          @include expect {
            margin-left: -7rem;
          }
        }
      }

      @include it("-m-32	") {
        @include assert {
          @include output {
            @include -m-32;
            @include reset;
          }

          @include expect {
            margin: -8rem;
          }
        }
      }

      @include it("-mx-32	") {
        @include assert {
          @include output {
            @include -mx-32;
            @include reset;
          }

          @include expect {
            margin-left: -8rem;
            margin-right: -8rem;
          }
        }
      }

      @include it("-my-32	") {
        @include assert {
          @include output {
            @include -my-32;
            @include reset;
          }

          @include expect {
            margin-top: -8rem;
            margin-bottom: -8rem;
          }
        }
      }

      @include it("-ms-32	") {
        @include assert {
          @include output {
            @include -ms-32;
            @include reset;
          }

          @include expect {
            margin-inline-start: -8rem;
          }
        }
      }

      @include it("-me-32	") {
        @include assert {
          @include output {
            @include -me-32;
            @include reset;
          }

          @include expect {
            margin-inline-end: -8rem;
          }
        }
      }

      @include it("-mt-32	") {
        @include assert {
          @include output {
            @include -mt-32;
            @include reset;
          }

          @include expect {
            margin-top: -8rem;
          }
        }
      }

      @include it("-mr-32	") {
        @include assert {
          @include output {
            @include -mr-32;
            @include reset;
          }

          @include expect {
            margin-right: -8rem;
          }
        }
      }

      @include it("-mb-32	") {
        @include assert {
          @include output {
            @include -mb-32;
            @include reset;
          }

          @include expect {
            margin-bottom: -8rem;
          }
        }
      }

      @include it("-ml-32	") {
        @include assert {
          @include output {
            @include -ml-32;
            @include reset;
          }

          @include expect {
            margin-left: -8rem;
          }
        }
      }

      @include it("-m-36	") {
        @include assert {
          @include output {
            @include -m-36;
            @include reset;
          }

          @include expect {
            margin: -9rem;
          }
        }
      }

      @include it("-mx-36	") {
        @include assert {
          @include output {
            @include -mx-36;
            @include reset;
          }

          @include expect {
            margin-left: -9rem;
            margin-right: -9rem;
          }
        }
      }

      @include it("-my-36	") {
        @include assert {
          @include output {
            @include -my-36;
            @include reset;
          }

          @include expect {
            margin-top: -9rem;
            margin-bottom: -9rem;
          }
        }
      }

      @include it("-ms-36	") {
        @include assert {
          @include output {
            @include -ms-36;
            @include reset;
          }

          @include expect {
            margin-inline-start: -9rem;
          }
        }
      }

      @include it("-me-36	") {
        @include assert {
          @include output {
            @include -me-36;
            @include reset;
          }

          @include expect {
            margin-inline-end: -9rem;
          }
        }
      }

      @include it("-mt-36	") {
        @include assert {
          @include output {
            @include -mt-36;
            @include reset;
          }

          @include expect {
            margin-top: -9rem;
          }
        }
      }

      @include it("-mr-36	") {
        @include assert {
          @include output {
            @include -mr-36;
            @include reset;
          }

          @include expect {
            margin-right: -9rem;
          }
        }
      }

      @include it("-mb-36	") {
        @include assert {
          @include output {
            @include -mb-36;
            @include reset;
          }

          @include expect {
            margin-bottom: -9rem;
          }
        }
      }

      @include it("-ml-36	") {
        @include assert {
          @include output {
            @include -ml-36;
            @include reset;
          }

          @include expect {
            margin-left: -9rem;
          }
        }
      }

      @include it("-m-40	") {
        @include assert {
          @include output {
            @include -m-40;
            @include reset;
          }

          @include expect {
            margin: -10rem;
          }
        }
      }

      @include it("-mx-40	") {
        @include assert {
          @include output {
            @include -mx-40;
            @include reset;
          }

          @include expect {
            margin-left: -10rem;
            margin-right: -10rem;
          }
        }
      }

      @include it("-my-40	") {
        @include assert {
          @include output {
            @include -my-40;
            @include reset;
          }

          @include expect {
            margin-top: -10rem;
            margin-bottom: -10rem;
          }
        }
      }

      @include it("-ms-40	") {
        @include assert {
          @include output {
            @include -ms-40;
            @include reset;
          }

          @include expect {
            margin-inline-start: -10rem;
          }
        }
      }

      @include it("-me-40	") {
        @include assert {
          @include output {
            @include -me-40;
            @include reset;
          }

          @include expect {
            margin-inline-end: -10rem;
          }
        }
      }

      @include it("-mt-40	") {
        @include assert {
          @include output {
            @include -mt-40;
            @include reset;
          }

          @include expect {
            margin-top: -10rem;
          }
        }
      }

      @include it("-mr-40	") {
        @include assert {
          @include output {
            @include -mr-40;
            @include reset;
          }

          @include expect {
            margin-right: -10rem;
          }
        }
      }

      @include it("-mb-40	") {
        @include assert {
          @include output {
            @include -mb-40;
            @include reset;
          }

          @include expect {
            margin-bottom: -10rem;
          }
        }
      }

      @include it("-ml-40	") {
        @include assert {
          @include output {
            @include -ml-40;
            @include reset;
          }

          @include expect {
            margin-left: -10rem;
          }
        }
      }

      @include it("-m-44	") {
        @include assert {
          @include output {
            @include -m-44;
            @include reset;
          }

          @include expect {
            margin: -11rem;
          }
        }
      }

      @include it("-mx-44	") {
        @include assert {
          @include output {
            @include -mx-44;
            @include reset;
          }

          @include expect {
            margin-left: -11rem;
            margin-right: -11rem;
          }
        }
      }

      @include it("-my-44	") {
        @include assert {
          @include output {
            @include -my-44;
            @include reset;
          }

          @include expect {
            margin-top: -11rem;
            margin-bottom: -11rem;
          }
        }
      }

      @include it("-ms-44	") {
        @include assert {
          @include output {
            @include -ms-44;
            @include reset;
          }

          @include expect {
            margin-inline-start: -11rem;
          }
        }
      }

      @include it("-me-44	") {
        @include assert {
          @include output {
            @include -me-44;
            @include reset;
          }

          @include expect {
            margin-inline-end: -11rem;
          }
        }
      }

      @include it("-mt-44	") {
        @include assert {
          @include output {
            @include -mt-44;
            @include reset;
          }

          @include expect {
            margin-top: -11rem;
          }
        }
      }

      @include it("-mr-44	") {
        @include assert {
          @include output {
            @include -mr-44;
            @include reset;
          }

          @include expect {
            margin-right: -11rem;
          }
        }
      }

      @include it("-mb-44	") {
        @include assert {
          @include output {
            @include -mb-44;
            @include reset;
          }

          @include expect {
            margin-bottom: -11rem;
          }
        }
      }

      @include it("-ml-44	") {
        @include assert {
          @include output {
            @include -ml-44;
            @include reset;
          }

          @include expect {
            margin-left: -11rem;
          }
        }
      }

      @include it("-m-48	") {
        @include assert {
          @include output {
            @include -m-48;
            @include reset;
          }

          @include expect {
            margin: -12rem;
          }
        }
      }

      @include it("-mx-48	") {
        @include assert {
          @include output {
            @include -mx-48;
            @include reset;
          }

          @include expect {
            margin-left: -12rem;
            margin-right: -12rem;
          }
        }
      }

      @include it("-my-48	") {
        @include assert {
          @include output {
            @include -my-48;
            @include reset;
          }

          @include expect {
            margin-top: -12rem;
            margin-bottom: -12rem;
          }
        }
      }

      @include it("-ms-48	") {
        @include assert {
          @include output {
            @include -ms-48;
            @include reset;
          }

          @include expect {
            margin-inline-start: -12rem;
          }
        }
      }

      @include it("-me-48	") {
        @include assert {
          @include output {
            @include -me-48;
            @include reset;
          }

          @include expect {
            margin-inline-end: -12rem;
          }
        }
      }

      @include it("-mt-48	") {
        @include assert {
          @include output {
            @include -mt-48;
            @include reset;
          }

          @include expect {
            margin-top: -12rem;
          }
        }
      }

      @include it("-mr-48	") {
        @include assert {
          @include output {
            @include -mr-48;
            @include reset;
          }

          @include expect {
            margin-right: -12rem;
          }
        }
      }

      @include it("-mb-48	") {
        @include assert {
          @include output {
            @include -mb-48;
            @include reset;
          }

          @include expect {
            margin-bottom: -12rem;
          }
        }
      }

      @include it("-ml-48	") {
        @include assert {
          @include output {
            @include -ml-48;
            @include reset;
          }

          @include expect {
            margin-left: -12rem;
          }
        }
      }

      @include it("-m-52	") {
        @include assert {
          @include output {
            @include -m-52;
            @include reset;
          }

          @include expect {
            margin: -13rem;
          }
        }
      }

      @include it("-mx-52	") {
        @include assert {
          @include output {
            @include -mx-52;
            @include reset;
          }

          @include expect {
            margin-left: -13rem;
            margin-right: -13rem;
          }
        }
      }

      @include it("-my-52	") {
        @include assert {
          @include output {
            @include -my-52;
            @include reset;
          }

          @include expect {
            margin-top: -13rem;
            margin-bottom: -13rem;
          }
        }
      }

      @include it("-ms-52	") {
        @include assert {
          @include output {
            @include -ms-52;
            @include reset;
          }

          @include expect {
            margin-inline-start: -13rem;
          }
        }
      }

      @include it("-me-52	") {
        @include assert {
          @include output {
            @include -me-52;
            @include reset;
          }

          @include expect {
            margin-inline-end: -13rem;
          }
        }
      }

      @include it("-mt-52	") {
        @include assert {
          @include output {
            @include -mt-52;
            @include reset;
          }

          @include expect {
            margin-top: -13rem;
          }
        }
      }

      @include it("-mr-52	") {
        @include assert {
          @include output {
            @include -mr-52;
            @include reset;
          }

          @include expect {
            margin-right: -13rem;
          }
        }
      }

      @include it("-mb-52	") {
        @include assert {
          @include output {
            @include -mb-52;
            @include reset;
          }

          @include expect {
            margin-bottom: -13rem;
          }
        }
      }

      @include it("-ml-52	") {
        @include assert {
          @include output {
            @include -ml-52;
            @include reset;
          }

          @include expect {
            margin-left: -13rem;
          }
        }
      }

      @include it("-m-56	") {
        @include assert {
          @include output {
            @include -m-56;
            @include reset;
          }

          @include expect {
            margin: -14rem;
          }
        }
      }

      @include it("-mx-56	") {
        @include assert {
          @include output {
            @include -mx-56;
            @include reset;
          }

          @include expect {
            margin-left: -14rem;
            margin-right: -14rem;
          }
        }
      }

      @include it("-my-56	") {
        @include assert {
          @include output {
            @include -my-56;
            @include reset;
          }

          @include expect {
            margin-top: -14rem;
            margin-bottom: -14rem;
          }
        }
      }

      @include it("-ms-56	") {
        @include assert {
          @include output {
            @include -ms-56;
            @include reset;
          }

          @include expect {
            margin-inline-start: -14rem;
          }
        }
      }

      @include it("-me-56	") {
        @include assert {
          @include output {
            @include -me-56;
            @include reset;
          }

          @include expect {
            margin-inline-end: -14rem;
          }
        }
      }

      @include it("-mt-56	") {
        @include assert {
          @include output {
            @include -mt-56;
            @include reset;
          }

          @include expect {
            margin-top: -14rem;
          }
        }
      }

      @include it("-mr-56	") {
        @include assert {
          @include output {
            @include -mr-56;
            @include reset;
          }

          @include expect {
            margin-right: -14rem;
          }
        }
      }

      @include it("-mb-56	") {
        @include assert {
          @include output {
            @include -mb-56;
            @include reset;
          }

          @include expect {
            margin-bottom: -14rem;
          }
        }
      }

      @include it("-ml-56	") {
        @include assert {
          @include output {
            @include -ml-56;
            @include reset;
          }

          @include expect {
            margin-left: -14rem;
          }
        }
      }

      @include it("-m-60	") {
        @include assert {
          @include output {
            @include -m-60;
            @include reset;
          }

          @include expect {
            margin: -15rem;
          }
        }
      }

      @include it("-mx-60	") {
        @include assert {
          @include output {
            @include -mx-60;
            @include reset;
          }

          @include expect {
            margin-left: -15rem;
            margin-right: -15rem;
          }
        }
      }

      @include it("-my-60	") {
        @include assert {
          @include output {
            @include -my-60;
            @include reset;
          }

          @include expect {
            margin-top: -15rem;
            margin-bottom: -15rem;
          }
        }
      }

      @include it("-ms-60	") {
        @include assert {
          @include output {
            @include -ms-60;
            @include reset;
          }

          @include expect {
            margin-inline-start: -15rem;
          }
        }
      }

      @include it("-me-60	") {
        @include assert {
          @include output {
            @include -me-60;
            @include reset;
          }

          @include expect {
            margin-inline-end: -15rem;
          }
        }
      }

      @include it("-mt-60	") {
        @include assert {
          @include output {
            @include -mt-60;
            @include reset;
          }

          @include expect {
            margin-top: -15rem;
          }
        }
      }

      @include it("-mr-60	") {
        @include assert {
          @include output {
            @include -mr-60;
            @include reset;
          }

          @include expect {
            margin-right: -15rem;
          }
        }
      }

      @include it("-mb-60	") {
        @include assert {
          @include output {
            @include -mb-60;
            @include reset;
          }

          @include expect {
            margin-bottom: -15rem;
          }
        }
      }

      @include it("-ml-60	") {
        @include assert {
          @include output {
            @include -ml-60;
            @include reset;
          }

          @include expect {
            margin-left: -15rem;
          }
        }
      }

      @include it("-m-64	") {
        @include assert {
          @include output {
            @include -m-64;
            @include reset;
          }

          @include expect {
            margin: -16rem;
          }
        }
      }

      @include it("-mx-64	") {
        @include assert {
          @include output {
            @include -mx-64;
            @include reset;
          }

          @include expect {
            margin-left: -16rem;
            margin-right: -16rem;
          }
        }
      }

      @include it("-my-64	") {
        @include assert {
          @include output {
            @include -my-64;
            @include reset;
          }

          @include expect {
            margin-top: -16rem;
            margin-bottom: -16rem;
          }
        }
      }

      @include it("-ms-64	") {
        @include assert {
          @include output {
            @include -ms-64;
            @include reset;
          }

          @include expect {
            margin-inline-start: -16rem;
          }
        }
      }

      @include it("-me-64	") {
        @include assert {
          @include output {
            @include -me-64;
            @include reset;
          }

          @include expect {
            margin-inline-end: -16rem;
          }
        }
      }

      @include it("-mt-64	") {
        @include assert {
          @include output {
            @include -mt-64;
            @include reset;
          }

          @include expect {
            margin-top: -16rem;
          }
        }
      }

      @include it("-mr-64	") {
        @include assert {
          @include output {
            @include -mr-64;
            @include reset;
          }

          @include expect {
            margin-right: -16rem;
          }
        }
      }

      @include it("-mb-64	") {
        @include assert {
          @include output {
            @include -mb-64;
            @include reset;
          }

          @include expect {
            margin-bottom: -16rem;
          }
        }
      }

      @include it("-ml-64	") {
        @include assert {
          @include output {
            @include -ml-64;
            @include reset;
          }

          @include expect {
            margin-left: -16rem;
          }
        }
      }

      @include it("-m-72	") {
        @include assert {
          @include output {
            @include -m-72;
            @include reset;
          }

          @include expect {
            margin: -18rem;
          }
        }
      }

      @include it("-mx-72	") {
        @include assert {
          @include output {
            @include -mx-72;
            @include reset;
          }

          @include expect {
            margin-left: -18rem;
            margin-right: -18rem;
          }
        }
      }

      @include it("-my-72	") {
        @include assert {
          @include output {
            @include -my-72;
            @include reset;
          }

          @include expect {
            margin-top: -18rem;
            margin-bottom: -18rem;
          }
        }
      }

      @include it("-ms-72	") {
        @include assert {
          @include output {
            @include -ms-72;
            @include reset;
          }

          @include expect {
            margin-inline-start: -18rem;
          }
        }
      }

      @include it("-me-72	") {
        @include assert {
          @include output {
            @include -me-72;
            @include reset;
          }

          @include expect {
            margin-inline-end: -18rem;
          }
        }
      }

      @include it("-mt-72	") {
        @include assert {
          @include output {
            @include -mt-72;
            @include reset;
          }

          @include expect {
            margin-top: -18rem;
          }
        }
      }

      @include it("-mr-72	") {
        @include assert {
          @include output {
            @include -mr-72;
            @include reset;
          }

          @include expect {
            margin-right: -18rem;
          }
        }
      }

      @include it("-mb-72	") {
        @include assert {
          @include output {
            @include -mb-72;
            @include reset;
          }

          @include expect {
            margin-bottom: -18rem;
          }
        }
      }

      @include it("-ml-72	") {
        @include assert {
          @include output {
            @include -ml-72;
            @include reset;
          }

          @include expect {
            margin-left: -18rem;
          }
        }
      }

      @include it("-m-80	") {
        @include assert {
          @include output {
            @include -m-80;
            @include reset;
          }

          @include expect {
            margin: -20rem;
          }
        }
      }

      @include it("-mx-80	") {
        @include assert {
          @include output {
            @include -mx-80;
            @include reset;
          }

          @include expect {
            margin-left: -20rem;
            margin-right: -20rem;
          }
        }
      }

      @include it("-my-80	") {
        @include assert {
          @include output {
            @include -my-80;
            @include reset;
          }

          @include expect {
            margin-top: -20rem;
            margin-bottom: -20rem;
          }
        }
      }

      @include it("-ms-80	") {
        @include assert {
          @include output {
            @include -ms-80;
            @include reset;
          }

          @include expect {
            margin-inline-start: -20rem;
          }
        }
      }

      @include it("-me-80	") {
        @include assert {
          @include output {
            @include -me-80;
            @include reset;
          }

          @include expect {
            margin-inline-end: -20rem;
          }
        }
      }

      @include it("-mt-80	") {
        @include assert {
          @include output {
            @include -mt-80;
            @include reset;
          }

          @include expect {
            margin-top: -20rem;
          }
        }
      }

      @include it("-mr-80	") {
        @include assert {
          @include output {
            @include -mr-80;
            @include reset;
          }

          @include expect {
            margin-right: -20rem;
          }
        }
      }

      @include it("-mb-80	") {
        @include assert {
          @include output {
            @include -mb-80;
            @include reset;
          }

          @include expect {
            margin-bottom: -20rem;
          }
        }
      }

      @include it("-ml-80	") {
        @include assert {
          @include output {
            @include -ml-80;
            @include reset;
          }

          @include expect {
            margin-left: -20rem;
          }
        }
      }

      @include it("-m-96	") {
        @include assert {
          @include output {
            @include -m-96;
            @include reset;
          }

          @include expect {
            margin: -24rem;
          }
        }
      }

      @include it("-mx-96	") {
        @include assert {
          @include output {
            @include -mx-96;
            @include reset;
          }

          @include expect {
            margin-left: -24rem;
            margin-right: -24rem;
          }
        }
      }

      @include it("-my-96	") {
        @include assert {
          @include output {
            @include -my-96;
            @include reset;
          }

          @include expect {
            margin-top: -24rem;
            margin-bottom: -24rem;
          }
        }
      }

      @include it("-ms-96	") {
        @include assert {
          @include output {
            @include -ms-96;
            @include reset;
          }

          @include expect {
            margin-inline-start: -24rem;
          }
        }
      }

      @include it("-me-96	") {
        @include assert {
          @include output {
            @include -me-96;
            @include reset;
          }

          @include expect {
            margin-inline-end: -24rem;
          }
        }
      }

      @include it("-mt-96	") {
        @include assert {
          @include output {
            @include -mt-96;
            @include reset;
          }

          @include expect {
            margin-top: -24rem;
          }
        }
      }

      @include it("-mr-96	") {
        @include assert {
          @include output {
            @include -mr-96;
            @include reset;
          }

          @include expect {
            margin-right: -24rem;
          }
        }
      }

      @include it("-mb-96	") {
        @include assert {
          @include output {
            @include -mb-96;
            @include reset;
          }

          @include expect {
            margin-bottom: -24rem;
          }
        }
      }

      @include it("-ml-96	") {
        @include assert {
          @include output {
            @include -ml-96;
            @include reset;
          }

          @include expect {
            margin-left: -24rem;
          }
        }
      }
    }

    @include describe("Rwd") {
      @include it("sm\:m-0") {
        @include assert {
          @include output {
            @include sm\:m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0px;
            }
          }
        }
      }

      @include it("sm\:mx-0") {
        @include assert {
          @include output {
            @include sm\:mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("sm\:my-0") {
        @include assert {
          @include output {
            @include sm\:my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:ms-0") {
        @include assert {
          @include output {
            @include sm\:ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("sm\:me-0") {
        @include assert {
          @include output {
            @include sm\:me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("sm\:mt-0") {
        @include assert {
          @include output {
            @include sm\:mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("sm\:mr-0") {
        @include assert {
          @include output {
            @include sm\:mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("sm\:mb-0") {
        @include assert {
          @include output {
            @include sm\:mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:ml-0") {
        @include assert {
          @include output {
            @include sm\:ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("sm\:m-px") {
        @include assert {
          @include output {
            @include sm\:m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 1px;
            }
          }
        }
      }

      @include it("sm\:mx-px") {
        @include assert {
          @include output {
            @include sm\:mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1px;
              margin-right: 1px;
            }
          }
        }
      }

      @include it("sm\:my-px") {
        @include assert {
          @include output {
            @include sm\:my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1px;
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("sm\:ms-px") {
        @include assert {
          @include output {
            @include sm\:ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 1px;
            }
          }
        }
      }

      @include it("sm\:me-px") {
        @include assert {
          @include output {
            @include sm\:me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 1px;
            }
          }
        }
      }

      @include it("sm\:mt-px") {
        @include assert {
          @include output {
            @include sm\:mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1px;
            }
          }
        }
      }

      @include it("sm\:mr-px") {
        @include assert {
          @include output {
            @include sm\:mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 1px;
            }
          }
        }
      }

      @include it("sm\:mb-px") {
        @include assert {
          @include output {
            @include sm\:mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("sm\:ml-px") {
        @include assert {
          @include output {
            @include sm\:ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1px;
            }
          }
        }
      }

      @include it("sm\:m-0\.5") {
        @include assert {
          @include output {
            @include sm\:m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:mx-0\.5") {
        @include assert {
          @include output {
            @include sm\:mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.125rem;
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:my-0\.5") {
        @include assert {
          @include output {
            @include sm\:my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.125rem;
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:ms-0\.5") {
        @include assert {
          @include output {
            @include sm\:ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:me-0\.5") {
        @include assert {
          @include output {
            @include sm\:me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:mt-0\.5") {
        @include assert {
          @include output {
            @include sm\:mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:mr-0\.5") {
        @include assert {
          @include output {
            @include sm\:mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:mb-0\.5") {
        @include assert {
          @include output {
            @include sm\:mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:ml-0\.5") {
        @include assert {
          @include output {
            @include sm\:ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:m-1") {
        @include assert {
          @include output {
            @include sm\:m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:mx-1") {
        @include assert {
          @include output {
            @include sm\:mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.25rem;
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:my-1") {
        @include assert {
          @include output {
            @include sm\:my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.25rem;
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:ms-1") {
        @include assert {
          @include output {
            @include sm\:ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:me-1") {
        @include assert {
          @include output {
            @include sm\:me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:mt-1") {
        @include assert {
          @include output {
            @include sm\:mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:mr-1") {
        @include assert {
          @include output {
            @include sm\:mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:mb-1") {
        @include assert {
          @include output {
            @include sm\:mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:ml-1") {
        @include assert {
          @include output {
            @include sm\:ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:m-1\.5") {
        @include assert {
          @include output {
            @include sm\:m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:mx-1\.5") {
        @include assert {
          @include output {
            @include sm\:mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.375rem;
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:my-1\.5") {
        @include assert {
          @include output {
            @include sm\:my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.375rem;
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:ms-1\.5") {
        @include assert {
          @include output {
            @include sm\:ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:me-1\.5") {
        @include assert {
          @include output {
            @include sm\:me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:mt-1\.5") {
        @include assert {
          @include output {
            @include sm\:mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:mr-1\.5") {
        @include assert {
          @include output {
            @include sm\:mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:mb-1\.5") {
        @include assert {
          @include output {
            @include sm\:mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:ml-1\.5") {
        @include assert {
          @include output {
            @include sm\:ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:m-2") {
        @include assert {
          @include output {
            @include sm\:m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:mx-2") {
        @include assert {
          @include output {
            @include sm\:mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.5rem;
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:my-2") {
        @include assert {
          @include output {
            @include sm\:my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.5rem;
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:ms-2") {
        @include assert {
          @include output {
            @include sm\:ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:me-2") {
        @include assert {
          @include output {
            @include sm\:me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:mt-2") {
        @include assert {
          @include output {
            @include sm\:mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:mr-2") {
        @include assert {
          @include output {
            @include sm\:mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:mb-2") {
        @include assert {
          @include output {
            @include sm\:mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:ml-2") {
        @include assert {
          @include output {
            @include sm\:ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:m-2\.5") {
        @include assert {
          @include output {
            @include sm\:m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:mx-2\.5") {
        @include assert {
          @include output {
            @include sm\:mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.625rem;
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:my-2\.5") {
        @include assert {
          @include output {
            @include sm\:my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.625rem;
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:ms-2\.5") {
        @include assert {
          @include output {
            @include sm\:ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:me-2\.5") {
        @include assert {
          @include output {
            @include sm\:me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:mt-2\.5") {
        @include assert {
          @include output {
            @include sm\:mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:mr-2\.5") {
        @include assert {
          @include output {
            @include sm\:mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:mb-2\.5") {
        @include assert {
          @include output {
            @include sm\:mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:ml-2\.5") {
        @include assert {
          @include output {
            @include sm\:ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:m-3") {
        @include assert {
          @include output {
            @include sm\:m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:mx-3") {
        @include assert {
          @include output {
            @include sm\:mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.75rem;
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:my-3") {
        @include assert {
          @include output {
            @include sm\:my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.75rem;
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:ms-3") {
        @include assert {
          @include output {
            @include sm\:ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:me-3") {
        @include assert {
          @include output {
            @include sm\:me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:mt-3") {
        @include assert {
          @include output {
            @include sm\:mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:mr-3") {
        @include assert {
          @include output {
            @include sm\:mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:mb-3") {
        @include assert {
          @include output {
            @include sm\:mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:ml-3") {
        @include assert {
          @include output {
            @include sm\:ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:m-3\.5") {
        @include assert {
          @include output {
            @include sm\:m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:mx-3\.5") {
        @include assert {
          @include output {
            @include sm\:mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.875rem;
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:my-3\.5") {
        @include assert {
          @include output {
            @include sm\:my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.875rem;
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:ms-3\.5") {
        @include assert {
          @include output {
            @include sm\:ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:me-3\.5") {
        @include assert {
          @include output {
            @include sm\:me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:mt-3\.5") {
        @include assert {
          @include output {
            @include sm\:mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:mr-3\.5") {
        @include assert {
          @include output {
            @include sm\:mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:mb-3\.5") {
        @include assert {
          @include output {
            @include sm\:mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:ml-3\.5") {
        @include assert {
          @include output {
            @include sm\:ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:m-4") {
        @include assert {
          @include output {
            @include sm\:m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 1rem;
            }
          }
        }
      }

      @include it("sm\:mx-4") {
        @include assert {
          @include output {
            @include sm\:mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("sm\:my-4") {
        @include assert {
          @include output {
            @include sm\:my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("sm\:ms-4") {
        @include assert {
          @include output {
            @include sm\:ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 1rem;
            }
          }
        }
      }

      @include it("sm\:me-4") {
        @include assert {
          @include output {
            @include sm\:me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 1rem;
            }
          }
        }
      }

      @include it("sm\:mt-4") {
        @include assert {
          @include output {
            @include sm\:mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1rem;
            }
          }
        }
      }

      @include it("sm\:mr-4") {
        @include assert {
          @include output {
            @include sm\:mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("sm\:mb-4") {
        @include assert {
          @include output {
            @include sm\:mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("sm\:ml-4") {
        @include assert {
          @include output {
            @include sm\:ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1rem;
            }
          }
        }
      }

      @include it("sm\:m-5") {
        @include assert {
          @include output {
            @include sm\:m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:mx-5") {
        @include assert {
          @include output {
            @include sm\:mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1.25rem;
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:my-5") {
        @include assert {
          @include output {
            @include sm\:my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1.25rem;
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:ms-5") {
        @include assert {
          @include output {
            @include sm\:ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:me-5") {
        @include assert {
          @include output {
            @include sm\:me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:mt-5") {
        @include assert {
          @include output {
            @include sm\:mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:mr-5") {
        @include assert {
          @include output {
            @include sm\:mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:mb-5") {
        @include assert {
          @include output {
            @include sm\:mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:ml-5") {
        @include assert {
          @include output {
            @include sm\:ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:m-6") {
        @include assert {
          @include output {
            @include sm\:m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:mx-6") {
        @include assert {
          @include output {
            @include sm\:mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1.5rem;
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:my-6") {
        @include assert {
          @include output {
            @include sm\:my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1.5rem;
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:ms-6") {
        @include assert {
          @include output {
            @include sm\:ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:me-6") {
        @include assert {
          @include output {
            @include sm\:me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:mt-6") {
        @include assert {
          @include output {
            @include sm\:mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:mr-6") {
        @include assert {
          @include output {
            @include sm\:mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:mb-6") {
        @include assert {
          @include output {
            @include sm\:mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:ml-6") {
        @include assert {
          @include output {
            @include sm\:ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:m-7") {
        @include assert {
          @include output {
            @include sm\:m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:mx-7") {
        @include assert {
          @include output {
            @include sm\:mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1.75rem;
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:my-7") {
        @include assert {
          @include output {
            @include sm\:my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1.75rem;
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:ms-7") {
        @include assert {
          @include output {
            @include sm\:ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:me-7") {
        @include assert {
          @include output {
            @include sm\:me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:mt-7") {
        @include assert {
          @include output {
            @include sm\:mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:mr-7") {
        @include assert {
          @include output {
            @include sm\:mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:mb-7") {
        @include assert {
          @include output {
            @include sm\:mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:ml-7") {
        @include assert {
          @include output {
            @include sm\:ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:m-8") {
        @include assert {
          @include output {
            @include sm\:m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 2rem;
            }
          }
        }
      }

      @include it("sm\:mx-8") {
        @include assert {
          @include output {
            @include sm\:mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2rem;
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("sm\:my-8") {
        @include assert {
          @include output {
            @include sm\:my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2rem;
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("sm\:ms-8") {
        @include assert {
          @include output {
            @include sm\:ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 2rem;
            }
          }
        }
      }

      @include it("sm\:me-8") {
        @include assert {
          @include output {
            @include sm\:me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 2rem;
            }
          }
        }
      }

      @include it("sm\:mt-8") {
        @include assert {
          @include output {
            @include sm\:mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2rem;
            }
          }
        }
      }

      @include it("sm\:mr-8") {
        @include assert {
          @include output {
            @include sm\:mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("sm\:mb-8") {
        @include assert {
          @include output {
            @include sm\:mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("sm\:ml-8") {
        @include assert {
          @include output {
            @include sm\:ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2rem;
            }
          }
        }
      }

      @include it("sm\:m-9") {
        @include assert {
          @include output {
            @include sm\:m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:mx-9") {
        @include assert {
          @include output {
            @include sm\:mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2.25rem;
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:my-9") {
        @include assert {
          @include output {
            @include sm\:my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2.25rem;
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:ms-9") {
        @include assert {
          @include output {
            @include sm\:ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:me-9") {
        @include assert {
          @include output {
            @include sm\:me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:mt-9") {
        @include assert {
          @include output {
            @include sm\:mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:mr-9") {
        @include assert {
          @include output {
            @include sm\:mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:mb-9") {
        @include assert {
          @include output {
            @include sm\:mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:ml-9") {
        @include assert {
          @include output {
            @include sm\:ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:m-10") {
        @include assert {
          @include output {
            @include sm\:m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:mx-10") {
        @include assert {
          @include output {
            @include sm\:mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2.5rem;
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:my-10") {
        @include assert {
          @include output {
            @include sm\:my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2.5rem;
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:ms-10") {
        @include assert {
          @include output {
            @include sm\:ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:me-10") {
        @include assert {
          @include output {
            @include sm\:me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:mt-10") {
        @include assert {
          @include output {
            @include sm\:mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:mr-10") {
        @include assert {
          @include output {
            @include sm\:mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:mb-10") {
        @include assert {
          @include output {
            @include sm\:mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:ml-10") {
        @include assert {
          @include output {
            @include sm\:ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:m-11") {
        @include assert {
          @include output {
            @include sm\:m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:mx-11") {
        @include assert {
          @include output {
            @include sm\:mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2.75rem;
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:my-11") {
        @include assert {
          @include output {
            @include sm\:my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2.75rem;
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:ms-11") {
        @include assert {
          @include output {
            @include sm\:ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:me-11") {
        @include assert {
          @include output {
            @include sm\:me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:mt-11") {
        @include assert {
          @include output {
            @include sm\:mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:mr-11") {
        @include assert {
          @include output {
            @include sm\:mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:mb-11") {
        @include assert {
          @include output {
            @include sm\:mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:ml-11") {
        @include assert {
          @include output {
            @include sm\:ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:m-12") {
        @include assert {
          @include output {
            @include sm\:m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 3rem;
            }
          }
        }
      }

      @include it("sm\:mx-12") {
        @include assert {
          @include output {
            @include sm\:mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 3rem;
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("sm\:my-12") {
        @include assert {
          @include output {
            @include sm\:my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 3rem;
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("sm\:ms-12") {
        @include assert {
          @include output {
            @include sm\:ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 3rem;
            }
          }
        }
      }

      @include it("sm\:me-12") {
        @include assert {
          @include output {
            @include sm\:me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 3rem;
            }
          }
        }
      }

      @include it("sm\:mt-12") {
        @include assert {
          @include output {
            @include sm\:mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 3rem;
            }
          }
        }
      }

      @include it("sm\:mr-12") {
        @include assert {
          @include output {
            @include sm\:mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("sm\:mb-12") {
        @include assert {
          @include output {
            @include sm\:mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("sm\:ml-12") {
        @include assert {
          @include output {
            @include sm\:ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 3rem;
            }
          }
        }
      }

      @include it("sm\:m-14") {
        @include assert {
          @include output {
            @include sm\:m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:mx-14") {
        @include assert {
          @include output {
            @include sm\:mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 3.5rem;
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:my-14") {
        @include assert {
          @include output {
            @include sm\:my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 3.5rem;
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:ms-14") {
        @include assert {
          @include output {
            @include sm\:ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:me-14") {
        @include assert {
          @include output {
            @include sm\:me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:mt-14") {
        @include assert {
          @include output {
            @include sm\:mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:mr-14") {
        @include assert {
          @include output {
            @include sm\:mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:mb-14") {
        @include assert {
          @include output {
            @include sm\:mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:ml-14") {
        @include assert {
          @include output {
            @include sm\:ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:m-16") {
        @include assert {
          @include output {
            @include sm\:m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 4rem;
            }
          }
        }
      }

      @include it("sm\:mx-16") {
        @include assert {
          @include output {
            @include sm\:mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 4rem;
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("sm\:my-16") {
        @include assert {
          @include output {
            @include sm\:my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 4rem;
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("sm\:ms-16") {
        @include assert {
          @include output {
            @include sm\:ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 4rem;
            }
          }
        }
      }

      @include it("sm\:me-16") {
        @include assert {
          @include output {
            @include sm\:me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 4rem;
            }
          }
        }
      }

      @include it("sm\:mt-16") {
        @include assert {
          @include output {
            @include sm\:mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 4rem;
            }
          }
        }
      }

      @include it("sm\:mr-16") {
        @include assert {
          @include output {
            @include sm\:mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("sm\:mb-16") {
        @include assert {
          @include output {
            @include sm\:mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("sm\:ml-16") {
        @include assert {
          @include output {
            @include sm\:ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 4rem;
            }
          }
        }
      }

      @include it("sm\:m-20") {
        @include assert {
          @include output {
            @include sm\:m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 5rem;
            }
          }
        }
      }

      @include it("sm\:mx-20") {
        @include assert {
          @include output {
            @include sm\:mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 5rem;
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("sm\:my-20") {
        @include assert {
          @include output {
            @include sm\:my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 5rem;
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("sm\:ms-20") {
        @include assert {
          @include output {
            @include sm\:ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 5rem;
            }
          }
        }
      }

      @include it("sm\:me-20") {
        @include assert {
          @include output {
            @include sm\:me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 5rem;
            }
          }
        }
      }

      @include it("sm\:mt-20") {
        @include assert {
          @include output {
            @include sm\:mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 5rem;
            }
          }
        }
      }

      @include it("sm\:mr-20") {
        @include assert {
          @include output {
            @include sm\:mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("sm\:mb-20") {
        @include assert {
          @include output {
            @include sm\:mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("sm\:ml-20") {
        @include assert {
          @include output {
            @include sm\:ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 5rem;
            }
          }
        }
      }

      @include it("sm\:m-24") {
        @include assert {
          @include output {
            @include sm\:m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 6rem;
            }
          }
        }
      }

      @include it("sm\:mx-24") {
        @include assert {
          @include output {
            @include sm\:mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 6rem;
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("sm\:my-24") {
        @include assert {
          @include output {
            @include sm\:my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 6rem;
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("sm\:ms-24") {
        @include assert {
          @include output {
            @include sm\:ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 6rem;
            }
          }
        }
      }

      @include it("sm\:me-24") {
        @include assert {
          @include output {
            @include sm\:me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 6rem;
            }
          }
        }
      }

      @include it("sm\:mt-24") {
        @include assert {
          @include output {
            @include sm\:mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 6rem;
            }
          }
        }
      }

      @include it("sm\:mr-24") {
        @include assert {
          @include output {
            @include sm\:mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("sm\:mb-24") {
        @include assert {
          @include output {
            @include sm\:mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("sm\:ml-24") {
        @include assert {
          @include output {
            @include sm\:ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 6rem;
            }
          }
        }
      }

      @include it("sm\:m-28") {
        @include assert {
          @include output {
            @include sm\:m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 7rem;
            }
          }
        }
      }

      @include it("sm\:mx-28") {
        @include assert {
          @include output {
            @include sm\:mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 7rem;
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("sm\:my-28") {
        @include assert {
          @include output {
            @include sm\:my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 7rem;
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("sm\:ms-28") {
        @include assert {
          @include output {
            @include sm\:ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 7rem;
            }
          }
        }
      }

      @include it("sm\:me-28") {
        @include assert {
          @include output {
            @include sm\:me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 7rem;
            }
          }
        }
      }

      @include it("sm\:mt-28") {
        @include assert {
          @include output {
            @include sm\:mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 7rem;
            }
          }
        }
      }

      @include it("sm\:mr-28") {
        @include assert {
          @include output {
            @include sm\:mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("sm\:mb-28") {
        @include assert {
          @include output {
            @include sm\:mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("sm\:ml-28") {
        @include assert {
          @include output {
            @include sm\:ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 7rem;
            }
          }
        }
      }

      @include it("sm\:m-32") {
        @include assert {
          @include output {
            @include sm\:m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 8rem;
            }
          }
        }
      }

      @include it("sm\:mx-32") {
        @include assert {
          @include output {
            @include sm\:mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 8rem;
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("sm\:my-32") {
        @include assert {
          @include output {
            @include sm\:my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 8rem;
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("sm\:ms-32") {
        @include assert {
          @include output {
            @include sm\:ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 8rem;
            }
          }
        }
      }

      @include it("sm\:me-32") {
        @include assert {
          @include output {
            @include sm\:me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 8rem;
            }
          }
        }
      }

      @include it("sm\:mt-32") {
        @include assert {
          @include output {
            @include sm\:mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 8rem;
            }
          }
        }
      }

      @include it("sm\:mr-32") {
        @include assert {
          @include output {
            @include sm\:mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("sm\:mb-32") {
        @include assert {
          @include output {
            @include sm\:mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("sm\:ml-32") {
        @include assert {
          @include output {
            @include sm\:ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 8rem;
            }
          }
        }
      }

      @include it("sm\:m-36") {
        @include assert {
          @include output {
            @include sm\:m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 9rem;
            }
          }
        }
      }

      @include it("sm\:mx-36") {
        @include assert {
          @include output {
            @include sm\:mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 9rem;
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("sm\:my-36") {
        @include assert {
          @include output {
            @include sm\:my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 9rem;
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("sm\:ms-36") {
        @include assert {
          @include output {
            @include sm\:ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 9rem;
            }
          }
        }
      }

      @include it("sm\:me-36") {
        @include assert {
          @include output {
            @include sm\:me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 9rem;
            }
          }
        }
      }

      @include it("sm\:mt-36") {
        @include assert {
          @include output {
            @include sm\:mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 9rem;
            }
          }
        }
      }

      @include it("sm\:mr-36") {
        @include assert {
          @include output {
            @include sm\:mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("sm\:mb-36") {
        @include assert {
          @include output {
            @include sm\:mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("sm\:ml-36") {
        @include assert {
          @include output {
            @include sm\:ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 9rem;
            }
          }
        }
      }

      @include it("sm\:m-40") {
        @include assert {
          @include output {
            @include sm\:m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 10rem;
            }
          }
        }
      }

      @include it("sm\:mx-40") {
        @include assert {
          @include output {
            @include sm\:mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 10rem;
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("sm\:my-40") {
        @include assert {
          @include output {
            @include sm\:my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 10rem;
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("sm\:ms-40") {
        @include assert {
          @include output {
            @include sm\:ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 10rem;
            }
          }
        }
      }

      @include it("sm\:me-40") {
        @include assert {
          @include output {
            @include sm\:me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 10rem;
            }
          }
        }
      }

      @include it("sm\:mt-40") {
        @include assert {
          @include output {
            @include sm\:mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 10rem;
            }
          }
        }
      }

      @include it("sm\:mr-40") {
        @include assert {
          @include output {
            @include sm\:mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("sm\:mb-40") {
        @include assert {
          @include output {
            @include sm\:mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("sm\:ml-40") {
        @include assert {
          @include output {
            @include sm\:ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 10rem;
            }
          }
        }
      }

      @include it("sm\:m-44") {
        @include assert {
          @include output {
            @include sm\:m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 11rem;
            }
          }
        }
      }

      @include it("sm\:mx-44") {
        @include assert {
          @include output {
            @include sm\:mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 11rem;
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("sm\:my-44") {
        @include assert {
          @include output {
            @include sm\:my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 11rem;
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("sm\:ms-44") {
        @include assert {
          @include output {
            @include sm\:ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 11rem;
            }
          }
        }
      }

      @include it("sm\:me-44") {
        @include assert {
          @include output {
            @include sm\:me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 11rem;
            }
          }
        }
      }

      @include it("sm\:mt-44") {
        @include assert {
          @include output {
            @include sm\:mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 11rem;
            }
          }
        }
      }

      @include it("sm\:mr-44") {
        @include assert {
          @include output {
            @include sm\:mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("sm\:mb-44") {
        @include assert {
          @include output {
            @include sm\:mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("sm\:ml-44") {
        @include assert {
          @include output {
            @include sm\:ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 11rem;
            }
          }
        }
      }

      @include it("sm\:m-48") {
        @include assert {
          @include output {
            @include sm\:m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 12rem;
            }
          }
        }
      }

      @include it("sm\:mx-48") {
        @include assert {
          @include output {
            @include sm\:mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 12rem;
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("sm\:my-48") {
        @include assert {
          @include output {
            @include sm\:my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 12rem;
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("sm\:ms-48") {
        @include assert {
          @include output {
            @include sm\:ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 12rem;
            }
          }
        }
      }

      @include it("sm\:me-48") {
        @include assert {
          @include output {
            @include sm\:me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 12rem;
            }
          }
        }
      }

      @include it("sm\:mt-48") {
        @include assert {
          @include output {
            @include sm\:mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 12rem;
            }
          }
        }
      }

      @include it("sm\:mr-48") {
        @include assert {
          @include output {
            @include sm\:mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("sm\:mb-48") {
        @include assert {
          @include output {
            @include sm\:mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("sm\:ml-48") {
        @include assert {
          @include output {
            @include sm\:ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 12rem;
            }
          }
        }
      }

      @include it("sm\:m-52") {
        @include assert {
          @include output {
            @include sm\:m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 13rem;
            }
          }
        }
      }

      @include it("sm\:mx-52") {
        @include assert {
          @include output {
            @include sm\:mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 13rem;
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("sm\:my-52") {
        @include assert {
          @include output {
            @include sm\:my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 13rem;
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("sm\:ms-52") {
        @include assert {
          @include output {
            @include sm\:ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 13rem;
            }
          }
        }
      }

      @include it("sm\:me-52") {
        @include assert {
          @include output {
            @include sm\:me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 13rem;
            }
          }
        }
      }

      @include it("sm\:mt-52") {
        @include assert {
          @include output {
            @include sm\:mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 13rem;
            }
          }
        }
      }

      @include it("sm\:mr-52") {
        @include assert {
          @include output {
            @include sm\:mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("sm\:mb-52") {
        @include assert {
          @include output {
            @include sm\:mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("sm\:ml-52") {
        @include assert {
          @include output {
            @include sm\:ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 13rem;
            }
          }
        }
      }

      @include it("sm\:m-56") {
        @include assert {
          @include output {
            @include sm\:m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 14rem;
            }
          }
        }
      }

      @include it("sm\:mx-56") {
        @include assert {
          @include output {
            @include sm\:mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 14rem;
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("sm\:my-56") {
        @include assert {
          @include output {
            @include sm\:my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 14rem;
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("sm\:ms-56") {
        @include assert {
          @include output {
            @include sm\:ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 14rem;
            }
          }
        }
      }

      @include it("sm\:me-56") {
        @include assert {
          @include output {
            @include sm\:me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 14rem;
            }
          }
        }
      }

      @include it("sm\:mt-56") {
        @include assert {
          @include output {
            @include sm\:mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 14rem;
            }
          }
        }
      }

      @include it("sm\:mr-56") {
        @include assert {
          @include output {
            @include sm\:mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("sm\:mb-56") {
        @include assert {
          @include output {
            @include sm\:mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("sm\:ml-56") {
        @include assert {
          @include output {
            @include sm\:ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 14rem;
            }
          }
        }
      }

      @include it("sm\:m-60") {
        @include assert {
          @include output {
            @include sm\:m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 15rem;
            }
          }
        }
      }

      @include it("sm\:mx-60") {
        @include assert {
          @include output {
            @include sm\:mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 15rem;
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("sm\:my-60") {
        @include assert {
          @include output {
            @include sm\:my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 15rem;
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("sm\:ms-60") {
        @include assert {
          @include output {
            @include sm\:ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 15rem;
            }
          }
        }
      }

      @include it("sm\:me-60") {
        @include assert {
          @include output {
            @include sm\:me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 15rem;
            }
          }
        }
      }

      @include it("sm\:mt-60") {
        @include assert {
          @include output {
            @include sm\:mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 15rem;
            }
          }
        }
      }

      @include it("sm\:mr-60") {
        @include assert {
          @include output {
            @include sm\:mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("sm\:mb-60") {
        @include assert {
          @include output {
            @include sm\:mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("sm\:ml-60") {
        @include assert {
          @include output {
            @include sm\:ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 15rem;
            }
          }
        }
      }

      @include it("sm\:m-64") {
        @include assert {
          @include output {
            @include sm\:m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 16rem;
            }
          }
        }
      }

      @include it("sm\:mx-64") {
        @include assert {
          @include output {
            @include sm\:mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 16rem;
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("sm\:my-64") {
        @include assert {
          @include output {
            @include sm\:my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 16rem;
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("sm\:ms-64") {
        @include assert {
          @include output {
            @include sm\:ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 16rem;
            }
          }
        }
      }

      @include it("sm\:me-64") {
        @include assert {
          @include output {
            @include sm\:me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 16rem;
            }
          }
        }
      }

      @include it("sm\:mt-64") {
        @include assert {
          @include output {
            @include sm\:mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 16rem;
            }
          }
        }
      }

      @include it("sm\:mr-64") {
        @include assert {
          @include output {
            @include sm\:mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("sm\:mb-64") {
        @include assert {
          @include output {
            @include sm\:mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("sm\:ml-64") {
        @include assert {
          @include output {
            @include sm\:ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 16rem;
            }
          }
        }
      }

      @include it("sm\:m-72") {
        @include assert {
          @include output {
            @include sm\:m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 18rem;
            }
          }
        }
      }

      @include it("sm\:mx-72") {
        @include assert {
          @include output {
            @include sm\:mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 18rem;
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("sm\:my-72") {
        @include assert {
          @include output {
            @include sm\:my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 18rem;
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("sm\:ms-72") {
        @include assert {
          @include output {
            @include sm\:ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 18rem;
            }
          }
        }
      }

      @include it("sm\:me-72") {
        @include assert {
          @include output {
            @include sm\:me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 18rem;
            }
          }
        }
      }

      @include it("sm\:mt-72") {
        @include assert {
          @include output {
            @include sm\:mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 18rem;
            }
          }
        }
      }

      @include it("sm\:mr-72") {
        @include assert {
          @include output {
            @include sm\:mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("sm\:mb-72") {
        @include assert {
          @include output {
            @include sm\:mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("sm\:ml-72") {
        @include assert {
          @include output {
            @include sm\:ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 18rem;
            }
          }
        }
      }

      @include it("sm\:m-80") {
        @include assert {
          @include output {
            @include sm\:m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 20rem;
            }
          }
        }
      }

      @include it("sm\:mx-80") {
        @include assert {
          @include output {
            @include sm\:mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 20rem;
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("sm\:my-80") {
        @include assert {
          @include output {
            @include sm\:my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 20rem;
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("sm\:ms-80") {
        @include assert {
          @include output {
            @include sm\:ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 20rem;
            }
          }
        }
      }

      @include it("sm\:me-80") {
        @include assert {
          @include output {
            @include sm\:me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 20rem;
            }
          }
        }
      }

      @include it("sm\:mt-80") {
        @include assert {
          @include output {
            @include sm\:mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 20rem;
            }
          }
        }
      }

      @include it("sm\:mr-80") {
        @include assert {
          @include output {
            @include sm\:mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("sm\:mb-80") {
        @include assert {
          @include output {
            @include sm\:mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("sm\:ml-80") {
        @include assert {
          @include output {
            @include sm\:ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 20rem;
            }
          }
        }
      }

      @include it("sm\:m-96") {
        @include assert {
          @include output {
            @include sm\:m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 24rem;
            }
          }
        }
      }

      @include it("sm\:mx-96") {
        @include assert {
          @include output {
            @include sm\:mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 24rem;
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("sm\:my-96") {
        @include assert {
          @include output {
            @include sm\:my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 24rem;
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("sm\:ms-96") {
        @include assert {
          @include output {
            @include sm\:ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 24rem;
            }
          }
        }
      }

      @include it("sm\:me-96") {
        @include assert {
          @include output {
            @include sm\:me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 24rem;
            }
          }
        }
      }

      @include it("sm\:mt-96") {
        @include assert {
          @include output {
            @include sm\:mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 24rem;
            }
          }
        }
      }

      @include it("sm\:mr-96") {
        @include assert {
          @include output {
            @include sm\:mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("sm\:mb-96") {
        @include assert {
          @include output {
            @include sm\:mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("sm\:ml-96") {
        @include assert {
          @include output {
            @include sm\:ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 24rem;
            }
          }
        }
      }

      @include it("sm\:m-auto") {
        @include assert {
          @include output {
            @include sm\:m-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: auto;
            }
          }
        }
      }

      @include it("sm\:mx-auto") {
        @include assert {
          @include output {
            @include sm\:mx-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: auto;
              margin-right: auto;
            }
          }
        }
      }

      @include it("sm\:my-auto") {
        @include assert {
          @include output {
            @include sm\:my-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: auto;
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("sm\:ms-auto") {
        @include assert {
          @include output {
            @include sm\:ms-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: auto;
            }
          }
        }
      }

      @include it("sm\:me-auto") {
        @include assert {
          @include output {
            @include sm\:me-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: auto;
            }
          }
        }
      }

      @include it("sm\:mt-auto") {
        @include assert {
          @include output {
            @include sm\:mt-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: auto;
            }
          }
        }
      }

      @include it("sm\:mr-auto") {
        @include assert {
          @include output {
            @include sm\:mr-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: auto;
            }
          }
        }
      }

      @include it("sm\:mb-auto") {
        @include assert {
          @include output {
            @include sm\:mb-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("sm\:ml-auto") {
        @include assert {
          @include output {
            @include sm\:ml-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: auto;
            }
          }
        }
      }

      @include it("sm\:-m-0	") {
        @include assert {
          @include output {
            @include sm\:-m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 0px;
            }
          }
        }
      }

      @include it("sm\:-mx-0	") {
        @include assert {
          @include output {
            @include sm\:-mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("sm\:-my-0	") {
        @include assert {
          @include output {
            @include sm\:-my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:-ms-0	") {
        @include assert {
          @include output {
            @include sm\:-ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("sm\:-me-0	") {
        @include assert {
          @include output {
            @include sm\:-me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("sm\:-mt-0	") {
        @include assert {
          @include output {
            @include sm\:-mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("sm\:-mr-0	") {
        @include assert {
          @include output {
            @include sm\:-mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("sm\:-mb-0	") {
        @include assert {
          @include output {
            @include sm\:-mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:-ml-0	") {
        @include assert {
          @include output {
            @include sm\:-ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("sm\:-m-px	") {
        @include assert {
          @include output {
            @include sm\:-m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -1px;
            }
          }
        }
      }

      @include it("sm\:-mx-px	") {
        @include assert {
          @include output {
            @include sm\:-mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1px;
              margin-right: -1px;
            }
          }
        }
      }

      @include it("sm\:-my-px	") {
        @include assert {
          @include output {
            @include sm\:-my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1px;
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("sm\:-ms-px	") {
        @include assert {
          @include output {
            @include sm\:-ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -1px;
            }
          }
        }
      }

      @include it("sm\:-me-px	") {
        @include assert {
          @include output {
            @include sm\:-me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -1px;
            }
          }
        }
      }

      @include it("sm\:-mt-px	") {
        @include assert {
          @include output {
            @include sm\:-mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1px;
            }
          }
        }
      }

      @include it("sm\:-mr-px	") {
        @include assert {
          @include output {
            @include sm\:-mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -1px;
            }
          }
        }
      }

      @include it("sm\:-mb-px	") {
        @include assert {
          @include output {
            @include sm\:-mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("sm\:-ml-px	") {
        @include assert {
          @include output {
            @include sm\:-ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1px;
            }
          }
        }
      }

      @include it("sm\:-m-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-mx-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.125rem;
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-my-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.125rem;
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-ms-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-me-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-mt-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-mr-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-mb-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-ml-0\.5	") {
        @include assert {
          @include output {
            @include sm\:-ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-m-1	") {
        @include assert {
          @include output {
            @include sm\:-m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-mx-1	") {
        @include assert {
          @include output {
            @include sm\:-mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.25rem;
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-my-1	") {
        @include assert {
          @include output {
            @include sm\:-my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.25rem;
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-ms-1	") {
        @include assert {
          @include output {
            @include sm\:-ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-me-1	") {
        @include assert {
          @include output {
            @include sm\:-me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-mt-1	") {
        @include assert {
          @include output {
            @include sm\:-mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-mr-1	") {
        @include assert {
          @include output {
            @include sm\:-mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-mb-1	") {
        @include assert {
          @include output {
            @include sm\:-mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-ml-1	") {
        @include assert {
          @include output {
            @include sm\:-ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-m-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-mx-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.375rem;
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-my-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.375rem;
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-ms-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-me-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-mt-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-mr-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-mb-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-ml-1\.5	") {
        @include assert {
          @include output {
            @include sm\:-ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-m-2	") {
        @include assert {
          @include output {
            @include sm\:-m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-mx-2	") {
        @include assert {
          @include output {
            @include sm\:-mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.5rem;
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-my-2	") {
        @include assert {
          @include output {
            @include sm\:-my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.5rem;
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-ms-2	") {
        @include assert {
          @include output {
            @include sm\:-ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-me-2	") {
        @include assert {
          @include output {
            @include sm\:-me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-mt-2	") {
        @include assert {
          @include output {
            @include sm\:-mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-mr-2	") {
        @include assert {
          @include output {
            @include sm\:-mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-mb-2	") {
        @include assert {
          @include output {
            @include sm\:-mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-ml-2	") {
        @include assert {
          @include output {
            @include sm\:-ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-m-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-mx-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.625rem;
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-my-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.625rem;
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-ms-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-me-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-mt-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-mr-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-mb-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-ml-2\.5	") {
        @include assert {
          @include output {
            @include sm\:-ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-m-3	") {
        @include assert {
          @include output {
            @include sm\:-m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-mx-3	") {
        @include assert {
          @include output {
            @include sm\:-mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.75rem;
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-my-3	") {
        @include assert {
          @include output {
            @include sm\:-my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.75rem;
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-ms-3	") {
        @include assert {
          @include output {
            @include sm\:-ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-me-3	") {
        @include assert {
          @include output {
            @include sm\:-me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-mt-3	") {
        @include assert {
          @include output {
            @include sm\:-mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-mr-3	") {
        @include assert {
          @include output {
            @include sm\:-mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-mb-3	") {
        @include assert {
          @include output {
            @include sm\:-mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-ml-3	") {
        @include assert {
          @include output {
            @include sm\:-ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-m-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-mx-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.875rem;
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-my-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.875rem;
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-ms-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-me-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-mt-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-mr-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-mb-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-ml-3\.5	") {
        @include assert {
          @include output {
            @include sm\:-ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-m-4	") {
        @include assert {
          @include output {
            @include sm\:-m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -1rem;
            }
          }
        }
      }

      @include it("sm\:-mx-4	") {
        @include assert {
          @include output {
            @include sm\:-mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1rem;
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("sm\:-my-4	") {
        @include assert {
          @include output {
            @include sm\:-my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("sm\:-ms-4	") {
        @include assert {
          @include output {
            @include sm\:-ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -1rem;
            }
          }
        }
      }

      @include it("sm\:-me-4	") {
        @include assert {
          @include output {
            @include sm\:-me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -1rem;
            }
          }
        }
      }

      @include it("sm\:-mt-4	") {
        @include assert {
          @include output {
            @include sm\:-mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1rem;
            }
          }
        }
      }

      @include it("sm\:-mr-4	") {
        @include assert {
          @include output {
            @include sm\:-mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("sm\:-mb-4	") {
        @include assert {
          @include output {
            @include sm\:-mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("sm\:-ml-4	") {
        @include assert {
          @include output {
            @include sm\:-ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1rem;
            }
          }
        }
      }

      @include it("sm\:-m-5	") {
        @include assert {
          @include output {
            @include sm\:-m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-mx-5	") {
        @include assert {
          @include output {
            @include sm\:-mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1.25rem;
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-my-5	") {
        @include assert {
          @include output {
            @include sm\:-my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1.25rem;
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-ms-5	") {
        @include assert {
          @include output {
            @include sm\:-ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-me-5	") {
        @include assert {
          @include output {
            @include sm\:-me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-mt-5	") {
        @include assert {
          @include output {
            @include sm\:-mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-mr-5	") {
        @include assert {
          @include output {
            @include sm\:-mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-mb-5	") {
        @include assert {
          @include output {
            @include sm\:-mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-ml-5	") {
        @include assert {
          @include output {
            @include sm\:-ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-m-6	") {
        @include assert {
          @include output {
            @include sm\:-m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-mx-6	") {
        @include assert {
          @include output {
            @include sm\:-mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1.5rem;
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-my-6	") {
        @include assert {
          @include output {
            @include sm\:-my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1.5rem;
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-ms-6	") {
        @include assert {
          @include output {
            @include sm\:-ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-me-6	") {
        @include assert {
          @include output {
            @include sm\:-me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-mt-6	") {
        @include assert {
          @include output {
            @include sm\:-mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-mr-6	") {
        @include assert {
          @include output {
            @include sm\:-mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-mb-6	") {
        @include assert {
          @include output {
            @include sm\:-mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-ml-6	") {
        @include assert {
          @include output {
            @include sm\:-ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-m-7	") {
        @include assert {
          @include output {
            @include sm\:-m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-mx-7	") {
        @include assert {
          @include output {
            @include sm\:-mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1.75rem;
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-my-7	") {
        @include assert {
          @include output {
            @include sm\:-my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1.75rem;
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-ms-7	") {
        @include assert {
          @include output {
            @include sm\:-ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-me-7	") {
        @include assert {
          @include output {
            @include sm\:-me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-mt-7	") {
        @include assert {
          @include output {
            @include sm\:-mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-mr-7	") {
        @include assert {
          @include output {
            @include sm\:-mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-mb-7	") {
        @include assert {
          @include output {
            @include sm\:-mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-ml-7	") {
        @include assert {
          @include output {
            @include sm\:-ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-m-8	") {
        @include assert {
          @include output {
            @include sm\:-m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -2rem;
            }
          }
        }
      }

      @include it("sm\:-mx-8	") {
        @include assert {
          @include output {
            @include sm\:-mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2rem;
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("sm\:-my-8	") {
        @include assert {
          @include output {
            @include sm\:-my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2rem;
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("sm\:-ms-8	") {
        @include assert {
          @include output {
            @include sm\:-ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -2rem;
            }
          }
        }
      }

      @include it("sm\:-me-8	") {
        @include assert {
          @include output {
            @include sm\:-me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -2rem;
            }
          }
        }
      }

      @include it("sm\:-mt-8	") {
        @include assert {
          @include output {
            @include sm\:-mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2rem;
            }
          }
        }
      }

      @include it("sm\:-mr-8	") {
        @include assert {
          @include output {
            @include sm\:-mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("sm\:-mb-8	") {
        @include assert {
          @include output {
            @include sm\:-mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("sm\:-ml-8	") {
        @include assert {
          @include output {
            @include sm\:-ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2rem;
            }
          }
        }
      }

      @include it("sm\:-m-9	") {
        @include assert {
          @include output {
            @include sm\:-m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-mx-9	") {
        @include assert {
          @include output {
            @include sm\:-mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2.25rem;
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-my-9	") {
        @include assert {
          @include output {
            @include sm\:-my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2.25rem;
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-ms-9	") {
        @include assert {
          @include output {
            @include sm\:-ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-me-9	") {
        @include assert {
          @include output {
            @include sm\:-me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-mt-9	") {
        @include assert {
          @include output {
            @include sm\:-mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-mr-9	") {
        @include assert {
          @include output {
            @include sm\:-mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-mb-9	") {
        @include assert {
          @include output {
            @include sm\:-mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-ml-9	") {
        @include assert {
          @include output {
            @include sm\:-ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-m-10	") {
        @include assert {
          @include output {
            @include sm\:-m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-mx-10	") {
        @include assert {
          @include output {
            @include sm\:-mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2.5rem;
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-my-10	") {
        @include assert {
          @include output {
            @include sm\:-my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2.5rem;
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-ms-10	") {
        @include assert {
          @include output {
            @include sm\:-ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-me-10	") {
        @include assert {
          @include output {
            @include sm\:-me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-mt-10	") {
        @include assert {
          @include output {
            @include sm\:-mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-mr-10	") {
        @include assert {
          @include output {
            @include sm\:-mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-mb-10	") {
        @include assert {
          @include output {
            @include sm\:-mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-ml-10	") {
        @include assert {
          @include output {
            @include sm\:-ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-m-11	") {
        @include assert {
          @include output {
            @include sm\:-m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-mx-11	") {
        @include assert {
          @include output {
            @include sm\:-mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2.75rem;
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-my-11	") {
        @include assert {
          @include output {
            @include sm\:-my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2.75rem;
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-ms-11	") {
        @include assert {
          @include output {
            @include sm\:-ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-me-11	") {
        @include assert {
          @include output {
            @include sm\:-me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-mt-11	") {
        @include assert {
          @include output {
            @include sm\:-mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-mr-11	") {
        @include assert {
          @include output {
            @include sm\:-mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-mb-11	") {
        @include assert {
          @include output {
            @include sm\:-mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-ml-11	") {
        @include assert {
          @include output {
            @include sm\:-ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-m-12	") {
        @include assert {
          @include output {
            @include sm\:-m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -3rem;
            }
          }
        }
      }

      @include it("sm\:-mx-12	") {
        @include assert {
          @include output {
            @include sm\:-mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -3rem;
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("sm\:-my-12	") {
        @include assert {
          @include output {
            @include sm\:-my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -3rem;
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("sm\:-ms-12	") {
        @include assert {
          @include output {
            @include sm\:-ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -3rem;
            }
          }
        }
      }

      @include it("sm\:-me-12	") {
        @include assert {
          @include output {
            @include sm\:-me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -3rem;
            }
          }
        }
      }

      @include it("sm\:-mt-12	") {
        @include assert {
          @include output {
            @include sm\:-mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -3rem;
            }
          }
        }
      }

      @include it("sm\:-mr-12	") {
        @include assert {
          @include output {
            @include sm\:-mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("sm\:-mb-12	") {
        @include assert {
          @include output {
            @include sm\:-mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("sm\:-ml-12	") {
        @include assert {
          @include output {
            @include sm\:-ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -3rem;
            }
          }
        }
      }

      @include it("sm\:-m-14	") {
        @include assert {
          @include output {
            @include sm\:-m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-mx-14	") {
        @include assert {
          @include output {
            @include sm\:-mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -3.5rem;
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-my-14	") {
        @include assert {
          @include output {
            @include sm\:-my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -3.5rem;
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-ms-14	") {
        @include assert {
          @include output {
            @include sm\:-ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-me-14	") {
        @include assert {
          @include output {
            @include sm\:-me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-mt-14	") {
        @include assert {
          @include output {
            @include sm\:-mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-mr-14	") {
        @include assert {
          @include output {
            @include sm\:-mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-mb-14	") {
        @include assert {
          @include output {
            @include sm\:-mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-ml-14	") {
        @include assert {
          @include output {
            @include sm\:-ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-m-16	") {
        @include assert {
          @include output {
            @include sm\:-m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -4rem;
            }
          }
        }
      }

      @include it("sm\:-mx-16	") {
        @include assert {
          @include output {
            @include sm\:-mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -4rem;
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("sm\:-my-16	") {
        @include assert {
          @include output {
            @include sm\:-my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -4rem;
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("sm\:-ms-16	") {
        @include assert {
          @include output {
            @include sm\:-ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -4rem;
            }
          }
        }
      }

      @include it("sm\:-me-16	") {
        @include assert {
          @include output {
            @include sm\:-me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -4rem;
            }
          }
        }
      }

      @include it("sm\:-mt-16	") {
        @include assert {
          @include output {
            @include sm\:-mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -4rem;
            }
          }
        }
      }

      @include it("sm\:-mr-16	") {
        @include assert {
          @include output {
            @include sm\:-mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("sm\:-mb-16	") {
        @include assert {
          @include output {
            @include sm\:-mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("sm\:-ml-16	") {
        @include assert {
          @include output {
            @include sm\:-ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -4rem;
            }
          }
        }
      }

      @include it("sm\:-m-20	") {
        @include assert {
          @include output {
            @include sm\:-m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -5rem;
            }
          }
        }
      }

      @include it("sm\:-mx-20	") {
        @include assert {
          @include output {
            @include sm\:-mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -5rem;
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("sm\:-my-20	") {
        @include assert {
          @include output {
            @include sm\:-my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -5rem;
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("sm\:-ms-20	") {
        @include assert {
          @include output {
            @include sm\:-ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -5rem;
            }
          }
        }
      }

      @include it("sm\:-me-20	") {
        @include assert {
          @include output {
            @include sm\:-me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -5rem;
            }
          }
        }
      }

      @include it("sm\:-mt-20	") {
        @include assert {
          @include output {
            @include sm\:-mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -5rem;
            }
          }
        }
      }

      @include it("sm\:-mr-20	") {
        @include assert {
          @include output {
            @include sm\:-mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("sm\:-mb-20	") {
        @include assert {
          @include output {
            @include sm\:-mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("sm\:-ml-20	") {
        @include assert {
          @include output {
            @include sm\:-ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -5rem;
            }
          }
        }
      }

      @include it("sm\:-m-24	") {
        @include assert {
          @include output {
            @include sm\:-m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -6rem;
            }
          }
        }
      }

      @include it("sm\:-mx-24	") {
        @include assert {
          @include output {
            @include sm\:-mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -6rem;
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("sm\:-my-24	") {
        @include assert {
          @include output {
            @include sm\:-my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -6rem;
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("sm\:-ms-24	") {
        @include assert {
          @include output {
            @include sm\:-ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -6rem;
            }
          }
        }
      }

      @include it("sm\:-me-24	") {
        @include assert {
          @include output {
            @include sm\:-me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -6rem;
            }
          }
        }
      }

      @include it("sm\:-mt-24	") {
        @include assert {
          @include output {
            @include sm\:-mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -6rem;
            }
          }
        }
      }

      @include it("sm\:-mr-24	") {
        @include assert {
          @include output {
            @include sm\:-mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("sm\:-mb-24	") {
        @include assert {
          @include output {
            @include sm\:-mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("sm\:-ml-24	") {
        @include assert {
          @include output {
            @include sm\:-ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -6rem;
            }
          }
        }
      }

      @include it("sm\:-m-28	") {
        @include assert {
          @include output {
            @include sm\:-m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -7rem;
            }
          }
        }
      }

      @include it("sm\:-mx-28	") {
        @include assert {
          @include output {
            @include sm\:-mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -7rem;
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("sm\:-my-28	") {
        @include assert {
          @include output {
            @include sm\:-my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -7rem;
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("sm\:-ms-28	") {
        @include assert {
          @include output {
            @include sm\:-ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -7rem;
            }
          }
        }
      }

      @include it("sm\:-me-28	") {
        @include assert {
          @include output {
            @include sm\:-me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -7rem;
            }
          }
        }
      }

      @include it("sm\:-mt-28	") {
        @include assert {
          @include output {
            @include sm\:-mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -7rem;
            }
          }
        }
      }

      @include it("sm\:-mr-28	") {
        @include assert {
          @include output {
            @include sm\:-mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("sm\:-mb-28	") {
        @include assert {
          @include output {
            @include sm\:-mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("sm\:-ml-28	") {
        @include assert {
          @include output {
            @include sm\:-ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -7rem;
            }
          }
        }
      }

      @include it("sm\:-m-32	") {
        @include assert {
          @include output {
            @include sm\:-m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -8rem;
            }
          }
        }
      }

      @include it("sm\:-mx-32	") {
        @include assert {
          @include output {
            @include sm\:-mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -8rem;
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("sm\:-my-32	") {
        @include assert {
          @include output {
            @include sm\:-my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -8rem;
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("sm\:-ms-32	") {
        @include assert {
          @include output {
            @include sm\:-ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -8rem;
            }
          }
        }
      }

      @include it("sm\:-me-32	") {
        @include assert {
          @include output {
            @include sm\:-me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -8rem;
            }
          }
        }
      }

      @include it("sm\:-mt-32	") {
        @include assert {
          @include output {
            @include sm\:-mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -8rem;
            }
          }
        }
      }

      @include it("sm\:-mr-32	") {
        @include assert {
          @include output {
            @include sm\:-mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("sm\:-mb-32	") {
        @include assert {
          @include output {
            @include sm\:-mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("sm\:-ml-32	") {
        @include assert {
          @include output {
            @include sm\:-ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -8rem;
            }
          }
        }
      }

      @include it("sm\:-m-36	") {
        @include assert {
          @include output {
            @include sm\:-m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -9rem;
            }
          }
        }
      }

      @include it("sm\:-mx-36	") {
        @include assert {
          @include output {
            @include sm\:-mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -9rem;
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("sm\:-my-36	") {
        @include assert {
          @include output {
            @include sm\:-my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -9rem;
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("sm\:-ms-36	") {
        @include assert {
          @include output {
            @include sm\:-ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -9rem;
            }
          }
        }
      }

      @include it("sm\:-me-36	") {
        @include assert {
          @include output {
            @include sm\:-me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -9rem;
            }
          }
        }
      }

      @include it("sm\:-mt-36	") {
        @include assert {
          @include output {
            @include sm\:-mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -9rem;
            }
          }
        }
      }

      @include it("sm\:-mr-36	") {
        @include assert {
          @include output {
            @include sm\:-mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("sm\:-mb-36	") {
        @include assert {
          @include output {
            @include sm\:-mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("sm\:-ml-36	") {
        @include assert {
          @include output {
            @include sm\:-ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -9rem;
            }
          }
        }
      }

      @include it("sm\:-m-40	") {
        @include assert {
          @include output {
            @include sm\:-m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -10rem;
            }
          }
        }
      }

      @include it("sm\:-mx-40	") {
        @include assert {
          @include output {
            @include sm\:-mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -10rem;
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("sm\:-my-40	") {
        @include assert {
          @include output {
            @include sm\:-my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -10rem;
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("sm\:-ms-40	") {
        @include assert {
          @include output {
            @include sm\:-ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -10rem;
            }
          }
        }
      }

      @include it("sm\:-me-40	") {
        @include assert {
          @include output {
            @include sm\:-me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -10rem;
            }
          }
        }
      }

      @include it("sm\:-mt-40	") {
        @include assert {
          @include output {
            @include sm\:-mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -10rem;
            }
          }
        }
      }

      @include it("sm\:-mr-40	") {
        @include assert {
          @include output {
            @include sm\:-mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("sm\:-mb-40	") {
        @include assert {
          @include output {
            @include sm\:-mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("sm\:-ml-40	") {
        @include assert {
          @include output {
            @include sm\:-ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -10rem;
            }
          }
        }
      }

      @include it("sm\:-m-44	") {
        @include assert {
          @include output {
            @include sm\:-m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -11rem;
            }
          }
        }
      }

      @include it("sm\:-mx-44	") {
        @include assert {
          @include output {
            @include sm\:-mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -11rem;
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("sm\:-my-44	") {
        @include assert {
          @include output {
            @include sm\:-my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -11rem;
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("sm\:-ms-44	") {
        @include assert {
          @include output {
            @include sm\:-ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -11rem;
            }
          }
        }
      }

      @include it("sm\:-me-44	") {
        @include assert {
          @include output {
            @include sm\:-me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -11rem;
            }
          }
        }
      }

      @include it("sm\:-mt-44	") {
        @include assert {
          @include output {
            @include sm\:-mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -11rem;
            }
          }
        }
      }

      @include it("sm\:-mr-44	") {
        @include assert {
          @include output {
            @include sm\:-mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("sm\:-mb-44	") {
        @include assert {
          @include output {
            @include sm\:-mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("sm\:-ml-44	") {
        @include assert {
          @include output {
            @include sm\:-ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -11rem;
            }
          }
        }
      }

      @include it("sm\:-m-48	") {
        @include assert {
          @include output {
            @include sm\:-m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -12rem;
            }
          }
        }
      }

      @include it("sm\:-mx-48	") {
        @include assert {
          @include output {
            @include sm\:-mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -12rem;
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("sm\:-my-48	") {
        @include assert {
          @include output {
            @include sm\:-my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -12rem;
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("sm\:-ms-48	") {
        @include assert {
          @include output {
            @include sm\:-ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -12rem;
            }
          }
        }
      }

      @include it("sm\:-me-48	") {
        @include assert {
          @include output {
            @include sm\:-me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -12rem;
            }
          }
        }
      }

      @include it("sm\:-mt-48	") {
        @include assert {
          @include output {
            @include sm\:-mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -12rem;
            }
          }
        }
      }

      @include it("sm\:-mr-48	") {
        @include assert {
          @include output {
            @include sm\:-mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("sm\:-mb-48	") {
        @include assert {
          @include output {
            @include sm\:-mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("sm\:-ml-48	") {
        @include assert {
          @include output {
            @include sm\:-ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -12rem;
            }
          }
        }
      }

      @include it("sm\:-m-52	") {
        @include assert {
          @include output {
            @include sm\:-m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -13rem;
            }
          }
        }
      }

      @include it("sm\:-mx-52	") {
        @include assert {
          @include output {
            @include sm\:-mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -13rem;
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("sm\:-my-52	") {
        @include assert {
          @include output {
            @include sm\:-my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -13rem;
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("sm\:-ms-52	") {
        @include assert {
          @include output {
            @include sm\:-ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -13rem;
            }
          }
        }
      }

      @include it("sm\:-me-52	") {
        @include assert {
          @include output {
            @include sm\:-me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -13rem;
            }
          }
        }
      }

      @include it("sm\:-mt-52	") {
        @include assert {
          @include output {
            @include sm\:-mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -13rem;
            }
          }
        }
      }

      @include it("sm\:-mr-52	") {
        @include assert {
          @include output {
            @include sm\:-mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("sm\:-mb-52	") {
        @include assert {
          @include output {
            @include sm\:-mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("sm\:-ml-52	") {
        @include assert {
          @include output {
            @include sm\:-ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -13rem;
            }
          }
        }
      }

      @include it("sm\:-m-56	") {
        @include assert {
          @include output {
            @include sm\:-m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -14rem;
            }
          }
        }
      }

      @include it("sm\:-mx-56	") {
        @include assert {
          @include output {
            @include sm\:-mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -14rem;
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("sm\:-my-56	") {
        @include assert {
          @include output {
            @include sm\:-my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -14rem;
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("sm\:-ms-56	") {
        @include assert {
          @include output {
            @include sm\:-ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -14rem;
            }
          }
        }
      }

      @include it("sm\:-me-56	") {
        @include assert {
          @include output {
            @include sm\:-me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -14rem;
            }
          }
        }
      }

      @include it("sm\:-mt-56	") {
        @include assert {
          @include output {
            @include sm\:-mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -14rem;
            }
          }
        }
      }

      @include it("sm\:-mr-56	") {
        @include assert {
          @include output {
            @include sm\:-mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("sm\:-mb-56	") {
        @include assert {
          @include output {
            @include sm\:-mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("sm\:-ml-56	") {
        @include assert {
          @include output {
            @include sm\:-ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -14rem;
            }
          }
        }
      }

      @include it("sm\:-m-60	") {
        @include assert {
          @include output {
            @include sm\:-m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -15rem;
            }
          }
        }
      }

      @include it("sm\:-mx-60	") {
        @include assert {
          @include output {
            @include sm\:-mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -15rem;
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("sm\:-my-60	") {
        @include assert {
          @include output {
            @include sm\:-my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -15rem;
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("sm\:-ms-60	") {
        @include assert {
          @include output {
            @include sm\:-ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -15rem;
            }
          }
        }
      }

      @include it("sm\:-me-60	") {
        @include assert {
          @include output {
            @include sm\:-me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -15rem;
            }
          }
        }
      }

      @include it("sm\:-mt-60	") {
        @include assert {
          @include output {
            @include sm\:-mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -15rem;
            }
          }
        }
      }

      @include it("sm\:-mr-60	") {
        @include assert {
          @include output {
            @include sm\:-mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("sm\:-mb-60	") {
        @include assert {
          @include output {
            @include sm\:-mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("sm\:-ml-60	") {
        @include assert {
          @include output {
            @include sm\:-ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -15rem;
            }
          }
        }
      }

      @include it("sm\:-m-64	") {
        @include assert {
          @include output {
            @include sm\:-m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -16rem;
            }
          }
        }
      }

      @include it("sm\:-mx-64	") {
        @include assert {
          @include output {
            @include sm\:-mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -16rem;
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("sm\:-my-64	") {
        @include assert {
          @include output {
            @include sm\:-my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -16rem;
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("sm\:-ms-64	") {
        @include assert {
          @include output {
            @include sm\:-ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -16rem;
            }
          }
        }
      }

      @include it("sm\:-me-64	") {
        @include assert {
          @include output {
            @include sm\:-me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -16rem;
            }
          }
        }
      }

      @include it("sm\:-mt-64	") {
        @include assert {
          @include output {
            @include sm\:-mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -16rem;
            }
          }
        }
      }

      @include it("sm\:-mr-64	") {
        @include assert {
          @include output {
            @include sm\:-mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("sm\:-mb-64	") {
        @include assert {
          @include output {
            @include sm\:-mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("sm\:-ml-64	") {
        @include assert {
          @include output {
            @include sm\:-ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -16rem;
            }
          }
        }
      }

      @include it("sm\:-m-72	") {
        @include assert {
          @include output {
            @include sm\:-m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -18rem;
            }
          }
        }
      }

      @include it("sm\:-mx-72	") {
        @include assert {
          @include output {
            @include sm\:-mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -18rem;
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("sm\:-my-72	") {
        @include assert {
          @include output {
            @include sm\:-my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -18rem;
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("sm\:-ms-72	") {
        @include assert {
          @include output {
            @include sm\:-ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -18rem;
            }
          }
        }
      }

      @include it("sm\:-me-72	") {
        @include assert {
          @include output {
            @include sm\:-me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -18rem;
            }
          }
        }
      }

      @include it("sm\:-mt-72	") {
        @include assert {
          @include output {
            @include sm\:-mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -18rem;
            }
          }
        }
      }

      @include it("sm\:-mr-72	") {
        @include assert {
          @include output {
            @include sm\:-mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("sm\:-mb-72	") {
        @include assert {
          @include output {
            @include sm\:-mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("sm\:-ml-72	") {
        @include assert {
          @include output {
            @include sm\:-ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -18rem;
            }
          }
        }
      }

      @include it("sm\:-m-80	") {
        @include assert {
          @include output {
            @include sm\:-m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -20rem;
            }
          }
        }
      }

      @include it("sm\:-mx-80	") {
        @include assert {
          @include output {
            @include sm\:-mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -20rem;
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("sm\:-my-80	") {
        @include assert {
          @include output {
            @include sm\:-my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -20rem;
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("sm\:-ms-80	") {
        @include assert {
          @include output {
            @include sm\:-ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -20rem;
            }
          }
        }
      }

      @include it("sm\:-me-80	") {
        @include assert {
          @include output {
            @include sm\:-me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -20rem;
            }
          }
        }
      }

      @include it("sm\:-mt-80	") {
        @include assert {
          @include output {
            @include sm\:-mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -20rem;
            }
          }
        }
      }

      @include it("sm\:-mr-80	") {
        @include assert {
          @include output {
            @include sm\:-mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("sm\:-mb-80	") {
        @include assert {
          @include output {
            @include sm\:-mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("sm\:-ml-80	") {
        @include assert {
          @include output {
            @include sm\:-ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -20rem;
            }
          }
        }
      }

      @include it("sm\:-m-96	") {
        @include assert {
          @include output {
            @include sm\:-m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -24rem;
            }
          }
        }
      }

      @include it("sm\:-mx-96	") {
        @include assert {
          @include output {
            @include sm\:-mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -24rem;
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("sm\:-my-96	") {
        @include assert {
          @include output {
            @include sm\:-my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -24rem;
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("sm\:-ms-96	") {
        @include assert {
          @include output {
            @include sm\:-ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -24rem;
            }
          }
        }
      }

      @include it("sm\:-me-96	") {
        @include assert {
          @include output {
            @include sm\:-me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -24rem;
            }
          }
        }
      }

      @include it("sm\:-mt-96	") {
        @include assert {
          @include output {
            @include sm\:-mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -24rem;
            }
          }
        }
      }

      @include it("sm\:-mr-96	") {
        @include assert {
          @include output {
            @include sm\:-mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("sm\:-mb-96	") {
        @include assert {
          @include output {
            @include sm\:-mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("sm\:-ml-96	") {
        @include assert {
          @include output {
            @include sm\:-ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -24rem;
            }
          }
        }
      }

      @include it("md\:m-0") {
        @include assert {
          @include output {
            @include md\:m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0px;
            }
          }
        }
      }

      @include it("md\:mx-0") {
        @include assert {
          @include output {
            @include md\:mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("md\:my-0") {
        @include assert {
          @include output {
            @include md\:my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("md\:ms-0") {
        @include assert {
          @include output {
            @include md\:ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("md\:me-0") {
        @include assert {
          @include output {
            @include md\:me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("md\:mt-0") {
        @include assert {
          @include output {
            @include md\:mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("md\:mr-0") {
        @include assert {
          @include output {
            @include md\:mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("md\:mb-0") {
        @include assert {
          @include output {
            @include md\:mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("md\:ml-0") {
        @include assert {
          @include output {
            @include md\:ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("md\:m-px") {
        @include assert {
          @include output {
            @include md\:m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 1px;
            }
          }
        }
      }

      @include it("md\:mx-px") {
        @include assert {
          @include output {
            @include md\:mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1px;
              margin-right: 1px;
            }
          }
        }
      }

      @include it("md\:my-px") {
        @include assert {
          @include output {
            @include md\:my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1px;
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("md\:ms-px") {
        @include assert {
          @include output {
            @include md\:ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 1px;
            }
          }
        }
      }

      @include it("md\:me-px") {
        @include assert {
          @include output {
            @include md\:me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 1px;
            }
          }
        }
      }

      @include it("md\:mt-px") {
        @include assert {
          @include output {
            @include md\:mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1px;
            }
          }
        }
      }

      @include it("md\:mr-px") {
        @include assert {
          @include output {
            @include md\:mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 1px;
            }
          }
        }
      }

      @include it("md\:mb-px") {
        @include assert {
          @include output {
            @include md\:mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("md\:ml-px") {
        @include assert {
          @include output {
            @include md\:ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1px;
            }
          }
        }
      }

      @include it("md\:m-0\.5") {
        @include assert {
          @include output {
            @include md\:m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.125rem;
            }
          }
        }
      }

      @include it("md\:mx-0\.5") {
        @include assert {
          @include output {
            @include md\:mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.125rem;
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("md\:my-0\.5") {
        @include assert {
          @include output {
            @include md\:my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.125rem;
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("md\:ms-0\.5") {
        @include assert {
          @include output {
            @include md\:ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("md\:me-0\.5") {
        @include assert {
          @include output {
            @include md\:me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("md\:mt-0\.5") {
        @include assert {
          @include output {
            @include md\:mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.125rem;
            }
          }
        }
      }

      @include it("md\:mr-0\.5") {
        @include assert {
          @include output {
            @include md\:mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("md\:mb-0\.5") {
        @include assert {
          @include output {
            @include md\:mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("md\:ml-0\.5") {
        @include assert {
          @include output {
            @include md\:ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.125rem;
            }
          }
        }
      }

      @include it("md\:m-1") {
        @include assert {
          @include output {
            @include md\:m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.25rem;
            }
          }
        }
      }

      @include it("md\:mx-1") {
        @include assert {
          @include output {
            @include md\:mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.25rem;
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("md\:my-1") {
        @include assert {
          @include output {
            @include md\:my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.25rem;
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("md\:ms-1") {
        @include assert {
          @include output {
            @include md\:ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("md\:me-1") {
        @include assert {
          @include output {
            @include md\:me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("md\:mt-1") {
        @include assert {
          @include output {
            @include md\:mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.25rem;
            }
          }
        }
      }

      @include it("md\:mr-1") {
        @include assert {
          @include output {
            @include md\:mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("md\:mb-1") {
        @include assert {
          @include output {
            @include md\:mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("md\:ml-1") {
        @include assert {
          @include output {
            @include md\:ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.25rem;
            }
          }
        }
      }

      @include it("md\:m-1\.5") {
        @include assert {
          @include output {
            @include md\:m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.375rem;
            }
          }
        }
      }

      @include it("md\:mx-1\.5") {
        @include assert {
          @include output {
            @include md\:mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.375rem;
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("md\:my-1\.5") {
        @include assert {
          @include output {
            @include md\:my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.375rem;
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("md\:ms-1\.5") {
        @include assert {
          @include output {
            @include md\:ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("md\:me-1\.5") {
        @include assert {
          @include output {
            @include md\:me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("md\:mt-1\.5") {
        @include assert {
          @include output {
            @include md\:mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.375rem;
            }
          }
        }
      }

      @include it("md\:mr-1\.5") {
        @include assert {
          @include output {
            @include md\:mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("md\:mb-1\.5") {
        @include assert {
          @include output {
            @include md\:mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("md\:ml-1\.5") {
        @include assert {
          @include output {
            @include md\:ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.375rem;
            }
          }
        }
      }

      @include it("md\:m-2") {
        @include assert {
          @include output {
            @include md\:m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.5rem;
            }
          }
        }
      }

      @include it("md\:mx-2") {
        @include assert {
          @include output {
            @include md\:mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.5rem;
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("md\:my-2") {
        @include assert {
          @include output {
            @include md\:my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.5rem;
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("md\:ms-2") {
        @include assert {
          @include output {
            @include md\:ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("md\:me-2") {
        @include assert {
          @include output {
            @include md\:me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("md\:mt-2") {
        @include assert {
          @include output {
            @include md\:mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.5rem;
            }
          }
        }
      }

      @include it("md\:mr-2") {
        @include assert {
          @include output {
            @include md\:mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("md\:mb-2") {
        @include assert {
          @include output {
            @include md\:mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("md\:ml-2") {
        @include assert {
          @include output {
            @include md\:ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.5rem;
            }
          }
        }
      }

      @include it("md\:m-2\.5") {
        @include assert {
          @include output {
            @include md\:m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.625rem;
            }
          }
        }
      }

      @include it("md\:mx-2\.5") {
        @include assert {
          @include output {
            @include md\:mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.625rem;
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("md\:my-2\.5") {
        @include assert {
          @include output {
            @include md\:my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.625rem;
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("md\:ms-2\.5") {
        @include assert {
          @include output {
            @include md\:ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("md\:me-2\.5") {
        @include assert {
          @include output {
            @include md\:me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("md\:mt-2\.5") {
        @include assert {
          @include output {
            @include md\:mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.625rem;
            }
          }
        }
      }

      @include it("md\:mr-2\.5") {
        @include assert {
          @include output {
            @include md\:mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("md\:mb-2\.5") {
        @include assert {
          @include output {
            @include md\:mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("md\:ml-2\.5") {
        @include assert {
          @include output {
            @include md\:ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.625rem;
            }
          }
        }
      }

      @include it("md\:m-3") {
        @include assert {
          @include output {
            @include md\:m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.75rem;
            }
          }
        }
      }

      @include it("md\:mx-3") {
        @include assert {
          @include output {
            @include md\:mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.75rem;
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("md\:my-3") {
        @include assert {
          @include output {
            @include md\:my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.75rem;
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("md\:ms-3") {
        @include assert {
          @include output {
            @include md\:ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("md\:me-3") {
        @include assert {
          @include output {
            @include md\:me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("md\:mt-3") {
        @include assert {
          @include output {
            @include md\:mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.75rem;
            }
          }
        }
      }

      @include it("md\:mr-3") {
        @include assert {
          @include output {
            @include md\:mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("md\:mb-3") {
        @include assert {
          @include output {
            @include md\:mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("md\:ml-3") {
        @include assert {
          @include output {
            @include md\:ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.75rem;
            }
          }
        }
      }

      @include it("md\:m-3\.5") {
        @include assert {
          @include output {
            @include md\:m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0.875rem;
            }
          }
        }
      }

      @include it("md\:mx-3\.5") {
        @include assert {
          @include output {
            @include md\:mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.875rem;
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("md\:my-3\.5") {
        @include assert {
          @include output {
            @include md\:my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.875rem;
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("md\:ms-3\.5") {
        @include assert {
          @include output {
            @include md\:ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("md\:me-3\.5") {
        @include assert {
          @include output {
            @include md\:me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("md\:mt-3\.5") {
        @include assert {
          @include output {
            @include md\:mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0.875rem;
            }
          }
        }
      }

      @include it("md\:mr-3\.5") {
        @include assert {
          @include output {
            @include md\:mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("md\:mb-3\.5") {
        @include assert {
          @include output {
            @include md\:mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("md\:ml-3\.5") {
        @include assert {
          @include output {
            @include md\:ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0.875rem;
            }
          }
        }
      }

      @include it("md\:m-4") {
        @include assert {
          @include output {
            @include md\:m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 1rem;
            }
          }
        }
      }

      @include it("md\:mx-4") {
        @include assert {
          @include output {
            @include md\:mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("md\:my-4") {
        @include assert {
          @include output {
            @include md\:my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("md\:ms-4") {
        @include assert {
          @include output {
            @include md\:ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 1rem;
            }
          }
        }
      }

      @include it("md\:me-4") {
        @include assert {
          @include output {
            @include md\:me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 1rem;
            }
          }
        }
      }

      @include it("md\:mt-4") {
        @include assert {
          @include output {
            @include md\:mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1rem;
            }
          }
        }
      }

      @include it("md\:mr-4") {
        @include assert {
          @include output {
            @include md\:mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("md\:mb-4") {
        @include assert {
          @include output {
            @include md\:mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("md\:ml-4") {
        @include assert {
          @include output {
            @include md\:ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1rem;
            }
          }
        }
      }

      @include it("md\:m-5") {
        @include assert {
          @include output {
            @include md\:m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 1.25rem;
            }
          }
        }
      }

      @include it("md\:mx-5") {
        @include assert {
          @include output {
            @include md\:mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1.25rem;
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("md\:my-5") {
        @include assert {
          @include output {
            @include md\:my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1.25rem;
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("md\:ms-5") {
        @include assert {
          @include output {
            @include md\:ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("md\:me-5") {
        @include assert {
          @include output {
            @include md\:me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("md\:mt-5") {
        @include assert {
          @include output {
            @include md\:mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1.25rem;
            }
          }
        }
      }

      @include it("md\:mr-5") {
        @include assert {
          @include output {
            @include md\:mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("md\:mb-5") {
        @include assert {
          @include output {
            @include md\:mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("md\:ml-5") {
        @include assert {
          @include output {
            @include md\:ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1.25rem;
            }
          }
        }
      }

      @include it("md\:m-6") {
        @include assert {
          @include output {
            @include md\:m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 1.5rem;
            }
          }
        }
      }

      @include it("md\:mx-6") {
        @include assert {
          @include output {
            @include md\:mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1.5rem;
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("md\:my-6") {
        @include assert {
          @include output {
            @include md\:my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1.5rem;
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("md\:ms-6") {
        @include assert {
          @include output {
            @include md\:ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("md\:me-6") {
        @include assert {
          @include output {
            @include md\:me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("md\:mt-6") {
        @include assert {
          @include output {
            @include md\:mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1.5rem;
            }
          }
        }
      }

      @include it("md\:mr-6") {
        @include assert {
          @include output {
            @include md\:mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("md\:mb-6") {
        @include assert {
          @include output {
            @include md\:mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("md\:ml-6") {
        @include assert {
          @include output {
            @include md\:ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1.5rem;
            }
          }
        }
      }

      @include it("md\:m-7") {
        @include assert {
          @include output {
            @include md\:m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 1.75rem;
            }
          }
        }
      }

      @include it("md\:mx-7") {
        @include assert {
          @include output {
            @include md\:mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1.75rem;
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("md\:my-7") {
        @include assert {
          @include output {
            @include md\:my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1.75rem;
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("md\:ms-7") {
        @include assert {
          @include output {
            @include md\:ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("md\:me-7") {
        @include assert {
          @include output {
            @include md\:me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("md\:mt-7") {
        @include assert {
          @include output {
            @include md\:mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 1.75rem;
            }
          }
        }
      }

      @include it("md\:mr-7") {
        @include assert {
          @include output {
            @include md\:mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("md\:mb-7") {
        @include assert {
          @include output {
            @include md\:mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("md\:ml-7") {
        @include assert {
          @include output {
            @include md\:ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 1.75rem;
            }
          }
        }
      }

      @include it("md\:m-8") {
        @include assert {
          @include output {
            @include md\:m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 2rem;
            }
          }
        }
      }

      @include it("md\:mx-8") {
        @include assert {
          @include output {
            @include md\:mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2rem;
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("md\:my-8") {
        @include assert {
          @include output {
            @include md\:my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2rem;
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("md\:ms-8") {
        @include assert {
          @include output {
            @include md\:ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 2rem;
            }
          }
        }
      }

      @include it("md\:me-8") {
        @include assert {
          @include output {
            @include md\:me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 2rem;
            }
          }
        }
      }

      @include it("md\:mt-8") {
        @include assert {
          @include output {
            @include md\:mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2rem;
            }
          }
        }
      }

      @include it("md\:mr-8") {
        @include assert {
          @include output {
            @include md\:mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("md\:mb-8") {
        @include assert {
          @include output {
            @include md\:mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("md\:ml-8") {
        @include assert {
          @include output {
            @include md\:ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2rem;
            }
          }
        }
      }

      @include it("md\:m-9") {
        @include assert {
          @include output {
            @include md\:m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 2.25rem;
            }
          }
        }
      }

      @include it("md\:mx-9") {
        @include assert {
          @include output {
            @include md\:mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2.25rem;
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("md\:my-9") {
        @include assert {
          @include output {
            @include md\:my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2.25rem;
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("md\:ms-9") {
        @include assert {
          @include output {
            @include md\:ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("md\:me-9") {
        @include assert {
          @include output {
            @include md\:me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("md\:mt-9") {
        @include assert {
          @include output {
            @include md\:mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2.25rem;
            }
          }
        }
      }

      @include it("md\:mr-9") {
        @include assert {
          @include output {
            @include md\:mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("md\:mb-9") {
        @include assert {
          @include output {
            @include md\:mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("md\:ml-9") {
        @include assert {
          @include output {
            @include md\:ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2.25rem;
            }
          }
        }
      }

      @include it("md\:m-10") {
        @include assert {
          @include output {
            @include md\:m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 2.5rem;
            }
          }
        }
      }

      @include it("md\:mx-10") {
        @include assert {
          @include output {
            @include md\:mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2.5rem;
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("md\:my-10") {
        @include assert {
          @include output {
            @include md\:my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2.5rem;
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("md\:ms-10") {
        @include assert {
          @include output {
            @include md\:ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("md\:me-10") {
        @include assert {
          @include output {
            @include md\:me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("md\:mt-10") {
        @include assert {
          @include output {
            @include md\:mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2.5rem;
            }
          }
        }
      }

      @include it("md\:mr-10") {
        @include assert {
          @include output {
            @include md\:mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("md\:mb-10") {
        @include assert {
          @include output {
            @include md\:mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("md\:ml-10") {
        @include assert {
          @include output {
            @include md\:ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2.5rem;
            }
          }
        }
      }

      @include it("md\:m-11") {
        @include assert {
          @include output {
            @include md\:m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 2.75rem;
            }
          }
        }
      }

      @include it("md\:mx-11") {
        @include assert {
          @include output {
            @include md\:mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2.75rem;
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("md\:my-11") {
        @include assert {
          @include output {
            @include md\:my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2.75rem;
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("md\:ms-11") {
        @include assert {
          @include output {
            @include md\:ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("md\:me-11") {
        @include assert {
          @include output {
            @include md\:me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("md\:mt-11") {
        @include assert {
          @include output {
            @include md\:mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 2.75rem;
            }
          }
        }
      }

      @include it("md\:mr-11") {
        @include assert {
          @include output {
            @include md\:mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("md\:mb-11") {
        @include assert {
          @include output {
            @include md\:mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("md\:ml-11") {
        @include assert {
          @include output {
            @include md\:ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 2.75rem;
            }
          }
        }
      }

      @include it("md\:m-12") {
        @include assert {
          @include output {
            @include md\:m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 3rem;
            }
          }
        }
      }

      @include it("md\:mx-12") {
        @include assert {
          @include output {
            @include md\:mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 3rem;
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("md\:my-12") {
        @include assert {
          @include output {
            @include md\:my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 3rem;
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("md\:ms-12") {
        @include assert {
          @include output {
            @include md\:ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 3rem;
            }
          }
        }
      }

      @include it("md\:me-12") {
        @include assert {
          @include output {
            @include md\:me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 3rem;
            }
          }
        }
      }

      @include it("md\:mt-12") {
        @include assert {
          @include output {
            @include md\:mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 3rem;
            }
          }
        }
      }

      @include it("md\:mr-12") {
        @include assert {
          @include output {
            @include md\:mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("md\:mb-12") {
        @include assert {
          @include output {
            @include md\:mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("md\:ml-12") {
        @include assert {
          @include output {
            @include md\:ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 3rem;
            }
          }
        }
      }

      @include it("md\:m-14") {
        @include assert {
          @include output {
            @include md\:m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 3.5rem;
            }
          }
        }
      }

      @include it("md\:mx-14") {
        @include assert {
          @include output {
            @include md\:mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 3.5rem;
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("md\:my-14") {
        @include assert {
          @include output {
            @include md\:my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 3.5rem;
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("md\:ms-14") {
        @include assert {
          @include output {
            @include md\:ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("md\:me-14") {
        @include assert {
          @include output {
            @include md\:me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("md\:mt-14") {
        @include assert {
          @include output {
            @include md\:mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 3.5rem;
            }
          }
        }
      }

      @include it("md\:mr-14") {
        @include assert {
          @include output {
            @include md\:mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("md\:mb-14") {
        @include assert {
          @include output {
            @include md\:mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("md\:ml-14") {
        @include assert {
          @include output {
            @include md\:ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 3.5rem;
            }
          }
        }
      }

      @include it("md\:m-16") {
        @include assert {
          @include output {
            @include md\:m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 4rem;
            }
          }
        }
      }

      @include it("md\:mx-16") {
        @include assert {
          @include output {
            @include md\:mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 4rem;
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("md\:my-16") {
        @include assert {
          @include output {
            @include md\:my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 4rem;
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("md\:ms-16") {
        @include assert {
          @include output {
            @include md\:ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 4rem;
            }
          }
        }
      }

      @include it("md\:me-16") {
        @include assert {
          @include output {
            @include md\:me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 4rem;
            }
          }
        }
      }

      @include it("md\:mt-16") {
        @include assert {
          @include output {
            @include md\:mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 4rem;
            }
          }
        }
      }

      @include it("md\:mr-16") {
        @include assert {
          @include output {
            @include md\:mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("md\:mb-16") {
        @include assert {
          @include output {
            @include md\:mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("md\:ml-16") {
        @include assert {
          @include output {
            @include md\:ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 4rem;
            }
          }
        }
      }

      @include it("md\:m-20") {
        @include assert {
          @include output {
            @include md\:m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 5rem;
            }
          }
        }
      }

      @include it("md\:mx-20") {
        @include assert {
          @include output {
            @include md\:mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 5rem;
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("md\:my-20") {
        @include assert {
          @include output {
            @include md\:my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 5rem;
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("md\:ms-20") {
        @include assert {
          @include output {
            @include md\:ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 5rem;
            }
          }
        }
      }

      @include it("md\:me-20") {
        @include assert {
          @include output {
            @include md\:me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 5rem;
            }
          }
        }
      }

      @include it("md\:mt-20") {
        @include assert {
          @include output {
            @include md\:mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 5rem;
            }
          }
        }
      }

      @include it("md\:mr-20") {
        @include assert {
          @include output {
            @include md\:mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("md\:mb-20") {
        @include assert {
          @include output {
            @include md\:mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("md\:ml-20") {
        @include assert {
          @include output {
            @include md\:ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 5rem;
            }
          }
        }
      }

      @include it("md\:m-24") {
        @include assert {
          @include output {
            @include md\:m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 6rem;
            }
          }
        }
      }

      @include it("md\:mx-24") {
        @include assert {
          @include output {
            @include md\:mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 6rem;
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("md\:my-24") {
        @include assert {
          @include output {
            @include md\:my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 6rem;
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("md\:ms-24") {
        @include assert {
          @include output {
            @include md\:ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 6rem;
            }
          }
        }
      }

      @include it("md\:me-24") {
        @include assert {
          @include output {
            @include md\:me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 6rem;
            }
          }
        }
      }

      @include it("md\:mt-24") {
        @include assert {
          @include output {
            @include md\:mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 6rem;
            }
          }
        }
      }

      @include it("md\:mr-24") {
        @include assert {
          @include output {
            @include md\:mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("md\:mb-24") {
        @include assert {
          @include output {
            @include md\:mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("md\:ml-24") {
        @include assert {
          @include output {
            @include md\:ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 6rem;
            }
          }
        }
      }

      @include it("md\:m-28") {
        @include assert {
          @include output {
            @include md\:m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 7rem;
            }
          }
        }
      }

      @include it("md\:mx-28") {
        @include assert {
          @include output {
            @include md\:mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 7rem;
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("md\:my-28") {
        @include assert {
          @include output {
            @include md\:my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 7rem;
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("md\:ms-28") {
        @include assert {
          @include output {
            @include md\:ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 7rem;
            }
          }
        }
      }

      @include it("md\:me-28") {
        @include assert {
          @include output {
            @include md\:me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 7rem;
            }
          }
        }
      }

      @include it("md\:mt-28") {
        @include assert {
          @include output {
            @include md\:mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 7rem;
            }
          }
        }
      }

      @include it("md\:mr-28") {
        @include assert {
          @include output {
            @include md\:mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("md\:mb-28") {
        @include assert {
          @include output {
            @include md\:mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("md\:ml-28") {
        @include assert {
          @include output {
            @include md\:ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 7rem;
            }
          }
        }
      }

      @include it("md\:m-32") {
        @include assert {
          @include output {
            @include md\:m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 8rem;
            }
          }
        }
      }

      @include it("md\:mx-32") {
        @include assert {
          @include output {
            @include md\:mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 8rem;
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("md\:my-32") {
        @include assert {
          @include output {
            @include md\:my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 8rem;
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("md\:ms-32") {
        @include assert {
          @include output {
            @include md\:ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 8rem;
            }
          }
        }
      }

      @include it("md\:me-32") {
        @include assert {
          @include output {
            @include md\:me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 8rem;
            }
          }
        }
      }

      @include it("md\:mt-32") {
        @include assert {
          @include output {
            @include md\:mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 8rem;
            }
          }
        }
      }

      @include it("md\:mr-32") {
        @include assert {
          @include output {
            @include md\:mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("md\:mb-32") {
        @include assert {
          @include output {
            @include md\:mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("md\:ml-32") {
        @include assert {
          @include output {
            @include md\:ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 8rem;
            }
          }
        }
      }

      @include it("md\:m-36") {
        @include assert {
          @include output {
            @include md\:m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 9rem;
            }
          }
        }
      }

      @include it("md\:mx-36") {
        @include assert {
          @include output {
            @include md\:mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 9rem;
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("md\:my-36") {
        @include assert {
          @include output {
            @include md\:my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 9rem;
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("md\:ms-36") {
        @include assert {
          @include output {
            @include md\:ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 9rem;
            }
          }
        }
      }

      @include it("md\:me-36") {
        @include assert {
          @include output {
            @include md\:me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 9rem;
            }
          }
        }
      }

      @include it("md\:mt-36") {
        @include assert {
          @include output {
            @include md\:mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 9rem;
            }
          }
        }
      }

      @include it("md\:mr-36") {
        @include assert {
          @include output {
            @include md\:mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("md\:mb-36") {
        @include assert {
          @include output {
            @include md\:mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("md\:ml-36") {
        @include assert {
          @include output {
            @include md\:ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 9rem;
            }
          }
        }
      }

      @include it("md\:m-40") {
        @include assert {
          @include output {
            @include md\:m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 10rem;
            }
          }
        }
      }

      @include it("md\:mx-40") {
        @include assert {
          @include output {
            @include md\:mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 10rem;
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("md\:my-40") {
        @include assert {
          @include output {
            @include md\:my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 10rem;
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("md\:ms-40") {
        @include assert {
          @include output {
            @include md\:ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 10rem;
            }
          }
        }
      }

      @include it("md\:me-40") {
        @include assert {
          @include output {
            @include md\:me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 10rem;
            }
          }
        }
      }

      @include it("md\:mt-40") {
        @include assert {
          @include output {
            @include md\:mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 10rem;
            }
          }
        }
      }

      @include it("md\:mr-40") {
        @include assert {
          @include output {
            @include md\:mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("md\:mb-40") {
        @include assert {
          @include output {
            @include md\:mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("md\:ml-40") {
        @include assert {
          @include output {
            @include md\:ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 10rem;
            }
          }
        }
      }

      @include it("md\:m-44") {
        @include assert {
          @include output {
            @include md\:m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 11rem;
            }
          }
        }
      }

      @include it("md\:mx-44") {
        @include assert {
          @include output {
            @include md\:mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 11rem;
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("md\:my-44") {
        @include assert {
          @include output {
            @include md\:my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 11rem;
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("md\:ms-44") {
        @include assert {
          @include output {
            @include md\:ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 11rem;
            }
          }
        }
      }

      @include it("md\:me-44") {
        @include assert {
          @include output {
            @include md\:me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 11rem;
            }
          }
        }
      }

      @include it("md\:mt-44") {
        @include assert {
          @include output {
            @include md\:mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 11rem;
            }
          }
        }
      }

      @include it("md\:mr-44") {
        @include assert {
          @include output {
            @include md\:mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("md\:mb-44") {
        @include assert {
          @include output {
            @include md\:mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("md\:ml-44") {
        @include assert {
          @include output {
            @include md\:ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 11rem;
            }
          }
        }
      }

      @include it("md\:m-48") {
        @include assert {
          @include output {
            @include md\:m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 12rem;
            }
          }
        }
      }

      @include it("md\:mx-48") {
        @include assert {
          @include output {
            @include md\:mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 12rem;
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("md\:my-48") {
        @include assert {
          @include output {
            @include md\:my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 12rem;
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("md\:ms-48") {
        @include assert {
          @include output {
            @include md\:ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 12rem;
            }
          }
        }
      }

      @include it("md\:me-48") {
        @include assert {
          @include output {
            @include md\:me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 12rem;
            }
          }
        }
      }

      @include it("md\:mt-48") {
        @include assert {
          @include output {
            @include md\:mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 12rem;
            }
          }
        }
      }

      @include it("md\:mr-48") {
        @include assert {
          @include output {
            @include md\:mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("md\:mb-48") {
        @include assert {
          @include output {
            @include md\:mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("md\:ml-48") {
        @include assert {
          @include output {
            @include md\:ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 12rem;
            }
          }
        }
      }

      @include it("md\:m-52") {
        @include assert {
          @include output {
            @include md\:m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 13rem;
            }
          }
        }
      }

      @include it("md\:mx-52") {
        @include assert {
          @include output {
            @include md\:mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 13rem;
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("md\:my-52") {
        @include assert {
          @include output {
            @include md\:my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 13rem;
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("md\:ms-52") {
        @include assert {
          @include output {
            @include md\:ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 13rem;
            }
          }
        }
      }

      @include it("md\:me-52") {
        @include assert {
          @include output {
            @include md\:me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 13rem;
            }
          }
        }
      }

      @include it("md\:mt-52") {
        @include assert {
          @include output {
            @include md\:mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 13rem;
            }
          }
        }
      }

      @include it("md\:mr-52") {
        @include assert {
          @include output {
            @include md\:mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("md\:mb-52") {
        @include assert {
          @include output {
            @include md\:mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("md\:ml-52") {
        @include assert {
          @include output {
            @include md\:ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 13rem;
            }
          }
        }
      }

      @include it("md\:m-56") {
        @include assert {
          @include output {
            @include md\:m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 14rem;
            }
          }
        }
      }

      @include it("md\:mx-56") {
        @include assert {
          @include output {
            @include md\:mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 14rem;
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("md\:my-56") {
        @include assert {
          @include output {
            @include md\:my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 14rem;
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("md\:ms-56") {
        @include assert {
          @include output {
            @include md\:ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 14rem;
            }
          }
        }
      }

      @include it("md\:me-56") {
        @include assert {
          @include output {
            @include md\:me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 14rem;
            }
          }
        }
      }

      @include it("md\:mt-56") {
        @include assert {
          @include output {
            @include md\:mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 14rem;
            }
          }
        }
      }

      @include it("md\:mr-56") {
        @include assert {
          @include output {
            @include md\:mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("md\:mb-56") {
        @include assert {
          @include output {
            @include md\:mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("md\:ml-56") {
        @include assert {
          @include output {
            @include md\:ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 14rem;
            }
          }
        }
      }

      @include it("md\:m-60") {
        @include assert {
          @include output {
            @include md\:m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 15rem;
            }
          }
        }
      }

      @include it("md\:mx-60") {
        @include assert {
          @include output {
            @include md\:mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 15rem;
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("md\:my-60") {
        @include assert {
          @include output {
            @include md\:my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 15rem;
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("md\:ms-60") {
        @include assert {
          @include output {
            @include md\:ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 15rem;
            }
          }
        }
      }

      @include it("md\:me-60") {
        @include assert {
          @include output {
            @include md\:me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 15rem;
            }
          }
        }
      }

      @include it("md\:mt-60") {
        @include assert {
          @include output {
            @include md\:mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 15rem;
            }
          }
        }
      }

      @include it("md\:mr-60") {
        @include assert {
          @include output {
            @include md\:mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("md\:mb-60") {
        @include assert {
          @include output {
            @include md\:mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("md\:ml-60") {
        @include assert {
          @include output {
            @include md\:ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 15rem;
            }
          }
        }
      }

      @include it("md\:m-64") {
        @include assert {
          @include output {
            @include md\:m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 16rem;
            }
          }
        }
      }

      @include it("md\:mx-64") {
        @include assert {
          @include output {
            @include md\:mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 16rem;
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("md\:my-64") {
        @include assert {
          @include output {
            @include md\:my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 16rem;
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("md\:ms-64") {
        @include assert {
          @include output {
            @include md\:ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 16rem;
            }
          }
        }
      }

      @include it("md\:me-64") {
        @include assert {
          @include output {
            @include md\:me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 16rem;
            }
          }
        }
      }

      @include it("md\:mt-64") {
        @include assert {
          @include output {
            @include md\:mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 16rem;
            }
          }
        }
      }

      @include it("md\:mr-64") {
        @include assert {
          @include output {
            @include md\:mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("md\:mb-64") {
        @include assert {
          @include output {
            @include md\:mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("md\:ml-64") {
        @include assert {
          @include output {
            @include md\:ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 16rem;
            }
          }
        }
      }

      @include it("md\:m-72") {
        @include assert {
          @include output {
            @include md\:m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 18rem;
            }
          }
        }
      }

      @include it("md\:mx-72") {
        @include assert {
          @include output {
            @include md\:mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 18rem;
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("md\:my-72") {
        @include assert {
          @include output {
            @include md\:my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 18rem;
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("md\:ms-72") {
        @include assert {
          @include output {
            @include md\:ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 18rem;
            }
          }
        }
      }

      @include it("md\:me-72") {
        @include assert {
          @include output {
            @include md\:me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 18rem;
            }
          }
        }
      }

      @include it("md\:mt-72") {
        @include assert {
          @include output {
            @include md\:mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 18rem;
            }
          }
        }
      }

      @include it("md\:mr-72") {
        @include assert {
          @include output {
            @include md\:mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("md\:mb-72") {
        @include assert {
          @include output {
            @include md\:mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("md\:ml-72") {
        @include assert {
          @include output {
            @include md\:ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 18rem;
            }
          }
        }
      }

      @include it("md\:m-80") {
        @include assert {
          @include output {
            @include md\:m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 20rem;
            }
          }
        }
      }

      @include it("md\:mx-80") {
        @include assert {
          @include output {
            @include md\:mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 20rem;
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("md\:my-80") {
        @include assert {
          @include output {
            @include md\:my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 20rem;
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("md\:ms-80") {
        @include assert {
          @include output {
            @include md\:ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 20rem;
            }
          }
        }
      }

      @include it("md\:me-80") {
        @include assert {
          @include output {
            @include md\:me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 20rem;
            }
          }
        }
      }

      @include it("md\:mt-80") {
        @include assert {
          @include output {
            @include md\:mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 20rem;
            }
          }
        }
      }

      @include it("md\:mr-80") {
        @include assert {
          @include output {
            @include md\:mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("md\:mb-80") {
        @include assert {
          @include output {
            @include md\:mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("md\:ml-80") {
        @include assert {
          @include output {
            @include md\:ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 20rem;
            }
          }
        }
      }

      @include it("md\:m-96") {
        @include assert {
          @include output {
            @include md\:m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 24rem;
            }
          }
        }
      }

      @include it("md\:mx-96") {
        @include assert {
          @include output {
            @include md\:mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 24rem;
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("md\:my-96") {
        @include assert {
          @include output {
            @include md\:my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 24rem;
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("md\:ms-96") {
        @include assert {
          @include output {
            @include md\:ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 24rem;
            }
          }
        }
      }

      @include it("md\:me-96") {
        @include assert {
          @include output {
            @include md\:me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 24rem;
            }
          }
        }
      }

      @include it("md\:mt-96") {
        @include assert {
          @include output {
            @include md\:mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 24rem;
            }
          }
        }
      }

      @include it("md\:mr-96") {
        @include assert {
          @include output {
            @include md\:mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("md\:mb-96") {
        @include assert {
          @include output {
            @include md\:mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("md\:ml-96") {
        @include assert {
          @include output {
            @include md\:ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 24rem;
            }
          }
        }
      }

      @include it("md\:m-auto") {
        @include assert {
          @include output {
            @include md\:m-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: auto;
            }
          }
        }
      }

      @include it("md\:mx-auto") {
        @include assert {
          @include output {
            @include md\:mx-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: auto;
              margin-right: auto;
            }
          }
        }
      }

      @include it("md\:my-auto") {
        @include assert {
          @include output {
            @include md\:my-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: auto;
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("md\:ms-auto") {
        @include assert {
          @include output {
            @include md\:ms-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: auto;
            }
          }
        }
      }

      @include it("md\:me-auto") {
        @include assert {
          @include output {
            @include md\:me-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: auto;
            }
          }
        }
      }

      @include it("md\:mt-auto") {
        @include assert {
          @include output {
            @include md\:mt-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: auto;
            }
          }
        }
      }

      @include it("md\:mr-auto") {
        @include assert {
          @include output {
            @include md\:mr-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: auto;
            }
          }
        }
      }

      @include it("md\:mb-auto") {
        @include assert {
          @include output {
            @include md\:mb-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("md\:ml-auto") {
        @include assert {
          @include output {
            @include md\:ml-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: auto;
            }
          }
        }
      }

      @include it("md\:-m-0	") {
        @include assert {
          @include output {
            @include md\:-m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 0px;
            }
          }
        }
      }

      @include it("md\:-mx-0	") {
        @include assert {
          @include output {
            @include md\:-mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("md\:-my-0	") {
        @include assert {
          @include output {
            @include md\:-my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("md\:-ms-0	") {
        @include assert {
          @include output {
            @include md\:-ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("md\:-me-0	") {
        @include assert {
          @include output {
            @include md\:-me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("md\:-mt-0	") {
        @include assert {
          @include output {
            @include md\:-mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("md\:-mr-0	") {
        @include assert {
          @include output {
            @include md\:-mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("md\:-mb-0	") {
        @include assert {
          @include output {
            @include md\:-mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("md\:-ml-0	") {
        @include assert {
          @include output {
            @include md\:-ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("md\:-m-px	") {
        @include assert {
          @include output {
            @include md\:-m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -1px;
            }
          }
        }
      }

      @include it("md\:-mx-px	") {
        @include assert {
          @include output {
            @include md\:-mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1px;
              margin-right: -1px;
            }
          }
        }
      }

      @include it("md\:-my-px	") {
        @include assert {
          @include output {
            @include md\:-my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1px;
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("md\:-ms-px	") {
        @include assert {
          @include output {
            @include md\:-ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -1px;
            }
          }
        }
      }

      @include it("md\:-me-px	") {
        @include assert {
          @include output {
            @include md\:-me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -1px;
            }
          }
        }
      }

      @include it("md\:-mt-px	") {
        @include assert {
          @include output {
            @include md\:-mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1px;
            }
          }
        }
      }

      @include it("md\:-mr-px	") {
        @include assert {
          @include output {
            @include md\:-mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -1px;
            }
          }
        }
      }

      @include it("md\:-mb-px	") {
        @include assert {
          @include output {
            @include md\:-mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("md\:-ml-px	") {
        @include assert {
          @include output {
            @include md\:-ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1px;
            }
          }
        }
      }

      @include it("md\:-m-0\.5	") {
        @include assert {
          @include output {
            @include md\:-m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-mx-0\.5	") {
        @include assert {
          @include output {
            @include md\:-mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.125rem;
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-my-0\.5	") {
        @include assert {
          @include output {
            @include md\:-my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.125rem;
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-ms-0\.5	") {
        @include assert {
          @include output {
            @include md\:-ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-me-0\.5	") {
        @include assert {
          @include output {
            @include md\:-me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-mt-0\.5	") {
        @include assert {
          @include output {
            @include md\:-mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-mr-0\.5	") {
        @include assert {
          @include output {
            @include md\:-mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-mb-0\.5	") {
        @include assert {
          @include output {
            @include md\:-mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-ml-0\.5	") {
        @include assert {
          @include output {
            @include md\:-ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-m-1	") {
        @include assert {
          @include output {
            @include md\:-m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-mx-1	") {
        @include assert {
          @include output {
            @include md\:-mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.25rem;
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-my-1	") {
        @include assert {
          @include output {
            @include md\:-my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.25rem;
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-ms-1	") {
        @include assert {
          @include output {
            @include md\:-ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-me-1	") {
        @include assert {
          @include output {
            @include md\:-me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-mt-1	") {
        @include assert {
          @include output {
            @include md\:-mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-mr-1	") {
        @include assert {
          @include output {
            @include md\:-mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-mb-1	") {
        @include assert {
          @include output {
            @include md\:-mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-ml-1	") {
        @include assert {
          @include output {
            @include md\:-ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-m-1\.5	") {
        @include assert {
          @include output {
            @include md\:-m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-mx-1\.5	") {
        @include assert {
          @include output {
            @include md\:-mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.375rem;
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-my-1\.5	") {
        @include assert {
          @include output {
            @include md\:-my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.375rem;
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-ms-1\.5	") {
        @include assert {
          @include output {
            @include md\:-ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-me-1\.5	") {
        @include assert {
          @include output {
            @include md\:-me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-mt-1\.5	") {
        @include assert {
          @include output {
            @include md\:-mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-mr-1\.5	") {
        @include assert {
          @include output {
            @include md\:-mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-mb-1\.5	") {
        @include assert {
          @include output {
            @include md\:-mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-ml-1\.5	") {
        @include assert {
          @include output {
            @include md\:-ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-m-2	") {
        @include assert {
          @include output {
            @include md\:-m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-mx-2	") {
        @include assert {
          @include output {
            @include md\:-mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.5rem;
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-my-2	") {
        @include assert {
          @include output {
            @include md\:-my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.5rem;
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-ms-2	") {
        @include assert {
          @include output {
            @include md\:-ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-me-2	") {
        @include assert {
          @include output {
            @include md\:-me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-mt-2	") {
        @include assert {
          @include output {
            @include md\:-mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-mr-2	") {
        @include assert {
          @include output {
            @include md\:-mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-mb-2	") {
        @include assert {
          @include output {
            @include md\:-mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-ml-2	") {
        @include assert {
          @include output {
            @include md\:-ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-m-2\.5	") {
        @include assert {
          @include output {
            @include md\:-m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-mx-2\.5	") {
        @include assert {
          @include output {
            @include md\:-mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.625rem;
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-my-2\.5	") {
        @include assert {
          @include output {
            @include md\:-my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.625rem;
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-ms-2\.5	") {
        @include assert {
          @include output {
            @include md\:-ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-me-2\.5	") {
        @include assert {
          @include output {
            @include md\:-me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-mt-2\.5	") {
        @include assert {
          @include output {
            @include md\:-mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-mr-2\.5	") {
        @include assert {
          @include output {
            @include md\:-mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-mb-2\.5	") {
        @include assert {
          @include output {
            @include md\:-mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-ml-2\.5	") {
        @include assert {
          @include output {
            @include md\:-ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-m-3	") {
        @include assert {
          @include output {
            @include md\:-m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-mx-3	") {
        @include assert {
          @include output {
            @include md\:-mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.75rem;
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-my-3	") {
        @include assert {
          @include output {
            @include md\:-my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.75rem;
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-ms-3	") {
        @include assert {
          @include output {
            @include md\:-ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-me-3	") {
        @include assert {
          @include output {
            @include md\:-me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-mt-3	") {
        @include assert {
          @include output {
            @include md\:-mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-mr-3	") {
        @include assert {
          @include output {
            @include md\:-mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-mb-3	") {
        @include assert {
          @include output {
            @include md\:-mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-ml-3	") {
        @include assert {
          @include output {
            @include md\:-ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-m-3\.5	") {
        @include assert {
          @include output {
            @include md\:-m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-mx-3\.5	") {
        @include assert {
          @include output {
            @include md\:-mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.875rem;
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-my-3\.5	") {
        @include assert {
          @include output {
            @include md\:-my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.875rem;
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-ms-3\.5	") {
        @include assert {
          @include output {
            @include md\:-ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-me-3\.5	") {
        @include assert {
          @include output {
            @include md\:-me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-mt-3\.5	") {
        @include assert {
          @include output {
            @include md\:-mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-mr-3\.5	") {
        @include assert {
          @include output {
            @include md\:-mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-mb-3\.5	") {
        @include assert {
          @include output {
            @include md\:-mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-ml-3\.5	") {
        @include assert {
          @include output {
            @include md\:-ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-m-4	") {
        @include assert {
          @include output {
            @include md\:-m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -1rem;
            }
          }
        }
      }

      @include it("md\:-mx-4	") {
        @include assert {
          @include output {
            @include md\:-mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1rem;
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("md\:-my-4	") {
        @include assert {
          @include output {
            @include md\:-my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("md\:-ms-4	") {
        @include assert {
          @include output {
            @include md\:-ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -1rem;
            }
          }
        }
      }

      @include it("md\:-me-4	") {
        @include assert {
          @include output {
            @include md\:-me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -1rem;
            }
          }
        }
      }

      @include it("md\:-mt-4	") {
        @include assert {
          @include output {
            @include md\:-mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1rem;
            }
          }
        }
      }

      @include it("md\:-mr-4	") {
        @include assert {
          @include output {
            @include md\:-mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("md\:-mb-4	") {
        @include assert {
          @include output {
            @include md\:-mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("md\:-ml-4	") {
        @include assert {
          @include output {
            @include md\:-ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1rem;
            }
          }
        }
      }

      @include it("md\:-m-5	") {
        @include assert {
          @include output {
            @include md\:-m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-mx-5	") {
        @include assert {
          @include output {
            @include md\:-mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1.25rem;
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-my-5	") {
        @include assert {
          @include output {
            @include md\:-my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1.25rem;
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-ms-5	") {
        @include assert {
          @include output {
            @include md\:-ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-me-5	") {
        @include assert {
          @include output {
            @include md\:-me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-mt-5	") {
        @include assert {
          @include output {
            @include md\:-mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-mr-5	") {
        @include assert {
          @include output {
            @include md\:-mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-mb-5	") {
        @include assert {
          @include output {
            @include md\:-mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-ml-5	") {
        @include assert {
          @include output {
            @include md\:-ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-m-6	") {
        @include assert {
          @include output {
            @include md\:-m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-mx-6	") {
        @include assert {
          @include output {
            @include md\:-mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1.5rem;
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-my-6	") {
        @include assert {
          @include output {
            @include md\:-my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1.5rem;
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-ms-6	") {
        @include assert {
          @include output {
            @include md\:-ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-me-6	") {
        @include assert {
          @include output {
            @include md\:-me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-mt-6	") {
        @include assert {
          @include output {
            @include md\:-mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-mr-6	") {
        @include assert {
          @include output {
            @include md\:-mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-mb-6	") {
        @include assert {
          @include output {
            @include md\:-mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-ml-6	") {
        @include assert {
          @include output {
            @include md\:-ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-m-7	") {
        @include assert {
          @include output {
            @include md\:-m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-mx-7	") {
        @include assert {
          @include output {
            @include md\:-mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1.75rem;
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-my-7	") {
        @include assert {
          @include output {
            @include md\:-my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1.75rem;
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-ms-7	") {
        @include assert {
          @include output {
            @include md\:-ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-me-7	") {
        @include assert {
          @include output {
            @include md\:-me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-mt-7	") {
        @include assert {
          @include output {
            @include md\:-mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-mr-7	") {
        @include assert {
          @include output {
            @include md\:-mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-mb-7	") {
        @include assert {
          @include output {
            @include md\:-mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-ml-7	") {
        @include assert {
          @include output {
            @include md\:-ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-m-8	") {
        @include assert {
          @include output {
            @include md\:-m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -2rem;
            }
          }
        }
      }

      @include it("md\:-mx-8	") {
        @include assert {
          @include output {
            @include md\:-mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2rem;
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("md\:-my-8	") {
        @include assert {
          @include output {
            @include md\:-my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2rem;
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("md\:-ms-8	") {
        @include assert {
          @include output {
            @include md\:-ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -2rem;
            }
          }
        }
      }

      @include it("md\:-me-8	") {
        @include assert {
          @include output {
            @include md\:-me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -2rem;
            }
          }
        }
      }

      @include it("md\:-mt-8	") {
        @include assert {
          @include output {
            @include md\:-mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2rem;
            }
          }
        }
      }

      @include it("md\:-mr-8	") {
        @include assert {
          @include output {
            @include md\:-mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("md\:-mb-8	") {
        @include assert {
          @include output {
            @include md\:-mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("md\:-ml-8	") {
        @include assert {
          @include output {
            @include md\:-ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2rem;
            }
          }
        }
      }

      @include it("md\:-m-9	") {
        @include assert {
          @include output {
            @include md\:-m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-mx-9	") {
        @include assert {
          @include output {
            @include md\:-mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2.25rem;
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-my-9	") {
        @include assert {
          @include output {
            @include md\:-my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2.25rem;
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-ms-9	") {
        @include assert {
          @include output {
            @include md\:-ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-me-9	") {
        @include assert {
          @include output {
            @include md\:-me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-mt-9	") {
        @include assert {
          @include output {
            @include md\:-mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-mr-9	") {
        @include assert {
          @include output {
            @include md\:-mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-mb-9	") {
        @include assert {
          @include output {
            @include md\:-mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-ml-9	") {
        @include assert {
          @include output {
            @include md\:-ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-m-10	") {
        @include assert {
          @include output {
            @include md\:-m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-mx-10	") {
        @include assert {
          @include output {
            @include md\:-mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2.5rem;
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-my-10	") {
        @include assert {
          @include output {
            @include md\:-my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2.5rem;
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-ms-10	") {
        @include assert {
          @include output {
            @include md\:-ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-me-10	") {
        @include assert {
          @include output {
            @include md\:-me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-mt-10	") {
        @include assert {
          @include output {
            @include md\:-mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-mr-10	") {
        @include assert {
          @include output {
            @include md\:-mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-mb-10	") {
        @include assert {
          @include output {
            @include md\:-mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-ml-10	") {
        @include assert {
          @include output {
            @include md\:-ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-m-11	") {
        @include assert {
          @include output {
            @include md\:-m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-mx-11	") {
        @include assert {
          @include output {
            @include md\:-mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2.75rem;
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-my-11	") {
        @include assert {
          @include output {
            @include md\:-my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2.75rem;
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-ms-11	") {
        @include assert {
          @include output {
            @include md\:-ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-me-11	") {
        @include assert {
          @include output {
            @include md\:-me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-mt-11	") {
        @include assert {
          @include output {
            @include md\:-mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-mr-11	") {
        @include assert {
          @include output {
            @include md\:-mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-mb-11	") {
        @include assert {
          @include output {
            @include md\:-mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-ml-11	") {
        @include assert {
          @include output {
            @include md\:-ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-m-12	") {
        @include assert {
          @include output {
            @include md\:-m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -3rem;
            }
          }
        }
      }

      @include it("md\:-mx-12	") {
        @include assert {
          @include output {
            @include md\:-mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -3rem;
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("md\:-my-12	") {
        @include assert {
          @include output {
            @include md\:-my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -3rem;
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("md\:-ms-12	") {
        @include assert {
          @include output {
            @include md\:-ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -3rem;
            }
          }
        }
      }

      @include it("md\:-me-12	") {
        @include assert {
          @include output {
            @include md\:-me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -3rem;
            }
          }
        }
      }

      @include it("md\:-mt-12	") {
        @include assert {
          @include output {
            @include md\:-mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -3rem;
            }
          }
        }
      }

      @include it("md\:-mr-12	") {
        @include assert {
          @include output {
            @include md\:-mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("md\:-mb-12	") {
        @include assert {
          @include output {
            @include md\:-mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("md\:-ml-12	") {
        @include assert {
          @include output {
            @include md\:-ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -3rem;
            }
          }
        }
      }

      @include it("md\:-m-14	") {
        @include assert {
          @include output {
            @include md\:-m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-mx-14	") {
        @include assert {
          @include output {
            @include md\:-mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -3.5rem;
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-my-14	") {
        @include assert {
          @include output {
            @include md\:-my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -3.5rem;
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-ms-14	") {
        @include assert {
          @include output {
            @include md\:-ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-me-14	") {
        @include assert {
          @include output {
            @include md\:-me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-mt-14	") {
        @include assert {
          @include output {
            @include md\:-mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-mr-14	") {
        @include assert {
          @include output {
            @include md\:-mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-mb-14	") {
        @include assert {
          @include output {
            @include md\:-mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-ml-14	") {
        @include assert {
          @include output {
            @include md\:-ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-m-16	") {
        @include assert {
          @include output {
            @include md\:-m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -4rem;
            }
          }
        }
      }

      @include it("md\:-mx-16	") {
        @include assert {
          @include output {
            @include md\:-mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -4rem;
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("md\:-my-16	") {
        @include assert {
          @include output {
            @include md\:-my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -4rem;
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("md\:-ms-16	") {
        @include assert {
          @include output {
            @include md\:-ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -4rem;
            }
          }
        }
      }

      @include it("md\:-me-16	") {
        @include assert {
          @include output {
            @include md\:-me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -4rem;
            }
          }
        }
      }

      @include it("md\:-mt-16	") {
        @include assert {
          @include output {
            @include md\:-mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -4rem;
            }
          }
        }
      }

      @include it("md\:-mr-16	") {
        @include assert {
          @include output {
            @include md\:-mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("md\:-mb-16	") {
        @include assert {
          @include output {
            @include md\:-mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("md\:-ml-16	") {
        @include assert {
          @include output {
            @include md\:-ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -4rem;
            }
          }
        }
      }

      @include it("md\:-m-20	") {
        @include assert {
          @include output {
            @include md\:-m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -5rem;
            }
          }
        }
      }

      @include it("md\:-mx-20	") {
        @include assert {
          @include output {
            @include md\:-mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -5rem;
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("md\:-my-20	") {
        @include assert {
          @include output {
            @include md\:-my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -5rem;
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("md\:-ms-20	") {
        @include assert {
          @include output {
            @include md\:-ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -5rem;
            }
          }
        }
      }

      @include it("md\:-me-20	") {
        @include assert {
          @include output {
            @include md\:-me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -5rem;
            }
          }
        }
      }

      @include it("md\:-mt-20	") {
        @include assert {
          @include output {
            @include md\:-mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -5rem;
            }
          }
        }
      }

      @include it("md\:-mr-20	") {
        @include assert {
          @include output {
            @include md\:-mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("md\:-mb-20	") {
        @include assert {
          @include output {
            @include md\:-mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("md\:-ml-20	") {
        @include assert {
          @include output {
            @include md\:-ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -5rem;
            }
          }
        }
      }

      @include it("md\:-m-24	") {
        @include assert {
          @include output {
            @include md\:-m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -6rem;
            }
          }
        }
      }

      @include it("md\:-mx-24	") {
        @include assert {
          @include output {
            @include md\:-mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -6rem;
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("md\:-my-24	") {
        @include assert {
          @include output {
            @include md\:-my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -6rem;
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("md\:-ms-24	") {
        @include assert {
          @include output {
            @include md\:-ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -6rem;
            }
          }
        }
      }

      @include it("md\:-me-24	") {
        @include assert {
          @include output {
            @include md\:-me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -6rem;
            }
          }
        }
      }

      @include it("md\:-mt-24	") {
        @include assert {
          @include output {
            @include md\:-mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -6rem;
            }
          }
        }
      }

      @include it("md\:-mr-24	") {
        @include assert {
          @include output {
            @include md\:-mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("md\:-mb-24	") {
        @include assert {
          @include output {
            @include md\:-mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("md\:-ml-24	") {
        @include assert {
          @include output {
            @include md\:-ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -6rem;
            }
          }
        }
      }

      @include it("md\:-m-28	") {
        @include assert {
          @include output {
            @include md\:-m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -7rem;
            }
          }
        }
      }

      @include it("md\:-mx-28	") {
        @include assert {
          @include output {
            @include md\:-mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -7rem;
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("md\:-my-28	") {
        @include assert {
          @include output {
            @include md\:-my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -7rem;
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("md\:-ms-28	") {
        @include assert {
          @include output {
            @include md\:-ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -7rem;
            }
          }
        }
      }

      @include it("md\:-me-28	") {
        @include assert {
          @include output {
            @include md\:-me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -7rem;
            }
          }
        }
      }

      @include it("md\:-mt-28	") {
        @include assert {
          @include output {
            @include md\:-mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -7rem;
            }
          }
        }
      }

      @include it("md\:-mr-28	") {
        @include assert {
          @include output {
            @include md\:-mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("md\:-mb-28	") {
        @include assert {
          @include output {
            @include md\:-mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("md\:-ml-28	") {
        @include assert {
          @include output {
            @include md\:-ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -7rem;
            }
          }
        }
      }

      @include it("md\:-m-32	") {
        @include assert {
          @include output {
            @include md\:-m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -8rem;
            }
          }
        }
      }

      @include it("md\:-mx-32	") {
        @include assert {
          @include output {
            @include md\:-mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -8rem;
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("md\:-my-32	") {
        @include assert {
          @include output {
            @include md\:-my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -8rem;
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("md\:-ms-32	") {
        @include assert {
          @include output {
            @include md\:-ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -8rem;
            }
          }
        }
      }

      @include it("md\:-me-32	") {
        @include assert {
          @include output {
            @include md\:-me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -8rem;
            }
          }
        }
      }

      @include it("md\:-mt-32	") {
        @include assert {
          @include output {
            @include md\:-mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -8rem;
            }
          }
        }
      }

      @include it("md\:-mr-32	") {
        @include assert {
          @include output {
            @include md\:-mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("md\:-mb-32	") {
        @include assert {
          @include output {
            @include md\:-mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("md\:-ml-32	") {
        @include assert {
          @include output {
            @include md\:-ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -8rem;
            }
          }
        }
      }

      @include it("md\:-m-36	") {
        @include assert {
          @include output {
            @include md\:-m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -9rem;
            }
          }
        }
      }

      @include it("md\:-mx-36	") {
        @include assert {
          @include output {
            @include md\:-mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -9rem;
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("md\:-my-36	") {
        @include assert {
          @include output {
            @include md\:-my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -9rem;
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("md\:-ms-36	") {
        @include assert {
          @include output {
            @include md\:-ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -9rem;
            }
          }
        }
      }

      @include it("md\:-me-36	") {
        @include assert {
          @include output {
            @include md\:-me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -9rem;
            }
          }
        }
      }

      @include it("md\:-mt-36	") {
        @include assert {
          @include output {
            @include md\:-mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -9rem;
            }
          }
        }
      }

      @include it("md\:-mr-36	") {
        @include assert {
          @include output {
            @include md\:-mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("md\:-mb-36	") {
        @include assert {
          @include output {
            @include md\:-mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("md\:-ml-36	") {
        @include assert {
          @include output {
            @include md\:-ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -9rem;
            }
          }
        }
      }

      @include it("md\:-m-40	") {
        @include assert {
          @include output {
            @include md\:-m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -10rem;
            }
          }
        }
      }

      @include it("md\:-mx-40	") {
        @include assert {
          @include output {
            @include md\:-mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -10rem;
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("md\:-my-40	") {
        @include assert {
          @include output {
            @include md\:-my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -10rem;
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("md\:-ms-40	") {
        @include assert {
          @include output {
            @include md\:-ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -10rem;
            }
          }
        }
      }

      @include it("md\:-me-40	") {
        @include assert {
          @include output {
            @include md\:-me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -10rem;
            }
          }
        }
      }

      @include it("md\:-mt-40	") {
        @include assert {
          @include output {
            @include md\:-mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -10rem;
            }
          }
        }
      }

      @include it("md\:-mr-40	") {
        @include assert {
          @include output {
            @include md\:-mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("md\:-mb-40	") {
        @include assert {
          @include output {
            @include md\:-mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("md\:-ml-40	") {
        @include assert {
          @include output {
            @include md\:-ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -10rem;
            }
          }
        }
      }

      @include it("md\:-m-44	") {
        @include assert {
          @include output {
            @include md\:-m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -11rem;
            }
          }
        }
      }

      @include it("md\:-mx-44	") {
        @include assert {
          @include output {
            @include md\:-mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -11rem;
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("md\:-my-44	") {
        @include assert {
          @include output {
            @include md\:-my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -11rem;
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("md\:-ms-44	") {
        @include assert {
          @include output {
            @include md\:-ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -11rem;
            }
          }
        }
      }

      @include it("md\:-me-44	") {
        @include assert {
          @include output {
            @include md\:-me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -11rem;
            }
          }
        }
      }

      @include it("md\:-mt-44	") {
        @include assert {
          @include output {
            @include md\:-mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -11rem;
            }
          }
        }
      }

      @include it("md\:-mr-44	") {
        @include assert {
          @include output {
            @include md\:-mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("md\:-mb-44	") {
        @include assert {
          @include output {
            @include md\:-mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("md\:-ml-44	") {
        @include assert {
          @include output {
            @include md\:-ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -11rem;
            }
          }
        }
      }

      @include it("md\:-m-48	") {
        @include assert {
          @include output {
            @include md\:-m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -12rem;
            }
          }
        }
      }

      @include it("md\:-mx-48	") {
        @include assert {
          @include output {
            @include md\:-mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -12rem;
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("md\:-my-48	") {
        @include assert {
          @include output {
            @include md\:-my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -12rem;
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("md\:-ms-48	") {
        @include assert {
          @include output {
            @include md\:-ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -12rem;
            }
          }
        }
      }

      @include it("md\:-me-48	") {
        @include assert {
          @include output {
            @include md\:-me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -12rem;
            }
          }
        }
      }

      @include it("md\:-mt-48	") {
        @include assert {
          @include output {
            @include md\:-mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -12rem;
            }
          }
        }
      }

      @include it("md\:-mr-48	") {
        @include assert {
          @include output {
            @include md\:-mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("md\:-mb-48	") {
        @include assert {
          @include output {
            @include md\:-mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("md\:-ml-48	") {
        @include assert {
          @include output {
            @include md\:-ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -12rem;
            }
          }
        }
      }

      @include it("md\:-m-52	") {
        @include assert {
          @include output {
            @include md\:-m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -13rem;
            }
          }
        }
      }

      @include it("md\:-mx-52	") {
        @include assert {
          @include output {
            @include md\:-mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -13rem;
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("md\:-my-52	") {
        @include assert {
          @include output {
            @include md\:-my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -13rem;
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("md\:-ms-52	") {
        @include assert {
          @include output {
            @include md\:-ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -13rem;
            }
          }
        }
      }

      @include it("md\:-me-52	") {
        @include assert {
          @include output {
            @include md\:-me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -13rem;
            }
          }
        }
      }

      @include it("md\:-mt-52	") {
        @include assert {
          @include output {
            @include md\:-mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -13rem;
            }
          }
        }
      }

      @include it("md\:-mr-52	") {
        @include assert {
          @include output {
            @include md\:-mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("md\:-mb-52	") {
        @include assert {
          @include output {
            @include md\:-mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("md\:-ml-52	") {
        @include assert {
          @include output {
            @include md\:-ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -13rem;
            }
          }
        }
      }

      @include it("md\:-m-56	") {
        @include assert {
          @include output {
            @include md\:-m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -14rem;
            }
          }
        }
      }

      @include it("md\:-mx-56	") {
        @include assert {
          @include output {
            @include md\:-mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -14rem;
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("md\:-my-56	") {
        @include assert {
          @include output {
            @include md\:-my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -14rem;
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("md\:-ms-56	") {
        @include assert {
          @include output {
            @include md\:-ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -14rem;
            }
          }
        }
      }

      @include it("md\:-me-56	") {
        @include assert {
          @include output {
            @include md\:-me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -14rem;
            }
          }
        }
      }

      @include it("md\:-mt-56	") {
        @include assert {
          @include output {
            @include md\:-mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -14rem;
            }
          }
        }
      }

      @include it("md\:-mr-56	") {
        @include assert {
          @include output {
            @include md\:-mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("md\:-mb-56	") {
        @include assert {
          @include output {
            @include md\:-mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("md\:-ml-56	") {
        @include assert {
          @include output {
            @include md\:-ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -14rem;
            }
          }
        }
      }

      @include it("md\:-m-60	") {
        @include assert {
          @include output {
            @include md\:-m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -15rem;
            }
          }
        }
      }

      @include it("md\:-mx-60	") {
        @include assert {
          @include output {
            @include md\:-mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -15rem;
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("md\:-my-60	") {
        @include assert {
          @include output {
            @include md\:-my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -15rem;
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("md\:-ms-60	") {
        @include assert {
          @include output {
            @include md\:-ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -15rem;
            }
          }
        }
      }

      @include it("md\:-me-60	") {
        @include assert {
          @include output {
            @include md\:-me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -15rem;
            }
          }
        }
      }

      @include it("md\:-mt-60	") {
        @include assert {
          @include output {
            @include md\:-mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -15rem;
            }
          }
        }
      }

      @include it("md\:-mr-60	") {
        @include assert {
          @include output {
            @include md\:-mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("md\:-mb-60	") {
        @include assert {
          @include output {
            @include md\:-mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("md\:-ml-60	") {
        @include assert {
          @include output {
            @include md\:-ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -15rem;
            }
          }
        }
      }

      @include it("md\:-m-64	") {
        @include assert {
          @include output {
            @include md\:-m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -16rem;
            }
          }
        }
      }

      @include it("md\:-mx-64	") {
        @include assert {
          @include output {
            @include md\:-mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -16rem;
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("md\:-my-64	") {
        @include assert {
          @include output {
            @include md\:-my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -16rem;
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("md\:-ms-64	") {
        @include assert {
          @include output {
            @include md\:-ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -16rem;
            }
          }
        }
      }

      @include it("md\:-me-64	") {
        @include assert {
          @include output {
            @include md\:-me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -16rem;
            }
          }
        }
      }

      @include it("md\:-mt-64	") {
        @include assert {
          @include output {
            @include md\:-mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -16rem;
            }
          }
        }
      }

      @include it("md\:-mr-64	") {
        @include assert {
          @include output {
            @include md\:-mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("md\:-mb-64	") {
        @include assert {
          @include output {
            @include md\:-mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("md\:-ml-64	") {
        @include assert {
          @include output {
            @include md\:-ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -16rem;
            }
          }
        }
      }

      @include it("md\:-m-72	") {
        @include assert {
          @include output {
            @include md\:-m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -18rem;
            }
          }
        }
      }

      @include it("md\:-mx-72	") {
        @include assert {
          @include output {
            @include md\:-mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -18rem;
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("md\:-my-72	") {
        @include assert {
          @include output {
            @include md\:-my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -18rem;
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("md\:-ms-72	") {
        @include assert {
          @include output {
            @include md\:-ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -18rem;
            }
          }
        }
      }

      @include it("md\:-me-72	") {
        @include assert {
          @include output {
            @include md\:-me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -18rem;
            }
          }
        }
      }

      @include it("md\:-mt-72	") {
        @include assert {
          @include output {
            @include md\:-mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -18rem;
            }
          }
        }
      }

      @include it("md\:-mr-72	") {
        @include assert {
          @include output {
            @include md\:-mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("md\:-mb-72	") {
        @include assert {
          @include output {
            @include md\:-mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("md\:-ml-72	") {
        @include assert {
          @include output {
            @include md\:-ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -18rem;
            }
          }
        }
      }

      @include it("md\:-m-80	") {
        @include assert {
          @include output {
            @include md\:-m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -20rem;
            }
          }
        }
      }

      @include it("md\:-mx-80	") {
        @include assert {
          @include output {
            @include md\:-mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -20rem;
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("md\:-my-80	") {
        @include assert {
          @include output {
            @include md\:-my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -20rem;
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("md\:-ms-80	") {
        @include assert {
          @include output {
            @include md\:-ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -20rem;
            }
          }
        }
      }

      @include it("md\:-me-80	") {
        @include assert {
          @include output {
            @include md\:-me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -20rem;
            }
          }
        }
      }

      @include it("md\:-mt-80	") {
        @include assert {
          @include output {
            @include md\:-mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -20rem;
            }
          }
        }
      }

      @include it("md\:-mr-80	") {
        @include assert {
          @include output {
            @include md\:-mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("md\:-mb-80	") {
        @include assert {
          @include output {
            @include md\:-mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("md\:-ml-80	") {
        @include assert {
          @include output {
            @include md\:-ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -20rem;
            }
          }
        }
      }

      @include it("md\:-m-96	") {
        @include assert {
          @include output {
            @include md\:-m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -24rem;
            }
          }
        }
      }

      @include it("md\:-mx-96	") {
        @include assert {
          @include output {
            @include md\:-mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -24rem;
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("md\:-my-96	") {
        @include assert {
          @include output {
            @include md\:-my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -24rem;
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("md\:-ms-96	") {
        @include assert {
          @include output {
            @include md\:-ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -24rem;
            }
          }
        }
      }

      @include it("md\:-me-96	") {
        @include assert {
          @include output {
            @include md\:-me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -24rem;
            }
          }
        }
      }

      @include it("md\:-mt-96	") {
        @include assert {
          @include output {
            @include md\:-mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -24rem;
            }
          }
        }
      }

      @include it("md\:-mr-96	") {
        @include assert {
          @include output {
            @include md\:-mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("md\:-mb-96	") {
        @include assert {
          @include output {
            @include md\:-mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("md\:-ml-96	") {
        @include assert {
          @include output {
            @include md\:-ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -24rem;
            }
          }
        }
      }

      @include it("lg\:m-0") {
        @include assert {
          @include output {
            @include lg\:m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0px;
            }
          }
        }
      }

      @include it("lg\:mx-0") {
        @include assert {
          @include output {
            @include lg\:mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("lg\:my-0") {
        @include assert {
          @include output {
            @include lg\:my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:ms-0") {
        @include assert {
          @include output {
            @include lg\:ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("lg\:me-0") {
        @include assert {
          @include output {
            @include lg\:me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("lg\:mt-0") {
        @include assert {
          @include output {
            @include lg\:mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("lg\:mr-0") {
        @include assert {
          @include output {
            @include lg\:mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("lg\:mb-0") {
        @include assert {
          @include output {
            @include lg\:mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:ml-0") {
        @include assert {
          @include output {
            @include lg\:ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("lg\:m-px") {
        @include assert {
          @include output {
            @include lg\:m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 1px;
            }
          }
        }
      }

      @include it("lg\:mx-px") {
        @include assert {
          @include output {
            @include lg\:mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1px;
              margin-right: 1px;
            }
          }
        }
      }

      @include it("lg\:my-px") {
        @include assert {
          @include output {
            @include lg\:my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1px;
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("lg\:ms-px") {
        @include assert {
          @include output {
            @include lg\:ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 1px;
            }
          }
        }
      }

      @include it("lg\:me-px") {
        @include assert {
          @include output {
            @include lg\:me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 1px;
            }
          }
        }
      }

      @include it("lg\:mt-px") {
        @include assert {
          @include output {
            @include lg\:mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1px;
            }
          }
        }
      }

      @include it("lg\:mr-px") {
        @include assert {
          @include output {
            @include lg\:mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 1px;
            }
          }
        }
      }

      @include it("lg\:mb-px") {
        @include assert {
          @include output {
            @include lg\:mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("lg\:ml-px") {
        @include assert {
          @include output {
            @include lg\:ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1px;
            }
          }
        }
      }

      @include it("lg\:m-0\.5") {
        @include assert {
          @include output {
            @include lg\:m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:mx-0\.5") {
        @include assert {
          @include output {
            @include lg\:mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.125rem;
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:my-0\.5") {
        @include assert {
          @include output {
            @include lg\:my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.125rem;
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:ms-0\.5") {
        @include assert {
          @include output {
            @include lg\:ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:me-0\.5") {
        @include assert {
          @include output {
            @include lg\:me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:mt-0\.5") {
        @include assert {
          @include output {
            @include lg\:mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:mr-0\.5") {
        @include assert {
          @include output {
            @include lg\:mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:mb-0\.5") {
        @include assert {
          @include output {
            @include lg\:mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:ml-0\.5") {
        @include assert {
          @include output {
            @include lg\:ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:m-1") {
        @include assert {
          @include output {
            @include lg\:m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:mx-1") {
        @include assert {
          @include output {
            @include lg\:mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.25rem;
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:my-1") {
        @include assert {
          @include output {
            @include lg\:my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.25rem;
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:ms-1") {
        @include assert {
          @include output {
            @include lg\:ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:me-1") {
        @include assert {
          @include output {
            @include lg\:me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:mt-1") {
        @include assert {
          @include output {
            @include lg\:mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:mr-1") {
        @include assert {
          @include output {
            @include lg\:mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:mb-1") {
        @include assert {
          @include output {
            @include lg\:mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:ml-1") {
        @include assert {
          @include output {
            @include lg\:ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:m-1\.5") {
        @include assert {
          @include output {
            @include lg\:m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:mx-1\.5") {
        @include assert {
          @include output {
            @include lg\:mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.375rem;
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:my-1\.5") {
        @include assert {
          @include output {
            @include lg\:my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.375rem;
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:ms-1\.5") {
        @include assert {
          @include output {
            @include lg\:ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:me-1\.5") {
        @include assert {
          @include output {
            @include lg\:me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:mt-1\.5") {
        @include assert {
          @include output {
            @include lg\:mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:mr-1\.5") {
        @include assert {
          @include output {
            @include lg\:mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:mb-1\.5") {
        @include assert {
          @include output {
            @include lg\:mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:ml-1\.5") {
        @include assert {
          @include output {
            @include lg\:ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:m-2") {
        @include assert {
          @include output {
            @include lg\:m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:mx-2") {
        @include assert {
          @include output {
            @include lg\:mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.5rem;
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:my-2") {
        @include assert {
          @include output {
            @include lg\:my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.5rem;
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:ms-2") {
        @include assert {
          @include output {
            @include lg\:ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:me-2") {
        @include assert {
          @include output {
            @include lg\:me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:mt-2") {
        @include assert {
          @include output {
            @include lg\:mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:mr-2") {
        @include assert {
          @include output {
            @include lg\:mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:mb-2") {
        @include assert {
          @include output {
            @include lg\:mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:ml-2") {
        @include assert {
          @include output {
            @include lg\:ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:m-2\.5") {
        @include assert {
          @include output {
            @include lg\:m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:mx-2\.5") {
        @include assert {
          @include output {
            @include lg\:mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.625rem;
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:my-2\.5") {
        @include assert {
          @include output {
            @include lg\:my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.625rem;
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:ms-2\.5") {
        @include assert {
          @include output {
            @include lg\:ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:me-2\.5") {
        @include assert {
          @include output {
            @include lg\:me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:mt-2\.5") {
        @include assert {
          @include output {
            @include lg\:mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:mr-2\.5") {
        @include assert {
          @include output {
            @include lg\:mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:mb-2\.5") {
        @include assert {
          @include output {
            @include lg\:mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:ml-2\.5") {
        @include assert {
          @include output {
            @include lg\:ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:m-3") {
        @include assert {
          @include output {
            @include lg\:m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:mx-3") {
        @include assert {
          @include output {
            @include lg\:mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.75rem;
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:my-3") {
        @include assert {
          @include output {
            @include lg\:my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.75rem;
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:ms-3") {
        @include assert {
          @include output {
            @include lg\:ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:me-3") {
        @include assert {
          @include output {
            @include lg\:me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:mt-3") {
        @include assert {
          @include output {
            @include lg\:mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:mr-3") {
        @include assert {
          @include output {
            @include lg\:mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:mb-3") {
        @include assert {
          @include output {
            @include lg\:mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:ml-3") {
        @include assert {
          @include output {
            @include lg\:ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:m-3\.5") {
        @include assert {
          @include output {
            @include lg\:m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:mx-3\.5") {
        @include assert {
          @include output {
            @include lg\:mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.875rem;
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:my-3\.5") {
        @include assert {
          @include output {
            @include lg\:my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.875rem;
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:ms-3\.5") {
        @include assert {
          @include output {
            @include lg\:ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:me-3\.5") {
        @include assert {
          @include output {
            @include lg\:me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:mt-3\.5") {
        @include assert {
          @include output {
            @include lg\:mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:mr-3\.5") {
        @include assert {
          @include output {
            @include lg\:mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:mb-3\.5") {
        @include assert {
          @include output {
            @include lg\:mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:ml-3\.5") {
        @include assert {
          @include output {
            @include lg\:ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:m-4") {
        @include assert {
          @include output {
            @include lg\:m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 1rem;
            }
          }
        }
      }

      @include it("lg\:mx-4") {
        @include assert {
          @include output {
            @include lg\:mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("lg\:my-4") {
        @include assert {
          @include output {
            @include lg\:my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("lg\:ms-4") {
        @include assert {
          @include output {
            @include lg\:ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 1rem;
            }
          }
        }
      }

      @include it("lg\:me-4") {
        @include assert {
          @include output {
            @include lg\:me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 1rem;
            }
          }
        }
      }

      @include it("lg\:mt-4") {
        @include assert {
          @include output {
            @include lg\:mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1rem;
            }
          }
        }
      }

      @include it("lg\:mr-4") {
        @include assert {
          @include output {
            @include lg\:mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("lg\:mb-4") {
        @include assert {
          @include output {
            @include lg\:mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("lg\:ml-4") {
        @include assert {
          @include output {
            @include lg\:ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1rem;
            }
          }
        }
      }

      @include it("lg\:m-5") {
        @include assert {
          @include output {
            @include lg\:m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:mx-5") {
        @include assert {
          @include output {
            @include lg\:mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1.25rem;
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:my-5") {
        @include assert {
          @include output {
            @include lg\:my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1.25rem;
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:ms-5") {
        @include assert {
          @include output {
            @include lg\:ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:me-5") {
        @include assert {
          @include output {
            @include lg\:me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:mt-5") {
        @include assert {
          @include output {
            @include lg\:mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:mr-5") {
        @include assert {
          @include output {
            @include lg\:mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:mb-5") {
        @include assert {
          @include output {
            @include lg\:mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:ml-5") {
        @include assert {
          @include output {
            @include lg\:ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:m-6") {
        @include assert {
          @include output {
            @include lg\:m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:mx-6") {
        @include assert {
          @include output {
            @include lg\:mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1.5rem;
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:my-6") {
        @include assert {
          @include output {
            @include lg\:my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1.5rem;
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:ms-6") {
        @include assert {
          @include output {
            @include lg\:ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:me-6") {
        @include assert {
          @include output {
            @include lg\:me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:mt-6") {
        @include assert {
          @include output {
            @include lg\:mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:mr-6") {
        @include assert {
          @include output {
            @include lg\:mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:mb-6") {
        @include assert {
          @include output {
            @include lg\:mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:ml-6") {
        @include assert {
          @include output {
            @include lg\:ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:m-7") {
        @include assert {
          @include output {
            @include lg\:m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:mx-7") {
        @include assert {
          @include output {
            @include lg\:mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1.75rem;
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:my-7") {
        @include assert {
          @include output {
            @include lg\:my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1.75rem;
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:ms-7") {
        @include assert {
          @include output {
            @include lg\:ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:me-7") {
        @include assert {
          @include output {
            @include lg\:me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:mt-7") {
        @include assert {
          @include output {
            @include lg\:mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:mr-7") {
        @include assert {
          @include output {
            @include lg\:mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:mb-7") {
        @include assert {
          @include output {
            @include lg\:mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:ml-7") {
        @include assert {
          @include output {
            @include lg\:ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:m-8") {
        @include assert {
          @include output {
            @include lg\:m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 2rem;
            }
          }
        }
      }

      @include it("lg\:mx-8") {
        @include assert {
          @include output {
            @include lg\:mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2rem;
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("lg\:my-8") {
        @include assert {
          @include output {
            @include lg\:my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2rem;
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("lg\:ms-8") {
        @include assert {
          @include output {
            @include lg\:ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 2rem;
            }
          }
        }
      }

      @include it("lg\:me-8") {
        @include assert {
          @include output {
            @include lg\:me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 2rem;
            }
          }
        }
      }

      @include it("lg\:mt-8") {
        @include assert {
          @include output {
            @include lg\:mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2rem;
            }
          }
        }
      }

      @include it("lg\:mr-8") {
        @include assert {
          @include output {
            @include lg\:mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("lg\:mb-8") {
        @include assert {
          @include output {
            @include lg\:mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("lg\:ml-8") {
        @include assert {
          @include output {
            @include lg\:ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2rem;
            }
          }
        }
      }

      @include it("lg\:m-9") {
        @include assert {
          @include output {
            @include lg\:m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:mx-9") {
        @include assert {
          @include output {
            @include lg\:mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2.25rem;
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:my-9") {
        @include assert {
          @include output {
            @include lg\:my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2.25rem;
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:ms-9") {
        @include assert {
          @include output {
            @include lg\:ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:me-9") {
        @include assert {
          @include output {
            @include lg\:me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:mt-9") {
        @include assert {
          @include output {
            @include lg\:mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:mr-9") {
        @include assert {
          @include output {
            @include lg\:mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:mb-9") {
        @include assert {
          @include output {
            @include lg\:mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:ml-9") {
        @include assert {
          @include output {
            @include lg\:ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:m-10") {
        @include assert {
          @include output {
            @include lg\:m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:mx-10") {
        @include assert {
          @include output {
            @include lg\:mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2.5rem;
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:my-10") {
        @include assert {
          @include output {
            @include lg\:my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2.5rem;
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:ms-10") {
        @include assert {
          @include output {
            @include lg\:ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:me-10") {
        @include assert {
          @include output {
            @include lg\:me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:mt-10") {
        @include assert {
          @include output {
            @include lg\:mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:mr-10") {
        @include assert {
          @include output {
            @include lg\:mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:mb-10") {
        @include assert {
          @include output {
            @include lg\:mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:ml-10") {
        @include assert {
          @include output {
            @include lg\:ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:m-11") {
        @include assert {
          @include output {
            @include lg\:m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:mx-11") {
        @include assert {
          @include output {
            @include lg\:mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2.75rem;
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:my-11") {
        @include assert {
          @include output {
            @include lg\:my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2.75rem;
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:ms-11") {
        @include assert {
          @include output {
            @include lg\:ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:me-11") {
        @include assert {
          @include output {
            @include lg\:me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:mt-11") {
        @include assert {
          @include output {
            @include lg\:mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:mr-11") {
        @include assert {
          @include output {
            @include lg\:mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:mb-11") {
        @include assert {
          @include output {
            @include lg\:mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:ml-11") {
        @include assert {
          @include output {
            @include lg\:ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:m-12") {
        @include assert {
          @include output {
            @include lg\:m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 3rem;
            }
          }
        }
      }

      @include it("lg\:mx-12") {
        @include assert {
          @include output {
            @include lg\:mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 3rem;
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("lg\:my-12") {
        @include assert {
          @include output {
            @include lg\:my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 3rem;
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("lg\:ms-12") {
        @include assert {
          @include output {
            @include lg\:ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 3rem;
            }
          }
        }
      }

      @include it("lg\:me-12") {
        @include assert {
          @include output {
            @include lg\:me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 3rem;
            }
          }
        }
      }

      @include it("lg\:mt-12") {
        @include assert {
          @include output {
            @include lg\:mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 3rem;
            }
          }
        }
      }

      @include it("lg\:mr-12") {
        @include assert {
          @include output {
            @include lg\:mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("lg\:mb-12") {
        @include assert {
          @include output {
            @include lg\:mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("lg\:ml-12") {
        @include assert {
          @include output {
            @include lg\:ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 3rem;
            }
          }
        }
      }

      @include it("lg\:m-14") {
        @include assert {
          @include output {
            @include lg\:m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:mx-14") {
        @include assert {
          @include output {
            @include lg\:mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 3.5rem;
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:my-14") {
        @include assert {
          @include output {
            @include lg\:my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 3.5rem;
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:ms-14") {
        @include assert {
          @include output {
            @include lg\:ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:me-14") {
        @include assert {
          @include output {
            @include lg\:me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:mt-14") {
        @include assert {
          @include output {
            @include lg\:mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:mr-14") {
        @include assert {
          @include output {
            @include lg\:mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:mb-14") {
        @include assert {
          @include output {
            @include lg\:mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:ml-14") {
        @include assert {
          @include output {
            @include lg\:ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:m-16") {
        @include assert {
          @include output {
            @include lg\:m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 4rem;
            }
          }
        }
      }

      @include it("lg\:mx-16") {
        @include assert {
          @include output {
            @include lg\:mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 4rem;
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("lg\:my-16") {
        @include assert {
          @include output {
            @include lg\:my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 4rem;
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("lg\:ms-16") {
        @include assert {
          @include output {
            @include lg\:ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 4rem;
            }
          }
        }
      }

      @include it("lg\:me-16") {
        @include assert {
          @include output {
            @include lg\:me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 4rem;
            }
          }
        }
      }

      @include it("lg\:mt-16") {
        @include assert {
          @include output {
            @include lg\:mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 4rem;
            }
          }
        }
      }

      @include it("lg\:mr-16") {
        @include assert {
          @include output {
            @include lg\:mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("lg\:mb-16") {
        @include assert {
          @include output {
            @include lg\:mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("lg\:ml-16") {
        @include assert {
          @include output {
            @include lg\:ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 4rem;
            }
          }
        }
      }

      @include it("lg\:m-20") {
        @include assert {
          @include output {
            @include lg\:m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 5rem;
            }
          }
        }
      }

      @include it("lg\:mx-20") {
        @include assert {
          @include output {
            @include lg\:mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 5rem;
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("lg\:my-20") {
        @include assert {
          @include output {
            @include lg\:my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 5rem;
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("lg\:ms-20") {
        @include assert {
          @include output {
            @include lg\:ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 5rem;
            }
          }
        }
      }

      @include it("lg\:me-20") {
        @include assert {
          @include output {
            @include lg\:me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 5rem;
            }
          }
        }
      }

      @include it("lg\:mt-20") {
        @include assert {
          @include output {
            @include lg\:mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 5rem;
            }
          }
        }
      }

      @include it("lg\:mr-20") {
        @include assert {
          @include output {
            @include lg\:mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("lg\:mb-20") {
        @include assert {
          @include output {
            @include lg\:mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("lg\:ml-20") {
        @include assert {
          @include output {
            @include lg\:ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 5rem;
            }
          }
        }
      }

      @include it("lg\:m-24") {
        @include assert {
          @include output {
            @include lg\:m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 6rem;
            }
          }
        }
      }

      @include it("lg\:mx-24") {
        @include assert {
          @include output {
            @include lg\:mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 6rem;
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("lg\:my-24") {
        @include assert {
          @include output {
            @include lg\:my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 6rem;
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("lg\:ms-24") {
        @include assert {
          @include output {
            @include lg\:ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 6rem;
            }
          }
        }
      }

      @include it("lg\:me-24") {
        @include assert {
          @include output {
            @include lg\:me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 6rem;
            }
          }
        }
      }

      @include it("lg\:mt-24") {
        @include assert {
          @include output {
            @include lg\:mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 6rem;
            }
          }
        }
      }

      @include it("lg\:mr-24") {
        @include assert {
          @include output {
            @include lg\:mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("lg\:mb-24") {
        @include assert {
          @include output {
            @include lg\:mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("lg\:ml-24") {
        @include assert {
          @include output {
            @include lg\:ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 6rem;
            }
          }
        }
      }

      @include it("lg\:m-28") {
        @include assert {
          @include output {
            @include lg\:m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 7rem;
            }
          }
        }
      }

      @include it("lg\:mx-28") {
        @include assert {
          @include output {
            @include lg\:mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 7rem;
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("lg\:my-28") {
        @include assert {
          @include output {
            @include lg\:my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 7rem;
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("lg\:ms-28") {
        @include assert {
          @include output {
            @include lg\:ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 7rem;
            }
          }
        }
      }

      @include it("lg\:me-28") {
        @include assert {
          @include output {
            @include lg\:me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 7rem;
            }
          }
        }
      }

      @include it("lg\:mt-28") {
        @include assert {
          @include output {
            @include lg\:mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 7rem;
            }
          }
        }
      }

      @include it("lg\:mr-28") {
        @include assert {
          @include output {
            @include lg\:mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("lg\:mb-28") {
        @include assert {
          @include output {
            @include lg\:mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("lg\:ml-28") {
        @include assert {
          @include output {
            @include lg\:ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 7rem;
            }
          }
        }
      }

      @include it("lg\:m-32") {
        @include assert {
          @include output {
            @include lg\:m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 8rem;
            }
          }
        }
      }

      @include it("lg\:mx-32") {
        @include assert {
          @include output {
            @include lg\:mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 8rem;
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("lg\:my-32") {
        @include assert {
          @include output {
            @include lg\:my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 8rem;
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("lg\:ms-32") {
        @include assert {
          @include output {
            @include lg\:ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 8rem;
            }
          }
        }
      }

      @include it("lg\:me-32") {
        @include assert {
          @include output {
            @include lg\:me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 8rem;
            }
          }
        }
      }

      @include it("lg\:mt-32") {
        @include assert {
          @include output {
            @include lg\:mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 8rem;
            }
          }
        }
      }

      @include it("lg\:mr-32") {
        @include assert {
          @include output {
            @include lg\:mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("lg\:mb-32") {
        @include assert {
          @include output {
            @include lg\:mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("lg\:ml-32") {
        @include assert {
          @include output {
            @include lg\:ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 8rem;
            }
          }
        }
      }

      @include it("lg\:m-36") {
        @include assert {
          @include output {
            @include lg\:m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 9rem;
            }
          }
        }
      }

      @include it("lg\:mx-36") {
        @include assert {
          @include output {
            @include lg\:mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 9rem;
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("lg\:my-36") {
        @include assert {
          @include output {
            @include lg\:my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 9rem;
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("lg\:ms-36") {
        @include assert {
          @include output {
            @include lg\:ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 9rem;
            }
          }
        }
      }

      @include it("lg\:me-36") {
        @include assert {
          @include output {
            @include lg\:me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 9rem;
            }
          }
        }
      }

      @include it("lg\:mt-36") {
        @include assert {
          @include output {
            @include lg\:mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 9rem;
            }
          }
        }
      }

      @include it("lg\:mr-36") {
        @include assert {
          @include output {
            @include lg\:mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("lg\:mb-36") {
        @include assert {
          @include output {
            @include lg\:mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("lg\:ml-36") {
        @include assert {
          @include output {
            @include lg\:ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 9rem;
            }
          }
        }
      }

      @include it("lg\:m-40") {
        @include assert {
          @include output {
            @include lg\:m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 10rem;
            }
          }
        }
      }

      @include it("lg\:mx-40") {
        @include assert {
          @include output {
            @include lg\:mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 10rem;
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("lg\:my-40") {
        @include assert {
          @include output {
            @include lg\:my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 10rem;
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("lg\:ms-40") {
        @include assert {
          @include output {
            @include lg\:ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 10rem;
            }
          }
        }
      }

      @include it("lg\:me-40") {
        @include assert {
          @include output {
            @include lg\:me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 10rem;
            }
          }
        }
      }

      @include it("lg\:mt-40") {
        @include assert {
          @include output {
            @include lg\:mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 10rem;
            }
          }
        }
      }

      @include it("lg\:mr-40") {
        @include assert {
          @include output {
            @include lg\:mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("lg\:mb-40") {
        @include assert {
          @include output {
            @include lg\:mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("lg\:ml-40") {
        @include assert {
          @include output {
            @include lg\:ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 10rem;
            }
          }
        }
      }

      @include it("lg\:m-44") {
        @include assert {
          @include output {
            @include lg\:m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 11rem;
            }
          }
        }
      }

      @include it("lg\:mx-44") {
        @include assert {
          @include output {
            @include lg\:mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 11rem;
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("lg\:my-44") {
        @include assert {
          @include output {
            @include lg\:my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 11rem;
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("lg\:ms-44") {
        @include assert {
          @include output {
            @include lg\:ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 11rem;
            }
          }
        }
      }

      @include it("lg\:me-44") {
        @include assert {
          @include output {
            @include lg\:me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 11rem;
            }
          }
        }
      }

      @include it("lg\:mt-44") {
        @include assert {
          @include output {
            @include lg\:mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 11rem;
            }
          }
        }
      }

      @include it("lg\:mr-44") {
        @include assert {
          @include output {
            @include lg\:mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("lg\:mb-44") {
        @include assert {
          @include output {
            @include lg\:mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("lg\:ml-44") {
        @include assert {
          @include output {
            @include lg\:ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 11rem;
            }
          }
        }
      }

      @include it("lg\:m-48") {
        @include assert {
          @include output {
            @include lg\:m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 12rem;
            }
          }
        }
      }

      @include it("lg\:mx-48") {
        @include assert {
          @include output {
            @include lg\:mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 12rem;
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("lg\:my-48") {
        @include assert {
          @include output {
            @include lg\:my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 12rem;
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("lg\:ms-48") {
        @include assert {
          @include output {
            @include lg\:ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 12rem;
            }
          }
        }
      }

      @include it("lg\:me-48") {
        @include assert {
          @include output {
            @include lg\:me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 12rem;
            }
          }
        }
      }

      @include it("lg\:mt-48") {
        @include assert {
          @include output {
            @include lg\:mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 12rem;
            }
          }
        }
      }

      @include it("lg\:mr-48") {
        @include assert {
          @include output {
            @include lg\:mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("lg\:mb-48") {
        @include assert {
          @include output {
            @include lg\:mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("lg\:ml-48") {
        @include assert {
          @include output {
            @include lg\:ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 12rem;
            }
          }
        }
      }

      @include it("lg\:m-52") {
        @include assert {
          @include output {
            @include lg\:m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 13rem;
            }
          }
        }
      }

      @include it("lg\:mx-52") {
        @include assert {
          @include output {
            @include lg\:mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 13rem;
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("lg\:my-52") {
        @include assert {
          @include output {
            @include lg\:my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 13rem;
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("lg\:ms-52") {
        @include assert {
          @include output {
            @include lg\:ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 13rem;
            }
          }
        }
      }

      @include it("lg\:me-52") {
        @include assert {
          @include output {
            @include lg\:me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 13rem;
            }
          }
        }
      }

      @include it("lg\:mt-52") {
        @include assert {
          @include output {
            @include lg\:mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 13rem;
            }
          }
        }
      }

      @include it("lg\:mr-52") {
        @include assert {
          @include output {
            @include lg\:mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("lg\:mb-52") {
        @include assert {
          @include output {
            @include lg\:mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("lg\:ml-52") {
        @include assert {
          @include output {
            @include lg\:ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 13rem;
            }
          }
        }
      }

      @include it("lg\:m-56") {
        @include assert {
          @include output {
            @include lg\:m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 14rem;
            }
          }
        }
      }

      @include it("lg\:mx-56") {
        @include assert {
          @include output {
            @include lg\:mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 14rem;
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("lg\:my-56") {
        @include assert {
          @include output {
            @include lg\:my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 14rem;
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("lg\:ms-56") {
        @include assert {
          @include output {
            @include lg\:ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 14rem;
            }
          }
        }
      }

      @include it("lg\:me-56") {
        @include assert {
          @include output {
            @include lg\:me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 14rem;
            }
          }
        }
      }

      @include it("lg\:mt-56") {
        @include assert {
          @include output {
            @include lg\:mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 14rem;
            }
          }
        }
      }

      @include it("lg\:mr-56") {
        @include assert {
          @include output {
            @include lg\:mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("lg\:mb-56") {
        @include assert {
          @include output {
            @include lg\:mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("lg\:ml-56") {
        @include assert {
          @include output {
            @include lg\:ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 14rem;
            }
          }
        }
      }

      @include it("lg\:m-60") {
        @include assert {
          @include output {
            @include lg\:m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 15rem;
            }
          }
        }
      }

      @include it("lg\:mx-60") {
        @include assert {
          @include output {
            @include lg\:mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 15rem;
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("lg\:my-60") {
        @include assert {
          @include output {
            @include lg\:my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 15rem;
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("lg\:ms-60") {
        @include assert {
          @include output {
            @include lg\:ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 15rem;
            }
          }
        }
      }

      @include it("lg\:me-60") {
        @include assert {
          @include output {
            @include lg\:me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 15rem;
            }
          }
        }
      }

      @include it("lg\:mt-60") {
        @include assert {
          @include output {
            @include lg\:mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 15rem;
            }
          }
        }
      }

      @include it("lg\:mr-60") {
        @include assert {
          @include output {
            @include lg\:mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("lg\:mb-60") {
        @include assert {
          @include output {
            @include lg\:mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("lg\:ml-60") {
        @include assert {
          @include output {
            @include lg\:ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 15rem;
            }
          }
        }
      }

      @include it("lg\:m-64") {
        @include assert {
          @include output {
            @include lg\:m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 16rem;
            }
          }
        }
      }

      @include it("lg\:mx-64") {
        @include assert {
          @include output {
            @include lg\:mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 16rem;
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("lg\:my-64") {
        @include assert {
          @include output {
            @include lg\:my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 16rem;
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("lg\:ms-64") {
        @include assert {
          @include output {
            @include lg\:ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 16rem;
            }
          }
        }
      }

      @include it("lg\:me-64") {
        @include assert {
          @include output {
            @include lg\:me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 16rem;
            }
          }
        }
      }

      @include it("lg\:mt-64") {
        @include assert {
          @include output {
            @include lg\:mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 16rem;
            }
          }
        }
      }

      @include it("lg\:mr-64") {
        @include assert {
          @include output {
            @include lg\:mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("lg\:mb-64") {
        @include assert {
          @include output {
            @include lg\:mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("lg\:ml-64") {
        @include assert {
          @include output {
            @include lg\:ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 16rem;
            }
          }
        }
      }

      @include it("lg\:m-72") {
        @include assert {
          @include output {
            @include lg\:m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 18rem;
            }
          }
        }
      }

      @include it("lg\:mx-72") {
        @include assert {
          @include output {
            @include lg\:mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 18rem;
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("lg\:my-72") {
        @include assert {
          @include output {
            @include lg\:my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 18rem;
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("lg\:ms-72") {
        @include assert {
          @include output {
            @include lg\:ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 18rem;
            }
          }
        }
      }

      @include it("lg\:me-72") {
        @include assert {
          @include output {
            @include lg\:me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 18rem;
            }
          }
        }
      }

      @include it("lg\:mt-72") {
        @include assert {
          @include output {
            @include lg\:mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 18rem;
            }
          }
        }
      }

      @include it("lg\:mr-72") {
        @include assert {
          @include output {
            @include lg\:mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("lg\:mb-72") {
        @include assert {
          @include output {
            @include lg\:mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("lg\:ml-72") {
        @include assert {
          @include output {
            @include lg\:ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 18rem;
            }
          }
        }
      }

      @include it("lg\:m-80") {
        @include assert {
          @include output {
            @include lg\:m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 20rem;
            }
          }
        }
      }

      @include it("lg\:mx-80") {
        @include assert {
          @include output {
            @include lg\:mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 20rem;
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("lg\:my-80") {
        @include assert {
          @include output {
            @include lg\:my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 20rem;
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("lg\:ms-80") {
        @include assert {
          @include output {
            @include lg\:ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 20rem;
            }
          }
        }
      }

      @include it("lg\:me-80") {
        @include assert {
          @include output {
            @include lg\:me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 20rem;
            }
          }
        }
      }

      @include it("lg\:mt-80") {
        @include assert {
          @include output {
            @include lg\:mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 20rem;
            }
          }
        }
      }

      @include it("lg\:mr-80") {
        @include assert {
          @include output {
            @include lg\:mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("lg\:mb-80") {
        @include assert {
          @include output {
            @include lg\:mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("lg\:ml-80") {
        @include assert {
          @include output {
            @include lg\:ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 20rem;
            }
          }
        }
      }

      @include it("lg\:m-96") {
        @include assert {
          @include output {
            @include lg\:m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 24rem;
            }
          }
        }
      }

      @include it("lg\:mx-96") {
        @include assert {
          @include output {
            @include lg\:mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 24rem;
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("lg\:my-96") {
        @include assert {
          @include output {
            @include lg\:my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 24rem;
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("lg\:ms-96") {
        @include assert {
          @include output {
            @include lg\:ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 24rem;
            }
          }
        }
      }

      @include it("lg\:me-96") {
        @include assert {
          @include output {
            @include lg\:me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 24rem;
            }
          }
        }
      }

      @include it("lg\:mt-96") {
        @include assert {
          @include output {
            @include lg\:mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 24rem;
            }
          }
        }
      }

      @include it("lg\:mr-96") {
        @include assert {
          @include output {
            @include lg\:mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("lg\:mb-96") {
        @include assert {
          @include output {
            @include lg\:mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("lg\:ml-96") {
        @include assert {
          @include output {
            @include lg\:ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 24rem;
            }
          }
        }
      }

      @include it("lg\:m-auto") {
        @include assert {
          @include output {
            @include lg\:m-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: auto;
            }
          }
        }
      }

      @include it("lg\:mx-auto") {
        @include assert {
          @include output {
            @include lg\:mx-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: auto;
              margin-right: auto;
            }
          }
        }
      }

      @include it("lg\:my-auto") {
        @include assert {
          @include output {
            @include lg\:my-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: auto;
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("lg\:ms-auto") {
        @include assert {
          @include output {
            @include lg\:ms-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: auto;
            }
          }
        }
      }

      @include it("lg\:me-auto") {
        @include assert {
          @include output {
            @include lg\:me-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: auto;
            }
          }
        }
      }

      @include it("lg\:mt-auto") {
        @include assert {
          @include output {
            @include lg\:mt-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: auto;
            }
          }
        }
      }

      @include it("lg\:mr-auto") {
        @include assert {
          @include output {
            @include lg\:mr-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: auto;
            }
          }
        }
      }

      @include it("lg\:mb-auto") {
        @include assert {
          @include output {
            @include lg\:mb-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("lg\:ml-auto") {
        @include assert {
          @include output {
            @include lg\:ml-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: auto;
            }
          }
        }
      }

      @include it("lg\:-m-0	") {
        @include assert {
          @include output {
            @include lg\:-m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 0px;
            }
          }
        }
      }

      @include it("lg\:-mx-0	") {
        @include assert {
          @include output {
            @include lg\:-mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("lg\:-my-0	") {
        @include assert {
          @include output {
            @include lg\:-my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:-ms-0	") {
        @include assert {
          @include output {
            @include lg\:-ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("lg\:-me-0	") {
        @include assert {
          @include output {
            @include lg\:-me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("lg\:-mt-0	") {
        @include assert {
          @include output {
            @include lg\:-mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("lg\:-mr-0	") {
        @include assert {
          @include output {
            @include lg\:-mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("lg\:-mb-0	") {
        @include assert {
          @include output {
            @include lg\:-mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:-ml-0	") {
        @include assert {
          @include output {
            @include lg\:-ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("lg\:-m-px	") {
        @include assert {
          @include output {
            @include lg\:-m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -1px;
            }
          }
        }
      }

      @include it("lg\:-mx-px	") {
        @include assert {
          @include output {
            @include lg\:-mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1px;
              margin-right: -1px;
            }
          }
        }
      }

      @include it("lg\:-my-px	") {
        @include assert {
          @include output {
            @include lg\:-my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1px;
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("lg\:-ms-px	") {
        @include assert {
          @include output {
            @include lg\:-ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -1px;
            }
          }
        }
      }

      @include it("lg\:-me-px	") {
        @include assert {
          @include output {
            @include lg\:-me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -1px;
            }
          }
        }
      }

      @include it("lg\:-mt-px	") {
        @include assert {
          @include output {
            @include lg\:-mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1px;
            }
          }
        }
      }

      @include it("lg\:-mr-px	") {
        @include assert {
          @include output {
            @include lg\:-mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -1px;
            }
          }
        }
      }

      @include it("lg\:-mb-px	") {
        @include assert {
          @include output {
            @include lg\:-mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("lg\:-ml-px	") {
        @include assert {
          @include output {
            @include lg\:-ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1px;
            }
          }
        }
      }

      @include it("lg\:-m-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-mx-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.125rem;
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-my-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.125rem;
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-ms-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-me-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-mt-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-mr-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-mb-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-ml-0\.5	") {
        @include assert {
          @include output {
            @include lg\:-ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-m-1	") {
        @include assert {
          @include output {
            @include lg\:-m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-mx-1	") {
        @include assert {
          @include output {
            @include lg\:-mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.25rem;
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-my-1	") {
        @include assert {
          @include output {
            @include lg\:-my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.25rem;
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-ms-1	") {
        @include assert {
          @include output {
            @include lg\:-ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-me-1	") {
        @include assert {
          @include output {
            @include lg\:-me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-mt-1	") {
        @include assert {
          @include output {
            @include lg\:-mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-mr-1	") {
        @include assert {
          @include output {
            @include lg\:-mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-mb-1	") {
        @include assert {
          @include output {
            @include lg\:-mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-ml-1	") {
        @include assert {
          @include output {
            @include lg\:-ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-m-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-mx-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.375rem;
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-my-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.375rem;
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-ms-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-me-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-mt-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-mr-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-mb-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-ml-1\.5	") {
        @include assert {
          @include output {
            @include lg\:-ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-m-2	") {
        @include assert {
          @include output {
            @include lg\:-m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-mx-2	") {
        @include assert {
          @include output {
            @include lg\:-mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.5rem;
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-my-2	") {
        @include assert {
          @include output {
            @include lg\:-my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.5rem;
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-ms-2	") {
        @include assert {
          @include output {
            @include lg\:-ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-me-2	") {
        @include assert {
          @include output {
            @include lg\:-me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-mt-2	") {
        @include assert {
          @include output {
            @include lg\:-mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-mr-2	") {
        @include assert {
          @include output {
            @include lg\:-mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-mb-2	") {
        @include assert {
          @include output {
            @include lg\:-mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-ml-2	") {
        @include assert {
          @include output {
            @include lg\:-ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-m-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-mx-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.625rem;
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-my-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.625rem;
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-ms-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-me-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-mt-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-mr-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-mb-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-ml-2\.5	") {
        @include assert {
          @include output {
            @include lg\:-ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-m-3	") {
        @include assert {
          @include output {
            @include lg\:-m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-mx-3	") {
        @include assert {
          @include output {
            @include lg\:-mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.75rem;
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-my-3	") {
        @include assert {
          @include output {
            @include lg\:-my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.75rem;
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-ms-3	") {
        @include assert {
          @include output {
            @include lg\:-ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-me-3	") {
        @include assert {
          @include output {
            @include lg\:-me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-mt-3	") {
        @include assert {
          @include output {
            @include lg\:-mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-mr-3	") {
        @include assert {
          @include output {
            @include lg\:-mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-mb-3	") {
        @include assert {
          @include output {
            @include lg\:-mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-ml-3	") {
        @include assert {
          @include output {
            @include lg\:-ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-m-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-mx-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.875rem;
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-my-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.875rem;
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-ms-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-me-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-mt-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-mr-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-mb-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-ml-3\.5	") {
        @include assert {
          @include output {
            @include lg\:-ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-m-4	") {
        @include assert {
          @include output {
            @include lg\:-m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -1rem;
            }
          }
        }
      }

      @include it("lg\:-mx-4	") {
        @include assert {
          @include output {
            @include lg\:-mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1rem;
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("lg\:-my-4	") {
        @include assert {
          @include output {
            @include lg\:-my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("lg\:-ms-4	") {
        @include assert {
          @include output {
            @include lg\:-ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -1rem;
            }
          }
        }
      }

      @include it("lg\:-me-4	") {
        @include assert {
          @include output {
            @include lg\:-me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -1rem;
            }
          }
        }
      }

      @include it("lg\:-mt-4	") {
        @include assert {
          @include output {
            @include lg\:-mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1rem;
            }
          }
        }
      }

      @include it("lg\:-mr-4	") {
        @include assert {
          @include output {
            @include lg\:-mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("lg\:-mb-4	") {
        @include assert {
          @include output {
            @include lg\:-mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("lg\:-ml-4	") {
        @include assert {
          @include output {
            @include lg\:-ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1rem;
            }
          }
        }
      }

      @include it("lg\:-m-5	") {
        @include assert {
          @include output {
            @include lg\:-m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-mx-5	") {
        @include assert {
          @include output {
            @include lg\:-mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1.25rem;
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-my-5	") {
        @include assert {
          @include output {
            @include lg\:-my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1.25rem;
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-ms-5	") {
        @include assert {
          @include output {
            @include lg\:-ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-me-5	") {
        @include assert {
          @include output {
            @include lg\:-me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-mt-5	") {
        @include assert {
          @include output {
            @include lg\:-mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-mr-5	") {
        @include assert {
          @include output {
            @include lg\:-mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-mb-5	") {
        @include assert {
          @include output {
            @include lg\:-mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-ml-5	") {
        @include assert {
          @include output {
            @include lg\:-ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-m-6	") {
        @include assert {
          @include output {
            @include lg\:-m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-mx-6	") {
        @include assert {
          @include output {
            @include lg\:-mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1.5rem;
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-my-6	") {
        @include assert {
          @include output {
            @include lg\:-my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1.5rem;
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-ms-6	") {
        @include assert {
          @include output {
            @include lg\:-ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-me-6	") {
        @include assert {
          @include output {
            @include lg\:-me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-mt-6	") {
        @include assert {
          @include output {
            @include lg\:-mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-mr-6	") {
        @include assert {
          @include output {
            @include lg\:-mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-mb-6	") {
        @include assert {
          @include output {
            @include lg\:-mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-ml-6	") {
        @include assert {
          @include output {
            @include lg\:-ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-m-7	") {
        @include assert {
          @include output {
            @include lg\:-m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-mx-7	") {
        @include assert {
          @include output {
            @include lg\:-mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1.75rem;
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-my-7	") {
        @include assert {
          @include output {
            @include lg\:-my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1.75rem;
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-ms-7	") {
        @include assert {
          @include output {
            @include lg\:-ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-me-7	") {
        @include assert {
          @include output {
            @include lg\:-me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-mt-7	") {
        @include assert {
          @include output {
            @include lg\:-mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-mr-7	") {
        @include assert {
          @include output {
            @include lg\:-mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-mb-7	") {
        @include assert {
          @include output {
            @include lg\:-mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-ml-7	") {
        @include assert {
          @include output {
            @include lg\:-ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-m-8	") {
        @include assert {
          @include output {
            @include lg\:-m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -2rem;
            }
          }
        }
      }

      @include it("lg\:-mx-8	") {
        @include assert {
          @include output {
            @include lg\:-mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2rem;
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("lg\:-my-8	") {
        @include assert {
          @include output {
            @include lg\:-my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2rem;
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("lg\:-ms-8	") {
        @include assert {
          @include output {
            @include lg\:-ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -2rem;
            }
          }
        }
      }

      @include it("lg\:-me-8	") {
        @include assert {
          @include output {
            @include lg\:-me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -2rem;
            }
          }
        }
      }

      @include it("lg\:-mt-8	") {
        @include assert {
          @include output {
            @include lg\:-mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2rem;
            }
          }
        }
      }

      @include it("lg\:-mr-8	") {
        @include assert {
          @include output {
            @include lg\:-mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("lg\:-mb-8	") {
        @include assert {
          @include output {
            @include lg\:-mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("lg\:-ml-8	") {
        @include assert {
          @include output {
            @include lg\:-ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2rem;
            }
          }
        }
      }

      @include it("lg\:-m-9	") {
        @include assert {
          @include output {
            @include lg\:-m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-mx-9	") {
        @include assert {
          @include output {
            @include lg\:-mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2.25rem;
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-my-9	") {
        @include assert {
          @include output {
            @include lg\:-my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2.25rem;
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-ms-9	") {
        @include assert {
          @include output {
            @include lg\:-ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-me-9	") {
        @include assert {
          @include output {
            @include lg\:-me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-mt-9	") {
        @include assert {
          @include output {
            @include lg\:-mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-mr-9	") {
        @include assert {
          @include output {
            @include lg\:-mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-mb-9	") {
        @include assert {
          @include output {
            @include lg\:-mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-ml-9	") {
        @include assert {
          @include output {
            @include lg\:-ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-m-10	") {
        @include assert {
          @include output {
            @include lg\:-m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-mx-10	") {
        @include assert {
          @include output {
            @include lg\:-mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2.5rem;
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-my-10	") {
        @include assert {
          @include output {
            @include lg\:-my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2.5rem;
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-ms-10	") {
        @include assert {
          @include output {
            @include lg\:-ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-me-10	") {
        @include assert {
          @include output {
            @include lg\:-me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-mt-10	") {
        @include assert {
          @include output {
            @include lg\:-mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-mr-10	") {
        @include assert {
          @include output {
            @include lg\:-mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-mb-10	") {
        @include assert {
          @include output {
            @include lg\:-mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-ml-10	") {
        @include assert {
          @include output {
            @include lg\:-ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-m-11	") {
        @include assert {
          @include output {
            @include lg\:-m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-mx-11	") {
        @include assert {
          @include output {
            @include lg\:-mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2.75rem;
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-my-11	") {
        @include assert {
          @include output {
            @include lg\:-my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2.75rem;
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-ms-11	") {
        @include assert {
          @include output {
            @include lg\:-ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-me-11	") {
        @include assert {
          @include output {
            @include lg\:-me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-mt-11	") {
        @include assert {
          @include output {
            @include lg\:-mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-mr-11	") {
        @include assert {
          @include output {
            @include lg\:-mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-mb-11	") {
        @include assert {
          @include output {
            @include lg\:-mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-ml-11	") {
        @include assert {
          @include output {
            @include lg\:-ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-m-12	") {
        @include assert {
          @include output {
            @include lg\:-m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -3rem;
            }
          }
        }
      }

      @include it("lg\:-mx-12	") {
        @include assert {
          @include output {
            @include lg\:-mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -3rem;
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("lg\:-my-12	") {
        @include assert {
          @include output {
            @include lg\:-my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -3rem;
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("lg\:-ms-12	") {
        @include assert {
          @include output {
            @include lg\:-ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -3rem;
            }
          }
        }
      }

      @include it("lg\:-me-12	") {
        @include assert {
          @include output {
            @include lg\:-me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -3rem;
            }
          }
        }
      }

      @include it("lg\:-mt-12	") {
        @include assert {
          @include output {
            @include lg\:-mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -3rem;
            }
          }
        }
      }

      @include it("lg\:-mr-12	") {
        @include assert {
          @include output {
            @include lg\:-mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("lg\:-mb-12	") {
        @include assert {
          @include output {
            @include lg\:-mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("lg\:-ml-12	") {
        @include assert {
          @include output {
            @include lg\:-ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -3rem;
            }
          }
        }
      }

      @include it("lg\:-m-14	") {
        @include assert {
          @include output {
            @include lg\:-m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-mx-14	") {
        @include assert {
          @include output {
            @include lg\:-mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -3.5rem;
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-my-14	") {
        @include assert {
          @include output {
            @include lg\:-my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -3.5rem;
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-ms-14	") {
        @include assert {
          @include output {
            @include lg\:-ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-me-14	") {
        @include assert {
          @include output {
            @include lg\:-me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-mt-14	") {
        @include assert {
          @include output {
            @include lg\:-mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-mr-14	") {
        @include assert {
          @include output {
            @include lg\:-mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-mb-14	") {
        @include assert {
          @include output {
            @include lg\:-mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-ml-14	") {
        @include assert {
          @include output {
            @include lg\:-ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-m-16	") {
        @include assert {
          @include output {
            @include lg\:-m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -4rem;
            }
          }
        }
      }

      @include it("lg\:-mx-16	") {
        @include assert {
          @include output {
            @include lg\:-mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -4rem;
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("lg\:-my-16	") {
        @include assert {
          @include output {
            @include lg\:-my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -4rem;
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("lg\:-ms-16	") {
        @include assert {
          @include output {
            @include lg\:-ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -4rem;
            }
          }
        }
      }

      @include it("lg\:-me-16	") {
        @include assert {
          @include output {
            @include lg\:-me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -4rem;
            }
          }
        }
      }

      @include it("lg\:-mt-16	") {
        @include assert {
          @include output {
            @include lg\:-mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -4rem;
            }
          }
        }
      }

      @include it("lg\:-mr-16	") {
        @include assert {
          @include output {
            @include lg\:-mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("lg\:-mb-16	") {
        @include assert {
          @include output {
            @include lg\:-mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("lg\:-ml-16	") {
        @include assert {
          @include output {
            @include lg\:-ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -4rem;
            }
          }
        }
      }

      @include it("lg\:-m-20	") {
        @include assert {
          @include output {
            @include lg\:-m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -5rem;
            }
          }
        }
      }

      @include it("lg\:-mx-20	") {
        @include assert {
          @include output {
            @include lg\:-mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -5rem;
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("lg\:-my-20	") {
        @include assert {
          @include output {
            @include lg\:-my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -5rem;
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("lg\:-ms-20	") {
        @include assert {
          @include output {
            @include lg\:-ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -5rem;
            }
          }
        }
      }

      @include it("lg\:-me-20	") {
        @include assert {
          @include output {
            @include lg\:-me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -5rem;
            }
          }
        }
      }

      @include it("lg\:-mt-20	") {
        @include assert {
          @include output {
            @include lg\:-mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -5rem;
            }
          }
        }
      }

      @include it("lg\:-mr-20	") {
        @include assert {
          @include output {
            @include lg\:-mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("lg\:-mb-20	") {
        @include assert {
          @include output {
            @include lg\:-mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("lg\:-ml-20	") {
        @include assert {
          @include output {
            @include lg\:-ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -5rem;
            }
          }
        }
      }

      @include it("lg\:-m-24	") {
        @include assert {
          @include output {
            @include lg\:-m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -6rem;
            }
          }
        }
      }

      @include it("lg\:-mx-24	") {
        @include assert {
          @include output {
            @include lg\:-mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -6rem;
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("lg\:-my-24	") {
        @include assert {
          @include output {
            @include lg\:-my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -6rem;
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("lg\:-ms-24	") {
        @include assert {
          @include output {
            @include lg\:-ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -6rem;
            }
          }
        }
      }

      @include it("lg\:-me-24	") {
        @include assert {
          @include output {
            @include lg\:-me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -6rem;
            }
          }
        }
      }

      @include it("lg\:-mt-24	") {
        @include assert {
          @include output {
            @include lg\:-mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -6rem;
            }
          }
        }
      }

      @include it("lg\:-mr-24	") {
        @include assert {
          @include output {
            @include lg\:-mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("lg\:-mb-24	") {
        @include assert {
          @include output {
            @include lg\:-mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("lg\:-ml-24	") {
        @include assert {
          @include output {
            @include lg\:-ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -6rem;
            }
          }
        }
      }

      @include it("lg\:-m-28	") {
        @include assert {
          @include output {
            @include lg\:-m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -7rem;
            }
          }
        }
      }

      @include it("lg\:-mx-28	") {
        @include assert {
          @include output {
            @include lg\:-mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -7rem;
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("lg\:-my-28	") {
        @include assert {
          @include output {
            @include lg\:-my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -7rem;
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("lg\:-ms-28	") {
        @include assert {
          @include output {
            @include lg\:-ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -7rem;
            }
          }
        }
      }

      @include it("lg\:-me-28	") {
        @include assert {
          @include output {
            @include lg\:-me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -7rem;
            }
          }
        }
      }

      @include it("lg\:-mt-28	") {
        @include assert {
          @include output {
            @include lg\:-mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -7rem;
            }
          }
        }
      }

      @include it("lg\:-mr-28	") {
        @include assert {
          @include output {
            @include lg\:-mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("lg\:-mb-28	") {
        @include assert {
          @include output {
            @include lg\:-mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("lg\:-ml-28	") {
        @include assert {
          @include output {
            @include lg\:-ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -7rem;
            }
          }
        }
      }

      @include it("lg\:-m-32	") {
        @include assert {
          @include output {
            @include lg\:-m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -8rem;
            }
          }
        }
      }

      @include it("lg\:-mx-32	") {
        @include assert {
          @include output {
            @include lg\:-mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -8rem;
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("lg\:-my-32	") {
        @include assert {
          @include output {
            @include lg\:-my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -8rem;
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("lg\:-ms-32	") {
        @include assert {
          @include output {
            @include lg\:-ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -8rem;
            }
          }
        }
      }

      @include it("lg\:-me-32	") {
        @include assert {
          @include output {
            @include lg\:-me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -8rem;
            }
          }
        }
      }

      @include it("lg\:-mt-32	") {
        @include assert {
          @include output {
            @include lg\:-mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -8rem;
            }
          }
        }
      }

      @include it("lg\:-mr-32	") {
        @include assert {
          @include output {
            @include lg\:-mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("lg\:-mb-32	") {
        @include assert {
          @include output {
            @include lg\:-mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("lg\:-ml-32	") {
        @include assert {
          @include output {
            @include lg\:-ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -8rem;
            }
          }
        }
      }

      @include it("lg\:-m-36	") {
        @include assert {
          @include output {
            @include lg\:-m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -9rem;
            }
          }
        }
      }

      @include it("lg\:-mx-36	") {
        @include assert {
          @include output {
            @include lg\:-mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -9rem;
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("lg\:-my-36	") {
        @include assert {
          @include output {
            @include lg\:-my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -9rem;
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("lg\:-ms-36	") {
        @include assert {
          @include output {
            @include lg\:-ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -9rem;
            }
          }
        }
      }

      @include it("lg\:-me-36	") {
        @include assert {
          @include output {
            @include lg\:-me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -9rem;
            }
          }
        }
      }

      @include it("lg\:-mt-36	") {
        @include assert {
          @include output {
            @include lg\:-mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -9rem;
            }
          }
        }
      }

      @include it("lg\:-mr-36	") {
        @include assert {
          @include output {
            @include lg\:-mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("lg\:-mb-36	") {
        @include assert {
          @include output {
            @include lg\:-mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("lg\:-ml-36	") {
        @include assert {
          @include output {
            @include lg\:-ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -9rem;
            }
          }
        }
      }

      @include it("lg\:-m-40	") {
        @include assert {
          @include output {
            @include lg\:-m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -10rem;
            }
          }
        }
      }

      @include it("lg\:-mx-40	") {
        @include assert {
          @include output {
            @include lg\:-mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -10rem;
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("lg\:-my-40	") {
        @include assert {
          @include output {
            @include lg\:-my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -10rem;
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("lg\:-ms-40	") {
        @include assert {
          @include output {
            @include lg\:-ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -10rem;
            }
          }
        }
      }

      @include it("lg\:-me-40	") {
        @include assert {
          @include output {
            @include lg\:-me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -10rem;
            }
          }
        }
      }

      @include it("lg\:-mt-40	") {
        @include assert {
          @include output {
            @include lg\:-mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -10rem;
            }
          }
        }
      }

      @include it("lg\:-mr-40	") {
        @include assert {
          @include output {
            @include lg\:-mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("lg\:-mb-40	") {
        @include assert {
          @include output {
            @include lg\:-mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("lg\:-ml-40	") {
        @include assert {
          @include output {
            @include lg\:-ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -10rem;
            }
          }
        }
      }

      @include it("lg\:-m-44	") {
        @include assert {
          @include output {
            @include lg\:-m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -11rem;
            }
          }
        }
      }

      @include it("lg\:-mx-44	") {
        @include assert {
          @include output {
            @include lg\:-mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -11rem;
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("lg\:-my-44	") {
        @include assert {
          @include output {
            @include lg\:-my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -11rem;
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("lg\:-ms-44	") {
        @include assert {
          @include output {
            @include lg\:-ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -11rem;
            }
          }
        }
      }

      @include it("lg\:-me-44	") {
        @include assert {
          @include output {
            @include lg\:-me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -11rem;
            }
          }
        }
      }

      @include it("lg\:-mt-44	") {
        @include assert {
          @include output {
            @include lg\:-mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -11rem;
            }
          }
        }
      }

      @include it("lg\:-mr-44	") {
        @include assert {
          @include output {
            @include lg\:-mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("lg\:-mb-44	") {
        @include assert {
          @include output {
            @include lg\:-mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("lg\:-ml-44	") {
        @include assert {
          @include output {
            @include lg\:-ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -11rem;
            }
          }
        }
      }

      @include it("lg\:-m-48	") {
        @include assert {
          @include output {
            @include lg\:-m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -12rem;
            }
          }
        }
      }

      @include it("lg\:-mx-48	") {
        @include assert {
          @include output {
            @include lg\:-mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -12rem;
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("lg\:-my-48	") {
        @include assert {
          @include output {
            @include lg\:-my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -12rem;
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("lg\:-ms-48	") {
        @include assert {
          @include output {
            @include lg\:-ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -12rem;
            }
          }
        }
      }

      @include it("lg\:-me-48	") {
        @include assert {
          @include output {
            @include lg\:-me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -12rem;
            }
          }
        }
      }

      @include it("lg\:-mt-48	") {
        @include assert {
          @include output {
            @include lg\:-mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -12rem;
            }
          }
        }
      }

      @include it("lg\:-mr-48	") {
        @include assert {
          @include output {
            @include lg\:-mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("lg\:-mb-48	") {
        @include assert {
          @include output {
            @include lg\:-mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("lg\:-ml-48	") {
        @include assert {
          @include output {
            @include lg\:-ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -12rem;
            }
          }
        }
      }

      @include it("lg\:-m-52	") {
        @include assert {
          @include output {
            @include lg\:-m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -13rem;
            }
          }
        }
      }

      @include it("lg\:-mx-52	") {
        @include assert {
          @include output {
            @include lg\:-mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -13rem;
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("lg\:-my-52	") {
        @include assert {
          @include output {
            @include lg\:-my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -13rem;
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("lg\:-ms-52	") {
        @include assert {
          @include output {
            @include lg\:-ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -13rem;
            }
          }
        }
      }

      @include it("lg\:-me-52	") {
        @include assert {
          @include output {
            @include lg\:-me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -13rem;
            }
          }
        }
      }

      @include it("lg\:-mt-52	") {
        @include assert {
          @include output {
            @include lg\:-mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -13rem;
            }
          }
        }
      }

      @include it("lg\:-mr-52	") {
        @include assert {
          @include output {
            @include lg\:-mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("lg\:-mb-52	") {
        @include assert {
          @include output {
            @include lg\:-mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("lg\:-ml-52	") {
        @include assert {
          @include output {
            @include lg\:-ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -13rem;
            }
          }
        }
      }

      @include it("lg\:-m-56	") {
        @include assert {
          @include output {
            @include lg\:-m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -14rem;
            }
          }
        }
      }

      @include it("lg\:-mx-56	") {
        @include assert {
          @include output {
            @include lg\:-mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -14rem;
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("lg\:-my-56	") {
        @include assert {
          @include output {
            @include lg\:-my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -14rem;
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("lg\:-ms-56	") {
        @include assert {
          @include output {
            @include lg\:-ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -14rem;
            }
          }
        }
      }

      @include it("lg\:-me-56	") {
        @include assert {
          @include output {
            @include lg\:-me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -14rem;
            }
          }
        }
      }

      @include it("lg\:-mt-56	") {
        @include assert {
          @include output {
            @include lg\:-mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -14rem;
            }
          }
        }
      }

      @include it("lg\:-mr-56	") {
        @include assert {
          @include output {
            @include lg\:-mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("lg\:-mb-56	") {
        @include assert {
          @include output {
            @include lg\:-mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("lg\:-ml-56	") {
        @include assert {
          @include output {
            @include lg\:-ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -14rem;
            }
          }
        }
      }

      @include it("lg\:-m-60	") {
        @include assert {
          @include output {
            @include lg\:-m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -15rem;
            }
          }
        }
      }

      @include it("lg\:-mx-60	") {
        @include assert {
          @include output {
            @include lg\:-mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -15rem;
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("lg\:-my-60	") {
        @include assert {
          @include output {
            @include lg\:-my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -15rem;
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("lg\:-ms-60	") {
        @include assert {
          @include output {
            @include lg\:-ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -15rem;
            }
          }
        }
      }

      @include it("lg\:-me-60	") {
        @include assert {
          @include output {
            @include lg\:-me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -15rem;
            }
          }
        }
      }

      @include it("lg\:-mt-60	") {
        @include assert {
          @include output {
            @include lg\:-mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -15rem;
            }
          }
        }
      }

      @include it("lg\:-mr-60	") {
        @include assert {
          @include output {
            @include lg\:-mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("lg\:-mb-60	") {
        @include assert {
          @include output {
            @include lg\:-mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("lg\:-ml-60	") {
        @include assert {
          @include output {
            @include lg\:-ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -15rem;
            }
          }
        }
      }

      @include it("lg\:-m-64	") {
        @include assert {
          @include output {
            @include lg\:-m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -16rem;
            }
          }
        }
      }

      @include it("lg\:-mx-64	") {
        @include assert {
          @include output {
            @include lg\:-mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -16rem;
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("lg\:-my-64	") {
        @include assert {
          @include output {
            @include lg\:-my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -16rem;
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("lg\:-ms-64	") {
        @include assert {
          @include output {
            @include lg\:-ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -16rem;
            }
          }
        }
      }

      @include it("lg\:-me-64	") {
        @include assert {
          @include output {
            @include lg\:-me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -16rem;
            }
          }
        }
      }

      @include it("lg\:-mt-64	") {
        @include assert {
          @include output {
            @include lg\:-mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -16rem;
            }
          }
        }
      }

      @include it("lg\:-mr-64	") {
        @include assert {
          @include output {
            @include lg\:-mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("lg\:-mb-64	") {
        @include assert {
          @include output {
            @include lg\:-mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("lg\:-ml-64	") {
        @include assert {
          @include output {
            @include lg\:-ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -16rem;
            }
          }
        }
      }

      @include it("lg\:-m-72	") {
        @include assert {
          @include output {
            @include lg\:-m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -18rem;
            }
          }
        }
      }

      @include it("lg\:-mx-72	") {
        @include assert {
          @include output {
            @include lg\:-mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -18rem;
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("lg\:-my-72	") {
        @include assert {
          @include output {
            @include lg\:-my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -18rem;
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("lg\:-ms-72	") {
        @include assert {
          @include output {
            @include lg\:-ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -18rem;
            }
          }
        }
      }

      @include it("lg\:-me-72	") {
        @include assert {
          @include output {
            @include lg\:-me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -18rem;
            }
          }
        }
      }

      @include it("lg\:-mt-72	") {
        @include assert {
          @include output {
            @include lg\:-mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -18rem;
            }
          }
        }
      }

      @include it("lg\:-mr-72	") {
        @include assert {
          @include output {
            @include lg\:-mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("lg\:-mb-72	") {
        @include assert {
          @include output {
            @include lg\:-mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("lg\:-ml-72	") {
        @include assert {
          @include output {
            @include lg\:-ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -18rem;
            }
          }
        }
      }

      @include it("lg\:-m-80	") {
        @include assert {
          @include output {
            @include lg\:-m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -20rem;
            }
          }
        }
      }

      @include it("lg\:-mx-80	") {
        @include assert {
          @include output {
            @include lg\:-mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -20rem;
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("lg\:-my-80	") {
        @include assert {
          @include output {
            @include lg\:-my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -20rem;
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("lg\:-ms-80	") {
        @include assert {
          @include output {
            @include lg\:-ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -20rem;
            }
          }
        }
      }

      @include it("lg\:-me-80	") {
        @include assert {
          @include output {
            @include lg\:-me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -20rem;
            }
          }
        }
      }

      @include it("lg\:-mt-80	") {
        @include assert {
          @include output {
            @include lg\:-mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -20rem;
            }
          }
        }
      }

      @include it("lg\:-mr-80	") {
        @include assert {
          @include output {
            @include lg\:-mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("lg\:-mb-80	") {
        @include assert {
          @include output {
            @include lg\:-mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("lg\:-ml-80	") {
        @include assert {
          @include output {
            @include lg\:-ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -20rem;
            }
          }
        }
      }

      @include it("lg\:-m-96	") {
        @include assert {
          @include output {
            @include lg\:-m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -24rem;
            }
          }
        }
      }

      @include it("lg\:-mx-96	") {
        @include assert {
          @include output {
            @include lg\:-mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -24rem;
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("lg\:-my-96	") {
        @include assert {
          @include output {
            @include lg\:-my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -24rem;
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("lg\:-ms-96	") {
        @include assert {
          @include output {
            @include lg\:-ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -24rem;
            }
          }
        }
      }

      @include it("lg\:-me-96	") {
        @include assert {
          @include output {
            @include lg\:-me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -24rem;
            }
          }
        }
      }

      @include it("lg\:-mt-96	") {
        @include assert {
          @include output {
            @include lg\:-mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -24rem;
            }
          }
        }
      }

      @include it("lg\:-mr-96	") {
        @include assert {
          @include output {
            @include lg\:-mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("lg\:-mb-96	") {
        @include assert {
          @include output {
            @include lg\:-mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("lg\:-ml-96	") {
        @include assert {
          @include output {
            @include lg\:-ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -24rem;
            }
          }
        }
      }

      @include it("xl\:m-0") {
        @include assert {
          @include output {
            @include xl\:m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0px;
            }
          }
        }
      }

      @include it("xl\:mx-0") {
        @include assert {
          @include output {
            @include xl\:mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("xl\:my-0") {
        @include assert {
          @include output {
            @include xl\:my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:ms-0") {
        @include assert {
          @include output {
            @include xl\:ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("xl\:me-0") {
        @include assert {
          @include output {
            @include xl\:me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("xl\:mt-0") {
        @include assert {
          @include output {
            @include xl\:mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("xl\:mr-0") {
        @include assert {
          @include output {
            @include xl\:mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("xl\:mb-0") {
        @include assert {
          @include output {
            @include xl\:mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:ml-0") {
        @include assert {
          @include output {
            @include xl\:ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("xl\:m-px") {
        @include assert {
          @include output {
            @include xl\:m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 1px;
            }
          }
        }
      }

      @include it("xl\:mx-px") {
        @include assert {
          @include output {
            @include xl\:mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1px;
              margin-right: 1px;
            }
          }
        }
      }

      @include it("xl\:my-px") {
        @include assert {
          @include output {
            @include xl\:my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1px;
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("xl\:ms-px") {
        @include assert {
          @include output {
            @include xl\:ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 1px;
            }
          }
        }
      }

      @include it("xl\:me-px") {
        @include assert {
          @include output {
            @include xl\:me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 1px;
            }
          }
        }
      }

      @include it("xl\:mt-px") {
        @include assert {
          @include output {
            @include xl\:mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1px;
            }
          }
        }
      }

      @include it("xl\:mr-px") {
        @include assert {
          @include output {
            @include xl\:mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 1px;
            }
          }
        }
      }

      @include it("xl\:mb-px") {
        @include assert {
          @include output {
            @include xl\:mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("xl\:ml-px") {
        @include assert {
          @include output {
            @include xl\:ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1px;
            }
          }
        }
      }

      @include it("xl\:m-0\.5") {
        @include assert {
          @include output {
            @include xl\:m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:mx-0\.5") {
        @include assert {
          @include output {
            @include xl\:mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.125rem;
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:my-0\.5") {
        @include assert {
          @include output {
            @include xl\:my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.125rem;
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:ms-0\.5") {
        @include assert {
          @include output {
            @include xl\:ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:me-0\.5") {
        @include assert {
          @include output {
            @include xl\:me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:mt-0\.5") {
        @include assert {
          @include output {
            @include xl\:mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:mr-0\.5") {
        @include assert {
          @include output {
            @include xl\:mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:mb-0\.5") {
        @include assert {
          @include output {
            @include xl\:mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:ml-0\.5") {
        @include assert {
          @include output {
            @include xl\:ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:m-1") {
        @include assert {
          @include output {
            @include xl\:m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:mx-1") {
        @include assert {
          @include output {
            @include xl\:mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.25rem;
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:my-1") {
        @include assert {
          @include output {
            @include xl\:my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.25rem;
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:ms-1") {
        @include assert {
          @include output {
            @include xl\:ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:me-1") {
        @include assert {
          @include output {
            @include xl\:me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:mt-1") {
        @include assert {
          @include output {
            @include xl\:mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:mr-1") {
        @include assert {
          @include output {
            @include xl\:mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:mb-1") {
        @include assert {
          @include output {
            @include xl\:mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:ml-1") {
        @include assert {
          @include output {
            @include xl\:ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:m-1\.5") {
        @include assert {
          @include output {
            @include xl\:m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:mx-1\.5") {
        @include assert {
          @include output {
            @include xl\:mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.375rem;
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:my-1\.5") {
        @include assert {
          @include output {
            @include xl\:my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.375rem;
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:ms-1\.5") {
        @include assert {
          @include output {
            @include xl\:ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:me-1\.5") {
        @include assert {
          @include output {
            @include xl\:me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:mt-1\.5") {
        @include assert {
          @include output {
            @include xl\:mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:mr-1\.5") {
        @include assert {
          @include output {
            @include xl\:mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:mb-1\.5") {
        @include assert {
          @include output {
            @include xl\:mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:ml-1\.5") {
        @include assert {
          @include output {
            @include xl\:ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:m-2") {
        @include assert {
          @include output {
            @include xl\:m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:mx-2") {
        @include assert {
          @include output {
            @include xl\:mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.5rem;
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:my-2") {
        @include assert {
          @include output {
            @include xl\:my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.5rem;
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:ms-2") {
        @include assert {
          @include output {
            @include xl\:ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:me-2") {
        @include assert {
          @include output {
            @include xl\:me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:mt-2") {
        @include assert {
          @include output {
            @include xl\:mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:mr-2") {
        @include assert {
          @include output {
            @include xl\:mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:mb-2") {
        @include assert {
          @include output {
            @include xl\:mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:ml-2") {
        @include assert {
          @include output {
            @include xl\:ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:m-2\.5") {
        @include assert {
          @include output {
            @include xl\:m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:mx-2\.5") {
        @include assert {
          @include output {
            @include xl\:mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.625rem;
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:my-2\.5") {
        @include assert {
          @include output {
            @include xl\:my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.625rem;
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:ms-2\.5") {
        @include assert {
          @include output {
            @include xl\:ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:me-2\.5") {
        @include assert {
          @include output {
            @include xl\:me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:mt-2\.5") {
        @include assert {
          @include output {
            @include xl\:mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:mr-2\.5") {
        @include assert {
          @include output {
            @include xl\:mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:mb-2\.5") {
        @include assert {
          @include output {
            @include xl\:mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:ml-2\.5") {
        @include assert {
          @include output {
            @include xl\:ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:m-3") {
        @include assert {
          @include output {
            @include xl\:m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:mx-3") {
        @include assert {
          @include output {
            @include xl\:mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.75rem;
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:my-3") {
        @include assert {
          @include output {
            @include xl\:my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.75rem;
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:ms-3") {
        @include assert {
          @include output {
            @include xl\:ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:me-3") {
        @include assert {
          @include output {
            @include xl\:me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:mt-3") {
        @include assert {
          @include output {
            @include xl\:mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:mr-3") {
        @include assert {
          @include output {
            @include xl\:mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:mb-3") {
        @include assert {
          @include output {
            @include xl\:mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:ml-3") {
        @include assert {
          @include output {
            @include xl\:ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:m-3\.5") {
        @include assert {
          @include output {
            @include xl\:m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:mx-3\.5") {
        @include assert {
          @include output {
            @include xl\:mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.875rem;
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:my-3\.5") {
        @include assert {
          @include output {
            @include xl\:my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.875rem;
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:ms-3\.5") {
        @include assert {
          @include output {
            @include xl\:ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:me-3\.5") {
        @include assert {
          @include output {
            @include xl\:me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:mt-3\.5") {
        @include assert {
          @include output {
            @include xl\:mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:mr-3\.5") {
        @include assert {
          @include output {
            @include xl\:mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:mb-3\.5") {
        @include assert {
          @include output {
            @include xl\:mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:ml-3\.5") {
        @include assert {
          @include output {
            @include xl\:ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:m-4") {
        @include assert {
          @include output {
            @include xl\:m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 1rem;
            }
          }
        }
      }

      @include it("xl\:mx-4") {
        @include assert {
          @include output {
            @include xl\:mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("xl\:my-4") {
        @include assert {
          @include output {
            @include xl\:my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("xl\:ms-4") {
        @include assert {
          @include output {
            @include xl\:ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 1rem;
            }
          }
        }
      }

      @include it("xl\:me-4") {
        @include assert {
          @include output {
            @include xl\:me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 1rem;
            }
          }
        }
      }

      @include it("xl\:mt-4") {
        @include assert {
          @include output {
            @include xl\:mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1rem;
            }
          }
        }
      }

      @include it("xl\:mr-4") {
        @include assert {
          @include output {
            @include xl\:mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("xl\:mb-4") {
        @include assert {
          @include output {
            @include xl\:mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("xl\:ml-4") {
        @include assert {
          @include output {
            @include xl\:ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1rem;
            }
          }
        }
      }

      @include it("xl\:m-5") {
        @include assert {
          @include output {
            @include xl\:m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:mx-5") {
        @include assert {
          @include output {
            @include xl\:mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1.25rem;
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:my-5") {
        @include assert {
          @include output {
            @include xl\:my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1.25rem;
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:ms-5") {
        @include assert {
          @include output {
            @include xl\:ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:me-5") {
        @include assert {
          @include output {
            @include xl\:me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:mt-5") {
        @include assert {
          @include output {
            @include xl\:mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:mr-5") {
        @include assert {
          @include output {
            @include xl\:mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:mb-5") {
        @include assert {
          @include output {
            @include xl\:mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:ml-5") {
        @include assert {
          @include output {
            @include xl\:ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:m-6") {
        @include assert {
          @include output {
            @include xl\:m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:mx-6") {
        @include assert {
          @include output {
            @include xl\:mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1.5rem;
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:my-6") {
        @include assert {
          @include output {
            @include xl\:my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1.5rem;
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:ms-6") {
        @include assert {
          @include output {
            @include xl\:ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:me-6") {
        @include assert {
          @include output {
            @include xl\:me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:mt-6") {
        @include assert {
          @include output {
            @include xl\:mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:mr-6") {
        @include assert {
          @include output {
            @include xl\:mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:mb-6") {
        @include assert {
          @include output {
            @include xl\:mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:ml-6") {
        @include assert {
          @include output {
            @include xl\:ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:m-7") {
        @include assert {
          @include output {
            @include xl\:m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:mx-7") {
        @include assert {
          @include output {
            @include xl\:mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1.75rem;
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:my-7") {
        @include assert {
          @include output {
            @include xl\:my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1.75rem;
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:ms-7") {
        @include assert {
          @include output {
            @include xl\:ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:me-7") {
        @include assert {
          @include output {
            @include xl\:me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:mt-7") {
        @include assert {
          @include output {
            @include xl\:mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:mr-7") {
        @include assert {
          @include output {
            @include xl\:mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:mb-7") {
        @include assert {
          @include output {
            @include xl\:mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:ml-7") {
        @include assert {
          @include output {
            @include xl\:ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:m-8") {
        @include assert {
          @include output {
            @include xl\:m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 2rem;
            }
          }
        }
      }

      @include it("xl\:mx-8") {
        @include assert {
          @include output {
            @include xl\:mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2rem;
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("xl\:my-8") {
        @include assert {
          @include output {
            @include xl\:my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2rem;
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("xl\:ms-8") {
        @include assert {
          @include output {
            @include xl\:ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 2rem;
            }
          }
        }
      }

      @include it("xl\:me-8") {
        @include assert {
          @include output {
            @include xl\:me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 2rem;
            }
          }
        }
      }

      @include it("xl\:mt-8") {
        @include assert {
          @include output {
            @include xl\:mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2rem;
            }
          }
        }
      }

      @include it("xl\:mr-8") {
        @include assert {
          @include output {
            @include xl\:mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("xl\:mb-8") {
        @include assert {
          @include output {
            @include xl\:mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("xl\:ml-8") {
        @include assert {
          @include output {
            @include xl\:ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2rem;
            }
          }
        }
      }

      @include it("xl\:m-9") {
        @include assert {
          @include output {
            @include xl\:m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:mx-9") {
        @include assert {
          @include output {
            @include xl\:mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2.25rem;
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:my-9") {
        @include assert {
          @include output {
            @include xl\:my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2.25rem;
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:ms-9") {
        @include assert {
          @include output {
            @include xl\:ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:me-9") {
        @include assert {
          @include output {
            @include xl\:me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:mt-9") {
        @include assert {
          @include output {
            @include xl\:mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:mr-9") {
        @include assert {
          @include output {
            @include xl\:mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:mb-9") {
        @include assert {
          @include output {
            @include xl\:mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:ml-9") {
        @include assert {
          @include output {
            @include xl\:ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:m-10") {
        @include assert {
          @include output {
            @include xl\:m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:mx-10") {
        @include assert {
          @include output {
            @include xl\:mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2.5rem;
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:my-10") {
        @include assert {
          @include output {
            @include xl\:my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2.5rem;
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:ms-10") {
        @include assert {
          @include output {
            @include xl\:ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:me-10") {
        @include assert {
          @include output {
            @include xl\:me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:mt-10") {
        @include assert {
          @include output {
            @include xl\:mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:mr-10") {
        @include assert {
          @include output {
            @include xl\:mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:mb-10") {
        @include assert {
          @include output {
            @include xl\:mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:ml-10") {
        @include assert {
          @include output {
            @include xl\:ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:m-11") {
        @include assert {
          @include output {
            @include xl\:m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:mx-11") {
        @include assert {
          @include output {
            @include xl\:mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2.75rem;
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:my-11") {
        @include assert {
          @include output {
            @include xl\:my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2.75rem;
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:ms-11") {
        @include assert {
          @include output {
            @include xl\:ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:me-11") {
        @include assert {
          @include output {
            @include xl\:me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:mt-11") {
        @include assert {
          @include output {
            @include xl\:mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:mr-11") {
        @include assert {
          @include output {
            @include xl\:mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:mb-11") {
        @include assert {
          @include output {
            @include xl\:mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:ml-11") {
        @include assert {
          @include output {
            @include xl\:ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:m-12") {
        @include assert {
          @include output {
            @include xl\:m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 3rem;
            }
          }
        }
      }

      @include it("xl\:mx-12") {
        @include assert {
          @include output {
            @include xl\:mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 3rem;
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("xl\:my-12") {
        @include assert {
          @include output {
            @include xl\:my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 3rem;
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("xl\:ms-12") {
        @include assert {
          @include output {
            @include xl\:ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 3rem;
            }
          }
        }
      }

      @include it("xl\:me-12") {
        @include assert {
          @include output {
            @include xl\:me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 3rem;
            }
          }
        }
      }

      @include it("xl\:mt-12") {
        @include assert {
          @include output {
            @include xl\:mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 3rem;
            }
          }
        }
      }

      @include it("xl\:mr-12") {
        @include assert {
          @include output {
            @include xl\:mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("xl\:mb-12") {
        @include assert {
          @include output {
            @include xl\:mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("xl\:ml-12") {
        @include assert {
          @include output {
            @include xl\:ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 3rem;
            }
          }
        }
      }

      @include it("xl\:m-14") {
        @include assert {
          @include output {
            @include xl\:m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:mx-14") {
        @include assert {
          @include output {
            @include xl\:mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 3.5rem;
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:my-14") {
        @include assert {
          @include output {
            @include xl\:my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 3.5rem;
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:ms-14") {
        @include assert {
          @include output {
            @include xl\:ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:me-14") {
        @include assert {
          @include output {
            @include xl\:me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:mt-14") {
        @include assert {
          @include output {
            @include xl\:mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:mr-14") {
        @include assert {
          @include output {
            @include xl\:mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:mb-14") {
        @include assert {
          @include output {
            @include xl\:mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:ml-14") {
        @include assert {
          @include output {
            @include xl\:ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:m-16") {
        @include assert {
          @include output {
            @include xl\:m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 4rem;
            }
          }
        }
      }

      @include it("xl\:mx-16") {
        @include assert {
          @include output {
            @include xl\:mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 4rem;
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("xl\:my-16") {
        @include assert {
          @include output {
            @include xl\:my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 4rem;
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("xl\:ms-16") {
        @include assert {
          @include output {
            @include xl\:ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 4rem;
            }
          }
        }
      }

      @include it("xl\:me-16") {
        @include assert {
          @include output {
            @include xl\:me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 4rem;
            }
          }
        }
      }

      @include it("xl\:mt-16") {
        @include assert {
          @include output {
            @include xl\:mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 4rem;
            }
          }
        }
      }

      @include it("xl\:mr-16") {
        @include assert {
          @include output {
            @include xl\:mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("xl\:mb-16") {
        @include assert {
          @include output {
            @include xl\:mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("xl\:ml-16") {
        @include assert {
          @include output {
            @include xl\:ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 4rem;
            }
          }
        }
      }

      @include it("xl\:m-20") {
        @include assert {
          @include output {
            @include xl\:m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 5rem;
            }
          }
        }
      }

      @include it("xl\:mx-20") {
        @include assert {
          @include output {
            @include xl\:mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 5rem;
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("xl\:my-20") {
        @include assert {
          @include output {
            @include xl\:my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 5rem;
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("xl\:ms-20") {
        @include assert {
          @include output {
            @include xl\:ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 5rem;
            }
          }
        }
      }

      @include it("xl\:me-20") {
        @include assert {
          @include output {
            @include xl\:me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 5rem;
            }
          }
        }
      }

      @include it("xl\:mt-20") {
        @include assert {
          @include output {
            @include xl\:mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 5rem;
            }
          }
        }
      }

      @include it("xl\:mr-20") {
        @include assert {
          @include output {
            @include xl\:mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("xl\:mb-20") {
        @include assert {
          @include output {
            @include xl\:mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("xl\:ml-20") {
        @include assert {
          @include output {
            @include xl\:ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 5rem;
            }
          }
        }
      }

      @include it("xl\:m-24") {
        @include assert {
          @include output {
            @include xl\:m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 6rem;
            }
          }
        }
      }

      @include it("xl\:mx-24") {
        @include assert {
          @include output {
            @include xl\:mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 6rem;
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("xl\:my-24") {
        @include assert {
          @include output {
            @include xl\:my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 6rem;
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("xl\:ms-24") {
        @include assert {
          @include output {
            @include xl\:ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 6rem;
            }
          }
        }
      }

      @include it("xl\:me-24") {
        @include assert {
          @include output {
            @include xl\:me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 6rem;
            }
          }
        }
      }

      @include it("xl\:mt-24") {
        @include assert {
          @include output {
            @include xl\:mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 6rem;
            }
          }
        }
      }

      @include it("xl\:mr-24") {
        @include assert {
          @include output {
            @include xl\:mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("xl\:mb-24") {
        @include assert {
          @include output {
            @include xl\:mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("xl\:ml-24") {
        @include assert {
          @include output {
            @include xl\:ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 6rem;
            }
          }
        }
      }

      @include it("xl\:m-28") {
        @include assert {
          @include output {
            @include xl\:m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 7rem;
            }
          }
        }
      }

      @include it("xl\:mx-28") {
        @include assert {
          @include output {
            @include xl\:mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 7rem;
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("xl\:my-28") {
        @include assert {
          @include output {
            @include xl\:my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 7rem;
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("xl\:ms-28") {
        @include assert {
          @include output {
            @include xl\:ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 7rem;
            }
          }
        }
      }

      @include it("xl\:me-28") {
        @include assert {
          @include output {
            @include xl\:me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 7rem;
            }
          }
        }
      }

      @include it("xl\:mt-28") {
        @include assert {
          @include output {
            @include xl\:mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 7rem;
            }
          }
        }
      }

      @include it("xl\:mr-28") {
        @include assert {
          @include output {
            @include xl\:mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("xl\:mb-28") {
        @include assert {
          @include output {
            @include xl\:mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("xl\:ml-28") {
        @include assert {
          @include output {
            @include xl\:ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 7rem;
            }
          }
        }
      }

      @include it("xl\:m-32") {
        @include assert {
          @include output {
            @include xl\:m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 8rem;
            }
          }
        }
      }

      @include it("xl\:mx-32") {
        @include assert {
          @include output {
            @include xl\:mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 8rem;
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("xl\:my-32") {
        @include assert {
          @include output {
            @include xl\:my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 8rem;
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("xl\:ms-32") {
        @include assert {
          @include output {
            @include xl\:ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 8rem;
            }
          }
        }
      }

      @include it("xl\:me-32") {
        @include assert {
          @include output {
            @include xl\:me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 8rem;
            }
          }
        }
      }

      @include it("xl\:mt-32") {
        @include assert {
          @include output {
            @include xl\:mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 8rem;
            }
          }
        }
      }

      @include it("xl\:mr-32") {
        @include assert {
          @include output {
            @include xl\:mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("xl\:mb-32") {
        @include assert {
          @include output {
            @include xl\:mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("xl\:ml-32") {
        @include assert {
          @include output {
            @include xl\:ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 8rem;
            }
          }
        }
      }

      @include it("xl\:m-36") {
        @include assert {
          @include output {
            @include xl\:m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 9rem;
            }
          }
        }
      }

      @include it("xl\:mx-36") {
        @include assert {
          @include output {
            @include xl\:mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 9rem;
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("xl\:my-36") {
        @include assert {
          @include output {
            @include xl\:my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 9rem;
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("xl\:ms-36") {
        @include assert {
          @include output {
            @include xl\:ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 9rem;
            }
          }
        }
      }

      @include it("xl\:me-36") {
        @include assert {
          @include output {
            @include xl\:me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 9rem;
            }
          }
        }
      }

      @include it("xl\:mt-36") {
        @include assert {
          @include output {
            @include xl\:mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 9rem;
            }
          }
        }
      }

      @include it("xl\:mr-36") {
        @include assert {
          @include output {
            @include xl\:mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("xl\:mb-36") {
        @include assert {
          @include output {
            @include xl\:mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("xl\:ml-36") {
        @include assert {
          @include output {
            @include xl\:ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 9rem;
            }
          }
        }
      }

      @include it("xl\:m-40") {
        @include assert {
          @include output {
            @include xl\:m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 10rem;
            }
          }
        }
      }

      @include it("xl\:mx-40") {
        @include assert {
          @include output {
            @include xl\:mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 10rem;
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("xl\:my-40") {
        @include assert {
          @include output {
            @include xl\:my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 10rem;
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("xl\:ms-40") {
        @include assert {
          @include output {
            @include xl\:ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 10rem;
            }
          }
        }
      }

      @include it("xl\:me-40") {
        @include assert {
          @include output {
            @include xl\:me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 10rem;
            }
          }
        }
      }

      @include it("xl\:mt-40") {
        @include assert {
          @include output {
            @include xl\:mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 10rem;
            }
          }
        }
      }

      @include it("xl\:mr-40") {
        @include assert {
          @include output {
            @include xl\:mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("xl\:mb-40") {
        @include assert {
          @include output {
            @include xl\:mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("xl\:ml-40") {
        @include assert {
          @include output {
            @include xl\:ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 10rem;
            }
          }
        }
      }

      @include it("xl\:m-44") {
        @include assert {
          @include output {
            @include xl\:m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 11rem;
            }
          }
        }
      }

      @include it("xl\:mx-44") {
        @include assert {
          @include output {
            @include xl\:mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 11rem;
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("xl\:my-44") {
        @include assert {
          @include output {
            @include xl\:my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 11rem;
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("xl\:ms-44") {
        @include assert {
          @include output {
            @include xl\:ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 11rem;
            }
          }
        }
      }

      @include it("xl\:me-44") {
        @include assert {
          @include output {
            @include xl\:me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 11rem;
            }
          }
        }
      }

      @include it("xl\:mt-44") {
        @include assert {
          @include output {
            @include xl\:mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 11rem;
            }
          }
        }
      }

      @include it("xl\:mr-44") {
        @include assert {
          @include output {
            @include xl\:mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("xl\:mb-44") {
        @include assert {
          @include output {
            @include xl\:mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("xl\:ml-44") {
        @include assert {
          @include output {
            @include xl\:ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 11rem;
            }
          }
        }
      }

      @include it("xl\:m-48") {
        @include assert {
          @include output {
            @include xl\:m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 12rem;
            }
          }
        }
      }

      @include it("xl\:mx-48") {
        @include assert {
          @include output {
            @include xl\:mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 12rem;
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("xl\:my-48") {
        @include assert {
          @include output {
            @include xl\:my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 12rem;
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("xl\:ms-48") {
        @include assert {
          @include output {
            @include xl\:ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 12rem;
            }
          }
        }
      }

      @include it("xl\:me-48") {
        @include assert {
          @include output {
            @include xl\:me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 12rem;
            }
          }
        }
      }

      @include it("xl\:mt-48") {
        @include assert {
          @include output {
            @include xl\:mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 12rem;
            }
          }
        }
      }

      @include it("xl\:mr-48") {
        @include assert {
          @include output {
            @include xl\:mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("xl\:mb-48") {
        @include assert {
          @include output {
            @include xl\:mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("xl\:ml-48") {
        @include assert {
          @include output {
            @include xl\:ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 12rem;
            }
          }
        }
      }

      @include it("xl\:m-52") {
        @include assert {
          @include output {
            @include xl\:m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 13rem;
            }
          }
        }
      }

      @include it("xl\:mx-52") {
        @include assert {
          @include output {
            @include xl\:mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 13rem;
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("xl\:my-52") {
        @include assert {
          @include output {
            @include xl\:my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 13rem;
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("xl\:ms-52") {
        @include assert {
          @include output {
            @include xl\:ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 13rem;
            }
          }
        }
      }

      @include it("xl\:me-52") {
        @include assert {
          @include output {
            @include xl\:me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 13rem;
            }
          }
        }
      }

      @include it("xl\:mt-52") {
        @include assert {
          @include output {
            @include xl\:mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 13rem;
            }
          }
        }
      }

      @include it("xl\:mr-52") {
        @include assert {
          @include output {
            @include xl\:mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("xl\:mb-52") {
        @include assert {
          @include output {
            @include xl\:mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("xl\:ml-52") {
        @include assert {
          @include output {
            @include xl\:ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 13rem;
            }
          }
        }
      }

      @include it("xl\:m-56") {
        @include assert {
          @include output {
            @include xl\:m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 14rem;
            }
          }
        }
      }

      @include it("xl\:mx-56") {
        @include assert {
          @include output {
            @include xl\:mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 14rem;
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("xl\:my-56") {
        @include assert {
          @include output {
            @include xl\:my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 14rem;
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("xl\:ms-56") {
        @include assert {
          @include output {
            @include xl\:ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 14rem;
            }
          }
        }
      }

      @include it("xl\:me-56") {
        @include assert {
          @include output {
            @include xl\:me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 14rem;
            }
          }
        }
      }

      @include it("xl\:mt-56") {
        @include assert {
          @include output {
            @include xl\:mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 14rem;
            }
          }
        }
      }

      @include it("xl\:mr-56") {
        @include assert {
          @include output {
            @include xl\:mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("xl\:mb-56") {
        @include assert {
          @include output {
            @include xl\:mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("xl\:ml-56") {
        @include assert {
          @include output {
            @include xl\:ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 14rem;
            }
          }
        }
      }

      @include it("xl\:m-60") {
        @include assert {
          @include output {
            @include xl\:m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 15rem;
            }
          }
        }
      }

      @include it("xl\:mx-60") {
        @include assert {
          @include output {
            @include xl\:mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 15rem;
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("xl\:my-60") {
        @include assert {
          @include output {
            @include xl\:my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 15rem;
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("xl\:ms-60") {
        @include assert {
          @include output {
            @include xl\:ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 15rem;
            }
          }
        }
      }

      @include it("xl\:me-60") {
        @include assert {
          @include output {
            @include xl\:me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 15rem;
            }
          }
        }
      }

      @include it("xl\:mt-60") {
        @include assert {
          @include output {
            @include xl\:mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 15rem;
            }
          }
        }
      }

      @include it("xl\:mr-60") {
        @include assert {
          @include output {
            @include xl\:mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("xl\:mb-60") {
        @include assert {
          @include output {
            @include xl\:mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("xl\:ml-60") {
        @include assert {
          @include output {
            @include xl\:ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 15rem;
            }
          }
        }
      }

      @include it("xl\:m-64") {
        @include assert {
          @include output {
            @include xl\:m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 16rem;
            }
          }
        }
      }

      @include it("xl\:mx-64") {
        @include assert {
          @include output {
            @include xl\:mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 16rem;
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("xl\:my-64") {
        @include assert {
          @include output {
            @include xl\:my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 16rem;
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("xl\:ms-64") {
        @include assert {
          @include output {
            @include xl\:ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 16rem;
            }
          }
        }
      }

      @include it("xl\:me-64") {
        @include assert {
          @include output {
            @include xl\:me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 16rem;
            }
          }
        }
      }

      @include it("xl\:mt-64") {
        @include assert {
          @include output {
            @include xl\:mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 16rem;
            }
          }
        }
      }

      @include it("xl\:mr-64") {
        @include assert {
          @include output {
            @include xl\:mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("xl\:mb-64") {
        @include assert {
          @include output {
            @include xl\:mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("xl\:ml-64") {
        @include assert {
          @include output {
            @include xl\:ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 16rem;
            }
          }
        }
      }

      @include it("xl\:m-72") {
        @include assert {
          @include output {
            @include xl\:m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 18rem;
            }
          }
        }
      }

      @include it("xl\:mx-72") {
        @include assert {
          @include output {
            @include xl\:mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 18rem;
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("xl\:my-72") {
        @include assert {
          @include output {
            @include xl\:my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 18rem;
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("xl\:ms-72") {
        @include assert {
          @include output {
            @include xl\:ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 18rem;
            }
          }
        }
      }

      @include it("xl\:me-72") {
        @include assert {
          @include output {
            @include xl\:me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 18rem;
            }
          }
        }
      }

      @include it("xl\:mt-72") {
        @include assert {
          @include output {
            @include xl\:mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 18rem;
            }
          }
        }
      }

      @include it("xl\:mr-72") {
        @include assert {
          @include output {
            @include xl\:mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("xl\:mb-72") {
        @include assert {
          @include output {
            @include xl\:mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("xl\:ml-72") {
        @include assert {
          @include output {
            @include xl\:ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 18rem;
            }
          }
        }
      }

      @include it("xl\:m-80") {
        @include assert {
          @include output {
            @include xl\:m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 20rem;
            }
          }
        }
      }

      @include it("xl\:mx-80") {
        @include assert {
          @include output {
            @include xl\:mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 20rem;
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("xl\:my-80") {
        @include assert {
          @include output {
            @include xl\:my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 20rem;
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("xl\:ms-80") {
        @include assert {
          @include output {
            @include xl\:ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 20rem;
            }
          }
        }
      }

      @include it("xl\:me-80") {
        @include assert {
          @include output {
            @include xl\:me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 20rem;
            }
          }
        }
      }

      @include it("xl\:mt-80") {
        @include assert {
          @include output {
            @include xl\:mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 20rem;
            }
          }
        }
      }

      @include it("xl\:mr-80") {
        @include assert {
          @include output {
            @include xl\:mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("xl\:mb-80") {
        @include assert {
          @include output {
            @include xl\:mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("xl\:ml-80") {
        @include assert {
          @include output {
            @include xl\:ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 20rem;
            }
          }
        }
      }

      @include it("xl\:m-96") {
        @include assert {
          @include output {
            @include xl\:m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 24rem;
            }
          }
        }
      }

      @include it("xl\:mx-96") {
        @include assert {
          @include output {
            @include xl\:mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 24rem;
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("xl\:my-96") {
        @include assert {
          @include output {
            @include xl\:my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 24rem;
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("xl\:ms-96") {
        @include assert {
          @include output {
            @include xl\:ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 24rem;
            }
          }
        }
      }

      @include it("xl\:me-96") {
        @include assert {
          @include output {
            @include xl\:me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 24rem;
            }
          }
        }
      }

      @include it("xl\:mt-96") {
        @include assert {
          @include output {
            @include xl\:mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 24rem;
            }
          }
        }
      }

      @include it("xl\:mr-96") {
        @include assert {
          @include output {
            @include xl\:mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("xl\:mb-96") {
        @include assert {
          @include output {
            @include xl\:mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("xl\:ml-96") {
        @include assert {
          @include output {
            @include xl\:ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 24rem;
            }
          }
        }
      }

      @include it("xl\:m-auto") {
        @include assert {
          @include output {
            @include xl\:m-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: auto;
            }
          }
        }
      }

      @include it("xl\:mx-auto") {
        @include assert {
          @include output {
            @include xl\:mx-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: auto;
              margin-right: auto;
            }
          }
        }
      }

      @include it("xl\:my-auto") {
        @include assert {
          @include output {
            @include xl\:my-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: auto;
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("xl\:ms-auto") {
        @include assert {
          @include output {
            @include xl\:ms-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: auto;
            }
          }
        }
      }

      @include it("xl\:me-auto") {
        @include assert {
          @include output {
            @include xl\:me-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: auto;
            }
          }
        }
      }

      @include it("xl\:mt-auto") {
        @include assert {
          @include output {
            @include xl\:mt-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: auto;
            }
          }
        }
      }

      @include it("xl\:mr-auto") {
        @include assert {
          @include output {
            @include xl\:mr-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: auto;
            }
          }
        }
      }

      @include it("xl\:mb-auto") {
        @include assert {
          @include output {
            @include xl\:mb-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("xl\:ml-auto") {
        @include assert {
          @include output {
            @include xl\:ml-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: auto;
            }
          }
        }
      }

      @include it("xl\:-m-0	") {
        @include assert {
          @include output {
            @include xl\:-m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 0px;
            }
          }
        }
      }

      @include it("xl\:-mx-0	") {
        @include assert {
          @include output {
            @include xl\:-mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("xl\:-my-0	") {
        @include assert {
          @include output {
            @include xl\:-my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:-ms-0	") {
        @include assert {
          @include output {
            @include xl\:-ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("xl\:-me-0	") {
        @include assert {
          @include output {
            @include xl\:-me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("xl\:-mt-0	") {
        @include assert {
          @include output {
            @include xl\:-mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("xl\:-mr-0	") {
        @include assert {
          @include output {
            @include xl\:-mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("xl\:-mb-0	") {
        @include assert {
          @include output {
            @include xl\:-mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:-ml-0	") {
        @include assert {
          @include output {
            @include xl\:-ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("xl\:-m-px	") {
        @include assert {
          @include output {
            @include xl\:-m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -1px;
            }
          }
        }
      }

      @include it("xl\:-mx-px	") {
        @include assert {
          @include output {
            @include xl\:-mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1px;
              margin-right: -1px;
            }
          }
        }
      }

      @include it("xl\:-my-px	") {
        @include assert {
          @include output {
            @include xl\:-my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1px;
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("xl\:-ms-px	") {
        @include assert {
          @include output {
            @include xl\:-ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -1px;
            }
          }
        }
      }

      @include it("xl\:-me-px	") {
        @include assert {
          @include output {
            @include xl\:-me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -1px;
            }
          }
        }
      }

      @include it("xl\:-mt-px	") {
        @include assert {
          @include output {
            @include xl\:-mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1px;
            }
          }
        }
      }

      @include it("xl\:-mr-px	") {
        @include assert {
          @include output {
            @include xl\:-mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -1px;
            }
          }
        }
      }

      @include it("xl\:-mb-px	") {
        @include assert {
          @include output {
            @include xl\:-mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("xl\:-ml-px	") {
        @include assert {
          @include output {
            @include xl\:-ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1px;
            }
          }
        }
      }

      @include it("xl\:-m-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-mx-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.125rem;
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-my-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.125rem;
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-ms-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-me-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-mt-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-mr-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-mb-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-ml-0\.5	") {
        @include assert {
          @include output {
            @include xl\:-ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-m-1	") {
        @include assert {
          @include output {
            @include xl\:-m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-mx-1	") {
        @include assert {
          @include output {
            @include xl\:-mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.25rem;
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-my-1	") {
        @include assert {
          @include output {
            @include xl\:-my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.25rem;
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-ms-1	") {
        @include assert {
          @include output {
            @include xl\:-ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-me-1	") {
        @include assert {
          @include output {
            @include xl\:-me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-mt-1	") {
        @include assert {
          @include output {
            @include xl\:-mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-mr-1	") {
        @include assert {
          @include output {
            @include xl\:-mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-mb-1	") {
        @include assert {
          @include output {
            @include xl\:-mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-ml-1	") {
        @include assert {
          @include output {
            @include xl\:-ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-m-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-mx-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.375rem;
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-my-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.375rem;
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-ms-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-me-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-mt-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-mr-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-mb-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-ml-1\.5	") {
        @include assert {
          @include output {
            @include xl\:-ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-m-2	") {
        @include assert {
          @include output {
            @include xl\:-m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-mx-2	") {
        @include assert {
          @include output {
            @include xl\:-mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.5rem;
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-my-2	") {
        @include assert {
          @include output {
            @include xl\:-my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.5rem;
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-ms-2	") {
        @include assert {
          @include output {
            @include xl\:-ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-me-2	") {
        @include assert {
          @include output {
            @include xl\:-me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-mt-2	") {
        @include assert {
          @include output {
            @include xl\:-mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-mr-2	") {
        @include assert {
          @include output {
            @include xl\:-mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-mb-2	") {
        @include assert {
          @include output {
            @include xl\:-mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-ml-2	") {
        @include assert {
          @include output {
            @include xl\:-ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-m-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-mx-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.625rem;
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-my-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.625rem;
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-ms-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-me-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-mt-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-mr-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-mb-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-ml-2\.5	") {
        @include assert {
          @include output {
            @include xl\:-ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-m-3	") {
        @include assert {
          @include output {
            @include xl\:-m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-mx-3	") {
        @include assert {
          @include output {
            @include xl\:-mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.75rem;
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-my-3	") {
        @include assert {
          @include output {
            @include xl\:-my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.75rem;
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-ms-3	") {
        @include assert {
          @include output {
            @include xl\:-ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-me-3	") {
        @include assert {
          @include output {
            @include xl\:-me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-mt-3	") {
        @include assert {
          @include output {
            @include xl\:-mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-mr-3	") {
        @include assert {
          @include output {
            @include xl\:-mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-mb-3	") {
        @include assert {
          @include output {
            @include xl\:-mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-ml-3	") {
        @include assert {
          @include output {
            @include xl\:-ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-m-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-mx-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.875rem;
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-my-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.875rem;
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-ms-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-me-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-mt-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-mr-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-mb-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-ml-3\.5	") {
        @include assert {
          @include output {
            @include xl\:-ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-m-4	") {
        @include assert {
          @include output {
            @include xl\:-m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -1rem;
            }
          }
        }
      }

      @include it("xl\:-mx-4	") {
        @include assert {
          @include output {
            @include xl\:-mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1rem;
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("xl\:-my-4	") {
        @include assert {
          @include output {
            @include xl\:-my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("xl\:-ms-4	") {
        @include assert {
          @include output {
            @include xl\:-ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -1rem;
            }
          }
        }
      }

      @include it("xl\:-me-4	") {
        @include assert {
          @include output {
            @include xl\:-me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -1rem;
            }
          }
        }
      }

      @include it("xl\:-mt-4	") {
        @include assert {
          @include output {
            @include xl\:-mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1rem;
            }
          }
        }
      }

      @include it("xl\:-mr-4	") {
        @include assert {
          @include output {
            @include xl\:-mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("xl\:-mb-4	") {
        @include assert {
          @include output {
            @include xl\:-mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("xl\:-ml-4	") {
        @include assert {
          @include output {
            @include xl\:-ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1rem;
            }
          }
        }
      }

      @include it("xl\:-m-5	") {
        @include assert {
          @include output {
            @include xl\:-m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-mx-5	") {
        @include assert {
          @include output {
            @include xl\:-mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1.25rem;
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-my-5	") {
        @include assert {
          @include output {
            @include xl\:-my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1.25rem;
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-ms-5	") {
        @include assert {
          @include output {
            @include xl\:-ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-me-5	") {
        @include assert {
          @include output {
            @include xl\:-me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-mt-5	") {
        @include assert {
          @include output {
            @include xl\:-mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-mr-5	") {
        @include assert {
          @include output {
            @include xl\:-mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-mb-5	") {
        @include assert {
          @include output {
            @include xl\:-mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-ml-5	") {
        @include assert {
          @include output {
            @include xl\:-ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-m-6	") {
        @include assert {
          @include output {
            @include xl\:-m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-mx-6	") {
        @include assert {
          @include output {
            @include xl\:-mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1.5rem;
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-my-6	") {
        @include assert {
          @include output {
            @include xl\:-my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1.5rem;
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-ms-6	") {
        @include assert {
          @include output {
            @include xl\:-ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-me-6	") {
        @include assert {
          @include output {
            @include xl\:-me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-mt-6	") {
        @include assert {
          @include output {
            @include xl\:-mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-mr-6	") {
        @include assert {
          @include output {
            @include xl\:-mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-mb-6	") {
        @include assert {
          @include output {
            @include xl\:-mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-ml-6	") {
        @include assert {
          @include output {
            @include xl\:-ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-m-7	") {
        @include assert {
          @include output {
            @include xl\:-m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-mx-7	") {
        @include assert {
          @include output {
            @include xl\:-mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1.75rem;
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-my-7	") {
        @include assert {
          @include output {
            @include xl\:-my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1.75rem;
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-ms-7	") {
        @include assert {
          @include output {
            @include xl\:-ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-me-7	") {
        @include assert {
          @include output {
            @include xl\:-me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-mt-7	") {
        @include assert {
          @include output {
            @include xl\:-mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-mr-7	") {
        @include assert {
          @include output {
            @include xl\:-mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-mb-7	") {
        @include assert {
          @include output {
            @include xl\:-mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-ml-7	") {
        @include assert {
          @include output {
            @include xl\:-ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-m-8	") {
        @include assert {
          @include output {
            @include xl\:-m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -2rem;
            }
          }
        }
      }

      @include it("xl\:-mx-8	") {
        @include assert {
          @include output {
            @include xl\:-mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2rem;
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("xl\:-my-8	") {
        @include assert {
          @include output {
            @include xl\:-my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2rem;
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("xl\:-ms-8	") {
        @include assert {
          @include output {
            @include xl\:-ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -2rem;
            }
          }
        }
      }

      @include it("xl\:-me-8	") {
        @include assert {
          @include output {
            @include xl\:-me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -2rem;
            }
          }
        }
      }

      @include it("xl\:-mt-8	") {
        @include assert {
          @include output {
            @include xl\:-mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2rem;
            }
          }
        }
      }

      @include it("xl\:-mr-8	") {
        @include assert {
          @include output {
            @include xl\:-mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("xl\:-mb-8	") {
        @include assert {
          @include output {
            @include xl\:-mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("xl\:-ml-8	") {
        @include assert {
          @include output {
            @include xl\:-ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2rem;
            }
          }
        }
      }

      @include it("xl\:-m-9	") {
        @include assert {
          @include output {
            @include xl\:-m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-mx-9	") {
        @include assert {
          @include output {
            @include xl\:-mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2.25rem;
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-my-9	") {
        @include assert {
          @include output {
            @include xl\:-my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2.25rem;
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-ms-9	") {
        @include assert {
          @include output {
            @include xl\:-ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-me-9	") {
        @include assert {
          @include output {
            @include xl\:-me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-mt-9	") {
        @include assert {
          @include output {
            @include xl\:-mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-mr-9	") {
        @include assert {
          @include output {
            @include xl\:-mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-mb-9	") {
        @include assert {
          @include output {
            @include xl\:-mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-ml-9	") {
        @include assert {
          @include output {
            @include xl\:-ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-m-10	") {
        @include assert {
          @include output {
            @include xl\:-m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-mx-10	") {
        @include assert {
          @include output {
            @include xl\:-mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2.5rem;
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-my-10	") {
        @include assert {
          @include output {
            @include xl\:-my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2.5rem;
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-ms-10	") {
        @include assert {
          @include output {
            @include xl\:-ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-me-10	") {
        @include assert {
          @include output {
            @include xl\:-me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-mt-10	") {
        @include assert {
          @include output {
            @include xl\:-mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-mr-10	") {
        @include assert {
          @include output {
            @include xl\:-mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-mb-10	") {
        @include assert {
          @include output {
            @include xl\:-mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-ml-10	") {
        @include assert {
          @include output {
            @include xl\:-ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-m-11	") {
        @include assert {
          @include output {
            @include xl\:-m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-mx-11	") {
        @include assert {
          @include output {
            @include xl\:-mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2.75rem;
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-my-11	") {
        @include assert {
          @include output {
            @include xl\:-my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2.75rem;
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-ms-11	") {
        @include assert {
          @include output {
            @include xl\:-ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-me-11	") {
        @include assert {
          @include output {
            @include xl\:-me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-mt-11	") {
        @include assert {
          @include output {
            @include xl\:-mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-mr-11	") {
        @include assert {
          @include output {
            @include xl\:-mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-mb-11	") {
        @include assert {
          @include output {
            @include xl\:-mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-ml-11	") {
        @include assert {
          @include output {
            @include xl\:-ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-m-12	") {
        @include assert {
          @include output {
            @include xl\:-m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -3rem;
            }
          }
        }
      }

      @include it("xl\:-mx-12	") {
        @include assert {
          @include output {
            @include xl\:-mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -3rem;
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("xl\:-my-12	") {
        @include assert {
          @include output {
            @include xl\:-my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -3rem;
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("xl\:-ms-12	") {
        @include assert {
          @include output {
            @include xl\:-ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -3rem;
            }
          }
        }
      }

      @include it("xl\:-me-12	") {
        @include assert {
          @include output {
            @include xl\:-me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -3rem;
            }
          }
        }
      }

      @include it("xl\:-mt-12	") {
        @include assert {
          @include output {
            @include xl\:-mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -3rem;
            }
          }
        }
      }

      @include it("xl\:-mr-12	") {
        @include assert {
          @include output {
            @include xl\:-mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("xl\:-mb-12	") {
        @include assert {
          @include output {
            @include xl\:-mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("xl\:-ml-12	") {
        @include assert {
          @include output {
            @include xl\:-ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -3rem;
            }
          }
        }
      }

      @include it("xl\:-m-14	") {
        @include assert {
          @include output {
            @include xl\:-m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-mx-14	") {
        @include assert {
          @include output {
            @include xl\:-mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -3.5rem;
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-my-14	") {
        @include assert {
          @include output {
            @include xl\:-my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -3.5rem;
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-ms-14	") {
        @include assert {
          @include output {
            @include xl\:-ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-me-14	") {
        @include assert {
          @include output {
            @include xl\:-me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-mt-14	") {
        @include assert {
          @include output {
            @include xl\:-mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-mr-14	") {
        @include assert {
          @include output {
            @include xl\:-mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-mb-14	") {
        @include assert {
          @include output {
            @include xl\:-mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-ml-14	") {
        @include assert {
          @include output {
            @include xl\:-ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-m-16	") {
        @include assert {
          @include output {
            @include xl\:-m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -4rem;
            }
          }
        }
      }

      @include it("xl\:-mx-16	") {
        @include assert {
          @include output {
            @include xl\:-mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -4rem;
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("xl\:-my-16	") {
        @include assert {
          @include output {
            @include xl\:-my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -4rem;
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("xl\:-ms-16	") {
        @include assert {
          @include output {
            @include xl\:-ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -4rem;
            }
          }
        }
      }

      @include it("xl\:-me-16	") {
        @include assert {
          @include output {
            @include xl\:-me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -4rem;
            }
          }
        }
      }

      @include it("xl\:-mt-16	") {
        @include assert {
          @include output {
            @include xl\:-mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -4rem;
            }
          }
        }
      }

      @include it("xl\:-mr-16	") {
        @include assert {
          @include output {
            @include xl\:-mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("xl\:-mb-16	") {
        @include assert {
          @include output {
            @include xl\:-mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("xl\:-ml-16	") {
        @include assert {
          @include output {
            @include xl\:-ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -4rem;
            }
          }
        }
      }

      @include it("xl\:-m-20	") {
        @include assert {
          @include output {
            @include xl\:-m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -5rem;
            }
          }
        }
      }

      @include it("xl\:-mx-20	") {
        @include assert {
          @include output {
            @include xl\:-mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -5rem;
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("xl\:-my-20	") {
        @include assert {
          @include output {
            @include xl\:-my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -5rem;
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("xl\:-ms-20	") {
        @include assert {
          @include output {
            @include xl\:-ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -5rem;
            }
          }
        }
      }

      @include it("xl\:-me-20	") {
        @include assert {
          @include output {
            @include xl\:-me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -5rem;
            }
          }
        }
      }

      @include it("xl\:-mt-20	") {
        @include assert {
          @include output {
            @include xl\:-mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -5rem;
            }
          }
        }
      }

      @include it("xl\:-mr-20	") {
        @include assert {
          @include output {
            @include xl\:-mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("xl\:-mb-20	") {
        @include assert {
          @include output {
            @include xl\:-mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("xl\:-ml-20	") {
        @include assert {
          @include output {
            @include xl\:-ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -5rem;
            }
          }
        }
      }

      @include it("xl\:-m-24	") {
        @include assert {
          @include output {
            @include xl\:-m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -6rem;
            }
          }
        }
      }

      @include it("xl\:-mx-24	") {
        @include assert {
          @include output {
            @include xl\:-mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -6rem;
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("xl\:-my-24	") {
        @include assert {
          @include output {
            @include xl\:-my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -6rem;
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("xl\:-ms-24	") {
        @include assert {
          @include output {
            @include xl\:-ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -6rem;
            }
          }
        }
      }

      @include it("xl\:-me-24	") {
        @include assert {
          @include output {
            @include xl\:-me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -6rem;
            }
          }
        }
      }

      @include it("xl\:-mt-24	") {
        @include assert {
          @include output {
            @include xl\:-mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -6rem;
            }
          }
        }
      }

      @include it("xl\:-mr-24	") {
        @include assert {
          @include output {
            @include xl\:-mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("xl\:-mb-24	") {
        @include assert {
          @include output {
            @include xl\:-mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("xl\:-ml-24	") {
        @include assert {
          @include output {
            @include xl\:-ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -6rem;
            }
          }
        }
      }

      @include it("xl\:-m-28	") {
        @include assert {
          @include output {
            @include xl\:-m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -7rem;
            }
          }
        }
      }

      @include it("xl\:-mx-28	") {
        @include assert {
          @include output {
            @include xl\:-mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -7rem;
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("xl\:-my-28	") {
        @include assert {
          @include output {
            @include xl\:-my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -7rem;
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("xl\:-ms-28	") {
        @include assert {
          @include output {
            @include xl\:-ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -7rem;
            }
          }
        }
      }

      @include it("xl\:-me-28	") {
        @include assert {
          @include output {
            @include xl\:-me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -7rem;
            }
          }
        }
      }

      @include it("xl\:-mt-28	") {
        @include assert {
          @include output {
            @include xl\:-mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -7rem;
            }
          }
        }
      }

      @include it("xl\:-mr-28	") {
        @include assert {
          @include output {
            @include xl\:-mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("xl\:-mb-28	") {
        @include assert {
          @include output {
            @include xl\:-mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("xl\:-ml-28	") {
        @include assert {
          @include output {
            @include xl\:-ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -7rem;
            }
          }
        }
      }

      @include it("xl\:-m-32	") {
        @include assert {
          @include output {
            @include xl\:-m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -8rem;
            }
          }
        }
      }

      @include it("xl\:-mx-32	") {
        @include assert {
          @include output {
            @include xl\:-mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -8rem;
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("xl\:-my-32	") {
        @include assert {
          @include output {
            @include xl\:-my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -8rem;
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("xl\:-ms-32	") {
        @include assert {
          @include output {
            @include xl\:-ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -8rem;
            }
          }
        }
      }

      @include it("xl\:-me-32	") {
        @include assert {
          @include output {
            @include xl\:-me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -8rem;
            }
          }
        }
      }

      @include it("xl\:-mt-32	") {
        @include assert {
          @include output {
            @include xl\:-mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -8rem;
            }
          }
        }
      }

      @include it("xl\:-mr-32	") {
        @include assert {
          @include output {
            @include xl\:-mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("xl\:-mb-32	") {
        @include assert {
          @include output {
            @include xl\:-mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("xl\:-ml-32	") {
        @include assert {
          @include output {
            @include xl\:-ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -8rem;
            }
          }
        }
      }

      @include it("xl\:-m-36	") {
        @include assert {
          @include output {
            @include xl\:-m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -9rem;
            }
          }
        }
      }

      @include it("xl\:-mx-36	") {
        @include assert {
          @include output {
            @include xl\:-mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -9rem;
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("xl\:-my-36	") {
        @include assert {
          @include output {
            @include xl\:-my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -9rem;
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("xl\:-ms-36	") {
        @include assert {
          @include output {
            @include xl\:-ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -9rem;
            }
          }
        }
      }

      @include it("xl\:-me-36	") {
        @include assert {
          @include output {
            @include xl\:-me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -9rem;
            }
          }
        }
      }

      @include it("xl\:-mt-36	") {
        @include assert {
          @include output {
            @include xl\:-mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -9rem;
            }
          }
        }
      }

      @include it("xl\:-mr-36	") {
        @include assert {
          @include output {
            @include xl\:-mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("xl\:-mb-36	") {
        @include assert {
          @include output {
            @include xl\:-mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("xl\:-ml-36	") {
        @include assert {
          @include output {
            @include xl\:-ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -9rem;
            }
          }
        }
      }

      @include it("xl\:-m-40	") {
        @include assert {
          @include output {
            @include xl\:-m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -10rem;
            }
          }
        }
      }

      @include it("xl\:-mx-40	") {
        @include assert {
          @include output {
            @include xl\:-mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -10rem;
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("xl\:-my-40	") {
        @include assert {
          @include output {
            @include xl\:-my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -10rem;
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("xl\:-ms-40	") {
        @include assert {
          @include output {
            @include xl\:-ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -10rem;
            }
          }
        }
      }

      @include it("xl\:-me-40	") {
        @include assert {
          @include output {
            @include xl\:-me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -10rem;
            }
          }
        }
      }

      @include it("xl\:-mt-40	") {
        @include assert {
          @include output {
            @include xl\:-mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -10rem;
            }
          }
        }
      }

      @include it("xl\:-mr-40	") {
        @include assert {
          @include output {
            @include xl\:-mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("xl\:-mb-40	") {
        @include assert {
          @include output {
            @include xl\:-mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("xl\:-ml-40	") {
        @include assert {
          @include output {
            @include xl\:-ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -10rem;
            }
          }
        }
      }

      @include it("xl\:-m-44	") {
        @include assert {
          @include output {
            @include xl\:-m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -11rem;
            }
          }
        }
      }

      @include it("xl\:-mx-44	") {
        @include assert {
          @include output {
            @include xl\:-mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -11rem;
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("xl\:-my-44	") {
        @include assert {
          @include output {
            @include xl\:-my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -11rem;
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("xl\:-ms-44	") {
        @include assert {
          @include output {
            @include xl\:-ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -11rem;
            }
          }
        }
      }

      @include it("xl\:-me-44	") {
        @include assert {
          @include output {
            @include xl\:-me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -11rem;
            }
          }
        }
      }

      @include it("xl\:-mt-44	") {
        @include assert {
          @include output {
            @include xl\:-mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -11rem;
            }
          }
        }
      }

      @include it("xl\:-mr-44	") {
        @include assert {
          @include output {
            @include xl\:-mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("xl\:-mb-44	") {
        @include assert {
          @include output {
            @include xl\:-mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("xl\:-ml-44	") {
        @include assert {
          @include output {
            @include xl\:-ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -11rem;
            }
          }
        }
      }

      @include it("xl\:-m-48	") {
        @include assert {
          @include output {
            @include xl\:-m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -12rem;
            }
          }
        }
      }

      @include it("xl\:-mx-48	") {
        @include assert {
          @include output {
            @include xl\:-mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -12rem;
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("xl\:-my-48	") {
        @include assert {
          @include output {
            @include xl\:-my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -12rem;
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("xl\:-ms-48	") {
        @include assert {
          @include output {
            @include xl\:-ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -12rem;
            }
          }
        }
      }

      @include it("xl\:-me-48	") {
        @include assert {
          @include output {
            @include xl\:-me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -12rem;
            }
          }
        }
      }

      @include it("xl\:-mt-48	") {
        @include assert {
          @include output {
            @include xl\:-mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -12rem;
            }
          }
        }
      }

      @include it("xl\:-mr-48	") {
        @include assert {
          @include output {
            @include xl\:-mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("xl\:-mb-48	") {
        @include assert {
          @include output {
            @include xl\:-mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("xl\:-ml-48	") {
        @include assert {
          @include output {
            @include xl\:-ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -12rem;
            }
          }
        }
      }

      @include it("xl\:-m-52	") {
        @include assert {
          @include output {
            @include xl\:-m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -13rem;
            }
          }
        }
      }

      @include it("xl\:-mx-52	") {
        @include assert {
          @include output {
            @include xl\:-mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -13rem;
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("xl\:-my-52	") {
        @include assert {
          @include output {
            @include xl\:-my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -13rem;
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("xl\:-ms-52	") {
        @include assert {
          @include output {
            @include xl\:-ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -13rem;
            }
          }
        }
      }

      @include it("xl\:-me-52	") {
        @include assert {
          @include output {
            @include xl\:-me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -13rem;
            }
          }
        }
      }

      @include it("xl\:-mt-52	") {
        @include assert {
          @include output {
            @include xl\:-mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -13rem;
            }
          }
        }
      }

      @include it("xl\:-mr-52	") {
        @include assert {
          @include output {
            @include xl\:-mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("xl\:-mb-52	") {
        @include assert {
          @include output {
            @include xl\:-mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("xl\:-ml-52	") {
        @include assert {
          @include output {
            @include xl\:-ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -13rem;
            }
          }
        }
      }

      @include it("xl\:-m-56	") {
        @include assert {
          @include output {
            @include xl\:-m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -14rem;
            }
          }
        }
      }

      @include it("xl\:-mx-56	") {
        @include assert {
          @include output {
            @include xl\:-mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -14rem;
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("xl\:-my-56	") {
        @include assert {
          @include output {
            @include xl\:-my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -14rem;
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("xl\:-ms-56	") {
        @include assert {
          @include output {
            @include xl\:-ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -14rem;
            }
          }
        }
      }

      @include it("xl\:-me-56	") {
        @include assert {
          @include output {
            @include xl\:-me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -14rem;
            }
          }
        }
      }

      @include it("xl\:-mt-56	") {
        @include assert {
          @include output {
            @include xl\:-mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -14rem;
            }
          }
        }
      }

      @include it("xl\:-mr-56	") {
        @include assert {
          @include output {
            @include xl\:-mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("xl\:-mb-56	") {
        @include assert {
          @include output {
            @include xl\:-mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("xl\:-ml-56	") {
        @include assert {
          @include output {
            @include xl\:-ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -14rem;
            }
          }
        }
      }

      @include it("xl\:-m-60	") {
        @include assert {
          @include output {
            @include xl\:-m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -15rem;
            }
          }
        }
      }

      @include it("xl\:-mx-60	") {
        @include assert {
          @include output {
            @include xl\:-mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -15rem;
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("xl\:-my-60	") {
        @include assert {
          @include output {
            @include xl\:-my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -15rem;
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("xl\:-ms-60	") {
        @include assert {
          @include output {
            @include xl\:-ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -15rem;
            }
          }
        }
      }

      @include it("xl\:-me-60	") {
        @include assert {
          @include output {
            @include xl\:-me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -15rem;
            }
          }
        }
      }

      @include it("xl\:-mt-60	") {
        @include assert {
          @include output {
            @include xl\:-mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -15rem;
            }
          }
        }
      }

      @include it("xl\:-mr-60	") {
        @include assert {
          @include output {
            @include xl\:-mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("xl\:-mb-60	") {
        @include assert {
          @include output {
            @include xl\:-mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("xl\:-ml-60	") {
        @include assert {
          @include output {
            @include xl\:-ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -15rem;
            }
          }
        }
      }

      @include it("xl\:-m-64	") {
        @include assert {
          @include output {
            @include xl\:-m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -16rem;
            }
          }
        }
      }

      @include it("xl\:-mx-64	") {
        @include assert {
          @include output {
            @include xl\:-mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -16rem;
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("xl\:-my-64	") {
        @include assert {
          @include output {
            @include xl\:-my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -16rem;
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("xl\:-ms-64	") {
        @include assert {
          @include output {
            @include xl\:-ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -16rem;
            }
          }
        }
      }

      @include it("xl\:-me-64	") {
        @include assert {
          @include output {
            @include xl\:-me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -16rem;
            }
          }
        }
      }

      @include it("xl\:-mt-64	") {
        @include assert {
          @include output {
            @include xl\:-mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -16rem;
            }
          }
        }
      }

      @include it("xl\:-mr-64	") {
        @include assert {
          @include output {
            @include xl\:-mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("xl\:-mb-64	") {
        @include assert {
          @include output {
            @include xl\:-mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("xl\:-ml-64	") {
        @include assert {
          @include output {
            @include xl\:-ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -16rem;
            }
          }
        }
      }

      @include it("xl\:-m-72	") {
        @include assert {
          @include output {
            @include xl\:-m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -18rem;
            }
          }
        }
      }

      @include it("xl\:-mx-72	") {
        @include assert {
          @include output {
            @include xl\:-mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -18rem;
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("xl\:-my-72	") {
        @include assert {
          @include output {
            @include xl\:-my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -18rem;
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("xl\:-ms-72	") {
        @include assert {
          @include output {
            @include xl\:-ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -18rem;
            }
          }
        }
      }

      @include it("xl\:-me-72	") {
        @include assert {
          @include output {
            @include xl\:-me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -18rem;
            }
          }
        }
      }

      @include it("xl\:-mt-72	") {
        @include assert {
          @include output {
            @include xl\:-mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -18rem;
            }
          }
        }
      }

      @include it("xl\:-mr-72	") {
        @include assert {
          @include output {
            @include xl\:-mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("xl\:-mb-72	") {
        @include assert {
          @include output {
            @include xl\:-mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("xl\:-ml-72	") {
        @include assert {
          @include output {
            @include xl\:-ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -18rem;
            }
          }
        }
      }

      @include it("xl\:-m-80	") {
        @include assert {
          @include output {
            @include xl\:-m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -20rem;
            }
          }
        }
      }

      @include it("xl\:-mx-80	") {
        @include assert {
          @include output {
            @include xl\:-mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -20rem;
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("xl\:-my-80	") {
        @include assert {
          @include output {
            @include xl\:-my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -20rem;
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("xl\:-ms-80	") {
        @include assert {
          @include output {
            @include xl\:-ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -20rem;
            }
          }
        }
      }

      @include it("xl\:-me-80	") {
        @include assert {
          @include output {
            @include xl\:-me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -20rem;
            }
          }
        }
      }

      @include it("xl\:-mt-80	") {
        @include assert {
          @include output {
            @include xl\:-mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -20rem;
            }
          }
        }
      }

      @include it("xl\:-mr-80	") {
        @include assert {
          @include output {
            @include xl\:-mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("xl\:-mb-80	") {
        @include assert {
          @include output {
            @include xl\:-mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("xl\:-ml-80	") {
        @include assert {
          @include output {
            @include xl\:-ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -20rem;
            }
          }
        }
      }

      @include it("xl\:-m-96	") {
        @include assert {
          @include output {
            @include xl\:-m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -24rem;
            }
          }
        }
      }

      @include it("xl\:-mx-96	") {
        @include assert {
          @include output {
            @include xl\:-mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -24rem;
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("xl\:-my-96	") {
        @include assert {
          @include output {
            @include xl\:-my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -24rem;
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("xl\:-ms-96	") {
        @include assert {
          @include output {
            @include xl\:-ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -24rem;
            }
          }
        }
      }

      @include it("xl\:-me-96	") {
        @include assert {
          @include output {
            @include xl\:-me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -24rem;
            }
          }
        }
      }

      @include it("xl\:-mt-96	") {
        @include assert {
          @include output {
            @include xl\:-mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -24rem;
            }
          }
        }
      }

      @include it("xl\:-mr-96	") {
        @include assert {
          @include output {
            @include xl\:-mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("xl\:-mb-96	") {
        @include assert {
          @include output {
            @include xl\:-mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("xl\:-ml-96	") {
        @include assert {
          @include output {
            @include xl\:-ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -24rem;
            }
          }
        }
      }

      @include it("2xl\:m-0") {
        @include assert {
          @include output {
            @include \2xl\:m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0px;
            }
          }
        }
      }

      @include it("2xl\:mx-0") {
        @include assert {
          @include output {
            @include \2xl\:mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("2xl\:my-0") {
        @include assert {
          @include output {
            @include \2xl\:my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("2xl\:ms-0") {
        @include assert {
          @include output {
            @include \2xl\:ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("2xl\:me-0") {
        @include assert {
          @include output {
            @include \2xl\:me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("2xl\:mt-0") {
        @include assert {
          @include output {
            @include \2xl\:mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("2xl\:mr-0") {
        @include assert {
          @include output {
            @include \2xl\:mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("2xl\:mb-0") {
        @include assert {
          @include output {
            @include \2xl\:mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("2xl\:ml-0") {
        @include assert {
          @include output {
            @include \2xl\:ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("2xl\:m-px") {
        @include assert {
          @include output {
            @include \2xl\:m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 1px;
            }
          }
        }
      }

      @include it("2xl\:mx-px") {
        @include assert {
          @include output {
            @include \2xl\:mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1px;
              margin-right: 1px;
            }
          }
        }
      }

      @include it("2xl\:my-px") {
        @include assert {
          @include output {
            @include \2xl\:my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1px;
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("2xl\:ms-px") {
        @include assert {
          @include output {
            @include \2xl\:ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 1px;
            }
          }
        }
      }

      @include it("2xl\:me-px") {
        @include assert {
          @include output {
            @include \2xl\:me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 1px;
            }
          }
        }
      }

      @include it("2xl\:mt-px") {
        @include assert {
          @include output {
            @include \2xl\:mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1px;
            }
          }
        }
      }

      @include it("2xl\:mr-px") {
        @include assert {
          @include output {
            @include \2xl\:mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 1px;
            }
          }
        }
      }

      @include it("2xl\:mb-px") {
        @include assert {
          @include output {
            @include \2xl\:mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 1px;
            }
          }
        }
      }

      @include it("2xl\:ml-px") {
        @include assert {
          @include output {
            @include \2xl\:ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1px;
            }
          }
        }
      }

      @include it("2xl\:m-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:mx-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.125rem;
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:my-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.125rem;
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:ms-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:me-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:mt-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:mr-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:mb-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:ml-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.125rem;
            }
          }
        }
      }

      @include it("2xl\:m-1") {
        @include assert {
          @include output {
            @include \2xl\:m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:mx-1") {
        @include assert {
          @include output {
            @include \2xl\:mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.25rem;
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:my-1") {
        @include assert {
          @include output {
            @include \2xl\:my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.25rem;
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:ms-1") {
        @include assert {
          @include output {
            @include \2xl\:ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:me-1") {
        @include assert {
          @include output {
            @include \2xl\:me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:mt-1") {
        @include assert {
          @include output {
            @include \2xl\:mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:mr-1") {
        @include assert {
          @include output {
            @include \2xl\:mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:mb-1") {
        @include assert {
          @include output {
            @include \2xl\:mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:ml-1") {
        @include assert {
          @include output {
            @include \2xl\:ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.25rem;
            }
          }
        }
      }

      @include it("2xl\:m-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:mx-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.375rem;
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:my-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.375rem;
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:ms-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:me-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:mt-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:mr-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:mb-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:ml-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.375rem;
            }
          }
        }
      }

      @include it("2xl\:m-2") {
        @include assert {
          @include output {
            @include \2xl\:m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:mx-2") {
        @include assert {
          @include output {
            @include \2xl\:mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.5rem;
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:my-2") {
        @include assert {
          @include output {
            @include \2xl\:my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.5rem;
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:ms-2") {
        @include assert {
          @include output {
            @include \2xl\:ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:me-2") {
        @include assert {
          @include output {
            @include \2xl\:me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:mt-2") {
        @include assert {
          @include output {
            @include \2xl\:mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:mr-2") {
        @include assert {
          @include output {
            @include \2xl\:mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:mb-2") {
        @include assert {
          @include output {
            @include \2xl\:mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:ml-2") {
        @include assert {
          @include output {
            @include \2xl\:ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.5rem;
            }
          }
        }
      }

      @include it("2xl\:m-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:mx-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.625rem;
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:my-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.625rem;
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:ms-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:me-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:mt-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:mr-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:mb-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:ml-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.625rem;
            }
          }
        }
      }

      @include it("2xl\:m-3") {
        @include assert {
          @include output {
            @include \2xl\:m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:mx-3") {
        @include assert {
          @include output {
            @include \2xl\:mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.75rem;
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:my-3") {
        @include assert {
          @include output {
            @include \2xl\:my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.75rem;
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:ms-3") {
        @include assert {
          @include output {
            @include \2xl\:ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:me-3") {
        @include assert {
          @include output {
            @include \2xl\:me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:mt-3") {
        @include assert {
          @include output {
            @include \2xl\:mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:mr-3") {
        @include assert {
          @include output {
            @include \2xl\:mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:mb-3") {
        @include assert {
          @include output {
            @include \2xl\:mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:ml-3") {
        @include assert {
          @include output {
            @include \2xl\:ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.75rem;
            }
          }
        }
      }

      @include it("2xl\:m-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:mx-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.875rem;
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:my-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.875rem;
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:ms-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:me-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:mt-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:mr-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:mb-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:ml-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0.875rem;
            }
          }
        }
      }

      @include it("2xl\:m-4") {
        @include assert {
          @include output {
            @include \2xl\:m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 1rem;
            }
          }
        }
      }

      @include it("2xl\:mx-4") {
        @include assert {
          @include output {
            @include \2xl\:mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1rem;
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("2xl\:my-4") {
        @include assert {
          @include output {
            @include \2xl\:my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1rem;
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("2xl\:ms-4") {
        @include assert {
          @include output {
            @include \2xl\:ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 1rem;
            }
          }
        }
      }

      @include it("2xl\:me-4") {
        @include assert {
          @include output {
            @include \2xl\:me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 1rem;
            }
          }
        }
      }

      @include it("2xl\:mt-4") {
        @include assert {
          @include output {
            @include \2xl\:mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1rem;
            }
          }
        }
      }

      @include it("2xl\:mr-4") {
        @include assert {
          @include output {
            @include \2xl\:mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 1rem;
            }
          }
        }
      }

      @include it("2xl\:mb-4") {
        @include assert {
          @include output {
            @include \2xl\:mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 1rem;
            }
          }
        }
      }

      @include it("2xl\:ml-4") {
        @include assert {
          @include output {
            @include \2xl\:ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1rem;
            }
          }
        }
      }

      @include it("2xl\:m-5") {
        @include assert {
          @include output {
            @include \2xl\:m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:mx-5") {
        @include assert {
          @include output {
            @include \2xl\:mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1.25rem;
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:my-5") {
        @include assert {
          @include output {
            @include \2xl\:my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1.25rem;
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:ms-5") {
        @include assert {
          @include output {
            @include \2xl\:ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:me-5") {
        @include assert {
          @include output {
            @include \2xl\:me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:mt-5") {
        @include assert {
          @include output {
            @include \2xl\:mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:mr-5") {
        @include assert {
          @include output {
            @include \2xl\:mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:mb-5") {
        @include assert {
          @include output {
            @include \2xl\:mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:ml-5") {
        @include assert {
          @include output {
            @include \2xl\:ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1.25rem;
            }
          }
        }
      }

      @include it("2xl\:m-6") {
        @include assert {
          @include output {
            @include \2xl\:m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:mx-6") {
        @include assert {
          @include output {
            @include \2xl\:mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1.5rem;
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:my-6") {
        @include assert {
          @include output {
            @include \2xl\:my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1.5rem;
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:ms-6") {
        @include assert {
          @include output {
            @include \2xl\:ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:me-6") {
        @include assert {
          @include output {
            @include \2xl\:me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:mt-6") {
        @include assert {
          @include output {
            @include \2xl\:mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:mr-6") {
        @include assert {
          @include output {
            @include \2xl\:mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:mb-6") {
        @include assert {
          @include output {
            @include \2xl\:mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:ml-6") {
        @include assert {
          @include output {
            @include \2xl\:ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1.5rem;
            }
          }
        }
      }

      @include it("2xl\:m-7") {
        @include assert {
          @include output {
            @include \2xl\:m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:mx-7") {
        @include assert {
          @include output {
            @include \2xl\:mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1.75rem;
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:my-7") {
        @include assert {
          @include output {
            @include \2xl\:my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1.75rem;
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:ms-7") {
        @include assert {
          @include output {
            @include \2xl\:ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:me-7") {
        @include assert {
          @include output {
            @include \2xl\:me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:mt-7") {
        @include assert {
          @include output {
            @include \2xl\:mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:mr-7") {
        @include assert {
          @include output {
            @include \2xl\:mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:mb-7") {
        @include assert {
          @include output {
            @include \2xl\:mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:ml-7") {
        @include assert {
          @include output {
            @include \2xl\:ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 1.75rem;
            }
          }
        }
      }

      @include it("2xl\:m-8") {
        @include assert {
          @include output {
            @include \2xl\:m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 2rem;
            }
          }
        }
      }

      @include it("2xl\:mx-8") {
        @include assert {
          @include output {
            @include \2xl\:mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2rem;
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("2xl\:my-8") {
        @include assert {
          @include output {
            @include \2xl\:my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2rem;
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("2xl\:ms-8") {
        @include assert {
          @include output {
            @include \2xl\:ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 2rem;
            }
          }
        }
      }

      @include it("2xl\:me-8") {
        @include assert {
          @include output {
            @include \2xl\:me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 2rem;
            }
          }
        }
      }

      @include it("2xl\:mt-8") {
        @include assert {
          @include output {
            @include \2xl\:mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2rem;
            }
          }
        }
      }

      @include it("2xl\:mr-8") {
        @include assert {
          @include output {
            @include \2xl\:mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 2rem;
            }
          }
        }
      }

      @include it("2xl\:mb-8") {
        @include assert {
          @include output {
            @include \2xl\:mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 2rem;
            }
          }
        }
      }

      @include it("2xl\:ml-8") {
        @include assert {
          @include output {
            @include \2xl\:ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2rem;
            }
          }
        }
      }

      @include it("2xl\:m-9") {
        @include assert {
          @include output {
            @include \2xl\:m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:mx-9") {
        @include assert {
          @include output {
            @include \2xl\:mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2.25rem;
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:my-9") {
        @include assert {
          @include output {
            @include \2xl\:my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2.25rem;
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:ms-9") {
        @include assert {
          @include output {
            @include \2xl\:ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:me-9") {
        @include assert {
          @include output {
            @include \2xl\:me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:mt-9") {
        @include assert {
          @include output {
            @include \2xl\:mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:mr-9") {
        @include assert {
          @include output {
            @include \2xl\:mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:mb-9") {
        @include assert {
          @include output {
            @include \2xl\:mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:ml-9") {
        @include assert {
          @include output {
            @include \2xl\:ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2.25rem;
            }
          }
        }
      }

      @include it("2xl\:m-10") {
        @include assert {
          @include output {
            @include \2xl\:m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:mx-10") {
        @include assert {
          @include output {
            @include \2xl\:mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2.5rem;
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:my-10") {
        @include assert {
          @include output {
            @include \2xl\:my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2.5rem;
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:ms-10") {
        @include assert {
          @include output {
            @include \2xl\:ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:me-10") {
        @include assert {
          @include output {
            @include \2xl\:me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:mt-10") {
        @include assert {
          @include output {
            @include \2xl\:mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:mr-10") {
        @include assert {
          @include output {
            @include \2xl\:mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:mb-10") {
        @include assert {
          @include output {
            @include \2xl\:mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:ml-10") {
        @include assert {
          @include output {
            @include \2xl\:ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2.5rem;
            }
          }
        }
      }

      @include it("2xl\:m-11") {
        @include assert {
          @include output {
            @include \2xl\:m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:mx-11") {
        @include assert {
          @include output {
            @include \2xl\:mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2.75rem;
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:my-11") {
        @include assert {
          @include output {
            @include \2xl\:my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2.75rem;
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:ms-11") {
        @include assert {
          @include output {
            @include \2xl\:ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:me-11") {
        @include assert {
          @include output {
            @include \2xl\:me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:mt-11") {
        @include assert {
          @include output {
            @include \2xl\:mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:mr-11") {
        @include assert {
          @include output {
            @include \2xl\:mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:mb-11") {
        @include assert {
          @include output {
            @include \2xl\:mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:ml-11") {
        @include assert {
          @include output {
            @include \2xl\:ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 2.75rem;
            }
          }
        }
      }

      @include it("2xl\:m-12") {
        @include assert {
          @include output {
            @include \2xl\:m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 3rem;
            }
          }
        }
      }

      @include it("2xl\:mx-12") {
        @include assert {
          @include output {
            @include \2xl\:mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 3rem;
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("2xl\:my-12") {
        @include assert {
          @include output {
            @include \2xl\:my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 3rem;
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("2xl\:ms-12") {
        @include assert {
          @include output {
            @include \2xl\:ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 3rem;
            }
          }
        }
      }

      @include it("2xl\:me-12") {
        @include assert {
          @include output {
            @include \2xl\:me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 3rem;
            }
          }
        }
      }

      @include it("2xl\:mt-12") {
        @include assert {
          @include output {
            @include \2xl\:mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 3rem;
            }
          }
        }
      }

      @include it("2xl\:mr-12") {
        @include assert {
          @include output {
            @include \2xl\:mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 3rem;
            }
          }
        }
      }

      @include it("2xl\:mb-12") {
        @include assert {
          @include output {
            @include \2xl\:mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 3rem;
            }
          }
        }
      }

      @include it("2xl\:ml-12") {
        @include assert {
          @include output {
            @include \2xl\:ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 3rem;
            }
          }
        }
      }

      @include it("2xl\:m-14") {
        @include assert {
          @include output {
            @include \2xl\:m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:mx-14") {
        @include assert {
          @include output {
            @include \2xl\:mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 3.5rem;
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:my-14") {
        @include assert {
          @include output {
            @include \2xl\:my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 3.5rem;
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:ms-14") {
        @include assert {
          @include output {
            @include \2xl\:ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:me-14") {
        @include assert {
          @include output {
            @include \2xl\:me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:mt-14") {
        @include assert {
          @include output {
            @include \2xl\:mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:mr-14") {
        @include assert {
          @include output {
            @include \2xl\:mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:mb-14") {
        @include assert {
          @include output {
            @include \2xl\:mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:ml-14") {
        @include assert {
          @include output {
            @include \2xl\:ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 3.5rem;
            }
          }
        }
      }

      @include it("2xl\:m-16") {
        @include assert {
          @include output {
            @include \2xl\:m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 4rem;
            }
          }
        }
      }

      @include it("2xl\:mx-16") {
        @include assert {
          @include output {
            @include \2xl\:mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 4rem;
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("2xl\:my-16") {
        @include assert {
          @include output {
            @include \2xl\:my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 4rem;
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("2xl\:ms-16") {
        @include assert {
          @include output {
            @include \2xl\:ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 4rem;
            }
          }
        }
      }

      @include it("2xl\:me-16") {
        @include assert {
          @include output {
            @include \2xl\:me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 4rem;
            }
          }
        }
      }

      @include it("2xl\:mt-16") {
        @include assert {
          @include output {
            @include \2xl\:mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 4rem;
            }
          }
        }
      }

      @include it("2xl\:mr-16") {
        @include assert {
          @include output {
            @include \2xl\:mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 4rem;
            }
          }
        }
      }

      @include it("2xl\:mb-16") {
        @include assert {
          @include output {
            @include \2xl\:mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 4rem;
            }
          }
        }
      }

      @include it("2xl\:ml-16") {
        @include assert {
          @include output {
            @include \2xl\:ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 4rem;
            }
          }
        }
      }

      @include it("2xl\:m-20") {
        @include assert {
          @include output {
            @include \2xl\:m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 5rem;
            }
          }
        }
      }

      @include it("2xl\:mx-20") {
        @include assert {
          @include output {
            @include \2xl\:mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 5rem;
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("2xl\:my-20") {
        @include assert {
          @include output {
            @include \2xl\:my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 5rem;
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("2xl\:ms-20") {
        @include assert {
          @include output {
            @include \2xl\:ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 5rem;
            }
          }
        }
      }

      @include it("2xl\:me-20") {
        @include assert {
          @include output {
            @include \2xl\:me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 5rem;
            }
          }
        }
      }

      @include it("2xl\:mt-20") {
        @include assert {
          @include output {
            @include \2xl\:mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 5rem;
            }
          }
        }
      }

      @include it("2xl\:mr-20") {
        @include assert {
          @include output {
            @include \2xl\:mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 5rem;
            }
          }
        }
      }

      @include it("2xl\:mb-20") {
        @include assert {
          @include output {
            @include \2xl\:mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 5rem;
            }
          }
        }
      }

      @include it("2xl\:ml-20") {
        @include assert {
          @include output {
            @include \2xl\:ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 5rem;
            }
          }
        }
      }

      @include it("2xl\:m-24") {
        @include assert {
          @include output {
            @include \2xl\:m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 6rem;
            }
          }
        }
      }

      @include it("2xl\:mx-24") {
        @include assert {
          @include output {
            @include \2xl\:mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 6rem;
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("2xl\:my-24") {
        @include assert {
          @include output {
            @include \2xl\:my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 6rem;
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("2xl\:ms-24") {
        @include assert {
          @include output {
            @include \2xl\:ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 6rem;
            }
          }
        }
      }

      @include it("2xl\:me-24") {
        @include assert {
          @include output {
            @include \2xl\:me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 6rem;
            }
          }
        }
      }

      @include it("2xl\:mt-24") {
        @include assert {
          @include output {
            @include \2xl\:mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 6rem;
            }
          }
        }
      }

      @include it("2xl\:mr-24") {
        @include assert {
          @include output {
            @include \2xl\:mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 6rem;
            }
          }
        }
      }

      @include it("2xl\:mb-24") {
        @include assert {
          @include output {
            @include \2xl\:mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 6rem;
            }
          }
        }
      }

      @include it("2xl\:ml-24") {
        @include assert {
          @include output {
            @include \2xl\:ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 6rem;
            }
          }
        }
      }

      @include it("2xl\:m-28") {
        @include assert {
          @include output {
            @include \2xl\:m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 7rem;
            }
          }
        }
      }

      @include it("2xl\:mx-28") {
        @include assert {
          @include output {
            @include \2xl\:mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 7rem;
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("2xl\:my-28") {
        @include assert {
          @include output {
            @include \2xl\:my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 7rem;
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("2xl\:ms-28") {
        @include assert {
          @include output {
            @include \2xl\:ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 7rem;
            }
          }
        }
      }

      @include it("2xl\:me-28") {
        @include assert {
          @include output {
            @include \2xl\:me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 7rem;
            }
          }
        }
      }

      @include it("2xl\:mt-28") {
        @include assert {
          @include output {
            @include \2xl\:mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 7rem;
            }
          }
        }
      }

      @include it("2xl\:mr-28") {
        @include assert {
          @include output {
            @include \2xl\:mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 7rem;
            }
          }
        }
      }

      @include it("2xl\:mb-28") {
        @include assert {
          @include output {
            @include \2xl\:mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 7rem;
            }
          }
        }
      }

      @include it("2xl\:ml-28") {
        @include assert {
          @include output {
            @include \2xl\:ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 7rem;
            }
          }
        }
      }

      @include it("2xl\:m-32") {
        @include assert {
          @include output {
            @include \2xl\:m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 8rem;
            }
          }
        }
      }

      @include it("2xl\:mx-32") {
        @include assert {
          @include output {
            @include \2xl\:mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 8rem;
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("2xl\:my-32") {
        @include assert {
          @include output {
            @include \2xl\:my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 8rem;
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("2xl\:ms-32") {
        @include assert {
          @include output {
            @include \2xl\:ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 8rem;
            }
          }
        }
      }

      @include it("2xl\:me-32") {
        @include assert {
          @include output {
            @include \2xl\:me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 8rem;
            }
          }
        }
      }

      @include it("2xl\:mt-32") {
        @include assert {
          @include output {
            @include \2xl\:mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 8rem;
            }
          }
        }
      }

      @include it("2xl\:mr-32") {
        @include assert {
          @include output {
            @include \2xl\:mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 8rem;
            }
          }
        }
      }

      @include it("2xl\:mb-32") {
        @include assert {
          @include output {
            @include \2xl\:mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 8rem;
            }
          }
        }
      }

      @include it("2xl\:ml-32") {
        @include assert {
          @include output {
            @include \2xl\:ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 8rem;
            }
          }
        }
      }

      @include it("2xl\:m-36") {
        @include assert {
          @include output {
            @include \2xl\:m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 9rem;
            }
          }
        }
      }

      @include it("2xl\:mx-36") {
        @include assert {
          @include output {
            @include \2xl\:mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 9rem;
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("2xl\:my-36") {
        @include assert {
          @include output {
            @include \2xl\:my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 9rem;
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("2xl\:ms-36") {
        @include assert {
          @include output {
            @include \2xl\:ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 9rem;
            }
          }
        }
      }

      @include it("2xl\:me-36") {
        @include assert {
          @include output {
            @include \2xl\:me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 9rem;
            }
          }
        }
      }

      @include it("2xl\:mt-36") {
        @include assert {
          @include output {
            @include \2xl\:mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 9rem;
            }
          }
        }
      }

      @include it("2xl\:mr-36") {
        @include assert {
          @include output {
            @include \2xl\:mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 9rem;
            }
          }
        }
      }

      @include it("2xl\:mb-36") {
        @include assert {
          @include output {
            @include \2xl\:mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 9rem;
            }
          }
        }
      }

      @include it("2xl\:ml-36") {
        @include assert {
          @include output {
            @include \2xl\:ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 9rem;
            }
          }
        }
      }

      @include it("2xl\:m-40") {
        @include assert {
          @include output {
            @include \2xl\:m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 10rem;
            }
          }
        }
      }

      @include it("2xl\:mx-40") {
        @include assert {
          @include output {
            @include \2xl\:mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 10rem;
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("2xl\:my-40") {
        @include assert {
          @include output {
            @include \2xl\:my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 10rem;
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("2xl\:ms-40") {
        @include assert {
          @include output {
            @include \2xl\:ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 10rem;
            }
          }
        }
      }

      @include it("2xl\:me-40") {
        @include assert {
          @include output {
            @include \2xl\:me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 10rem;
            }
          }
        }
      }

      @include it("2xl\:mt-40") {
        @include assert {
          @include output {
            @include \2xl\:mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 10rem;
            }
          }
        }
      }

      @include it("2xl\:mr-40") {
        @include assert {
          @include output {
            @include \2xl\:mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 10rem;
            }
          }
        }
      }

      @include it("2xl\:mb-40") {
        @include assert {
          @include output {
            @include \2xl\:mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 10rem;
            }
          }
        }
      }

      @include it("2xl\:ml-40") {
        @include assert {
          @include output {
            @include \2xl\:ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 10rem;
            }
          }
        }
      }

      @include it("2xl\:m-44") {
        @include assert {
          @include output {
            @include \2xl\:m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 11rem;
            }
          }
        }
      }

      @include it("2xl\:mx-44") {
        @include assert {
          @include output {
            @include \2xl\:mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 11rem;
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("2xl\:my-44") {
        @include assert {
          @include output {
            @include \2xl\:my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 11rem;
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("2xl\:ms-44") {
        @include assert {
          @include output {
            @include \2xl\:ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 11rem;
            }
          }
        }
      }

      @include it("2xl\:me-44") {
        @include assert {
          @include output {
            @include \2xl\:me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 11rem;
            }
          }
        }
      }

      @include it("2xl\:mt-44") {
        @include assert {
          @include output {
            @include \2xl\:mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 11rem;
            }
          }
        }
      }

      @include it("2xl\:mr-44") {
        @include assert {
          @include output {
            @include \2xl\:mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 11rem;
            }
          }
        }
      }

      @include it("2xl\:mb-44") {
        @include assert {
          @include output {
            @include \2xl\:mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 11rem;
            }
          }
        }
      }

      @include it("2xl\:ml-44") {
        @include assert {
          @include output {
            @include \2xl\:ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 11rem;
            }
          }
        }
      }

      @include it("2xl\:m-48") {
        @include assert {
          @include output {
            @include \2xl\:m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 12rem;
            }
          }
        }
      }

      @include it("2xl\:mx-48") {
        @include assert {
          @include output {
            @include \2xl\:mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 12rem;
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("2xl\:my-48") {
        @include assert {
          @include output {
            @include \2xl\:my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 12rem;
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("2xl\:ms-48") {
        @include assert {
          @include output {
            @include \2xl\:ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 12rem;
            }
          }
        }
      }

      @include it("2xl\:me-48") {
        @include assert {
          @include output {
            @include \2xl\:me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 12rem;
            }
          }
        }
      }

      @include it("2xl\:mt-48") {
        @include assert {
          @include output {
            @include \2xl\:mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 12rem;
            }
          }
        }
      }

      @include it("2xl\:mr-48") {
        @include assert {
          @include output {
            @include \2xl\:mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 12rem;
            }
          }
        }
      }

      @include it("2xl\:mb-48") {
        @include assert {
          @include output {
            @include \2xl\:mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 12rem;
            }
          }
        }
      }

      @include it("2xl\:ml-48") {
        @include assert {
          @include output {
            @include \2xl\:ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 12rem;
            }
          }
        }
      }

      @include it("2xl\:m-52") {
        @include assert {
          @include output {
            @include \2xl\:m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 13rem;
            }
          }
        }
      }

      @include it("2xl\:mx-52") {
        @include assert {
          @include output {
            @include \2xl\:mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 13rem;
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("2xl\:my-52") {
        @include assert {
          @include output {
            @include \2xl\:my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 13rem;
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("2xl\:ms-52") {
        @include assert {
          @include output {
            @include \2xl\:ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 13rem;
            }
          }
        }
      }

      @include it("2xl\:me-52") {
        @include assert {
          @include output {
            @include \2xl\:me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 13rem;
            }
          }
        }
      }

      @include it("2xl\:mt-52") {
        @include assert {
          @include output {
            @include \2xl\:mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 13rem;
            }
          }
        }
      }

      @include it("2xl\:mr-52") {
        @include assert {
          @include output {
            @include \2xl\:mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 13rem;
            }
          }
        }
      }

      @include it("2xl\:mb-52") {
        @include assert {
          @include output {
            @include \2xl\:mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 13rem;
            }
          }
        }
      }

      @include it("2xl\:ml-52") {
        @include assert {
          @include output {
            @include \2xl\:ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 13rem;
            }
          }
        }
      }

      @include it("2xl\:m-56") {
        @include assert {
          @include output {
            @include \2xl\:m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 14rem;
            }
          }
        }
      }

      @include it("2xl\:mx-56") {
        @include assert {
          @include output {
            @include \2xl\:mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 14rem;
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("2xl\:my-56") {
        @include assert {
          @include output {
            @include \2xl\:my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 14rem;
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("2xl\:ms-56") {
        @include assert {
          @include output {
            @include \2xl\:ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 14rem;
            }
          }
        }
      }

      @include it("2xl\:me-56") {
        @include assert {
          @include output {
            @include \2xl\:me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 14rem;
            }
          }
        }
      }

      @include it("2xl\:mt-56") {
        @include assert {
          @include output {
            @include \2xl\:mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 14rem;
            }
          }
        }
      }

      @include it("2xl\:mr-56") {
        @include assert {
          @include output {
            @include \2xl\:mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 14rem;
            }
          }
        }
      }

      @include it("2xl\:mb-56") {
        @include assert {
          @include output {
            @include \2xl\:mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 14rem;
            }
          }
        }
      }

      @include it("2xl\:ml-56") {
        @include assert {
          @include output {
            @include \2xl\:ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 14rem;
            }
          }
        }
      }

      @include it("2xl\:m-60") {
        @include assert {
          @include output {
            @include \2xl\:m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 15rem;
            }
          }
        }
      }

      @include it("2xl\:mx-60") {
        @include assert {
          @include output {
            @include \2xl\:mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 15rem;
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("2xl\:my-60") {
        @include assert {
          @include output {
            @include \2xl\:my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 15rem;
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("2xl\:ms-60") {
        @include assert {
          @include output {
            @include \2xl\:ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 15rem;
            }
          }
        }
      }

      @include it("2xl\:me-60") {
        @include assert {
          @include output {
            @include \2xl\:me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 15rem;
            }
          }
        }
      }

      @include it("2xl\:mt-60") {
        @include assert {
          @include output {
            @include \2xl\:mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 15rem;
            }
          }
        }
      }

      @include it("2xl\:mr-60") {
        @include assert {
          @include output {
            @include \2xl\:mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 15rem;
            }
          }
        }
      }

      @include it("2xl\:mb-60") {
        @include assert {
          @include output {
            @include \2xl\:mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 15rem;
            }
          }
        }
      }

      @include it("2xl\:ml-60") {
        @include assert {
          @include output {
            @include \2xl\:ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 15rem;
            }
          }
        }
      }

      @include it("2xl\:m-64") {
        @include assert {
          @include output {
            @include \2xl\:m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 16rem;
            }
          }
        }
      }

      @include it("2xl\:mx-64") {
        @include assert {
          @include output {
            @include \2xl\:mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 16rem;
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("2xl\:my-64") {
        @include assert {
          @include output {
            @include \2xl\:my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 16rem;
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("2xl\:ms-64") {
        @include assert {
          @include output {
            @include \2xl\:ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 16rem;
            }
          }
        }
      }

      @include it("2xl\:me-64") {
        @include assert {
          @include output {
            @include \2xl\:me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 16rem;
            }
          }
        }
      }

      @include it("2xl\:mt-64") {
        @include assert {
          @include output {
            @include \2xl\:mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 16rem;
            }
          }
        }
      }

      @include it("2xl\:mr-64") {
        @include assert {
          @include output {
            @include \2xl\:mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 16rem;
            }
          }
        }
      }

      @include it("2xl\:mb-64") {
        @include assert {
          @include output {
            @include \2xl\:mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 16rem;
            }
          }
        }
      }

      @include it("2xl\:ml-64") {
        @include assert {
          @include output {
            @include \2xl\:ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 16rem;
            }
          }
        }
      }

      @include it("2xl\:m-72") {
        @include assert {
          @include output {
            @include \2xl\:m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 18rem;
            }
          }
        }
      }

      @include it("2xl\:mx-72") {
        @include assert {
          @include output {
            @include \2xl\:mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 18rem;
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("2xl\:my-72") {
        @include assert {
          @include output {
            @include \2xl\:my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 18rem;
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("2xl\:ms-72") {
        @include assert {
          @include output {
            @include \2xl\:ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 18rem;
            }
          }
        }
      }

      @include it("2xl\:me-72") {
        @include assert {
          @include output {
            @include \2xl\:me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 18rem;
            }
          }
        }
      }

      @include it("2xl\:mt-72") {
        @include assert {
          @include output {
            @include \2xl\:mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 18rem;
            }
          }
        }
      }

      @include it("2xl\:mr-72") {
        @include assert {
          @include output {
            @include \2xl\:mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 18rem;
            }
          }
        }
      }

      @include it("2xl\:mb-72") {
        @include assert {
          @include output {
            @include \2xl\:mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 18rem;
            }
          }
        }
      }

      @include it("2xl\:ml-72") {
        @include assert {
          @include output {
            @include \2xl\:ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 18rem;
            }
          }
        }
      }

      @include it("2xl\:m-80") {
        @include assert {
          @include output {
            @include \2xl\:m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 20rem;
            }
          }
        }
      }

      @include it("2xl\:mx-80") {
        @include assert {
          @include output {
            @include \2xl\:mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 20rem;
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("2xl\:my-80") {
        @include assert {
          @include output {
            @include \2xl\:my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 20rem;
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("2xl\:ms-80") {
        @include assert {
          @include output {
            @include \2xl\:ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 20rem;
            }
          }
        }
      }

      @include it("2xl\:me-80") {
        @include assert {
          @include output {
            @include \2xl\:me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 20rem;
            }
          }
        }
      }

      @include it("2xl\:mt-80") {
        @include assert {
          @include output {
            @include \2xl\:mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 20rem;
            }
          }
        }
      }

      @include it("2xl\:mr-80") {
        @include assert {
          @include output {
            @include \2xl\:mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 20rem;
            }
          }
        }
      }

      @include it("2xl\:mb-80") {
        @include assert {
          @include output {
            @include \2xl\:mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 20rem;
            }
          }
        }
      }

      @include it("2xl\:ml-80") {
        @include assert {
          @include output {
            @include \2xl\:ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 20rem;
            }
          }
        }
      }

      @include it("2xl\:m-96") {
        @include assert {
          @include output {
            @include \2xl\:m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 24rem;
            }
          }
        }
      }

      @include it("2xl\:mx-96") {
        @include assert {
          @include output {
            @include \2xl\:mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 24rem;
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("2xl\:my-96") {
        @include assert {
          @include output {
            @include \2xl\:my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 24rem;
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("2xl\:ms-96") {
        @include assert {
          @include output {
            @include \2xl\:ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 24rem;
            }
          }
        }
      }

      @include it("2xl\:me-96") {
        @include assert {
          @include output {
            @include \2xl\:me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 24rem;
            }
          }
        }
      }

      @include it("2xl\:mt-96") {
        @include assert {
          @include output {
            @include \2xl\:mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 24rem;
            }
          }
        }
      }

      @include it("2xl\:mr-96") {
        @include assert {
          @include output {
            @include \2xl\:mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 24rem;
            }
          }
        }
      }

      @include it("2xl\:mb-96") {
        @include assert {
          @include output {
            @include \2xl\:mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 24rem;
            }
          }
        }
      }

      @include it("2xl\:ml-96") {
        @include assert {
          @include output {
            @include \2xl\:ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 24rem;
            }
          }
        }
      }

      @include it("2xl\:m-auto") {
        @include assert {
          @include output {
            @include \2xl\:m-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: auto;
            }
          }
        }
      }

      @include it("2xl\:mx-auto") {
        @include assert {
          @include output {
            @include \2xl\:mx-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: auto;
              margin-right: auto;
            }
          }
        }
      }

      @include it("2xl\:my-auto") {
        @include assert {
          @include output {
            @include \2xl\:my-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: auto;
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("2xl\:ms-auto") {
        @include assert {
          @include output {
            @include \2xl\:ms-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: auto;
            }
          }
        }
      }

      @include it("2xl\:me-auto") {
        @include assert {
          @include output {
            @include \2xl\:me-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: auto;
            }
          }
        }
      }

      @include it("2xl\:mt-auto") {
        @include assert {
          @include output {
            @include \2xl\:mt-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: auto;
            }
          }
        }
      }

      @include it("2xl\:mr-auto") {
        @include assert {
          @include output {
            @include \2xl\:mr-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: auto;
            }
          }
        }
      }

      @include it("2xl\:mb-auto") {
        @include assert {
          @include output {
            @include \2xl\:mb-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: auto;
            }
          }
        }
      }

      @include it("2xl\:ml-auto") {
        @include assert {
          @include output {
            @include \2xl\:ml-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: auto;
            }
          }
        }
      }

      @include it("2xl\:-m-0	") {
        @include assert {
          @include output {
            @include \2xl\:-m-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 0px;
            }
          }
        }
      }

      @include it("2xl\:-mx-0	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0px;
              margin-right: 0px;
            }
          }
        }
      }

      @include it("2xl\:-my-0	") {
        @include assert {
          @include output {
            @include \2xl\:-my-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0px;
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("2xl\:-ms-0	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 0px;
            }
          }
        }
      }

      @include it("2xl\:-me-0	") {
        @include assert {
          @include output {
            @include \2xl\:-me-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 0px;
            }
          }
        }
      }

      @include it("2xl\:-mt-0	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 0px;
            }
          }
        }
      }

      @include it("2xl\:-mr-0	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 0px;
            }
          }
        }
      }

      @include it("2xl\:-mb-0	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 0px;
            }
          }
        }
      }

      @include it("2xl\:-ml-0	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 0px;
            }
          }
        }
      }

      @include it("2xl\:-m-px	") {
        @include assert {
          @include output {
            @include \2xl\:-m-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -1px;
            }
          }
        }
      }

      @include it("2xl\:-mx-px	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1px;
              margin-right: -1px;
            }
          }
        }
      }

      @include it("2xl\:-my-px	") {
        @include assert {
          @include output {
            @include \2xl\:-my-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1px;
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("2xl\:-ms-px	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -1px;
            }
          }
        }
      }

      @include it("2xl\:-me-px	") {
        @include assert {
          @include output {
            @include \2xl\:-me-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -1px;
            }
          }
        }
      }

      @include it("2xl\:-mt-px	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1px;
            }
          }
        }
      }

      @include it("2xl\:-mr-px	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -1px;
            }
          }
        }
      }

      @include it("2xl\:-mb-px	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -1px;
            }
          }
        }
      }

      @include it("2xl\:-ml-px	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1px;
            }
          }
        }
      }

      @include it("2xl\:-m-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-m-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.125rem;
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-my-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-my-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.125rem;
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-me-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-me-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-0\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.125rem;
            }
          }
        }
      }

      @include it("2xl\:-m-1	") {
        @include assert {
          @include output {
            @include \2xl\:-m-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-1	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.25rem;
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-my-1	") {
        @include assert {
          @include output {
            @include \2xl\:-my-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.25rem;
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-1	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-me-1	") {
        @include assert {
          @include output {
            @include \2xl\:-me-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-1	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-1	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-1	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-1	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.25rem;
            }
          }
        }
      }

      @include it("2xl\:-m-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-m-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.375rem;
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-my-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-my-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.375rem;
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-me-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-me-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-1\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.375rem;
            }
          }
        }
      }

      @include it("2xl\:-m-2	") {
        @include assert {
          @include output {
            @include \2xl\:-m-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-2	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.5rem;
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-my-2	") {
        @include assert {
          @include output {
            @include \2xl\:-my-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.5rem;
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-2	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-me-2	") {
        @include assert {
          @include output {
            @include \2xl\:-me-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-2	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-2	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-2	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-2	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.5rem;
            }
          }
        }
      }

      @include it("2xl\:-m-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-m-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.625rem;
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-my-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-my-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.625rem;
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-me-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-me-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-2\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.625rem;
            }
          }
        }
      }

      @include it("2xl\:-m-3	") {
        @include assert {
          @include output {
            @include \2xl\:-m-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-3	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.75rem;
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-my-3	") {
        @include assert {
          @include output {
            @include \2xl\:-my-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.75rem;
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-3	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-me-3	") {
        @include assert {
          @include output {
            @include \2xl\:-me-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-3	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-3	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-3	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-3	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.75rem;
            }
          }
        }
      }

      @include it("2xl\:-m-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-m-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.875rem;
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-my-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-my-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.875rem;
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-me-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-me-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-3\.5	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -0.875rem;
            }
          }
        }
      }

      @include it("2xl\:-m-4	") {
        @include assert {
          @include output {
            @include \2xl\:-m-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-4	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1rem;
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-my-4	") {
        @include assert {
          @include output {
            @include \2xl\:-my-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1rem;
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-4	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-me-4	") {
        @include assert {
          @include output {
            @include \2xl\:-me-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-4	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-4	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-4	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-4	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1rem;
            }
          }
        }
      }

      @include it("2xl\:-m-5	") {
        @include assert {
          @include output {
            @include \2xl\:-m-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-5	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1.25rem;
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-my-5	") {
        @include assert {
          @include output {
            @include \2xl\:-my-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1.25rem;
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-5	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-me-5	") {
        @include assert {
          @include output {
            @include \2xl\:-me-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-5	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-5	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-5	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-5	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1.25rem;
            }
          }
        }
      }

      @include it("2xl\:-m-6	") {
        @include assert {
          @include output {
            @include \2xl\:-m-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-6	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1.5rem;
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-my-6	") {
        @include assert {
          @include output {
            @include \2xl\:-my-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1.5rem;
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-6	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-me-6	") {
        @include assert {
          @include output {
            @include \2xl\:-me-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-6	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-6	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-6	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-6	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1.5rem;
            }
          }
        }
      }

      @include it("2xl\:-m-7	") {
        @include assert {
          @include output {
            @include \2xl\:-m-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-7	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1.75rem;
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-my-7	") {
        @include assert {
          @include output {
            @include \2xl\:-my-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1.75rem;
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-7	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-me-7	") {
        @include assert {
          @include output {
            @include \2xl\:-me-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-7	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-7	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-7	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-7	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -1.75rem;
            }
          }
        }
      }

      @include it("2xl\:-m-8	") {
        @include assert {
          @include output {
            @include \2xl\:-m-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-8	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2rem;
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-my-8	") {
        @include assert {
          @include output {
            @include \2xl\:-my-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2rem;
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-8	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-me-8	") {
        @include assert {
          @include output {
            @include \2xl\:-me-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-8	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-8	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-8	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-8	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2rem;
            }
          }
        }
      }

      @include it("2xl\:-m-9	") {
        @include assert {
          @include output {
            @include \2xl\:-m-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-9	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2.25rem;
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-my-9	") {
        @include assert {
          @include output {
            @include \2xl\:-my-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2.25rem;
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-9	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-me-9	") {
        @include assert {
          @include output {
            @include \2xl\:-me-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-9	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-9	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-9	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-9	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2.25rem;
            }
          }
        }
      }

      @include it("2xl\:-m-10	") {
        @include assert {
          @include output {
            @include \2xl\:-m-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-10	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2.5rem;
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-my-10	") {
        @include assert {
          @include output {
            @include \2xl\:-my-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2.5rem;
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-10	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-me-10	") {
        @include assert {
          @include output {
            @include \2xl\:-me-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-10	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-10	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-10	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-10	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2.5rem;
            }
          }
        }
      }

      @include it("2xl\:-m-11	") {
        @include assert {
          @include output {
            @include \2xl\:-m-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-11	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2.75rem;
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-my-11	") {
        @include assert {
          @include output {
            @include \2xl\:-my-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2.75rem;
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-11	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-me-11	") {
        @include assert {
          @include output {
            @include \2xl\:-me-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-11	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-11	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-11	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-11	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -2.75rem;
            }
          }
        }
      }

      @include it("2xl\:-m-12	") {
        @include assert {
          @include output {
            @include \2xl\:-m-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-12	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -3rem;
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-my-12	") {
        @include assert {
          @include output {
            @include \2xl\:-my-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -3rem;
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-12	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-me-12	") {
        @include assert {
          @include output {
            @include \2xl\:-me-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-12	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-12	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-12	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-12	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -3rem;
            }
          }
        }
      }

      @include it("2xl\:-m-14	") {
        @include assert {
          @include output {
            @include \2xl\:-m-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-14	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -3.5rem;
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-my-14	") {
        @include assert {
          @include output {
            @include \2xl\:-my-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -3.5rem;
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-14	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-me-14	") {
        @include assert {
          @include output {
            @include \2xl\:-me-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-14	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-14	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-14	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-14	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -3.5rem;
            }
          }
        }
      }

      @include it("2xl\:-m-16	") {
        @include assert {
          @include output {
            @include \2xl\:-m-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-16	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -4rem;
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-my-16	") {
        @include assert {
          @include output {
            @include \2xl\:-my-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -4rem;
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-16	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-me-16	") {
        @include assert {
          @include output {
            @include \2xl\:-me-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-16	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-16	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-16	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-16	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -4rem;
            }
          }
        }
      }

      @include it("2xl\:-m-20	") {
        @include assert {
          @include output {
            @include \2xl\:-m-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-20	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -5rem;
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-my-20	") {
        @include assert {
          @include output {
            @include \2xl\:-my-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -5rem;
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-20	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-me-20	") {
        @include assert {
          @include output {
            @include \2xl\:-me-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-20	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-20	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-20	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-20	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -5rem;
            }
          }
        }
      }

      @include it("2xl\:-m-24	") {
        @include assert {
          @include output {
            @include \2xl\:-m-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-24	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -6rem;
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-my-24	") {
        @include assert {
          @include output {
            @include \2xl\:-my-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -6rem;
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-24	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-me-24	") {
        @include assert {
          @include output {
            @include \2xl\:-me-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-24	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-24	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-24	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-24	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -6rem;
            }
          }
        }
      }

      @include it("2xl\:-m-28	") {
        @include assert {
          @include output {
            @include \2xl\:-m-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-28	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -7rem;
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-my-28	") {
        @include assert {
          @include output {
            @include \2xl\:-my-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -7rem;
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-28	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-me-28	") {
        @include assert {
          @include output {
            @include \2xl\:-me-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-28	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-28	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-28	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-28	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -7rem;
            }
          }
        }
      }

      @include it("2xl\:-m-32	") {
        @include assert {
          @include output {
            @include \2xl\:-m-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-32	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -8rem;
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-my-32	") {
        @include assert {
          @include output {
            @include \2xl\:-my-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -8rem;
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-32	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-me-32	") {
        @include assert {
          @include output {
            @include \2xl\:-me-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-32	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-32	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-32	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-32	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -8rem;
            }
          }
        }
      }

      @include it("2xl\:-m-36	") {
        @include assert {
          @include output {
            @include \2xl\:-m-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-36	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -9rem;
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-my-36	") {
        @include assert {
          @include output {
            @include \2xl\:-my-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -9rem;
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-36	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-me-36	") {
        @include assert {
          @include output {
            @include \2xl\:-me-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-36	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-36	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-36	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-36	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -9rem;
            }
          }
        }
      }

      @include it("2xl\:-m-40	") {
        @include assert {
          @include output {
            @include \2xl\:-m-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-40	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -10rem;
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-my-40	") {
        @include assert {
          @include output {
            @include \2xl\:-my-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -10rem;
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-40	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-me-40	") {
        @include assert {
          @include output {
            @include \2xl\:-me-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-40	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-40	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-40	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-40	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -10rem;
            }
          }
        }
      }

      @include it("2xl\:-m-44	") {
        @include assert {
          @include output {
            @include \2xl\:-m-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-44	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -11rem;
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-my-44	") {
        @include assert {
          @include output {
            @include \2xl\:-my-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -11rem;
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-44	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-me-44	") {
        @include assert {
          @include output {
            @include \2xl\:-me-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-44	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-44	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-44	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-44	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -11rem;
            }
          }
        }
      }

      @include it("2xl\:-m-48	") {
        @include assert {
          @include output {
            @include \2xl\:-m-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-48	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -12rem;
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-my-48	") {
        @include assert {
          @include output {
            @include \2xl\:-my-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -12rem;
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-48	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-me-48	") {
        @include assert {
          @include output {
            @include \2xl\:-me-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-48	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-48	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-48	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-48	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -12rem;
            }
          }
        }
      }

      @include it("2xl\:-m-52	") {
        @include assert {
          @include output {
            @include \2xl\:-m-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-52	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -13rem;
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-my-52	") {
        @include assert {
          @include output {
            @include \2xl\:-my-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -13rem;
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-52	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-me-52	") {
        @include assert {
          @include output {
            @include \2xl\:-me-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-52	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-52	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-52	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-52	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -13rem;
            }
          }
        }
      }

      @include it("2xl\:-m-56	") {
        @include assert {
          @include output {
            @include \2xl\:-m-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-56	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -14rem;
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-my-56	") {
        @include assert {
          @include output {
            @include \2xl\:-my-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -14rem;
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-56	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-me-56	") {
        @include assert {
          @include output {
            @include \2xl\:-me-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-56	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-56	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-56	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-56	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -14rem;
            }
          }
        }
      }

      @include it("2xl\:-m-60	") {
        @include assert {
          @include output {
            @include \2xl\:-m-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-60	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -15rem;
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-my-60	") {
        @include assert {
          @include output {
            @include \2xl\:-my-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -15rem;
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-60	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-me-60	") {
        @include assert {
          @include output {
            @include \2xl\:-me-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-60	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-60	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-60	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-60	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -15rem;
            }
          }
        }
      }

      @include it("2xl\:-m-64	") {
        @include assert {
          @include output {
            @include \2xl\:-m-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-64	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -16rem;
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-my-64	") {
        @include assert {
          @include output {
            @include \2xl\:-my-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -16rem;
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-64	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-me-64	") {
        @include assert {
          @include output {
            @include \2xl\:-me-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-64	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-64	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-64	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-64	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -16rem;
            }
          }
        }
      }

      @include it("2xl\:-m-72	") {
        @include assert {
          @include output {
            @include \2xl\:-m-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-72	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -18rem;
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-my-72	") {
        @include assert {
          @include output {
            @include \2xl\:-my-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -18rem;
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-72	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-me-72	") {
        @include assert {
          @include output {
            @include \2xl\:-me-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-72	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-72	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-72	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-72	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -18rem;
            }
          }
        }
      }

      @include it("2xl\:-m-80	") {
        @include assert {
          @include output {
            @include \2xl\:-m-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-80	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -20rem;
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-my-80	") {
        @include assert {
          @include output {
            @include \2xl\:-my-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -20rem;
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-80	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-me-80	") {
        @include assert {
          @include output {
            @include \2xl\:-me-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-80	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-80	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-80	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-80	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -20rem;
            }
          }
        }
      }

      @include it("2xl\:-m-96	") {
        @include assert {
          @include output {
            @include \2xl\:-m-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-mx-96	") {
        @include assert {
          @include output {
            @include \2xl\:-mx-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -24rem;
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-my-96	") {
        @include assert {
          @include output {
            @include \2xl\:-my-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -24rem;
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-ms-96	") {
        @include assert {
          @include output {
            @include \2xl\:-ms-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-me-96	") {
        @include assert {
          @include output {
            @include \2xl\:-me-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-mt-96	") {
        @include assert {
          @include output {
            @include \2xl\:-mt-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-mr-96	") {
        @include assert {
          @include output {
            @include \2xl\:-mr-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-mb-96	") {
        @include assert {
          @include output {
            @include \2xl\:-mb-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -24rem;
            }
          }
        }
      }

      @include it("2xl\:-ml-96	") {
        @include assert {
          @include output {
            @include \2xl\:-ml-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -24rem;
            }
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("m-(5px)") {
        @include assert {
          @include output {
            @include m-(5px);
            @include reset;
          }

          @include expect {
            margin: 5px;
          }
        }
      }

      @include it("mx-(5px)") {
        @include assert {
          @include output {
            @include mx-(5px);
            @include reset;
          }

          @include expect {
            margin-left: 5px;
            margin-right: 5px;
          }
        }
      }

      @include it("my-(5px)") {
        @include assert {
          @include output {
            @include my-(5px);
            @include reset;
          }

          @include expect {
            margin-top: 5px;
            margin-bottom: 5px;
          }
        }
      }

      @include it("ms-(5px)") {
        @include assert {
          @include output {
            @include ms-(5px);
            @include reset;
          }

          @include expect {
            margin-inline-start: 5px;
          }
        }
      }

      @include it("me-(5px)") {
        @include assert {
          @include output {
            @include me-(5px);
            @include reset;
          }

          @include expect {
            margin-inline-end: 5px;
          }
        }
      }

      @include it("mt-(5px)") {
        @include assert {
          @include output {
            @include mt-(5px);
            @include reset;
          }

          @include expect {
            margin-top: 5px;
          }
        }
      }

      @include it("mr-(5px)") {
        @include assert {
          @include output {
            @include mr-(5px);
            @include reset;
          }

          @include expect {
            margin-right: 5px;
          }
        }
      }

      @include it("mb-(5px)") {
        @include assert {
          @include output {
            @include mb-(5px);
            @include reset;
          }

          @include expect {
            margin-bottom: 5px;
          }
        }
      }

      @include it("ml-(5px)") {
        @include assert {
          @include output {
            @include ml-(5px);
            @include reset;
          }

          @include expect {
            margin-left: 5px;
          }
        }
      }

      @include it("-m-(5px)") {
        @include assert {
          @include output {
            @include -m-(5px);
            @include reset;
          }

          @include expect {
            margin: -5px;
          }
        }
      }

      @include it("-mx-(5px)") {
        @include assert {
          @include output {
            @include -mx-(5px);
            @include reset;
          }

          @include expect {
            margin-left: -5px;
            margin-right: -5px;
          }
        }
      }

      @include it("-my-(5px)") {
        @include assert {
          @include output {
            @include -my-(5px);
            @include reset;
          }

          @include expect {
            margin-top: -5px;
            margin-bottom: -5px;
          }
        }
      }

      @include it("-ms-(5px)") {
        @include assert {
          @include output {
            @include -ms-(5px);
            @include reset;
          }

          @include expect {
            margin-inline-start: -5px;
          }
        }
      }

      @include it("-me-(5px)") {
        @include assert {
          @include output {
            @include -me-(5px);
            @include reset;
          }

          @include expect {
            margin-inline-end: -5px;
          }
        }
      }

      @include it("-mt-(5px)") {
        @include assert {
          @include output {
            @include -mt-(5px);
            @include reset;
          }

          @include expect {
            margin-top: -5px;
          }
        }
      }

      @include it("-mr-(5px)") {
        @include assert {
          @include output {
            @include -mr-(5px);
            @include reset;
          }

          @include expect {
            margin-right: -5px;
          }
        }
      }

      @include it("-mb-(5px)") {
        @include assert {
          @include output {
            @include -mb-(5px);
            @include reset;
          }

          @include expect {
            margin-bottom: -5px;
          }
        }
      }

      @include it("-ml-(5px)") {
        @include assert {
          @include output {
            @include -ml-(5px);
            @include reset;
          }

          @include expect {
            margin-left: -5px;
          }
        }
      }

      @include it("sm\:m-(5px)") {
        @include assert {
          @include output {
            @include sm\:m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: 5px;
            }
          }
        }
      }

      @include it("sm\:mx-(5px)") {
        @include assert {
          @include output {
            @include sm\:mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 5px;
              margin-right: 5px;
            }
          }
        }
      }

      @include it("sm\:my-(5px)") {
        @include assert {
          @include output {
            @include sm\:my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 5px;
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("sm\:ms-(5px)") {
        @include assert {
          @include output {
            @include sm\:ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: 5px;
            }
          }
        }
      }

      @include it("sm\:me-(5px)") {
        @include assert {
          @include output {
            @include sm\:me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: 5px;
            }
          }
        }
      }

      @include it("sm\:mt-(5px)") {
        @include assert {
          @include output {
            @include sm\:mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: 5px;
            }
          }
        }
      }

      @include it("sm\:mr-(5px)") {
        @include assert {
          @include output {
            @include sm\:mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: 5px;
            }
          }
        }
      }

      @include it("sm\:mb-(5px)") {
        @include assert {
          @include output {
            @include sm\:mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("sm\:ml-(5px)") {
        @include assert {
          @include output {
            @include sm\:ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: 5px;
            }
          }
        }
      }

      @include it("sm\:-m-(5px)") {
        @include assert {
          @include output {
            @include sm\:-m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin: -5px;
            }
          }
        }
      }

      @include it("sm\:-mx-(5px)") {
        @include assert {
          @include output {
            @include sm\:-mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -5px;
              margin-right: -5px;
            }
          }
        }
      }

      @include it("sm\:-my-(5px)") {
        @include assert {
          @include output {
            @include sm\:-my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -5px;
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("sm\:-ms-(5px)") {
        @include assert {
          @include output {
            @include sm\:-ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-start: -5px;
            }
          }
        }
      }

      @include it("sm\:-me-(5px)") {
        @include assert {
          @include output {
            @include sm\:-me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-inline-end: -5px;
            }
          }
        }
      }

      @include it("sm\:-mt-(5px)") {
        @include assert {
          @include output {
            @include sm\:-mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-top: -5px;
            }
          }
        }
      }

      @include it("sm\:-mr-(5px)") {
        @include assert {
          @include output {
            @include sm\:-mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-right: -5px;
            }
          }
        }
      }

      @include it("sm\:-mb-(5px)") {
        @include assert {
          @include output {
            @include sm\:-mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("sm\:-ml-(5px)") {
        @include assert {
          @include output {
            @include sm\:-ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              margin-left: -5px;
            }
          }
        }
      }

      @include it("md\:m-(5px)") {
        @include assert {
          @include output {
            @include md\:m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: 5px;
            }
          }
        }
      }

      @include it("md\:mx-(5px)") {
        @include assert {
          @include output {
            @include md\:mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 5px;
              margin-right: 5px;
            }
          }
        }
      }

      @include it("md\:my-(5px)") {
        @include assert {
          @include output {
            @include md\:my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 5px;
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("md\:ms-(5px)") {
        @include assert {
          @include output {
            @include md\:ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: 5px;
            }
          }
        }
      }

      @include it("md\:me-(5px)") {
        @include assert {
          @include output {
            @include md\:me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: 5px;
            }
          }
        }
      }

      @include it("md\:mt-(5px)") {
        @include assert {
          @include output {
            @include md\:mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: 5px;
            }
          }
        }
      }

      @include it("md\:mr-(5px)") {
        @include assert {
          @include output {
            @include md\:mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: 5px;
            }
          }
        }
      }

      @include it("md\:mb-(5px)") {
        @include assert {
          @include output {
            @include md\:mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("md\:ml-(5px)") {
        @include assert {
          @include output {
            @include md\:ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: 5px;
            }
          }
        }
      }

      @include it("md\:-m-(5px)") {
        @include assert {
          @include output {
            @include md\:-m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin: -5px;
            }
          }
        }
      }

      @include it("md\:-mx-(5px)") {
        @include assert {
          @include output {
            @include md\:-mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -5px;
              margin-right: -5px;
            }
          }
        }
      }

      @include it("md\:-my-(5px)") {
        @include assert {
          @include output {
            @include md\:-my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -5px;
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("md\:-ms-(5px)") {
        @include assert {
          @include output {
            @include md\:-ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-start: -5px;
            }
          }
        }
      }

      @include it("md\:-me-(5px)") {
        @include assert {
          @include output {
            @include md\:-me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-inline-end: -5px;
            }
          }
        }
      }

      @include it("md\:-mt-(5px)") {
        @include assert {
          @include output {
            @include md\:-mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-top: -5px;
            }
          }
        }
      }

      @include it("md\:-mr-(5px)") {
        @include assert {
          @include output {
            @include md\:-mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-right: -5px;
            }
          }
        }
      }

      @include it("md\:-mb-(5px)") {
        @include assert {
          @include output {
            @include md\:-mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("md\:-ml-(5px)") {
        @include assert {
          @include output {
            @include md\:-ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              margin-left: -5px;
            }
          }
        }
      }

      @include it("lg\:m-(5px)") {
        @include assert {
          @include output {
            @include lg\:m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: 5px;
            }
          }
        }
      }

      @include it("lg\:mx-(5px)") {
        @include assert {
          @include output {
            @include lg\:mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 5px;
              margin-right: 5px;
            }
          }
        }
      }

      @include it("lg\:my-(5px)") {
        @include assert {
          @include output {
            @include lg\:my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 5px;
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("lg\:ms-(5px)") {
        @include assert {
          @include output {
            @include lg\:ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: 5px;
            }
          }
        }
      }

      @include it("lg\:me-(5px)") {
        @include assert {
          @include output {
            @include lg\:me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: 5px;
            }
          }
        }
      }

      @include it("lg\:mt-(5px)") {
        @include assert {
          @include output {
            @include lg\:mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: 5px;
            }
          }
        }
      }

      @include it("lg\:mr-(5px)") {
        @include assert {
          @include output {
            @include lg\:mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: 5px;
            }
          }
        }
      }

      @include it("lg\:mb-(5px)") {
        @include assert {
          @include output {
            @include lg\:mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("lg\:ml-(5px)") {
        @include assert {
          @include output {
            @include lg\:ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: 5px;
            }
          }
        }
      }

      @include it("lg\:-m-(5px)") {
        @include assert {
          @include output {
            @include lg\:-m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin: -5px;
            }
          }
        }
      }

      @include it("lg\:-mx-(5px)") {
        @include assert {
          @include output {
            @include lg\:-mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -5px;
              margin-right: -5px;
            }
          }
        }
      }

      @include it("lg\:-my-(5px)") {
        @include assert {
          @include output {
            @include lg\:-my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -5px;
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("lg\:-ms-(5px)") {
        @include assert {
          @include output {
            @include lg\:-ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-start: -5px;
            }
          }
        }
      }

      @include it("lg\:-me-(5px)") {
        @include assert {
          @include output {
            @include lg\:-me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-inline-end: -5px;
            }
          }
        }
      }

      @include it("lg\:-mt-(5px)") {
        @include assert {
          @include output {
            @include lg\:-mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-top: -5px;
            }
          }
        }
      }

      @include it("lg\:-mr-(5px)") {
        @include assert {
          @include output {
            @include lg\:-mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-right: -5px;
            }
          }
        }
      }

      @include it("lg\:-mb-(5px)") {
        @include assert {
          @include output {
            @include lg\:-mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("lg\:-ml-(5px)") {
        @include assert {
          @include output {
            @include lg\:-ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              margin-left: -5px;
            }
          }
        }
      }

      @include it("xl\:m-(5px)") {
        @include assert {
          @include output {
            @include xl\:m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: 5px;
            }
          }
        }
      }

      @include it("xl\:mx-(5px)") {
        @include assert {
          @include output {
            @include xl\:mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 5px;
              margin-right: 5px;
            }
          }
        }
      }

      @include it("xl\:my-(5px)") {
        @include assert {
          @include output {
            @include xl\:my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 5px;
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("xl\:ms-(5px)") {
        @include assert {
          @include output {
            @include xl\:ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: 5px;
            }
          }
        }
      }

      @include it("xl\:me-(5px)") {
        @include assert {
          @include output {
            @include xl\:me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: 5px;
            }
          }
        }
      }

      @include it("xl\:mt-(5px)") {
        @include assert {
          @include output {
            @include xl\:mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: 5px;
            }
          }
        }
      }

      @include it("xl\:mr-(5px)") {
        @include assert {
          @include output {
            @include xl\:mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: 5px;
            }
          }
        }
      }

      @include it("xl\:mb-(5px)") {
        @include assert {
          @include output {
            @include xl\:mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("xl\:ml-(5px)") {
        @include assert {
          @include output {
            @include xl\:ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: 5px;
            }
          }
        }
      }

      @include it("xl\:-m-(5px)") {
        @include assert {
          @include output {
            @include xl\:-m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin: -5px;
            }
          }
        }
      }

      @include it("xl\:-mx-(5px)") {
        @include assert {
          @include output {
            @include xl\:-mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -5px;
              margin-right: -5px;
            }
          }
        }
      }

      @include it("xl\:-my-(5px)") {
        @include assert {
          @include output {
            @include xl\:-my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -5px;
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("xl\:-ms-(5px)") {
        @include assert {
          @include output {
            @include xl\:-ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-start: -5px;
            }
          }
        }
      }

      @include it("xl\:-me-(5px)") {
        @include assert {
          @include output {
            @include xl\:-me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-inline-end: -5px;
            }
          }
        }
      }

      @include it("xl\:-mt-(5px)") {
        @include assert {
          @include output {
            @include xl\:-mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-top: -5px;
            }
          }
        }
      }

      @include it("xl\:-mr-(5px)") {
        @include assert {
          @include output {
            @include xl\:-mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-right: -5px;
            }
          }
        }
      }

      @include it("xl\:-mb-(5px)") {
        @include assert {
          @include output {
            @include xl\:-mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("xl\:-ml-(5px)") {
        @include assert {
          @include output {
            @include xl\:-ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              margin-left: -5px;
            }
          }
        }
      }

      @include it("2xl\:m-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: 5px;
            }
          }
        }
      }

      @include it("2xl\:mx-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 5px;
              margin-right: 5px;
            }
          }
        }
      }

      @include it("2xl\:my-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 5px;
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("2xl\:ms-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: 5px;
            }
          }
        }
      }

      @include it("2xl\:me-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: 5px;
            }
          }
        }
      }

      @include it("2xl\:mt-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: 5px;
            }
          }
        }
      }

      @include it("2xl\:mr-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: 5px;
            }
          }
        }
      }

      @include it("2xl\:mb-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: 5px;
            }
          }
        }
      }

      @include it("2xl\:ml-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: 5px;
            }
          }
        }
      }

      @include it("2xl\:-m-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-m-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin: -5px;
            }
          }
        }
      }

      @include it("2xl\:-mx-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-mx-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -5px;
              margin-right: -5px;
            }
          }
        }
      }

      @include it("2xl\:-my-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-my-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -5px;
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("2xl\:-ms-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-ms-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-start: -5px;
            }
          }
        }
      }

      @include it("2xl\:-me-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-me-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-inline-end: -5px;
            }
          }
        }
      }

      @include it("2xl\:-mt-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-mt-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-top: -5px;
            }
          }
        }
      }

      @include it("2xl\:-mr-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-mr-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-right: -5px;
            }
          }
        }
      }

      @include it("2xl\:-mb-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-mb-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-bottom: -5px;
            }
          }
        }
      }

      @include it("2xl\:-ml-(5px)") {
        @include assert {
          @include output {
            @include \2xl\:-ml-(5px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              margin-left: -5px;
            }
          }
        }
      }
    }
  }
}
