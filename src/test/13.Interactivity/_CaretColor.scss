@include describe('13.Interactivity') {
  @include describe('Caret Color') {
    @include describe('Basic') {
      @include it('caret-inherit') {
        @include assert {
          @include output {
            @include caret-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: inherit;
          }
        }
      }

      @include it('caret-current') {
        @include assert {
          @include output {
            @include caret-current;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: currentColor;
          }
        }
      }

      @include it('caret-transparent') {
        @include assert {
          @include output {
            @include caret-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: transparent;
          }
        }
      }
      @include it('caret-black') {
        @include assert {
          @include output {
            @include caret-black;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #000;
          }
        }
      }
      @include it('caret-white') {
        @include assert {
          @include output {
            @include caret-white;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fff;
          }
        }
      }
      @include it('caret-slate-50') {
        @include assert {
          @include output {
            @include caret-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f8fafc;
          }
        }
      }

      @include it('caret-slate-100') {
        @include assert {
          @include output {
            @include caret-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f1f5f9;
          }
        }
      }

      @include it('caret-slate-200') {
        @include assert {
          @include output {
            @include caret-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e2e8f0;
          }
        }
      }

      @include it('caret-slate-300') {
        @include assert {
          @include output {
            @include caret-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #cbd5e1;
          }
        }
      }

      @include it('caret-slate-400') {
        @include assert {
          @include output {
            @include caret-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #94a3b8;
          }
        }
      }

      @include it('caret-slate-500') {
        @include assert {
          @include output {
            @include caret-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #64748b;
          }
        }
      }

      @include it('caret-slate-600') {
        @include assert {
          @include output {
            @include caret-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #475569;
          }
        }
      }

      @include it('caret-slate-700') {
        @include assert {
          @include output {
            @include caret-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #334155;
          }
        }
      }

      @include it('caret-slate-800') {
        @include assert {
          @include output {
            @include caret-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1e293b;
          }
        }
      }

      @include it('caret-slate-900') {
        @include assert {
          @include output {
            @include caret-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0f172a;
          }
        }
      }

      @include it('caret-slate-950') {
        @include assert {
          @include output {
            @include caret-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #020617;
          }
        }
      }

      @include it('caret-gray-50') {
        @include assert {
          @include output {
            @include caret-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f9fafb;
          }
        }
      }

      @include it('caret-gray-100') {
        @include assert {
          @include output {
            @include caret-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f3f4f6;
          }
        }
      }

      @include it('caret-gray-200') {
        @include assert {
          @include output {
            @include caret-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e5e7eb;
          }
        }
      }

      @include it('caret-gray-300') {
        @include assert {
          @include output {
            @include caret-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d1d5db;
          }
        }
      }

      @include it('caret-gray-400') {
        @include assert {
          @include output {
            @include caret-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #9ca3af;
          }
        }
      }

      @include it('caret-gray-500') {
        @include assert {
          @include output {
            @include caret-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #6b7280;
          }
        }
      }

      @include it('caret-gray-600') {
        @include assert {
          @include output {
            @include caret-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4b5563;
          }
        }
      }

      @include it('caret-gray-700') {
        @include assert {
          @include output {
            @include caret-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #374151;
          }
        }
      }

      @include it('caret-gray-800') {
        @include assert {
          @include output {
            @include caret-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1f2937;
          }
        }
      }

      @include it('caret-gray-900') {
        @include assert {
          @include output {
            @include caret-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #111827;
          }
        }
      }

      @include it('caret-gray-950') {
        @include assert {
          @include output {
            @include caret-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #030712;
          }
        }
      }

      @include it('caret-zinc-50') {
        @include assert {
          @include output {
            @include caret-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fafafa;
          }
        }
      }

      @include it('caret-zinc-100') {
        @include assert {
          @include output {
            @include caret-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f4f4f5;
          }
        }
      }

      @include it('caret-zinc-200') {
        @include assert {
          @include output {
            @include caret-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e4e4e7;
          }
        }
      }

      @include it('caret-zinc-300') {
        @include assert {
          @include output {
            @include caret-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d4d4d8;
          }
        }
      }

      @include it('caret-zinc-400') {
        @include assert {
          @include output {
            @include caret-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a1a1aa;
          }
        }
      }

      @include it('caret-zinc-500') {
        @include assert {
          @include output {
            @include caret-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #71717a;
          }
        }
      }

      @include it('caret-zinc-600') {
        @include assert {
          @include output {
            @include caret-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #52525b;
          }
        }
      }

      @include it('caret-zinc-700') {
        @include assert {
          @include output {
            @include caret-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #3f3f46;
          }
        }
      }

      @include it('caret-zinc-800') {
        @include assert {
          @include output {
            @include caret-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #27272a;
          }
        }
      }

      @include it('caret-zinc-900') {
        @include assert {
          @include output {
            @include caret-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #18181b;
          }
        }
      }

      @include it('caret-zinc-950') {
        @include assert {
          @include output {
            @include caret-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #09090b;
          }
        }
      }

      @include it('caret-neutral-50') {
        @include assert {
          @include output {
            @include caret-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fafafa;
          }
        }
      }

      @include it('caret-neutral-100') {
        @include assert {
          @include output {
            @include caret-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f5f5f5;
          }
        }
      }

      @include it('caret-neutral-200') {
        @include assert {
          @include output {
            @include caret-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e5e5e5;
          }
        }
      }

      @include it('caret-neutral-300') {
        @include assert {
          @include output {
            @include caret-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d4d4d4;
          }
        }
      }

      @include it('caret-neutral-400') {
        @include assert {
          @include output {
            @include caret-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a3a3a3;
          }
        }
      }

      @include it('caret-neutral-500') {
        @include assert {
          @include output {
            @include caret-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #737373;
          }
        }
      }

      @include it('caret-neutral-600') {
        @include assert {
          @include output {
            @include caret-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #525252;
          }
        }
      }

      @include it('caret-neutral-700') {
        @include assert {
          @include output {
            @include caret-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #404040;
          }
        }
      }

      @include it('caret-neutral-800') {
        @include assert {
          @include output {
            @include caret-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #262626;
          }
        }
      }

      @include it('caret-neutral-900') {
        @include assert {
          @include output {
            @include caret-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #171717;
          }
        }
      }

      @include it('caret-neutral-950') {
        @include assert {
          @include output {
            @include caret-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0a0a0a;
          }
        }
      }

      @include it('caret-stone-50') {
        @include assert {
          @include output {
            @include caret-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fafaf9;
          }
        }
      }

      @include it('caret-stone-100') {
        @include assert {
          @include output {
            @include caret-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f5f5f4;
          }
        }
      }

      @include it('caret-stone-200') {
        @include assert {
          @include output {
            @include caret-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e7e5e4;
          }
        }
      }

      @include it('caret-stone-300') {
        @include assert {
          @include output {
            @include caret-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d6d3d1;
          }
        }
      }

      @include it('caret-stone-400') {
        @include assert {
          @include output {
            @include caret-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a8a29e;
          }
        }
      }

      @include it('caret-stone-500') {
        @include assert {
          @include output {
            @include caret-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #78716c;
          }
        }
      }

      @include it('caret-stone-600') {
        @include assert {
          @include output {
            @include caret-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #57534e;
          }
        }
      }

      @include it('caret-stone-700') {
        @include assert {
          @include output {
            @include caret-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #44403c;
          }
        }
      }

      @include it('caret-stone-800') {
        @include assert {
          @include output {
            @include caret-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #292524;
          }
        }
      }

      @include it('caret-stone-900') {
        @include assert {
          @include output {
            @include caret-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1c1917;
          }
        }
      }

      @include it('caret-stone-950') {
        @include assert {
          @include output {
            @include caret-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0c0a09;
          }
        }
      }

      @include it('caret-red-50') {
        @include assert {
          @include output {
            @include caret-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fef2f2;
          }
        }
      }

      @include it('caret-red-100') {
        @include assert {
          @include output {
            @include caret-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fee2e2;
          }
        }
      }

      @include it('caret-red-200') {
        @include assert {
          @include output {
            @include caret-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fecaca;
          }
        }
      }

      @include it('caret-red-300') {
        @include assert {
          @include output {
            @include caret-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fca5a5;
          }
        }
      }

      @include it('caret-red-400') {
        @include assert {
          @include output {
            @include caret-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f87171;
          }
        }
      }

      @include it('caret-red-500') {
        @include assert {
          @include output {
            @include caret-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ef4444;
          }
        }
      }

      @include it('caret-red-600') {
        @include assert {
          @include output {
            @include caret-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #dc2626;
          }
        }
      }

      @include it('caret-red-700') {
        @include assert {
          @include output {
            @include caret-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #b91c1c;
          }
        }
      }

      @include it('caret-red-800') {
        @include assert {
          @include output {
            @include caret-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #991b1b;
          }
        }
      }

      @include it('caret-red-900') {
        @include assert {
          @include output {
            @include caret-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #7f1d1d;
          }
        }
      }

      @include it('caret-red-950') {
        @include assert {
          @include output {
            @include caret-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #450a0a;
          }
        }
      }

      @include it('caret-orange-50') {
        @include assert {
          @include output {
            @include caret-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fff7ed;
          }
        }
      }

      @include it('caret-orange-100') {
        @include assert {
          @include output {
            @include caret-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ffedd5;
          }
        }
      }

      @include it('caret-orange-200') {
        @include assert {
          @include output {
            @include caret-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fed7aa;
          }
        }
      }

      @include it('caret-orange-300') {
        @include assert {
          @include output {
            @include caret-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fdba74;
          }
        }
      }

      @include it('caret-orange-400') {
        @include assert {
          @include output {
            @include caret-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fb923c;
          }
        }
      }

      @include it('caret-orange-500') {
        @include assert {
          @include output {
            @include caret-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f97316;
          }
        }
      }

      @include it('caret-orange-600') {
        @include assert {
          @include output {
            @include caret-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ea580c;
          }
        }
      }

      @include it('caret-orange-700') {
        @include assert {
          @include output {
            @include caret-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #c2410c;
          }
        }
      }

      @include it('caret-orange-800') {
        @include assert {
          @include output {
            @include caret-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #9a3412;
          }
        }
      }

      @include it('caret-orange-900') {
        @include assert {
          @include output {
            @include caret-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #7c2d12;
          }
        }
      }

      @include it('caret-orange-950') {
        @include assert {
          @include output {
            @include caret-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #431407;
          }
        }
      }

      @include it('caret-amber-50') {
        @include assert {
          @include output {
            @include caret-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fffbeb;
          }
        }
      }

      @include it('caret-amber-100') {
        @include assert {
          @include output {
            @include caret-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fef3c7;
          }
        }
      }

      @include it('caret-amber-200') {
        @include assert {
          @include output {
            @include caret-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fde68a;
          }
        }
      }

      @include it('caret-amber-300') {
        @include assert {
          @include output {
            @include caret-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fcd34d;
          }
        }
      }

      @include it('caret-amber-400') {
        @include assert {
          @include output {
            @include caret-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fbbf24;
          }
        }
      }

      @include it('caret-amber-500') {
        @include assert {
          @include output {
            @include caret-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f59e0b;
          }
        }
      }

      @include it('caret-amber-600') {
        @include assert {
          @include output {
            @include caret-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d97706;
          }
        }
      }

      @include it('caret-amber-700') {
        @include assert {
          @include output {
            @include caret-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #b45309;
          }
        }
      }

      @include it('caret-amber-800') {
        @include assert {
          @include output {
            @include caret-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #92400e;
          }
        }
      }

      @include it('caret-amber-900') {
        @include assert {
          @include output {
            @include caret-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #78350f;
          }
        }
      }

      @include it('caret-amber-950') {
        @include assert {
          @include output {
            @include caret-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #451a03;
          }
        }
      }

      @include it('caret-yellow-50') {
        @include assert {
          @include output {
            @include caret-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fefce8;
          }
        }
      }

      @include it('caret-yellow-100') {
        @include assert {
          @include output {
            @include caret-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fef9c3;
          }
        }
      }

      @include it('caret-yellow-200') {
        @include assert {
          @include output {
            @include caret-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fef08a;
          }
        }
      }

      @include it('caret-yellow-300') {
        @include assert {
          @include output {
            @include caret-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fde047;
          }
        }
      }

      @include it('caret-yellow-400') {
        @include assert {
          @include output {
            @include caret-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #facc15;
          }
        }
      }

      @include it('caret-yellow-500') {
        @include assert {
          @include output {
            @include caret-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #eab308;
          }
        }
      }

      @include it('caret-yellow-600') {
        @include assert {
          @include output {
            @include caret-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ca8a04;
          }
        }
      }

      @include it('caret-yellow-700') {
        @include assert {
          @include output {
            @include caret-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a16207;
          }
        }
      }

      @include it('caret-yellow-800') {
        @include assert {
          @include output {
            @include caret-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #854d0e;
          }
        }
      }

      @include it('caret-yellow-900') {
        @include assert {
          @include output {
            @include caret-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #713f12;
          }
        }
      }

      @include it('caret-yellow-950') {
        @include assert {
          @include output {
            @include caret-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #422006;
          }
        }
      }

      @include it('caret-lime-50') {
        @include assert {
          @include output {
            @include caret-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f7fee7;
          }
        }
      }

      @include it('caret-lime-100') {
        @include assert {
          @include output {
            @include caret-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ecfccb;
          }
        }
      }

      @include it('caret-lime-200') {
        @include assert {
          @include output {
            @include caret-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d9f99d;
          }
        }
      }

      @include it('caret-lime-300') {
        @include assert {
          @include output {
            @include caret-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #bef264;
          }
        }
      }

      @include it('caret-lime-400') {
        @include assert {
          @include output {
            @include caret-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a3e635;
          }
        }
      }

      @include it('caret-lime-500') {
        @include assert {
          @include output {
            @include caret-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #84cc16;
          }
        }
      }

      @include it('caret-lime-600') {
        @include assert {
          @include output {
            @include caret-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #65a30d;
          }
        }
      }

      @include it('caret-lime-700') {
        @include assert {
          @include output {
            @include caret-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4d7c0f;
          }
        }
      }

      @include it('caret-lime-800') {
        @include assert {
          @include output {
            @include caret-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #3f6212;
          }
        }
      }

      @include it('caret-lime-900') {
        @include assert {
          @include output {
            @include caret-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #365314;
          }
        }
      }

      @include it('caret-lime-950') {
        @include assert {
          @include output {
            @include caret-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1a2e05;
          }
        }
      }

      @include it('caret-green-50') {
        @include assert {
          @include output {
            @include caret-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f0fdf4;
          }
        }
      }

      @include it('caret-green-100') {
        @include assert {
          @include output {
            @include caret-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #dcfce7;
          }
        }
      }

      @include it('caret-green-200') {
        @include assert {
          @include output {
            @include caret-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #bbf7d0;
          }
        }
      }

      @include it('caret-green-300') {
        @include assert {
          @include output {
            @include caret-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #86efac;
          }
        }
      }

      @include it('caret-green-400') {
        @include assert {
          @include output {
            @include caret-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4ade80;
          }
        }
      }

      @include it('caret-green-500') {
        @include assert {
          @include output {
            @include caret-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #22c55e;
          }
        }
      }

      @include it('caret-green-600') {
        @include assert {
          @include output {
            @include caret-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #16a34a;
          }
        }
      }

      @include it('caret-green-700') {
        @include assert {
          @include output {
            @include caret-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #15803d;
          }
        }
      }

      @include it('caret-green-800') {
        @include assert {
          @include output {
            @include caret-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #166534;
          }
        }
      }

      @include it('caret-green-900') {
        @include assert {
          @include output {
            @include caret-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #14532d;
          }
        }
      }

      @include it('caret-green-950') {
        @include assert {
          @include output {
            @include caret-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #052e16;
          }
        }
      }

      @include it('caret-emerald-50') {
        @include assert {
          @include output {
            @include caret-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ecfdf5;
          }
        }
      }

      @include it('caret-emerald-100') {
        @include assert {
          @include output {
            @include caret-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d1fae5;
          }
        }
      }

      @include it('caret-emerald-200') {
        @include assert {
          @include output {
            @include caret-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a7f3d0;
          }
        }
      }

      @include it('caret-emerald-300') {
        @include assert {
          @include output {
            @include caret-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #6ee7b7;
          }
        }
      }

      @include it('caret-emerald-400') {
        @include assert {
          @include output {
            @include caret-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #34d399;
          }
        }
      }

      @include it('caret-emerald-500') {
        @include assert {
          @include output {
            @include caret-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #10b981;
          }
        }
      }

      @include it('caret-emerald-600') {
        @include assert {
          @include output {
            @include caret-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #059669;
          }
        }
      }

      @include it('caret-emerald-700') {
        @include assert {
          @include output {
            @include caret-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #047857;
          }
        }
      }

      @include it('caret-emerald-800') {
        @include assert {
          @include output {
            @include caret-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #065f46;
          }
        }
      }

      @include it('caret-emerald-900') {
        @include assert {
          @include output {
            @include caret-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #064e3b;
          }
        }
      }

      @include it('caret-emerald-950') {
        @include assert {
          @include output {
            @include caret-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #022c22;
          }
        }
      }

      @include it('caret-teal-50') {
        @include assert {
          @include output {
            @include caret-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f0fdfa;
          }
        }
      }

      @include it('caret-teal-100') {
        @include assert {
          @include output {
            @include caret-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ccfbf1;
          }
        }
      }

      @include it('caret-teal-200') {
        @include assert {
          @include output {
            @include caret-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #99f6e4;
          }
        }
      }

      @include it('caret-teal-300') {
        @include assert {
          @include output {
            @include caret-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #5eead4;
          }
        }
      }

      @include it('caret-teal-400') {
        @include assert {
          @include output {
            @include caret-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #2dd4bf;
          }
        }
      }

      @include it('caret-teal-500') {
        @include assert {
          @include output {
            @include caret-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #14b8a6;
          }
        }
      }

      @include it('caret-teal-600') {
        @include assert {
          @include output {
            @include caret-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0d9488;
          }
        }
      }

      @include it('caret-teal-700') {
        @include assert {
          @include output {
            @include caret-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0f766e;
          }
        }
      }

      @include it('caret-teal-800') {
        @include assert {
          @include output {
            @include caret-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #115e59;
          }
        }
      }

      @include it('caret-teal-900') {
        @include assert {
          @include output {
            @include caret-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #134e4a;
          }
        }
      }

      @include it('caret-teal-950') {
        @include assert {
          @include output {
            @include caret-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #042f2e;
          }
        }
      }

      @include it('caret-cyan-50') {
        @include assert {
          @include output {
            @include caret-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ecfeff;
          }
        }
      }

      @include it('caret-cyan-100') {
        @include assert {
          @include output {
            @include caret-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #cffafe;
          }
        }
      }

      @include it('caret-cyan-200') {
        @include assert {
          @include output {
            @include caret-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a5f3fc;
          }
        }
      }

      @include it('caret-cyan-300') {
        @include assert {
          @include output {
            @include caret-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #67e8f9;
          }
        }
      }

      @include it('caret-cyan-400') {
        @include assert {
          @include output {
            @include caret-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #22d3ee;
          }
        }
      }

      @include it('caret-cyan-500') {
        @include assert {
          @include output {
            @include caret-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #06b6d4;
          }
        }
      }

      @include it('caret-cyan-600') {
        @include assert {
          @include output {
            @include caret-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0891b2;
          }
        }
      }

      @include it('caret-cyan-700') {
        @include assert {
          @include output {
            @include caret-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0e7490;
          }
        }
      }

      @include it('caret-cyan-800') {
        @include assert {
          @include output {
            @include caret-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #155e75;
          }
        }
      }

      @include it('caret-cyan-900') {
        @include assert {
          @include output {
            @include caret-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #164e63;
          }
        }
      }

      @include it('caret-cyan-950') {
        @include assert {
          @include output {
            @include caret-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #083344;
          }
        }
      }

      @include it('caret-sky-50') {
        @include assert {
          @include output {
            @include caret-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f0f9ff;
          }
        }
      }

      @include it('caret-sky-100') {
        @include assert {
          @include output {
            @include caret-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e0f2fe;
          }
        }
      }

      @include it('caret-sky-200') {
        @include assert {
          @include output {
            @include caret-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #bae6fd;
          }
        }
      }

      @include it('caret-sky-300') {
        @include assert {
          @include output {
            @include caret-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #7dd3fc;
          }
        }
      }

      @include it('caret-sky-400') {
        @include assert {
          @include output {
            @include caret-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #38bdf8;
          }
        }
      }

      @include it('caret-sky-500') {
        @include assert {
          @include output {
            @include caret-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0ea5e9;
          }
        }
      }

      @include it('caret-sky-600') {
        @include assert {
          @include output {
            @include caret-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0284c7;
          }
        }
      }

      @include it('caret-sky-700') {
        @include assert {
          @include output {
            @include caret-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0369a1;
          }
        }
      }

      @include it('caret-sky-800') {
        @include assert {
          @include output {
            @include caret-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #075985;
          }
        }
      }

      @include it('caret-sky-900') {
        @include assert {
          @include output {
            @include caret-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #0c4a6e;
          }
        }
      }

      @include it('caret-sky-950') {
        @include assert {
          @include output {
            @include caret-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #082f49;
          }
        }
      }

      @include it('caret-blue-50') {
        @include assert {
          @include output {
            @include caret-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #eff6ff;
          }
        }
      }

      @include it('caret-blue-100') {
        @include assert {
          @include output {
            @include caret-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #dbeafe;
          }
        }
      }

      @include it('caret-blue-200') {
        @include assert {
          @include output {
            @include caret-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #bfdbfe;
          }
        }
      }

      @include it('caret-blue-300') {
        @include assert {
          @include output {
            @include caret-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #93c5fd;
          }
        }
      }

      @include it('caret-blue-400') {
        @include assert {
          @include output {
            @include caret-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #60a5fa;
          }
        }
      }

      @include it('caret-blue-500') {
        @include assert {
          @include output {
            @include caret-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #3b82f6;
          }
        }
      }

      @include it('caret-blue-600') {
        @include assert {
          @include output {
            @include caret-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #2563eb;
          }
        }
      }

      @include it('caret-blue-700') {
        @include assert {
          @include output {
            @include caret-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1d4ed8;
          }
        }
      }

      @include it('caret-blue-800') {
        @include assert {
          @include output {
            @include caret-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1e40af;
          }
        }
      }

      @include it('caret-blue-900') {
        @include assert {
          @include output {
            @include caret-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1e3a8a;
          }
        }
      }

      @include it('caret-blue-950') {
        @include assert {
          @include output {
            @include caret-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #172554;
          }
        }
      }

      @include it('caret-indigo-50') {
        @include assert {
          @include output {
            @include caret-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #eef2ff;
          }
        }
      }

      @include it('caret-indigo-100') {
        @include assert {
          @include output {
            @include caret-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e0e7ff;
          }
        }
      }

      @include it('caret-indigo-200') {
        @include assert {
          @include output {
            @include caret-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #c7d2fe;
          }
        }
      }

      @include it('caret-indigo-300') {
        @include assert {
          @include output {
            @include caret-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a5b4fc;
          }
        }
      }

      @include it('caret-indigo-400') {
        @include assert {
          @include output {
            @include caret-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #818cf8;
          }
        }
      }

      @include it('caret-indigo-500') {
        @include assert {
          @include output {
            @include caret-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #6366f1;
          }
        }
      }

      @include it('caret-indigo-600') {
        @include assert {
          @include output {
            @include caret-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4f46e5;
          }
        }
      }

      @include it('caret-indigo-700') {
        @include assert {
          @include output {
            @include caret-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4338ca;
          }
        }
      }

      @include it('caret-indigo-800') {
        @include assert {
          @include output {
            @include caret-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #3730a3;
          }
        }
      }

      @include it('caret-indigo-900') {
        @include assert {
          @include output {
            @include caret-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #312e81;
          }
        }
      }

      @include it('caret-indigo-950') {
        @include assert {
          @include output {
            @include caret-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #1e1b4b;
          }
        }
      }

      @include it('caret-violet-50') {
        @include assert {
          @include output {
            @include caret-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f5f3ff;
          }
        }
      }

      @include it('caret-violet-100') {
        @include assert {
          @include output {
            @include caret-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ede9fe;
          }
        }
      }

      @include it('caret-violet-200') {
        @include assert {
          @include output {
            @include caret-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ddd6fe;
          }
        }
      }

      @include it('caret-violet-300') {
        @include assert {
          @include output {
            @include caret-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #c4b5fd;
          }
        }
      }

      @include it('caret-violet-400') {
        @include assert {
          @include output {
            @include caret-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a78bfa;
          }
        }
      }

      @include it('caret-violet-500') {
        @include assert {
          @include output {
            @include caret-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #8b5cf6;
          }
        }
      }

      @include it('caret-violet-600') {
        @include assert {
          @include output {
            @include caret-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #7c3aed;
          }
        }
      }

      @include it('caret-violet-700') {
        @include assert {
          @include output {
            @include caret-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #6d28d9;
          }
        }
      }

      @include it('caret-violet-800') {
        @include assert {
          @include output {
            @include caret-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #5b21b6;
          }
        }
      }

      @include it('caret-violet-900') {
        @include assert {
          @include output {
            @include caret-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4c1d95;
          }
        }
      }

      @include it('caret-violet-950') {
        @include assert {
          @include output {
            @include caret-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #2e1065;
          }
        }
      }

      @include it('caret-purple-50') {
        @include assert {
          @include output {
            @include caret-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #faf5ff;
          }
        }
      }

      @include it('caret-purple-100') {
        @include assert {
          @include output {
            @include caret-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f3e8ff;
          }
        }
      }

      @include it('caret-purple-200') {
        @include assert {
          @include output {
            @include caret-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e9d5ff;
          }
        }
      }

      @include it('caret-purple-300') {
        @include assert {
          @include output {
            @include caret-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d8b4fe;
          }
        }
      }

      @include it('caret-purple-400') {
        @include assert {
          @include output {
            @include caret-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #c084fc;
          }
        }
      }

      @include it('caret-purple-500') {
        @include assert {
          @include output {
            @include caret-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a855f7;
          }
        }
      }

      @include it('caret-purple-600') {
        @include assert {
          @include output {
            @include caret-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #9333ea;
          }
        }
      }

      @include it('caret-purple-700') {
        @include assert {
          @include output {
            @include caret-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #7e22ce;
          }
        }
      }

      @include it('caret-purple-800') {
        @include assert {
          @include output {
            @include caret-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #6b21a8;
          }
        }
      }

      @include it('caret-purple-900') {
        @include assert {
          @include output {
            @include caret-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #581c87;
          }
        }
      }

      @include it('caret-purple-950') {
        @include assert {
          @include output {
            @include caret-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #3b0764;
          }
        }
      }

      @include it('caret-fuchsia-50') {
        @include assert {
          @include output {
            @include caret-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fdf4ff;
          }
        }
      }

      @include it('caret-fuchsia-100') {
        @include assert {
          @include output {
            @include caret-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fae8ff;
          }
        }
      }

      @include it('caret-fuchsia-200') {
        @include assert {
          @include output {
            @include caret-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f5d0fe;
          }
        }
      }

      @include it('caret-fuchsia-300') {
        @include assert {
          @include output {
            @include caret-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f0abfc;
          }
        }
      }

      @include it('caret-fuchsia-400') {
        @include assert {
          @include output {
            @include caret-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e879f9;
          }
        }
      }

      @include it('caret-fuchsia-500') {
        @include assert {
          @include output {
            @include caret-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #d946ef;
          }
        }
      }

      @include it('caret-fuchsia-600') {
        @include assert {
          @include output {
            @include caret-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #c026d3;
          }
        }
      }

      @include it('caret-fuchsia-700') {
        @include assert {
          @include output {
            @include caret-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #a21caf;
          }
        }
      }

      @include it('caret-fuchsia-800') {
        @include assert {
          @include output {
            @include caret-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #86198f;
          }
        }
      }

      @include it('caret-fuchsia-900') {
        @include assert {
          @include output {
            @include caret-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #701a75;
          }
        }
      }

      @include it('caret-fuchsia-950') {
        @include assert {
          @include output {
            @include caret-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4a044e;
          }
        }
      }

      @include it('caret-pink-50') {
        @include assert {
          @include output {
            @include caret-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fdf2f8;
          }
        }
      }

      @include it('caret-pink-100') {
        @include assert {
          @include output {
            @include caret-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fce7f3;
          }
        }
      }

      @include it('caret-pink-200') {
        @include assert {
          @include output {
            @include caret-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fbcfe8;
          }
        }
      }

      @include it('caret-pink-300') {
        @include assert {
          @include output {
            @include caret-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f9a8d4;
          }
        }
      }

      @include it('caret-pink-400') {
        @include assert {
          @include output {
            @include caret-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f472b6;
          }
        }
      }

      @include it('caret-pink-500') {
        @include assert {
          @include output {
            @include caret-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ec4899;
          }
        }
      }

      @include it('caret-pink-600') {
        @include assert {
          @include output {
            @include caret-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #db2777;
          }
        }
      }

      @include it('caret-pink-700') {
        @include assert {
          @include output {
            @include caret-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #be185d;
          }
        }
      }

      @include it('caret-pink-800') {
        @include assert {
          @include output {
            @include caret-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #9d174d;
          }
        }
      }

      @include it('caret-pink-900') {
        @include assert {
          @include output {
            @include caret-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #831843;
          }
        }
      }

      @include it('caret-pink-950') {
        @include assert {
          @include output {
            @include caret-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #500724;
          }
        }
      }

      @include it('caret-rose-50') {
        @include assert {
          @include output {
            @include caret-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fff1f2;
          }
        }
      }

      @include it('caret-rose-100') {
        @include assert {
          @include output {
            @include caret-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #ffe4e6;
          }
        }
      }

      @include it('caret-rose-200') {
        @include assert {
          @include output {
            @include caret-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fecdd3;
          }
        }
      }

      @include it('caret-rose-300') {
        @include assert {
          @include output {
            @include caret-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fda4af;
          }
        }
      }

      @include it('caret-rose-400') {
        @include assert {
          @include output {
            @include caret-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #fb7185;
          }
        }
      }

      @include it('caret-rose-500') {
        @include assert {
          @include output {
            @include caret-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #f43f5e;
          }
        }
      }

      @include it('caret-rose-600') {
        @include assert {
          @include output {
            @include caret-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #e11d48;
          }
        }
      }

      @include it('caret-rose-700') {
        @include assert {
          @include output {
            @include caret-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #be123c;
          }
        }
      }

      @include it('caret-rose-800') {
        @include assert {
          @include output {
            @include caret-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #9f1239;
          }
        }
      }

      @include it('caret-rose-900') {
        @include assert {
          @include output {
            @include caret-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #881337;
          }
        }
      }

      @include it('caret-rose-950') {
        @include assert {
          @include output {
            @include caret-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #4c0519;
          }
        }
      }

      @include it('caret-transparent\/(0.11)') {
        @include assert {
          @include output {
            @include caret-transparent\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(transparent, $alpha: 0.11);
          }
        }
      }
      @include it('caret-black\/(0.11)') {
        @include assert {
          @include output {
            @include caret-black\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#000, $alpha: 0.11);
          }
        }
      }
      @include it('caret-white\/(0.11)') {
        @include assert {
          @include output {
            @include caret-white\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fff, $alpha: 0.11);
          }
        }
      }
      @include it('caret-slate-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f8fafc, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f1f5f9, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e2e8f0, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#cbd5e1, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#94a3b8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#64748b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#475569, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#334155, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1e293b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0f172a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-slate-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-slate-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#020617, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f9fafb, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f3f4f6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e5e7eb, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d1d5db, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#9ca3af, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#6b7280, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4b5563, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#374151, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1f2937, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#111827, $alpha: 0.11);
          }
        }
      }

      @include it('caret-gray-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-gray-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#030712, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fafafa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f4f4f5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e4e4e7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d4d4d8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a1a1aa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#71717a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#52525b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#3f3f46, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#27272a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#18181b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-zinc-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-zinc-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#09090b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fafafa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f5f5f5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e5e5e5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d4d4d4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a3a3a3, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#737373, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#525252, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#404040, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#262626, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#171717, $alpha: 0.11);
          }
        }
      }

      @include it('caret-neutral-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-neutral-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0a0a0a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fafaf9, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f5f5f4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e7e5e4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d6d3d1, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a8a29e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#78716c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#57534e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#44403c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#292524, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1c1917, $alpha: 0.11);
          }
        }
      }

      @include it('caret-stone-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-stone-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0c0a09, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fef2f2, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fee2e2, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fecaca, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fca5a5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f87171, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ef4444, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#dc2626, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#b91c1c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#991b1b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#7f1d1d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-red-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-red-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#450a0a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fff7ed, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ffedd5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fed7aa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fdba74, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fb923c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f97316, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ea580c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#c2410c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#9a3412, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#7c2d12, $alpha: 0.11);
          }
        }
      }

      @include it('caret-orange-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-orange-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#431407, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fffbeb, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fef3c7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fde68a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fcd34d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fbbf24, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f59e0b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d97706, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#b45309, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#92400e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#78350f, $alpha: 0.11);
          }
        }
      }

      @include it('caret-amber-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-amber-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#451a03, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fefce8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fef9c3, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fef08a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fde047, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#facc15, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#eab308, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ca8a04, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a16207, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#854d0e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#713f12, $alpha: 0.11);
          }
        }
      }

      @include it('caret-yellow-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-yellow-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#422006, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f7fee7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ecfccb, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d9f99d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#bef264, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a3e635, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#84cc16, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#65a30d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4d7c0f, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#3f6212, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#365314, $alpha: 0.11);
          }
        }
      }

      @include it('caret-lime-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-lime-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1a2e05, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f0fdf4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#dcfce7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#bbf7d0, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#86efac, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4ade80, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#22c55e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#16a34a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#15803d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#166534, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#14532d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-green-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-green-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#052e16, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ecfdf5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d1fae5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a7f3d0, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#6ee7b7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#34d399, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#10b981, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#059669, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#047857, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#065f46, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#064e3b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-emerald-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-emerald-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#022c22, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f0fdfa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ccfbf1, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#99f6e4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#5eead4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#2dd4bf, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#14b8a6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0d9488, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0f766e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#115e59, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#134e4a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-teal-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-teal-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#042f2e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ecfeff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#cffafe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a5f3fc, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#67e8f9, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#22d3ee, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#06b6d4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0891b2, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0e7490, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#155e75, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#164e63, $alpha: 0.11);
          }
        }
      }

      @include it('caret-cyan-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-cyan-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#083344, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f0f9ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e0f2fe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#bae6fd, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#7dd3fc, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#38bdf8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0ea5e9, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0284c7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0369a1, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#075985, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#0c4a6e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-sky-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-sky-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#082f49, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#eff6ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#dbeafe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#bfdbfe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#93c5fd, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#60a5fa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#3b82f6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#2563eb, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1d4ed8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1e40af, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1e3a8a, $alpha: 0.11);
          }
        }
      }

      @include it('caret-blue-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-blue-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#172554, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#eef2ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e0e7ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#c7d2fe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a5b4fc, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#818cf8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#6366f1, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4f46e5, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4338ca, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#3730a3, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#312e81, $alpha: 0.11);
          }
        }
      }

      @include it('caret-indigo-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-indigo-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#1e1b4b, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f5f3ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ede9fe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ddd6fe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#c4b5fd, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a78bfa, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#8b5cf6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#7c3aed, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#6d28d9, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#5b21b6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4c1d95, $alpha: 0.11);
          }
        }
      }

      @include it('caret-violet-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-violet-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#2e1065, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#faf5ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f3e8ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e9d5ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d8b4fe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#c084fc, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a855f7, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#9333ea, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#7e22ce, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#6b21a8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#581c87, $alpha: 0.11);
          }
        }
      }

      @include it('caret-purple-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-purple-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#3b0764, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fdf4ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fae8ff, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f5d0fe, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f0abfc, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e879f9, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#d946ef, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#c026d3, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#a21caf, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#86198f, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#701a75, $alpha: 0.11);
          }
        }
      }

      @include it('caret-fuchsia-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-fuchsia-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4a044e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fdf2f8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fce7f3, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fbcfe8, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f9a8d4, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f472b6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ec4899, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#db2777, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#be185d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#9d174d, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#831843, $alpha: 0.11);
          }
        }
      }

      @include it('caret-pink-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-pink-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#500724, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-50\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fff1f2, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-100\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#ffe4e6, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-200\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fecdd3, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-300\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fda4af, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-400\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#fb7185, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-500\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#f43f5e, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-600\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#e11d48, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-700\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#be123c, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-800\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#9f1239, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-900\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#881337, $alpha: 0.11);
          }
        }
      }

      @include it('caret-rose-950\/(0.11)') {
        @include assert {
          @include output {
            @include caret-rose-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: color.change(#4c0519, $alpha: 0.11);
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:caret-inherit') {
        @include assert {
          @include output {
            @include sm\:caret-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: inherit;
            }
          }
        }
      }

      @include it('sm\:caret-current') {
        @include assert {
          @include output {
            @include sm\:caret-current;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: currentColor;
            }
          }
        }
      }

      @include it('sm\:caret-transparent') {
        @include assert {
          @include output {
            @include sm\:caret-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: transparent;
            }
          }
        }
      }

      @include it('sm\:caret-black') {
        @include assert {
          @include output {
            @include sm\:caret-black;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #000;
            }
          }
        }
      }

      @include it('sm\:caret-white') {
        @include assert {
          @include output {
            @include sm\:caret-white;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fff;
            }
          }
        }
      }

      @include it('sm\:caret-slate-50') {
        @include assert {
          @include output {
            @include sm\:caret-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f8fafc;
            }
          }
        }
      }

      @include it('sm\:caret-slate-100') {
        @include assert {
          @include output {
            @include sm\:caret-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f1f5f9;
            }
          }
        }
      }

      @include it('sm\:caret-slate-200') {
        @include assert {
          @include output {
            @include sm\:caret-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e2e8f0;
            }
          }
        }
      }

      @include it('sm\:caret-slate-300') {
        @include assert {
          @include output {
            @include sm\:caret-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #cbd5e1;
            }
          }
        }
      }

      @include it('sm\:caret-slate-400') {
        @include assert {
          @include output {
            @include sm\:caret-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #94a3b8;
            }
          }
        }
      }

      @include it('sm\:caret-slate-500') {
        @include assert {
          @include output {
            @include sm\:caret-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #64748b;
            }
          }
        }
      }

      @include it('sm\:caret-slate-600') {
        @include assert {
          @include output {
            @include sm\:caret-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #475569;
            }
          }
        }
      }

      @include it('sm\:caret-slate-700') {
        @include assert {
          @include output {
            @include sm\:caret-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #334155;
            }
          }
        }
      }

      @include it('sm\:caret-slate-800') {
        @include assert {
          @include output {
            @include sm\:caret-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1e293b;
            }
          }
        }
      }

      @include it('sm\:caret-slate-900') {
        @include assert {
          @include output {
            @include sm\:caret-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0f172a;
            }
          }
        }
      }

      @include it('sm\:caret-slate-950') {
        @include assert {
          @include output {
            @include sm\:caret-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #020617;
            }
          }
        }
      }

      @include it('sm\:caret-gray-50') {
        @include assert {
          @include output {
            @include sm\:caret-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f9fafb;
            }
          }
        }
      }

      @include it('sm\:caret-gray-100') {
        @include assert {
          @include output {
            @include sm\:caret-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f3f4f6;
            }
          }
        }
      }

      @include it('sm\:caret-gray-200') {
        @include assert {
          @include output {
            @include sm\:caret-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e5e7eb;
            }
          }
        }
      }

      @include it('sm\:caret-gray-300') {
        @include assert {
          @include output {
            @include sm\:caret-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d1d5db;
            }
          }
        }
      }

      @include it('sm\:caret-gray-400') {
        @include assert {
          @include output {
            @include sm\:caret-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #9ca3af;
            }
          }
        }
      }

      @include it('sm\:caret-gray-500') {
        @include assert {
          @include output {
            @include sm\:caret-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #6b7280;
            }
          }
        }
      }

      @include it('sm\:caret-gray-600') {
        @include assert {
          @include output {
            @include sm\:caret-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4b5563;
            }
          }
        }
      }

      @include it('sm\:caret-gray-700') {
        @include assert {
          @include output {
            @include sm\:caret-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #374151;
            }
          }
        }
      }

      @include it('sm\:caret-gray-800') {
        @include assert {
          @include output {
            @include sm\:caret-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1f2937;
            }
          }
        }
      }

      @include it('sm\:caret-gray-900') {
        @include assert {
          @include output {
            @include sm\:caret-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #111827;
            }
          }
        }
      }

      @include it('sm\:caret-gray-950') {
        @include assert {
          @include output {
            @include sm\:caret-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #030712;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-50') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-100') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f4f4f5;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-200') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e4e4e7;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-300') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d4d4d8;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-400') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a1a1aa;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-500') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #71717a;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-600') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #52525b;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-700') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #3f3f46;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-800') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #27272a;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-900') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #18181b;
            }
          }
        }
      }

      @include it('sm\:caret-zinc-950') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #09090b;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-50') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-100') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f5f5f5;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-200') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e5e5e5;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-300') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d4d4d4;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-400') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a3a3a3;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-500') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #737373;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-600') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #525252;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-700') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #404040;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-800') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #262626;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-900') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #171717;
            }
          }
        }
      }

      @include it('sm\:caret-neutral-950') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0a0a0a;
            }
          }
        }
      }

      @include it('sm\:caret-stone-50') {
        @include assert {
          @include output {
            @include sm\:caret-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fafaf9;
            }
          }
        }
      }

      @include it('sm\:caret-stone-100') {
        @include assert {
          @include output {
            @include sm\:caret-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f5f5f4;
            }
          }
        }
      }

      @include it('sm\:caret-stone-200') {
        @include assert {
          @include output {
            @include sm\:caret-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e7e5e4;
            }
          }
        }
      }

      @include it('sm\:caret-stone-300') {
        @include assert {
          @include output {
            @include sm\:caret-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d6d3d1;
            }
          }
        }
      }

      @include it('sm\:caret-stone-400') {
        @include assert {
          @include output {
            @include sm\:caret-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a8a29e;
            }
          }
        }
      }

      @include it('sm\:caret-stone-500') {
        @include assert {
          @include output {
            @include sm\:caret-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #78716c;
            }
          }
        }
      }

      @include it('sm\:caret-stone-600') {
        @include assert {
          @include output {
            @include sm\:caret-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #57534e;
            }
          }
        }
      }

      @include it('sm\:caret-stone-700') {
        @include assert {
          @include output {
            @include sm\:caret-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #44403c;
            }
          }
        }
      }

      @include it('sm\:caret-stone-800') {
        @include assert {
          @include output {
            @include sm\:caret-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #292524;
            }
          }
        }
      }

      @include it('sm\:caret-stone-900') {
        @include assert {
          @include output {
            @include sm\:caret-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1c1917;
            }
          }
        }
      }

      @include it('sm\:caret-stone-950') {
        @include assert {
          @include output {
            @include sm\:caret-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0c0a09;
            }
          }
        }
      }

      @include it('sm\:caret-red-50') {
        @include assert {
          @include output {
            @include sm\:caret-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fef2f2;
            }
          }
        }
      }

      @include it('sm\:caret-red-100') {
        @include assert {
          @include output {
            @include sm\:caret-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fee2e2;
            }
          }
        }
      }

      @include it('sm\:caret-red-200') {
        @include assert {
          @include output {
            @include sm\:caret-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fecaca;
            }
          }
        }
      }

      @include it('sm\:caret-red-300') {
        @include assert {
          @include output {
            @include sm\:caret-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fca5a5;
            }
          }
        }
      }

      @include it('sm\:caret-red-400') {
        @include assert {
          @include output {
            @include sm\:caret-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f87171;
            }
          }
        }
      }

      @include it('sm\:caret-red-500') {
        @include assert {
          @include output {
            @include sm\:caret-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ef4444;
            }
          }
        }
      }

      @include it('sm\:caret-red-600') {
        @include assert {
          @include output {
            @include sm\:caret-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #dc2626;
            }
          }
        }
      }

      @include it('sm\:caret-red-700') {
        @include assert {
          @include output {
            @include sm\:caret-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #b91c1c;
            }
          }
        }
      }

      @include it('sm\:caret-red-800') {
        @include assert {
          @include output {
            @include sm\:caret-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #991b1b;
            }
          }
        }
      }

      @include it('sm\:caret-red-900') {
        @include assert {
          @include output {
            @include sm\:caret-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #7f1d1d;
            }
          }
        }
      }

      @include it('sm\:caret-red-950') {
        @include assert {
          @include output {
            @include sm\:caret-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #450a0a;
            }
          }
        }
      }

      @include it('sm\:caret-orange-50') {
        @include assert {
          @include output {
            @include sm\:caret-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fff7ed;
            }
          }
        }
      }

      @include it('sm\:caret-orange-100') {
        @include assert {
          @include output {
            @include sm\:caret-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ffedd5;
            }
          }
        }
      }

      @include it('sm\:caret-orange-200') {
        @include assert {
          @include output {
            @include sm\:caret-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fed7aa;
            }
          }
        }
      }

      @include it('sm\:caret-orange-300') {
        @include assert {
          @include output {
            @include sm\:caret-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fdba74;
            }
          }
        }
      }

      @include it('sm\:caret-orange-400') {
        @include assert {
          @include output {
            @include sm\:caret-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fb923c;
            }
          }
        }
      }

      @include it('sm\:caret-orange-500') {
        @include assert {
          @include output {
            @include sm\:caret-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f97316;
            }
          }
        }
      }

      @include it('sm\:caret-orange-600') {
        @include assert {
          @include output {
            @include sm\:caret-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ea580c;
            }
          }
        }
      }

      @include it('sm\:caret-orange-700') {
        @include assert {
          @include output {
            @include sm\:caret-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #c2410c;
            }
          }
        }
      }

      @include it('sm\:caret-orange-800') {
        @include assert {
          @include output {
            @include sm\:caret-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #9a3412;
            }
          }
        }
      }

      @include it('sm\:caret-orange-900') {
        @include assert {
          @include output {
            @include sm\:caret-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #7c2d12;
            }
          }
        }
      }

      @include it('sm\:caret-orange-950') {
        @include assert {
          @include output {
            @include sm\:caret-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #431407;
            }
          }
        }
      }

      @include it('sm\:caret-amber-50') {
        @include assert {
          @include output {
            @include sm\:caret-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fffbeb;
            }
          }
        }
      }

      @include it('sm\:caret-amber-100') {
        @include assert {
          @include output {
            @include sm\:caret-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fef3c7;
            }
          }
        }
      }

      @include it('sm\:caret-amber-200') {
        @include assert {
          @include output {
            @include sm\:caret-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fde68a;
            }
          }
        }
      }

      @include it('sm\:caret-amber-300') {
        @include assert {
          @include output {
            @include sm\:caret-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fcd34d;
            }
          }
        }
      }

      @include it('sm\:caret-amber-400') {
        @include assert {
          @include output {
            @include sm\:caret-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fbbf24;
            }
          }
        }
      }

      @include it('sm\:caret-amber-500') {
        @include assert {
          @include output {
            @include sm\:caret-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f59e0b;
            }
          }
        }
      }

      @include it('sm\:caret-amber-600') {
        @include assert {
          @include output {
            @include sm\:caret-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d97706;
            }
          }
        }
      }

      @include it('sm\:caret-amber-700') {
        @include assert {
          @include output {
            @include sm\:caret-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #b45309;
            }
          }
        }
      }

      @include it('sm\:caret-amber-800') {
        @include assert {
          @include output {
            @include sm\:caret-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #92400e;
            }
          }
        }
      }

      @include it('sm\:caret-amber-900') {
        @include assert {
          @include output {
            @include sm\:caret-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #78350f;
            }
          }
        }
      }

      @include it('sm\:caret-amber-950') {
        @include assert {
          @include output {
            @include sm\:caret-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #451a03;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-50') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fefce8;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-100') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fef9c3;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-200') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fef08a;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-300') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fde047;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-400') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #facc15;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-500') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #eab308;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-600') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ca8a04;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-700') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a16207;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-800') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #854d0e;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-900') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #713f12;
            }
          }
        }
      }

      @include it('sm\:caret-yellow-950') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #422006;
            }
          }
        }
      }

      @include it('sm\:caret-lime-50') {
        @include assert {
          @include output {
            @include sm\:caret-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f7fee7;
            }
          }
        }
      }

      @include it('sm\:caret-lime-100') {
        @include assert {
          @include output {
            @include sm\:caret-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ecfccb;
            }
          }
        }
      }

      @include it('sm\:caret-lime-200') {
        @include assert {
          @include output {
            @include sm\:caret-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d9f99d;
            }
          }
        }
      }

      @include it('sm\:caret-lime-300') {
        @include assert {
          @include output {
            @include sm\:caret-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #bef264;
            }
          }
        }
      }

      @include it('sm\:caret-lime-400') {
        @include assert {
          @include output {
            @include sm\:caret-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a3e635;
            }
          }
        }
      }

      @include it('sm\:caret-lime-500') {
        @include assert {
          @include output {
            @include sm\:caret-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #84cc16;
            }
          }
        }
      }

      @include it('sm\:caret-lime-600') {
        @include assert {
          @include output {
            @include sm\:caret-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #65a30d;
            }
          }
        }
      }

      @include it('sm\:caret-lime-700') {
        @include assert {
          @include output {
            @include sm\:caret-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4d7c0f;
            }
          }
        }
      }

      @include it('sm\:caret-lime-800') {
        @include assert {
          @include output {
            @include sm\:caret-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #3f6212;
            }
          }
        }
      }

      @include it('sm\:caret-lime-900') {
        @include assert {
          @include output {
            @include sm\:caret-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #365314;
            }
          }
        }
      }

      @include it('sm\:caret-lime-950') {
        @include assert {
          @include output {
            @include sm\:caret-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1a2e05;
            }
          }
        }
      }

      @include it('sm\:caret-green-50') {
        @include assert {
          @include output {
            @include sm\:caret-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f0fdf4;
            }
          }
        }
      }

      @include it('sm\:caret-green-100') {
        @include assert {
          @include output {
            @include sm\:caret-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #dcfce7;
            }
          }
        }
      }

      @include it('sm\:caret-green-200') {
        @include assert {
          @include output {
            @include sm\:caret-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #bbf7d0;
            }
          }
        }
      }

      @include it('sm\:caret-green-300') {
        @include assert {
          @include output {
            @include sm\:caret-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #86efac;
            }
          }
        }
      }

      @include it('sm\:caret-green-400') {
        @include assert {
          @include output {
            @include sm\:caret-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4ade80;
            }
          }
        }
      }

      @include it('sm\:caret-green-500') {
        @include assert {
          @include output {
            @include sm\:caret-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #22c55e;
            }
          }
        }
      }

      @include it('sm\:caret-green-600') {
        @include assert {
          @include output {
            @include sm\:caret-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #16a34a;
            }
          }
        }
      }

      @include it('sm\:caret-green-700') {
        @include assert {
          @include output {
            @include sm\:caret-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #15803d;
            }
          }
        }
      }

      @include it('sm\:caret-green-800') {
        @include assert {
          @include output {
            @include sm\:caret-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #166534;
            }
          }
        }
      }

      @include it('sm\:caret-green-900') {
        @include assert {
          @include output {
            @include sm\:caret-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #14532d;
            }
          }
        }
      }

      @include it('sm\:caret-green-950') {
        @include assert {
          @include output {
            @include sm\:caret-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #052e16;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-50') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ecfdf5;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-100') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d1fae5;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-200') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a7f3d0;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-300') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #6ee7b7;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-400') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #34d399;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-500') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #10b981;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-600') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #059669;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-700') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #047857;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-800') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #065f46;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-900') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #064e3b;
            }
          }
        }
      }

      @include it('sm\:caret-emerald-950') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #022c22;
            }
          }
        }
      }

      @include it('sm\:caret-teal-50') {
        @include assert {
          @include output {
            @include sm\:caret-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f0fdfa;
            }
          }
        }
      }

      @include it('sm\:caret-teal-100') {
        @include assert {
          @include output {
            @include sm\:caret-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ccfbf1;
            }
          }
        }
      }

      @include it('sm\:caret-teal-200') {
        @include assert {
          @include output {
            @include sm\:caret-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #99f6e4;
            }
          }
        }
      }

      @include it('sm\:caret-teal-300') {
        @include assert {
          @include output {
            @include sm\:caret-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #5eead4;
            }
          }
        }
      }

      @include it('sm\:caret-teal-400') {
        @include assert {
          @include output {
            @include sm\:caret-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #2dd4bf;
            }
          }
        }
      }

      @include it('sm\:caret-teal-500') {
        @include assert {
          @include output {
            @include sm\:caret-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #14b8a6;
            }
          }
        }
      }

      @include it('sm\:caret-teal-600') {
        @include assert {
          @include output {
            @include sm\:caret-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0d9488;
            }
          }
        }
      }

      @include it('sm\:caret-teal-700') {
        @include assert {
          @include output {
            @include sm\:caret-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0f766e;
            }
          }
        }
      }

      @include it('sm\:caret-teal-800') {
        @include assert {
          @include output {
            @include sm\:caret-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #115e59;
            }
          }
        }
      }

      @include it('sm\:caret-teal-900') {
        @include assert {
          @include output {
            @include sm\:caret-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #134e4a;
            }
          }
        }
      }

      @include it('sm\:caret-teal-950') {
        @include assert {
          @include output {
            @include sm\:caret-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #042f2e;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-50') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ecfeff;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-100') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #cffafe;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-200') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a5f3fc;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-300') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #67e8f9;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-400') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #22d3ee;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-500') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #06b6d4;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-600') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0891b2;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-700') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0e7490;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-800') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #155e75;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-900') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #164e63;
            }
          }
        }
      }

      @include it('sm\:caret-cyan-950') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #083344;
            }
          }
        }
      }

      @include it('sm\:caret-sky-50') {
        @include assert {
          @include output {
            @include sm\:caret-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f0f9ff;
            }
          }
        }
      }

      @include it('sm\:caret-sky-100') {
        @include assert {
          @include output {
            @include sm\:caret-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e0f2fe;
            }
          }
        }
      }

      @include it('sm\:caret-sky-200') {
        @include assert {
          @include output {
            @include sm\:caret-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #bae6fd;
            }
          }
        }
      }

      @include it('sm\:caret-sky-300') {
        @include assert {
          @include output {
            @include sm\:caret-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #7dd3fc;
            }
          }
        }
      }

      @include it('sm\:caret-sky-400') {
        @include assert {
          @include output {
            @include sm\:caret-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #38bdf8;
            }
          }
        }
      }

      @include it('sm\:caret-sky-500') {
        @include assert {
          @include output {
            @include sm\:caret-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0ea5e9;
            }
          }
        }
      }

      @include it('sm\:caret-sky-600') {
        @include assert {
          @include output {
            @include sm\:caret-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0284c7;
            }
          }
        }
      }

      @include it('sm\:caret-sky-700') {
        @include assert {
          @include output {
            @include sm\:caret-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0369a1;
            }
          }
        }
      }

      @include it('sm\:caret-sky-800') {
        @include assert {
          @include output {
            @include sm\:caret-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #075985;
            }
          }
        }
      }

      @include it('sm\:caret-sky-900') {
        @include assert {
          @include output {
            @include sm\:caret-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #0c4a6e;
            }
          }
        }
      }

      @include it('sm\:caret-sky-950') {
        @include assert {
          @include output {
            @include sm\:caret-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #082f49;
            }
          }
        }
      }

      @include it('sm\:caret-blue-50') {
        @include assert {
          @include output {
            @include sm\:caret-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #eff6ff;
            }
          }
        }
      }

      @include it('sm\:caret-blue-100') {
        @include assert {
          @include output {
            @include sm\:caret-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #dbeafe;
            }
          }
        }
      }

      @include it('sm\:caret-blue-200') {
        @include assert {
          @include output {
            @include sm\:caret-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #bfdbfe;
            }
          }
        }
      }

      @include it('sm\:caret-blue-300') {
        @include assert {
          @include output {
            @include sm\:caret-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #93c5fd;
            }
          }
        }
      }

      @include it('sm\:caret-blue-400') {
        @include assert {
          @include output {
            @include sm\:caret-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #60a5fa;
            }
          }
        }
      }

      @include it('sm\:caret-blue-500') {
        @include assert {
          @include output {
            @include sm\:caret-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #3b82f6;
            }
          }
        }
      }

      @include it('sm\:caret-blue-600') {
        @include assert {
          @include output {
            @include sm\:caret-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #2563eb;
            }
          }
        }
      }

      @include it('sm\:caret-blue-700') {
        @include assert {
          @include output {
            @include sm\:caret-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1d4ed8;
            }
          }
        }
      }

      @include it('sm\:caret-blue-800') {
        @include assert {
          @include output {
            @include sm\:caret-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1e40af;
            }
          }
        }
      }

      @include it('sm\:caret-blue-900') {
        @include assert {
          @include output {
            @include sm\:caret-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1e3a8a;
            }
          }
        }
      }

      @include it('sm\:caret-blue-950') {
        @include assert {
          @include output {
            @include sm\:caret-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #172554;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-50') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #eef2ff;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-100') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e0e7ff;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-200') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #c7d2fe;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-300') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a5b4fc;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-400') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #818cf8;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-500') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #6366f1;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-600') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4f46e5;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-700') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4338ca;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-800') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #3730a3;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-900') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #312e81;
            }
          }
        }
      }

      @include it('sm\:caret-indigo-950') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #1e1b4b;
            }
          }
        }
      }

      @include it('sm\:caret-violet-50') {
        @include assert {
          @include output {
            @include sm\:caret-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f5f3ff;
            }
          }
        }
      }

      @include it('sm\:caret-violet-100') {
        @include assert {
          @include output {
            @include sm\:caret-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ede9fe;
            }
          }
        }
      }

      @include it('sm\:caret-violet-200') {
        @include assert {
          @include output {
            @include sm\:caret-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ddd6fe;
            }
          }
        }
      }

      @include it('sm\:caret-violet-300') {
        @include assert {
          @include output {
            @include sm\:caret-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #c4b5fd;
            }
          }
        }
      }

      @include it('sm\:caret-violet-400') {
        @include assert {
          @include output {
            @include sm\:caret-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a78bfa;
            }
          }
        }
      }

      @include it('sm\:caret-violet-500') {
        @include assert {
          @include output {
            @include sm\:caret-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #8b5cf6;
            }
          }
        }
      }

      @include it('sm\:caret-violet-600') {
        @include assert {
          @include output {
            @include sm\:caret-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #7c3aed;
            }
          }
        }
      }

      @include it('sm\:caret-violet-700') {
        @include assert {
          @include output {
            @include sm\:caret-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #6d28d9;
            }
          }
        }
      }

      @include it('sm\:caret-violet-800') {
        @include assert {
          @include output {
            @include sm\:caret-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #5b21b6;
            }
          }
        }
      }

      @include it('sm\:caret-violet-900') {
        @include assert {
          @include output {
            @include sm\:caret-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4c1d95;
            }
          }
        }
      }

      @include it('sm\:caret-violet-950') {
        @include assert {
          @include output {
            @include sm\:caret-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #2e1065;
            }
          }
        }
      }

      @include it('sm\:caret-purple-50') {
        @include assert {
          @include output {
            @include sm\:caret-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #faf5ff;
            }
          }
        }
      }

      @include it('sm\:caret-purple-100') {
        @include assert {
          @include output {
            @include sm\:caret-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f3e8ff;
            }
          }
        }
      }

      @include it('sm\:caret-purple-200') {
        @include assert {
          @include output {
            @include sm\:caret-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e9d5ff;
            }
          }
        }
      }

      @include it('sm\:caret-purple-300') {
        @include assert {
          @include output {
            @include sm\:caret-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d8b4fe;
            }
          }
        }
      }

      @include it('sm\:caret-purple-400') {
        @include assert {
          @include output {
            @include sm\:caret-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #c084fc;
            }
          }
        }
      }

      @include it('sm\:caret-purple-500') {
        @include assert {
          @include output {
            @include sm\:caret-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a855f7;
            }
          }
        }
      }

      @include it('sm\:caret-purple-600') {
        @include assert {
          @include output {
            @include sm\:caret-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #9333ea;
            }
          }
        }
      }

      @include it('sm\:caret-purple-700') {
        @include assert {
          @include output {
            @include sm\:caret-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #7e22ce;
            }
          }
        }
      }

      @include it('sm\:caret-purple-800') {
        @include assert {
          @include output {
            @include sm\:caret-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #6b21a8;
            }
          }
        }
      }

      @include it('sm\:caret-purple-900') {
        @include assert {
          @include output {
            @include sm\:caret-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #581c87;
            }
          }
        }
      }

      @include it('sm\:caret-purple-950') {
        @include assert {
          @include output {
            @include sm\:caret-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #3b0764;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-50') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fdf4ff;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-100') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fae8ff;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-200') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f5d0fe;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-300') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f0abfc;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-400') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e879f9;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-500') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #d946ef;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-600') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #c026d3;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-700') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #a21caf;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-800') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #86198f;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-900') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #701a75;
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-950') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4a044e;
            }
          }
        }
      }

      @include it('sm\:caret-pink-50') {
        @include assert {
          @include output {
            @include sm\:caret-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fdf2f8;
            }
          }
        }
      }

      @include it('sm\:caret-pink-100') {
        @include assert {
          @include output {
            @include sm\:caret-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fce7f3;
            }
          }
        }
      }

      @include it('sm\:caret-pink-200') {
        @include assert {
          @include output {
            @include sm\:caret-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fbcfe8;
            }
          }
        }
      }

      @include it('sm\:caret-pink-300') {
        @include assert {
          @include output {
            @include sm\:caret-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f9a8d4;
            }
          }
        }
      }

      @include it('sm\:caret-pink-400') {
        @include assert {
          @include output {
            @include sm\:caret-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f472b6;
            }
          }
        }
      }

      @include it('sm\:caret-pink-500') {
        @include assert {
          @include output {
            @include sm\:caret-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ec4899;
            }
          }
        }
      }

      @include it('sm\:caret-pink-600') {
        @include assert {
          @include output {
            @include sm\:caret-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #db2777;
            }
          }
        }
      }

      @include it('sm\:caret-pink-700') {
        @include assert {
          @include output {
            @include sm\:caret-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #be185d;
            }
          }
        }
      }

      @include it('sm\:caret-pink-800') {
        @include assert {
          @include output {
            @include sm\:caret-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #9d174d;
            }
          }
        }
      }

      @include it('sm\:caret-pink-900') {
        @include assert {
          @include output {
            @include sm\:caret-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #831843;
            }
          }
        }
      }

      @include it('sm\:caret-pink-950') {
        @include assert {
          @include output {
            @include sm\:caret-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #500724;
            }
          }
        }
      }

      @include it('sm\:caret-rose-50') {
        @include assert {
          @include output {
            @include sm\:caret-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fff1f2;
            }
          }
        }
      }

      @include it('sm\:caret-rose-100') {
        @include assert {
          @include output {
            @include sm\:caret-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #ffe4e6;
            }
          }
        }
      }

      @include it('sm\:caret-rose-200') {
        @include assert {
          @include output {
            @include sm\:caret-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fecdd3;
            }
          }
        }
      }

      @include it('sm\:caret-rose-300') {
        @include assert {
          @include output {
            @include sm\:caret-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fda4af;
            }
          }
        }
      }

      @include it('sm\:caret-rose-400') {
        @include assert {
          @include output {
            @include sm\:caret-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #fb7185;
            }
          }
        }
      }

      @include it('sm\:caret-rose-500') {
        @include assert {
          @include output {
            @include sm\:caret-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #f43f5e;
            }
          }
        }
      }

      @include it('sm\:caret-rose-600') {
        @include assert {
          @include output {
            @include sm\:caret-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #e11d48;
            }
          }
        }
      }

      @include it('sm\:caret-rose-700') {
        @include assert {
          @include output {
            @include sm\:caret-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #be123c;
            }
          }
        }
      }

      @include it('sm\:caret-rose-800') {
        @include assert {
          @include output {
            @include sm\:caret-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #9f1239;
            }
          }
        }
      }

      @include it('sm\:caret-rose-900') {
        @include assert {
          @include output {
            @include sm\:caret-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #881337;
            }
          }
        }
      }

      @include it('sm\:caret-rose-950') {
        @include assert {
          @include output {
            @include sm\:caret-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #4c0519;
            }
          }
        }
      }

      @include it('sm\:caret-transparent\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-transparent\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(transparent, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-black\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-black\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#000, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-white\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-white\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f8fafc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f1f5f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e2e8f0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#cbd5e1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#94a3b8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#64748b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#475569, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#334155, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1e293b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0f172a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-slate-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-slate-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#020617, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f9fafb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f3f4f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e5e7eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d1d5db, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#9ca3af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#6b7280, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4b5563, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#374151, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1f2937, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#111827, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-gray-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-gray-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#030712, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f4f4f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e4e4e7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d4d4d8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a1a1aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#71717a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#52525b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#3f3f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#27272a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#18181b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-zinc-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-zinc-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#09090b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f5f5f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e5e5e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d4d4d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a3a3a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#737373, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#525252, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#404040, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#262626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#171717, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-neutral-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-neutral-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0a0a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fafaf9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f5f5f4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e7e5e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d6d3d1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a8a29e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#78716c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#57534e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#44403c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#292524, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1c1917, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-stone-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-stone-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0c0a09, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fef2f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fee2e2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fecaca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fca5a5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f87171, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ef4444, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#dc2626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#b91c1c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#991b1b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#7f1d1d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-red-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-red-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#450a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fff7ed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ffedd5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fed7aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fdba74, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fb923c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f97316, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ea580c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#c2410c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#9a3412, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#7c2d12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-orange-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-orange-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#431407, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fffbeb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fef3c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fde68a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fcd34d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fbbf24, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f59e0b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d97706, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#b45309, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#92400e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#78350f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-amber-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-amber-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#451a03, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fefce8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fef9c3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fef08a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fde047, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#facc15, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#eab308, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ca8a04, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a16207, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#854d0e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#713f12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-yellow-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-yellow-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#422006, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f7fee7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ecfccb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d9f99d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#bef264, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a3e635, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#84cc16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#65a30d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4d7c0f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#3f6212, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#365314, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-lime-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-lime-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1a2e05, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f0fdf4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#dcfce7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#bbf7d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#86efac, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4ade80, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#22c55e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#16a34a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#15803d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#166534, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#14532d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-green-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-green-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#052e16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ecfdf5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d1fae5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a7f3d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#6ee7b7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#34d399, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#10b981, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#059669, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#047857, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#065f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#064e3b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-emerald-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-emerald-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#022c22, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f0fdfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ccfbf1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#99f6e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#5eead4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#2dd4bf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#14b8a6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0d9488, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0f766e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#115e59, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#134e4a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-teal-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-teal-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#042f2e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ecfeff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#cffafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a5f3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#67e8f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#22d3ee, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#06b6d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0891b2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0e7490, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#155e75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#164e63, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-cyan-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-cyan-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#083344, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f0f9ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e0f2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#bae6fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#7dd3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#38bdf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0ea5e9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0284c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0369a1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#075985, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#0c4a6e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-sky-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-sky-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#082f49, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#eff6ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#dbeafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#bfdbfe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#93c5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#60a5fa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#3b82f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#2563eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1d4ed8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1e40af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1e3a8a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-blue-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-blue-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#172554, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#eef2ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e0e7ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#c7d2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a5b4fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#818cf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#6366f1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4f46e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4338ca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#3730a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#312e81, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-indigo-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-indigo-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#1e1b4b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f5f3ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ede9fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ddd6fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#c4b5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a78bfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#8b5cf6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#7c3aed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#6d28d9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#5b21b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4c1d95, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-violet-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-violet-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#2e1065, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#faf5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f3e8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e9d5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d8b4fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#c084fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a855f7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#9333ea, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#7e22ce, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#6b21a8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#581c87, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-purple-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-purple-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#3b0764, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fdf4ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fae8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f5d0fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f0abfc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e879f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#d946ef, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#c026d3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#a21caf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#86198f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#701a75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-fuchsia-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-fuchsia-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4a044e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fdf2f8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fce7f3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fbcfe8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f9a8d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f472b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ec4899, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#db2777, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#be185d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#9d174d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#831843, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-pink-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-pink-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#500724, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-50\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fff1f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-100\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#ffe4e6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-200\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fecdd3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-300\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fda4af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-400\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#fb7185, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-500\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#f43f5e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-600\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#e11d48, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-700\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#be123c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-800\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#9f1239, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-900\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#881337, $alpha: 0.11);
            }
          }
        }
      }

      @include it('sm\:caret-rose-950\/(0.11)') {
        @include assert {
          @include output {
            @include sm\:caret-rose-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: color.change(#4c0519, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-inherit') {
        @include assert {
          @include output {
            @include md\:caret-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: inherit;
            }
          }
        }
      }

      @include it('md\:caret-current') {
        @include assert {
          @include output {
            @include md\:caret-current;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: currentColor;
            }
          }
        }
      }

      @include it('md\:caret-transparent') {
        @include assert {
          @include output {
            @include md\:caret-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: transparent;
            }
          }
        }
      }

      @include it('md\:caret-black') {
        @include assert {
          @include output {
            @include md\:caret-black;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #000;
            }
          }
        }
      }

      @include it('md\:caret-white') {
        @include assert {
          @include output {
            @include md\:caret-white;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fff;
            }
          }
        }
      }

      @include it('md\:caret-slate-50') {
        @include assert {
          @include output {
            @include md\:caret-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f8fafc;
            }
          }
        }
      }

      @include it('md\:caret-slate-100') {
        @include assert {
          @include output {
            @include md\:caret-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f1f5f9;
            }
          }
        }
      }

      @include it('md\:caret-slate-200') {
        @include assert {
          @include output {
            @include md\:caret-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e2e8f0;
            }
          }
        }
      }

      @include it('md\:caret-slate-300') {
        @include assert {
          @include output {
            @include md\:caret-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #cbd5e1;
            }
          }
        }
      }

      @include it('md\:caret-slate-400') {
        @include assert {
          @include output {
            @include md\:caret-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #94a3b8;
            }
          }
        }
      }

      @include it('md\:caret-slate-500') {
        @include assert {
          @include output {
            @include md\:caret-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #64748b;
            }
          }
        }
      }

      @include it('md\:caret-slate-600') {
        @include assert {
          @include output {
            @include md\:caret-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #475569;
            }
          }
        }
      }

      @include it('md\:caret-slate-700') {
        @include assert {
          @include output {
            @include md\:caret-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #334155;
            }
          }
        }
      }

      @include it('md\:caret-slate-800') {
        @include assert {
          @include output {
            @include md\:caret-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1e293b;
            }
          }
        }
      }

      @include it('md\:caret-slate-900') {
        @include assert {
          @include output {
            @include md\:caret-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0f172a;
            }
          }
        }
      }

      @include it('md\:caret-slate-950') {
        @include assert {
          @include output {
            @include md\:caret-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #020617;
            }
          }
        }
      }

      @include it('md\:caret-gray-50') {
        @include assert {
          @include output {
            @include md\:caret-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f9fafb;
            }
          }
        }
      }

      @include it('md\:caret-gray-100') {
        @include assert {
          @include output {
            @include md\:caret-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f3f4f6;
            }
          }
        }
      }

      @include it('md\:caret-gray-200') {
        @include assert {
          @include output {
            @include md\:caret-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e5e7eb;
            }
          }
        }
      }

      @include it('md\:caret-gray-300') {
        @include assert {
          @include output {
            @include md\:caret-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d1d5db;
            }
          }
        }
      }

      @include it('md\:caret-gray-400') {
        @include assert {
          @include output {
            @include md\:caret-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #9ca3af;
            }
          }
        }
      }

      @include it('md\:caret-gray-500') {
        @include assert {
          @include output {
            @include md\:caret-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #6b7280;
            }
          }
        }
      }

      @include it('md\:caret-gray-600') {
        @include assert {
          @include output {
            @include md\:caret-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4b5563;
            }
          }
        }
      }

      @include it('md\:caret-gray-700') {
        @include assert {
          @include output {
            @include md\:caret-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #374151;
            }
          }
        }
      }

      @include it('md\:caret-gray-800') {
        @include assert {
          @include output {
            @include md\:caret-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1f2937;
            }
          }
        }
      }

      @include it('md\:caret-gray-900') {
        @include assert {
          @include output {
            @include md\:caret-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #111827;
            }
          }
        }
      }

      @include it('md\:caret-gray-950') {
        @include assert {
          @include output {
            @include md\:caret-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #030712;
            }
          }
        }
      }

      @include it('md\:caret-zinc-50') {
        @include assert {
          @include output {
            @include md\:caret-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('md\:caret-zinc-100') {
        @include assert {
          @include output {
            @include md\:caret-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f4f4f5;
            }
          }
        }
      }

      @include it('md\:caret-zinc-200') {
        @include assert {
          @include output {
            @include md\:caret-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e4e4e7;
            }
          }
        }
      }

      @include it('md\:caret-zinc-300') {
        @include assert {
          @include output {
            @include md\:caret-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d4d4d8;
            }
          }
        }
      }

      @include it('md\:caret-zinc-400') {
        @include assert {
          @include output {
            @include md\:caret-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a1a1aa;
            }
          }
        }
      }

      @include it('md\:caret-zinc-500') {
        @include assert {
          @include output {
            @include md\:caret-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #71717a;
            }
          }
        }
      }

      @include it('md\:caret-zinc-600') {
        @include assert {
          @include output {
            @include md\:caret-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #52525b;
            }
          }
        }
      }

      @include it('md\:caret-zinc-700') {
        @include assert {
          @include output {
            @include md\:caret-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #3f3f46;
            }
          }
        }
      }

      @include it('md\:caret-zinc-800') {
        @include assert {
          @include output {
            @include md\:caret-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #27272a;
            }
          }
        }
      }

      @include it('md\:caret-zinc-900') {
        @include assert {
          @include output {
            @include md\:caret-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #18181b;
            }
          }
        }
      }

      @include it('md\:caret-zinc-950') {
        @include assert {
          @include output {
            @include md\:caret-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #09090b;
            }
          }
        }
      }

      @include it('md\:caret-neutral-50') {
        @include assert {
          @include output {
            @include md\:caret-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('md\:caret-neutral-100') {
        @include assert {
          @include output {
            @include md\:caret-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f5f5f5;
            }
          }
        }
      }

      @include it('md\:caret-neutral-200') {
        @include assert {
          @include output {
            @include md\:caret-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e5e5e5;
            }
          }
        }
      }

      @include it('md\:caret-neutral-300') {
        @include assert {
          @include output {
            @include md\:caret-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d4d4d4;
            }
          }
        }
      }

      @include it('md\:caret-neutral-400') {
        @include assert {
          @include output {
            @include md\:caret-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a3a3a3;
            }
          }
        }
      }

      @include it('md\:caret-neutral-500') {
        @include assert {
          @include output {
            @include md\:caret-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #737373;
            }
          }
        }
      }

      @include it('md\:caret-neutral-600') {
        @include assert {
          @include output {
            @include md\:caret-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #525252;
            }
          }
        }
      }

      @include it('md\:caret-neutral-700') {
        @include assert {
          @include output {
            @include md\:caret-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #404040;
            }
          }
        }
      }

      @include it('md\:caret-neutral-800') {
        @include assert {
          @include output {
            @include md\:caret-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #262626;
            }
          }
        }
      }

      @include it('md\:caret-neutral-900') {
        @include assert {
          @include output {
            @include md\:caret-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #171717;
            }
          }
        }
      }

      @include it('md\:caret-neutral-950') {
        @include assert {
          @include output {
            @include md\:caret-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0a0a0a;
            }
          }
        }
      }

      @include it('md\:caret-stone-50') {
        @include assert {
          @include output {
            @include md\:caret-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fafaf9;
            }
          }
        }
      }

      @include it('md\:caret-stone-100') {
        @include assert {
          @include output {
            @include md\:caret-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f5f5f4;
            }
          }
        }
      }

      @include it('md\:caret-stone-200') {
        @include assert {
          @include output {
            @include md\:caret-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e7e5e4;
            }
          }
        }
      }

      @include it('md\:caret-stone-300') {
        @include assert {
          @include output {
            @include md\:caret-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d6d3d1;
            }
          }
        }
      }

      @include it('md\:caret-stone-400') {
        @include assert {
          @include output {
            @include md\:caret-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a8a29e;
            }
          }
        }
      }

      @include it('md\:caret-stone-500') {
        @include assert {
          @include output {
            @include md\:caret-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #78716c;
            }
          }
        }
      }

      @include it('md\:caret-stone-600') {
        @include assert {
          @include output {
            @include md\:caret-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #57534e;
            }
          }
        }
      }

      @include it('md\:caret-stone-700') {
        @include assert {
          @include output {
            @include md\:caret-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #44403c;
            }
          }
        }
      }

      @include it('md\:caret-stone-800') {
        @include assert {
          @include output {
            @include md\:caret-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #292524;
            }
          }
        }
      }

      @include it('md\:caret-stone-900') {
        @include assert {
          @include output {
            @include md\:caret-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1c1917;
            }
          }
        }
      }

      @include it('md\:caret-stone-950') {
        @include assert {
          @include output {
            @include md\:caret-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0c0a09;
            }
          }
        }
      }

      @include it('md\:caret-red-50') {
        @include assert {
          @include output {
            @include md\:caret-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fef2f2;
            }
          }
        }
      }

      @include it('md\:caret-red-100') {
        @include assert {
          @include output {
            @include md\:caret-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fee2e2;
            }
          }
        }
      }

      @include it('md\:caret-red-200') {
        @include assert {
          @include output {
            @include md\:caret-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fecaca;
            }
          }
        }
      }

      @include it('md\:caret-red-300') {
        @include assert {
          @include output {
            @include md\:caret-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fca5a5;
            }
          }
        }
      }

      @include it('md\:caret-red-400') {
        @include assert {
          @include output {
            @include md\:caret-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f87171;
            }
          }
        }
      }

      @include it('md\:caret-red-500') {
        @include assert {
          @include output {
            @include md\:caret-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ef4444;
            }
          }
        }
      }

      @include it('md\:caret-red-600') {
        @include assert {
          @include output {
            @include md\:caret-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #dc2626;
            }
          }
        }
      }

      @include it('md\:caret-red-700') {
        @include assert {
          @include output {
            @include md\:caret-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #b91c1c;
            }
          }
        }
      }

      @include it('md\:caret-red-800') {
        @include assert {
          @include output {
            @include md\:caret-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #991b1b;
            }
          }
        }
      }

      @include it('md\:caret-red-900') {
        @include assert {
          @include output {
            @include md\:caret-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #7f1d1d;
            }
          }
        }
      }

      @include it('md\:caret-red-950') {
        @include assert {
          @include output {
            @include md\:caret-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #450a0a;
            }
          }
        }
      }

      @include it('md\:caret-orange-50') {
        @include assert {
          @include output {
            @include md\:caret-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fff7ed;
            }
          }
        }
      }

      @include it('md\:caret-orange-100') {
        @include assert {
          @include output {
            @include md\:caret-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ffedd5;
            }
          }
        }
      }

      @include it('md\:caret-orange-200') {
        @include assert {
          @include output {
            @include md\:caret-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fed7aa;
            }
          }
        }
      }

      @include it('md\:caret-orange-300') {
        @include assert {
          @include output {
            @include md\:caret-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fdba74;
            }
          }
        }
      }

      @include it('md\:caret-orange-400') {
        @include assert {
          @include output {
            @include md\:caret-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fb923c;
            }
          }
        }
      }

      @include it('md\:caret-orange-500') {
        @include assert {
          @include output {
            @include md\:caret-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f97316;
            }
          }
        }
      }

      @include it('md\:caret-orange-600') {
        @include assert {
          @include output {
            @include md\:caret-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ea580c;
            }
          }
        }
      }

      @include it('md\:caret-orange-700') {
        @include assert {
          @include output {
            @include md\:caret-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #c2410c;
            }
          }
        }
      }

      @include it('md\:caret-orange-800') {
        @include assert {
          @include output {
            @include md\:caret-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #9a3412;
            }
          }
        }
      }

      @include it('md\:caret-orange-900') {
        @include assert {
          @include output {
            @include md\:caret-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #7c2d12;
            }
          }
        }
      }

      @include it('md\:caret-orange-950') {
        @include assert {
          @include output {
            @include md\:caret-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #431407;
            }
          }
        }
      }

      @include it('md\:caret-amber-50') {
        @include assert {
          @include output {
            @include md\:caret-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fffbeb;
            }
          }
        }
      }

      @include it('md\:caret-amber-100') {
        @include assert {
          @include output {
            @include md\:caret-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fef3c7;
            }
          }
        }
      }

      @include it('md\:caret-amber-200') {
        @include assert {
          @include output {
            @include md\:caret-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fde68a;
            }
          }
        }
      }

      @include it('md\:caret-amber-300') {
        @include assert {
          @include output {
            @include md\:caret-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fcd34d;
            }
          }
        }
      }

      @include it('md\:caret-amber-400') {
        @include assert {
          @include output {
            @include md\:caret-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fbbf24;
            }
          }
        }
      }

      @include it('md\:caret-amber-500') {
        @include assert {
          @include output {
            @include md\:caret-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f59e0b;
            }
          }
        }
      }

      @include it('md\:caret-amber-600') {
        @include assert {
          @include output {
            @include md\:caret-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d97706;
            }
          }
        }
      }

      @include it('md\:caret-amber-700') {
        @include assert {
          @include output {
            @include md\:caret-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #b45309;
            }
          }
        }
      }

      @include it('md\:caret-amber-800') {
        @include assert {
          @include output {
            @include md\:caret-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #92400e;
            }
          }
        }
      }

      @include it('md\:caret-amber-900') {
        @include assert {
          @include output {
            @include md\:caret-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #78350f;
            }
          }
        }
      }

      @include it('md\:caret-amber-950') {
        @include assert {
          @include output {
            @include md\:caret-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #451a03;
            }
          }
        }
      }

      @include it('md\:caret-yellow-50') {
        @include assert {
          @include output {
            @include md\:caret-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fefce8;
            }
          }
        }
      }

      @include it('md\:caret-yellow-100') {
        @include assert {
          @include output {
            @include md\:caret-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fef9c3;
            }
          }
        }
      }

      @include it('md\:caret-yellow-200') {
        @include assert {
          @include output {
            @include md\:caret-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fef08a;
            }
          }
        }
      }

      @include it('md\:caret-yellow-300') {
        @include assert {
          @include output {
            @include md\:caret-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fde047;
            }
          }
        }
      }

      @include it('md\:caret-yellow-400') {
        @include assert {
          @include output {
            @include md\:caret-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #facc15;
            }
          }
        }
      }

      @include it('md\:caret-yellow-500') {
        @include assert {
          @include output {
            @include md\:caret-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #eab308;
            }
          }
        }
      }

      @include it('md\:caret-yellow-600') {
        @include assert {
          @include output {
            @include md\:caret-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ca8a04;
            }
          }
        }
      }

      @include it('md\:caret-yellow-700') {
        @include assert {
          @include output {
            @include md\:caret-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a16207;
            }
          }
        }
      }

      @include it('md\:caret-yellow-800') {
        @include assert {
          @include output {
            @include md\:caret-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #854d0e;
            }
          }
        }
      }

      @include it('md\:caret-yellow-900') {
        @include assert {
          @include output {
            @include md\:caret-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #713f12;
            }
          }
        }
      }

      @include it('md\:caret-yellow-950') {
        @include assert {
          @include output {
            @include md\:caret-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #422006;
            }
          }
        }
      }

      @include it('md\:caret-lime-50') {
        @include assert {
          @include output {
            @include md\:caret-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f7fee7;
            }
          }
        }
      }

      @include it('md\:caret-lime-100') {
        @include assert {
          @include output {
            @include md\:caret-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ecfccb;
            }
          }
        }
      }

      @include it('md\:caret-lime-200') {
        @include assert {
          @include output {
            @include md\:caret-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d9f99d;
            }
          }
        }
      }

      @include it('md\:caret-lime-300') {
        @include assert {
          @include output {
            @include md\:caret-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #bef264;
            }
          }
        }
      }

      @include it('md\:caret-lime-400') {
        @include assert {
          @include output {
            @include md\:caret-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a3e635;
            }
          }
        }
      }

      @include it('md\:caret-lime-500') {
        @include assert {
          @include output {
            @include md\:caret-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #84cc16;
            }
          }
        }
      }

      @include it('md\:caret-lime-600') {
        @include assert {
          @include output {
            @include md\:caret-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #65a30d;
            }
          }
        }
      }

      @include it('md\:caret-lime-700') {
        @include assert {
          @include output {
            @include md\:caret-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4d7c0f;
            }
          }
        }
      }

      @include it('md\:caret-lime-800') {
        @include assert {
          @include output {
            @include md\:caret-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #3f6212;
            }
          }
        }
      }

      @include it('md\:caret-lime-900') {
        @include assert {
          @include output {
            @include md\:caret-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #365314;
            }
          }
        }
      }

      @include it('md\:caret-lime-950') {
        @include assert {
          @include output {
            @include md\:caret-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1a2e05;
            }
          }
        }
      }

      @include it('md\:caret-green-50') {
        @include assert {
          @include output {
            @include md\:caret-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f0fdf4;
            }
          }
        }
      }

      @include it('md\:caret-green-100') {
        @include assert {
          @include output {
            @include md\:caret-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #dcfce7;
            }
          }
        }
      }

      @include it('md\:caret-green-200') {
        @include assert {
          @include output {
            @include md\:caret-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #bbf7d0;
            }
          }
        }
      }

      @include it('md\:caret-green-300') {
        @include assert {
          @include output {
            @include md\:caret-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #86efac;
            }
          }
        }
      }

      @include it('md\:caret-green-400') {
        @include assert {
          @include output {
            @include md\:caret-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4ade80;
            }
          }
        }
      }

      @include it('md\:caret-green-500') {
        @include assert {
          @include output {
            @include md\:caret-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #22c55e;
            }
          }
        }
      }

      @include it('md\:caret-green-600') {
        @include assert {
          @include output {
            @include md\:caret-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #16a34a;
            }
          }
        }
      }

      @include it('md\:caret-green-700') {
        @include assert {
          @include output {
            @include md\:caret-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #15803d;
            }
          }
        }
      }

      @include it('md\:caret-green-800') {
        @include assert {
          @include output {
            @include md\:caret-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #166534;
            }
          }
        }
      }

      @include it('md\:caret-green-900') {
        @include assert {
          @include output {
            @include md\:caret-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #14532d;
            }
          }
        }
      }

      @include it('md\:caret-green-950') {
        @include assert {
          @include output {
            @include md\:caret-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #052e16;
            }
          }
        }
      }

      @include it('md\:caret-emerald-50') {
        @include assert {
          @include output {
            @include md\:caret-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ecfdf5;
            }
          }
        }
      }

      @include it('md\:caret-emerald-100') {
        @include assert {
          @include output {
            @include md\:caret-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d1fae5;
            }
          }
        }
      }

      @include it('md\:caret-emerald-200') {
        @include assert {
          @include output {
            @include md\:caret-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a7f3d0;
            }
          }
        }
      }

      @include it('md\:caret-emerald-300') {
        @include assert {
          @include output {
            @include md\:caret-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #6ee7b7;
            }
          }
        }
      }

      @include it('md\:caret-emerald-400') {
        @include assert {
          @include output {
            @include md\:caret-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #34d399;
            }
          }
        }
      }

      @include it('md\:caret-emerald-500') {
        @include assert {
          @include output {
            @include md\:caret-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #10b981;
            }
          }
        }
      }

      @include it('md\:caret-emerald-600') {
        @include assert {
          @include output {
            @include md\:caret-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #059669;
            }
          }
        }
      }

      @include it('md\:caret-emerald-700') {
        @include assert {
          @include output {
            @include md\:caret-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #047857;
            }
          }
        }
      }

      @include it('md\:caret-emerald-800') {
        @include assert {
          @include output {
            @include md\:caret-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #065f46;
            }
          }
        }
      }

      @include it('md\:caret-emerald-900') {
        @include assert {
          @include output {
            @include md\:caret-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #064e3b;
            }
          }
        }
      }

      @include it('md\:caret-emerald-950') {
        @include assert {
          @include output {
            @include md\:caret-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #022c22;
            }
          }
        }
      }

      @include it('md\:caret-teal-50') {
        @include assert {
          @include output {
            @include md\:caret-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f0fdfa;
            }
          }
        }
      }

      @include it('md\:caret-teal-100') {
        @include assert {
          @include output {
            @include md\:caret-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ccfbf1;
            }
          }
        }
      }

      @include it('md\:caret-teal-200') {
        @include assert {
          @include output {
            @include md\:caret-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #99f6e4;
            }
          }
        }
      }

      @include it('md\:caret-teal-300') {
        @include assert {
          @include output {
            @include md\:caret-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #5eead4;
            }
          }
        }
      }

      @include it('md\:caret-teal-400') {
        @include assert {
          @include output {
            @include md\:caret-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #2dd4bf;
            }
          }
        }
      }

      @include it('md\:caret-teal-500') {
        @include assert {
          @include output {
            @include md\:caret-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #14b8a6;
            }
          }
        }
      }

      @include it('md\:caret-teal-600') {
        @include assert {
          @include output {
            @include md\:caret-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0d9488;
            }
          }
        }
      }

      @include it('md\:caret-teal-700') {
        @include assert {
          @include output {
            @include md\:caret-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0f766e;
            }
          }
        }
      }

      @include it('md\:caret-teal-800') {
        @include assert {
          @include output {
            @include md\:caret-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #115e59;
            }
          }
        }
      }

      @include it('md\:caret-teal-900') {
        @include assert {
          @include output {
            @include md\:caret-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #134e4a;
            }
          }
        }
      }

      @include it('md\:caret-teal-950') {
        @include assert {
          @include output {
            @include md\:caret-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #042f2e;
            }
          }
        }
      }

      @include it('md\:caret-cyan-50') {
        @include assert {
          @include output {
            @include md\:caret-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ecfeff;
            }
          }
        }
      }

      @include it('md\:caret-cyan-100') {
        @include assert {
          @include output {
            @include md\:caret-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #cffafe;
            }
          }
        }
      }

      @include it('md\:caret-cyan-200') {
        @include assert {
          @include output {
            @include md\:caret-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a5f3fc;
            }
          }
        }
      }

      @include it('md\:caret-cyan-300') {
        @include assert {
          @include output {
            @include md\:caret-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #67e8f9;
            }
          }
        }
      }

      @include it('md\:caret-cyan-400') {
        @include assert {
          @include output {
            @include md\:caret-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #22d3ee;
            }
          }
        }
      }

      @include it('md\:caret-cyan-500') {
        @include assert {
          @include output {
            @include md\:caret-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #06b6d4;
            }
          }
        }
      }

      @include it('md\:caret-cyan-600') {
        @include assert {
          @include output {
            @include md\:caret-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0891b2;
            }
          }
        }
      }

      @include it('md\:caret-cyan-700') {
        @include assert {
          @include output {
            @include md\:caret-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0e7490;
            }
          }
        }
      }

      @include it('md\:caret-cyan-800') {
        @include assert {
          @include output {
            @include md\:caret-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #155e75;
            }
          }
        }
      }

      @include it('md\:caret-cyan-900') {
        @include assert {
          @include output {
            @include md\:caret-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #164e63;
            }
          }
        }
      }

      @include it('md\:caret-cyan-950') {
        @include assert {
          @include output {
            @include md\:caret-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #083344;
            }
          }
        }
      }

      @include it('md\:caret-sky-50') {
        @include assert {
          @include output {
            @include md\:caret-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f0f9ff;
            }
          }
        }
      }

      @include it('md\:caret-sky-100') {
        @include assert {
          @include output {
            @include md\:caret-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e0f2fe;
            }
          }
        }
      }

      @include it('md\:caret-sky-200') {
        @include assert {
          @include output {
            @include md\:caret-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #bae6fd;
            }
          }
        }
      }

      @include it('md\:caret-sky-300') {
        @include assert {
          @include output {
            @include md\:caret-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #7dd3fc;
            }
          }
        }
      }

      @include it('md\:caret-sky-400') {
        @include assert {
          @include output {
            @include md\:caret-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #38bdf8;
            }
          }
        }
      }

      @include it('md\:caret-sky-500') {
        @include assert {
          @include output {
            @include md\:caret-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0ea5e9;
            }
          }
        }
      }

      @include it('md\:caret-sky-600') {
        @include assert {
          @include output {
            @include md\:caret-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0284c7;
            }
          }
        }
      }

      @include it('md\:caret-sky-700') {
        @include assert {
          @include output {
            @include md\:caret-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0369a1;
            }
          }
        }
      }

      @include it('md\:caret-sky-800') {
        @include assert {
          @include output {
            @include md\:caret-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #075985;
            }
          }
        }
      }

      @include it('md\:caret-sky-900') {
        @include assert {
          @include output {
            @include md\:caret-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #0c4a6e;
            }
          }
        }
      }

      @include it('md\:caret-sky-950') {
        @include assert {
          @include output {
            @include md\:caret-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #082f49;
            }
          }
        }
      }

      @include it('md\:caret-blue-50') {
        @include assert {
          @include output {
            @include md\:caret-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #eff6ff;
            }
          }
        }
      }

      @include it('md\:caret-blue-100') {
        @include assert {
          @include output {
            @include md\:caret-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #dbeafe;
            }
          }
        }
      }

      @include it('md\:caret-blue-200') {
        @include assert {
          @include output {
            @include md\:caret-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #bfdbfe;
            }
          }
        }
      }

      @include it('md\:caret-blue-300') {
        @include assert {
          @include output {
            @include md\:caret-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #93c5fd;
            }
          }
        }
      }

      @include it('md\:caret-blue-400') {
        @include assert {
          @include output {
            @include md\:caret-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #60a5fa;
            }
          }
        }
      }

      @include it('md\:caret-blue-500') {
        @include assert {
          @include output {
            @include md\:caret-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #3b82f6;
            }
          }
        }
      }

      @include it('md\:caret-blue-600') {
        @include assert {
          @include output {
            @include md\:caret-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #2563eb;
            }
          }
        }
      }

      @include it('md\:caret-blue-700') {
        @include assert {
          @include output {
            @include md\:caret-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1d4ed8;
            }
          }
        }
      }

      @include it('md\:caret-blue-800') {
        @include assert {
          @include output {
            @include md\:caret-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1e40af;
            }
          }
        }
      }

      @include it('md\:caret-blue-900') {
        @include assert {
          @include output {
            @include md\:caret-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1e3a8a;
            }
          }
        }
      }

      @include it('md\:caret-blue-950') {
        @include assert {
          @include output {
            @include md\:caret-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #172554;
            }
          }
        }
      }

      @include it('md\:caret-indigo-50') {
        @include assert {
          @include output {
            @include md\:caret-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #eef2ff;
            }
          }
        }
      }

      @include it('md\:caret-indigo-100') {
        @include assert {
          @include output {
            @include md\:caret-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e0e7ff;
            }
          }
        }
      }

      @include it('md\:caret-indigo-200') {
        @include assert {
          @include output {
            @include md\:caret-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #c7d2fe;
            }
          }
        }
      }

      @include it('md\:caret-indigo-300') {
        @include assert {
          @include output {
            @include md\:caret-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a5b4fc;
            }
          }
        }
      }

      @include it('md\:caret-indigo-400') {
        @include assert {
          @include output {
            @include md\:caret-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #818cf8;
            }
          }
        }
      }

      @include it('md\:caret-indigo-500') {
        @include assert {
          @include output {
            @include md\:caret-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #6366f1;
            }
          }
        }
      }

      @include it('md\:caret-indigo-600') {
        @include assert {
          @include output {
            @include md\:caret-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4f46e5;
            }
          }
        }
      }

      @include it('md\:caret-indigo-700') {
        @include assert {
          @include output {
            @include md\:caret-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4338ca;
            }
          }
        }
      }

      @include it('md\:caret-indigo-800') {
        @include assert {
          @include output {
            @include md\:caret-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #3730a3;
            }
          }
        }
      }

      @include it('md\:caret-indigo-900') {
        @include assert {
          @include output {
            @include md\:caret-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #312e81;
            }
          }
        }
      }

      @include it('md\:caret-indigo-950') {
        @include assert {
          @include output {
            @include md\:caret-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #1e1b4b;
            }
          }
        }
      }

      @include it('md\:caret-violet-50') {
        @include assert {
          @include output {
            @include md\:caret-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f5f3ff;
            }
          }
        }
      }

      @include it('md\:caret-violet-100') {
        @include assert {
          @include output {
            @include md\:caret-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ede9fe;
            }
          }
        }
      }

      @include it('md\:caret-violet-200') {
        @include assert {
          @include output {
            @include md\:caret-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ddd6fe;
            }
          }
        }
      }

      @include it('md\:caret-violet-300') {
        @include assert {
          @include output {
            @include md\:caret-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #c4b5fd;
            }
          }
        }
      }

      @include it('md\:caret-violet-400') {
        @include assert {
          @include output {
            @include md\:caret-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a78bfa;
            }
          }
        }
      }

      @include it('md\:caret-violet-500') {
        @include assert {
          @include output {
            @include md\:caret-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #8b5cf6;
            }
          }
        }
      }

      @include it('md\:caret-violet-600') {
        @include assert {
          @include output {
            @include md\:caret-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #7c3aed;
            }
          }
        }
      }

      @include it('md\:caret-violet-700') {
        @include assert {
          @include output {
            @include md\:caret-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #6d28d9;
            }
          }
        }
      }

      @include it('md\:caret-violet-800') {
        @include assert {
          @include output {
            @include md\:caret-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #5b21b6;
            }
          }
        }
      }

      @include it('md\:caret-violet-900') {
        @include assert {
          @include output {
            @include md\:caret-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4c1d95;
            }
          }
        }
      }

      @include it('md\:caret-violet-950') {
        @include assert {
          @include output {
            @include md\:caret-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #2e1065;
            }
          }
        }
      }

      @include it('md\:caret-purple-50') {
        @include assert {
          @include output {
            @include md\:caret-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #faf5ff;
            }
          }
        }
      }

      @include it('md\:caret-purple-100') {
        @include assert {
          @include output {
            @include md\:caret-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f3e8ff;
            }
          }
        }
      }

      @include it('md\:caret-purple-200') {
        @include assert {
          @include output {
            @include md\:caret-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e9d5ff;
            }
          }
        }
      }

      @include it('md\:caret-purple-300') {
        @include assert {
          @include output {
            @include md\:caret-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d8b4fe;
            }
          }
        }
      }

      @include it('md\:caret-purple-400') {
        @include assert {
          @include output {
            @include md\:caret-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #c084fc;
            }
          }
        }
      }

      @include it('md\:caret-purple-500') {
        @include assert {
          @include output {
            @include md\:caret-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a855f7;
            }
          }
        }
      }

      @include it('md\:caret-purple-600') {
        @include assert {
          @include output {
            @include md\:caret-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #9333ea;
            }
          }
        }
      }

      @include it('md\:caret-purple-700') {
        @include assert {
          @include output {
            @include md\:caret-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #7e22ce;
            }
          }
        }
      }

      @include it('md\:caret-purple-800') {
        @include assert {
          @include output {
            @include md\:caret-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #6b21a8;
            }
          }
        }
      }

      @include it('md\:caret-purple-900') {
        @include assert {
          @include output {
            @include md\:caret-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #581c87;
            }
          }
        }
      }

      @include it('md\:caret-purple-950') {
        @include assert {
          @include output {
            @include md\:caret-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #3b0764;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-50') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fdf4ff;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-100') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fae8ff;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-200') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f5d0fe;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-300') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f0abfc;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-400') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e879f9;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-500') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #d946ef;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-600') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #c026d3;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-700') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #a21caf;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-800') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #86198f;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-900') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #701a75;
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-950') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4a044e;
            }
          }
        }
      }

      @include it('md\:caret-pink-50') {
        @include assert {
          @include output {
            @include md\:caret-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fdf2f8;
            }
          }
        }
      }

      @include it('md\:caret-pink-100') {
        @include assert {
          @include output {
            @include md\:caret-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fce7f3;
            }
          }
        }
      }

      @include it('md\:caret-pink-200') {
        @include assert {
          @include output {
            @include md\:caret-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fbcfe8;
            }
          }
        }
      }

      @include it('md\:caret-pink-300') {
        @include assert {
          @include output {
            @include md\:caret-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f9a8d4;
            }
          }
        }
      }

      @include it('md\:caret-pink-400') {
        @include assert {
          @include output {
            @include md\:caret-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f472b6;
            }
          }
        }
      }

      @include it('md\:caret-pink-500') {
        @include assert {
          @include output {
            @include md\:caret-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ec4899;
            }
          }
        }
      }

      @include it('md\:caret-pink-600') {
        @include assert {
          @include output {
            @include md\:caret-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #db2777;
            }
          }
        }
      }

      @include it('md\:caret-pink-700') {
        @include assert {
          @include output {
            @include md\:caret-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #be185d;
            }
          }
        }
      }

      @include it('md\:caret-pink-800') {
        @include assert {
          @include output {
            @include md\:caret-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #9d174d;
            }
          }
        }
      }

      @include it('md\:caret-pink-900') {
        @include assert {
          @include output {
            @include md\:caret-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #831843;
            }
          }
        }
      }

      @include it('md\:caret-pink-950') {
        @include assert {
          @include output {
            @include md\:caret-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #500724;
            }
          }
        }
      }

      @include it('md\:caret-rose-50') {
        @include assert {
          @include output {
            @include md\:caret-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fff1f2;
            }
          }
        }
      }

      @include it('md\:caret-rose-100') {
        @include assert {
          @include output {
            @include md\:caret-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #ffe4e6;
            }
          }
        }
      }

      @include it('md\:caret-rose-200') {
        @include assert {
          @include output {
            @include md\:caret-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fecdd3;
            }
          }
        }
      }

      @include it('md\:caret-rose-300') {
        @include assert {
          @include output {
            @include md\:caret-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fda4af;
            }
          }
        }
      }

      @include it('md\:caret-rose-400') {
        @include assert {
          @include output {
            @include md\:caret-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #fb7185;
            }
          }
        }
      }

      @include it('md\:caret-rose-500') {
        @include assert {
          @include output {
            @include md\:caret-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #f43f5e;
            }
          }
        }
      }

      @include it('md\:caret-rose-600') {
        @include assert {
          @include output {
            @include md\:caret-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #e11d48;
            }
          }
        }
      }

      @include it('md\:caret-rose-700') {
        @include assert {
          @include output {
            @include md\:caret-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #be123c;
            }
          }
        }
      }

      @include it('md\:caret-rose-800') {
        @include assert {
          @include output {
            @include md\:caret-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #9f1239;
            }
          }
        }
      }

      @include it('md\:caret-rose-900') {
        @include assert {
          @include output {
            @include md\:caret-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #881337;
            }
          }
        }
      }

      @include it('md\:caret-rose-950') {
        @include assert {
          @include output {
            @include md\:caret-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #4c0519;
            }
          }
        }
      }

      @include it('md\:caret-transparent\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-transparent\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(transparent, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-black\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-black\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#000, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-white\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-white\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f8fafc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f1f5f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e2e8f0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#cbd5e1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#94a3b8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#64748b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#475569, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#334155, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1e293b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0f172a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-slate-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-slate-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#020617, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f9fafb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f3f4f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e5e7eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d1d5db, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#9ca3af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#6b7280, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4b5563, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#374151, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1f2937, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#111827, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-gray-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-gray-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#030712, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f4f4f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e4e4e7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d4d4d8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a1a1aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#71717a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#52525b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#3f3f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#27272a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#18181b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-zinc-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-zinc-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#09090b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f5f5f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e5e5e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d4d4d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a3a3a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#737373, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#525252, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#404040, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#262626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#171717, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-neutral-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-neutral-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0a0a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fafaf9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f5f5f4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e7e5e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d6d3d1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a8a29e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#78716c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#57534e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#44403c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#292524, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1c1917, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-stone-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-stone-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0c0a09, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fef2f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fee2e2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fecaca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fca5a5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f87171, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ef4444, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#dc2626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#b91c1c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#991b1b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#7f1d1d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-red-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-red-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#450a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fff7ed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ffedd5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fed7aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fdba74, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fb923c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f97316, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ea580c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#c2410c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#9a3412, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#7c2d12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-orange-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-orange-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#431407, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fffbeb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fef3c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fde68a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fcd34d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fbbf24, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f59e0b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d97706, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#b45309, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#92400e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#78350f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-amber-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-amber-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#451a03, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fefce8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fef9c3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fef08a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fde047, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#facc15, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#eab308, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ca8a04, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a16207, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#854d0e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#713f12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-yellow-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-yellow-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#422006, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f7fee7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ecfccb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d9f99d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#bef264, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a3e635, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#84cc16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#65a30d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4d7c0f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#3f6212, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#365314, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-lime-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-lime-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1a2e05, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f0fdf4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#dcfce7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#bbf7d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#86efac, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4ade80, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#22c55e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#16a34a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#15803d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#166534, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#14532d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-green-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-green-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#052e16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ecfdf5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d1fae5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a7f3d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#6ee7b7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#34d399, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#10b981, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#059669, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#047857, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#065f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#064e3b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-emerald-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-emerald-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#022c22, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f0fdfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ccfbf1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#99f6e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#5eead4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#2dd4bf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#14b8a6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0d9488, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0f766e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#115e59, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#134e4a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-teal-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-teal-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#042f2e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ecfeff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#cffafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a5f3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#67e8f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#22d3ee, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#06b6d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0891b2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0e7490, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#155e75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#164e63, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-cyan-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-cyan-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#083344, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f0f9ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e0f2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#bae6fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#7dd3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#38bdf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0ea5e9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0284c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0369a1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#075985, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#0c4a6e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-sky-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-sky-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#082f49, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#eff6ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#dbeafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#bfdbfe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#93c5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#60a5fa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#3b82f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#2563eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1d4ed8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1e40af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1e3a8a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-blue-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-blue-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#172554, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#eef2ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e0e7ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#c7d2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a5b4fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#818cf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#6366f1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4f46e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4338ca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#3730a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#312e81, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-indigo-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-indigo-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#1e1b4b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f5f3ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ede9fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ddd6fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#c4b5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a78bfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#8b5cf6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#7c3aed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#6d28d9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#5b21b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4c1d95, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-violet-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-violet-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#2e1065, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#faf5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f3e8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e9d5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d8b4fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#c084fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a855f7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#9333ea, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#7e22ce, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#6b21a8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#581c87, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-purple-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-purple-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#3b0764, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fdf4ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fae8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f5d0fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f0abfc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e879f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#d946ef, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#c026d3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#a21caf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#86198f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#701a75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-fuchsia-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-fuchsia-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4a044e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fdf2f8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fce7f3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fbcfe8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f9a8d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f472b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ec4899, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#db2777, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#be185d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#9d174d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#831843, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-pink-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-pink-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#500724, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-50\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fff1f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-100\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#ffe4e6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-200\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fecdd3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-300\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fda4af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-400\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#fb7185, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-500\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#f43f5e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-600\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#e11d48, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-700\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#be123c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-800\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#9f1239, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-900\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#881337, $alpha: 0.11);
            }
          }
        }
      }

      @include it('md\:caret-rose-950\/(0.11)') {
        @include assert {
          @include output {
            @include md\:caret-rose-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: color.change(#4c0519, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-inherit') {
        @include assert {
          @include output {
            @include lg\:caret-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: inherit;
            }
          }
        }
      }

      @include it('lg\:caret-current') {
        @include assert {
          @include output {
            @include lg\:caret-current;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: currentColor;
            }
          }
        }
      }

      @include it('lg\:caret-transparent') {
        @include assert {
          @include output {
            @include lg\:caret-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: transparent;
            }
          }
        }
      }

      @include it('lg\:caret-black') {
        @include assert {
          @include output {
            @include lg\:caret-black;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #000;
            }
          }
        }
      }

      @include it('lg\:caret-white') {
        @include assert {
          @include output {
            @include lg\:caret-white;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fff;
            }
          }
        }
      }

      @include it('lg\:caret-slate-50') {
        @include assert {
          @include output {
            @include lg\:caret-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f8fafc;
            }
          }
        }
      }

      @include it('lg\:caret-slate-100') {
        @include assert {
          @include output {
            @include lg\:caret-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f1f5f9;
            }
          }
        }
      }

      @include it('lg\:caret-slate-200') {
        @include assert {
          @include output {
            @include lg\:caret-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e2e8f0;
            }
          }
        }
      }

      @include it('lg\:caret-slate-300') {
        @include assert {
          @include output {
            @include lg\:caret-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #cbd5e1;
            }
          }
        }
      }

      @include it('lg\:caret-slate-400') {
        @include assert {
          @include output {
            @include lg\:caret-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #94a3b8;
            }
          }
        }
      }

      @include it('lg\:caret-slate-500') {
        @include assert {
          @include output {
            @include lg\:caret-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #64748b;
            }
          }
        }
      }

      @include it('lg\:caret-slate-600') {
        @include assert {
          @include output {
            @include lg\:caret-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #475569;
            }
          }
        }
      }

      @include it('lg\:caret-slate-700') {
        @include assert {
          @include output {
            @include lg\:caret-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #334155;
            }
          }
        }
      }

      @include it('lg\:caret-slate-800') {
        @include assert {
          @include output {
            @include lg\:caret-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1e293b;
            }
          }
        }
      }

      @include it('lg\:caret-slate-900') {
        @include assert {
          @include output {
            @include lg\:caret-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0f172a;
            }
          }
        }
      }

      @include it('lg\:caret-slate-950') {
        @include assert {
          @include output {
            @include lg\:caret-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #020617;
            }
          }
        }
      }

      @include it('lg\:caret-gray-50') {
        @include assert {
          @include output {
            @include lg\:caret-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f9fafb;
            }
          }
        }
      }

      @include it('lg\:caret-gray-100') {
        @include assert {
          @include output {
            @include lg\:caret-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f3f4f6;
            }
          }
        }
      }

      @include it('lg\:caret-gray-200') {
        @include assert {
          @include output {
            @include lg\:caret-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e5e7eb;
            }
          }
        }
      }

      @include it('lg\:caret-gray-300') {
        @include assert {
          @include output {
            @include lg\:caret-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d1d5db;
            }
          }
        }
      }

      @include it('lg\:caret-gray-400') {
        @include assert {
          @include output {
            @include lg\:caret-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #9ca3af;
            }
          }
        }
      }

      @include it('lg\:caret-gray-500') {
        @include assert {
          @include output {
            @include lg\:caret-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #6b7280;
            }
          }
        }
      }

      @include it('lg\:caret-gray-600') {
        @include assert {
          @include output {
            @include lg\:caret-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4b5563;
            }
          }
        }
      }

      @include it('lg\:caret-gray-700') {
        @include assert {
          @include output {
            @include lg\:caret-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #374151;
            }
          }
        }
      }

      @include it('lg\:caret-gray-800') {
        @include assert {
          @include output {
            @include lg\:caret-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1f2937;
            }
          }
        }
      }

      @include it('lg\:caret-gray-900') {
        @include assert {
          @include output {
            @include lg\:caret-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #111827;
            }
          }
        }
      }

      @include it('lg\:caret-gray-950') {
        @include assert {
          @include output {
            @include lg\:caret-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #030712;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-50') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-100') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f4f4f5;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-200') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e4e4e7;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-300') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d4d4d8;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-400') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a1a1aa;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-500') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #71717a;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-600') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #52525b;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-700') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #3f3f46;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-800') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #27272a;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-900') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #18181b;
            }
          }
        }
      }

      @include it('lg\:caret-zinc-950') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #09090b;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-50') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-100') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f5f5f5;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-200') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e5e5e5;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-300') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d4d4d4;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-400') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a3a3a3;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-500') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #737373;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-600') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #525252;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-700') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #404040;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-800') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #262626;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-900') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #171717;
            }
          }
        }
      }

      @include it('lg\:caret-neutral-950') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0a0a0a;
            }
          }
        }
      }

      @include it('lg\:caret-stone-50') {
        @include assert {
          @include output {
            @include lg\:caret-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fafaf9;
            }
          }
        }
      }

      @include it('lg\:caret-stone-100') {
        @include assert {
          @include output {
            @include lg\:caret-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f5f5f4;
            }
          }
        }
      }

      @include it('lg\:caret-stone-200') {
        @include assert {
          @include output {
            @include lg\:caret-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e7e5e4;
            }
          }
        }
      }

      @include it('lg\:caret-stone-300') {
        @include assert {
          @include output {
            @include lg\:caret-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d6d3d1;
            }
          }
        }
      }

      @include it('lg\:caret-stone-400') {
        @include assert {
          @include output {
            @include lg\:caret-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a8a29e;
            }
          }
        }
      }

      @include it('lg\:caret-stone-500') {
        @include assert {
          @include output {
            @include lg\:caret-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #78716c;
            }
          }
        }
      }

      @include it('lg\:caret-stone-600') {
        @include assert {
          @include output {
            @include lg\:caret-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #57534e;
            }
          }
        }
      }

      @include it('lg\:caret-stone-700') {
        @include assert {
          @include output {
            @include lg\:caret-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #44403c;
            }
          }
        }
      }

      @include it('lg\:caret-stone-800') {
        @include assert {
          @include output {
            @include lg\:caret-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #292524;
            }
          }
        }
      }

      @include it('lg\:caret-stone-900') {
        @include assert {
          @include output {
            @include lg\:caret-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1c1917;
            }
          }
        }
      }

      @include it('lg\:caret-stone-950') {
        @include assert {
          @include output {
            @include lg\:caret-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0c0a09;
            }
          }
        }
      }

      @include it('lg\:caret-red-50') {
        @include assert {
          @include output {
            @include lg\:caret-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fef2f2;
            }
          }
        }
      }

      @include it('lg\:caret-red-100') {
        @include assert {
          @include output {
            @include lg\:caret-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fee2e2;
            }
          }
        }
      }

      @include it('lg\:caret-red-200') {
        @include assert {
          @include output {
            @include lg\:caret-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fecaca;
            }
          }
        }
      }

      @include it('lg\:caret-red-300') {
        @include assert {
          @include output {
            @include lg\:caret-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fca5a5;
            }
          }
        }
      }

      @include it('lg\:caret-red-400') {
        @include assert {
          @include output {
            @include lg\:caret-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f87171;
            }
          }
        }
      }

      @include it('lg\:caret-red-500') {
        @include assert {
          @include output {
            @include lg\:caret-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ef4444;
            }
          }
        }
      }

      @include it('lg\:caret-red-600') {
        @include assert {
          @include output {
            @include lg\:caret-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #dc2626;
            }
          }
        }
      }

      @include it('lg\:caret-red-700') {
        @include assert {
          @include output {
            @include lg\:caret-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #b91c1c;
            }
          }
        }
      }

      @include it('lg\:caret-red-800') {
        @include assert {
          @include output {
            @include lg\:caret-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #991b1b;
            }
          }
        }
      }

      @include it('lg\:caret-red-900') {
        @include assert {
          @include output {
            @include lg\:caret-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #7f1d1d;
            }
          }
        }
      }

      @include it('lg\:caret-red-950') {
        @include assert {
          @include output {
            @include lg\:caret-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #450a0a;
            }
          }
        }
      }

      @include it('lg\:caret-orange-50') {
        @include assert {
          @include output {
            @include lg\:caret-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fff7ed;
            }
          }
        }
      }

      @include it('lg\:caret-orange-100') {
        @include assert {
          @include output {
            @include lg\:caret-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ffedd5;
            }
          }
        }
      }

      @include it('lg\:caret-orange-200') {
        @include assert {
          @include output {
            @include lg\:caret-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fed7aa;
            }
          }
        }
      }

      @include it('lg\:caret-orange-300') {
        @include assert {
          @include output {
            @include lg\:caret-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fdba74;
            }
          }
        }
      }

      @include it('lg\:caret-orange-400') {
        @include assert {
          @include output {
            @include lg\:caret-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fb923c;
            }
          }
        }
      }

      @include it('lg\:caret-orange-500') {
        @include assert {
          @include output {
            @include lg\:caret-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f97316;
            }
          }
        }
      }

      @include it('lg\:caret-orange-600') {
        @include assert {
          @include output {
            @include lg\:caret-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ea580c;
            }
          }
        }
      }

      @include it('lg\:caret-orange-700') {
        @include assert {
          @include output {
            @include lg\:caret-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #c2410c;
            }
          }
        }
      }

      @include it('lg\:caret-orange-800') {
        @include assert {
          @include output {
            @include lg\:caret-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #9a3412;
            }
          }
        }
      }

      @include it('lg\:caret-orange-900') {
        @include assert {
          @include output {
            @include lg\:caret-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #7c2d12;
            }
          }
        }
      }

      @include it('lg\:caret-orange-950') {
        @include assert {
          @include output {
            @include lg\:caret-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #431407;
            }
          }
        }
      }

      @include it('lg\:caret-amber-50') {
        @include assert {
          @include output {
            @include lg\:caret-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fffbeb;
            }
          }
        }
      }

      @include it('lg\:caret-amber-100') {
        @include assert {
          @include output {
            @include lg\:caret-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fef3c7;
            }
          }
        }
      }

      @include it('lg\:caret-amber-200') {
        @include assert {
          @include output {
            @include lg\:caret-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fde68a;
            }
          }
        }
      }

      @include it('lg\:caret-amber-300') {
        @include assert {
          @include output {
            @include lg\:caret-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fcd34d;
            }
          }
        }
      }

      @include it('lg\:caret-amber-400') {
        @include assert {
          @include output {
            @include lg\:caret-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fbbf24;
            }
          }
        }
      }

      @include it('lg\:caret-amber-500') {
        @include assert {
          @include output {
            @include lg\:caret-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f59e0b;
            }
          }
        }
      }

      @include it('lg\:caret-amber-600') {
        @include assert {
          @include output {
            @include lg\:caret-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d97706;
            }
          }
        }
      }

      @include it('lg\:caret-amber-700') {
        @include assert {
          @include output {
            @include lg\:caret-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #b45309;
            }
          }
        }
      }

      @include it('lg\:caret-amber-800') {
        @include assert {
          @include output {
            @include lg\:caret-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #92400e;
            }
          }
        }
      }

      @include it('lg\:caret-amber-900') {
        @include assert {
          @include output {
            @include lg\:caret-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #78350f;
            }
          }
        }
      }

      @include it('lg\:caret-amber-950') {
        @include assert {
          @include output {
            @include lg\:caret-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #451a03;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-50') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fefce8;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-100') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fef9c3;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-200') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fef08a;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-300') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fde047;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-400') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #facc15;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-500') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #eab308;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-600') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ca8a04;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-700') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a16207;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-800') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #854d0e;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-900') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #713f12;
            }
          }
        }
      }

      @include it('lg\:caret-yellow-950') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #422006;
            }
          }
        }
      }

      @include it('lg\:caret-lime-50') {
        @include assert {
          @include output {
            @include lg\:caret-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f7fee7;
            }
          }
        }
      }

      @include it('lg\:caret-lime-100') {
        @include assert {
          @include output {
            @include lg\:caret-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ecfccb;
            }
          }
        }
      }

      @include it('lg\:caret-lime-200') {
        @include assert {
          @include output {
            @include lg\:caret-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d9f99d;
            }
          }
        }
      }

      @include it('lg\:caret-lime-300') {
        @include assert {
          @include output {
            @include lg\:caret-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #bef264;
            }
          }
        }
      }

      @include it('lg\:caret-lime-400') {
        @include assert {
          @include output {
            @include lg\:caret-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a3e635;
            }
          }
        }
      }

      @include it('lg\:caret-lime-500') {
        @include assert {
          @include output {
            @include lg\:caret-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #84cc16;
            }
          }
        }
      }

      @include it('lg\:caret-lime-600') {
        @include assert {
          @include output {
            @include lg\:caret-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #65a30d;
            }
          }
        }
      }

      @include it('lg\:caret-lime-700') {
        @include assert {
          @include output {
            @include lg\:caret-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4d7c0f;
            }
          }
        }
      }

      @include it('lg\:caret-lime-800') {
        @include assert {
          @include output {
            @include lg\:caret-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #3f6212;
            }
          }
        }
      }

      @include it('lg\:caret-lime-900') {
        @include assert {
          @include output {
            @include lg\:caret-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #365314;
            }
          }
        }
      }

      @include it('lg\:caret-lime-950') {
        @include assert {
          @include output {
            @include lg\:caret-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1a2e05;
            }
          }
        }
      }

      @include it('lg\:caret-green-50') {
        @include assert {
          @include output {
            @include lg\:caret-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f0fdf4;
            }
          }
        }
      }

      @include it('lg\:caret-green-100') {
        @include assert {
          @include output {
            @include lg\:caret-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #dcfce7;
            }
          }
        }
      }

      @include it('lg\:caret-green-200') {
        @include assert {
          @include output {
            @include lg\:caret-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #bbf7d0;
            }
          }
        }
      }

      @include it('lg\:caret-green-300') {
        @include assert {
          @include output {
            @include lg\:caret-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #86efac;
            }
          }
        }
      }

      @include it('lg\:caret-green-400') {
        @include assert {
          @include output {
            @include lg\:caret-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4ade80;
            }
          }
        }
      }

      @include it('lg\:caret-green-500') {
        @include assert {
          @include output {
            @include lg\:caret-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #22c55e;
            }
          }
        }
      }

      @include it('lg\:caret-green-600') {
        @include assert {
          @include output {
            @include lg\:caret-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #16a34a;
            }
          }
        }
      }

      @include it('lg\:caret-green-700') {
        @include assert {
          @include output {
            @include lg\:caret-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #15803d;
            }
          }
        }
      }

      @include it('lg\:caret-green-800') {
        @include assert {
          @include output {
            @include lg\:caret-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #166534;
            }
          }
        }
      }

      @include it('lg\:caret-green-900') {
        @include assert {
          @include output {
            @include lg\:caret-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #14532d;
            }
          }
        }
      }

      @include it('lg\:caret-green-950') {
        @include assert {
          @include output {
            @include lg\:caret-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #052e16;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-50') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ecfdf5;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-100') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d1fae5;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-200') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a7f3d0;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-300') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #6ee7b7;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-400') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #34d399;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-500') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #10b981;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-600') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #059669;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-700') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #047857;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-800') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #065f46;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-900') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #064e3b;
            }
          }
        }
      }

      @include it('lg\:caret-emerald-950') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #022c22;
            }
          }
        }
      }

      @include it('lg\:caret-teal-50') {
        @include assert {
          @include output {
            @include lg\:caret-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f0fdfa;
            }
          }
        }
      }

      @include it('lg\:caret-teal-100') {
        @include assert {
          @include output {
            @include lg\:caret-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ccfbf1;
            }
          }
        }
      }

      @include it('lg\:caret-teal-200') {
        @include assert {
          @include output {
            @include lg\:caret-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #99f6e4;
            }
          }
        }
      }

      @include it('lg\:caret-teal-300') {
        @include assert {
          @include output {
            @include lg\:caret-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #5eead4;
            }
          }
        }
      }

      @include it('lg\:caret-teal-400') {
        @include assert {
          @include output {
            @include lg\:caret-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #2dd4bf;
            }
          }
        }
      }

      @include it('lg\:caret-teal-500') {
        @include assert {
          @include output {
            @include lg\:caret-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #14b8a6;
            }
          }
        }
      }

      @include it('lg\:caret-teal-600') {
        @include assert {
          @include output {
            @include lg\:caret-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0d9488;
            }
          }
        }
      }

      @include it('lg\:caret-teal-700') {
        @include assert {
          @include output {
            @include lg\:caret-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0f766e;
            }
          }
        }
      }

      @include it('lg\:caret-teal-800') {
        @include assert {
          @include output {
            @include lg\:caret-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #115e59;
            }
          }
        }
      }

      @include it('lg\:caret-teal-900') {
        @include assert {
          @include output {
            @include lg\:caret-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #134e4a;
            }
          }
        }
      }

      @include it('lg\:caret-teal-950') {
        @include assert {
          @include output {
            @include lg\:caret-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #042f2e;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-50') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ecfeff;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-100') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #cffafe;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-200') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a5f3fc;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-300') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #67e8f9;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-400') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #22d3ee;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-500') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #06b6d4;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-600') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0891b2;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-700') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0e7490;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-800') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #155e75;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-900') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #164e63;
            }
          }
        }
      }

      @include it('lg\:caret-cyan-950') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #083344;
            }
          }
        }
      }

      @include it('lg\:caret-sky-50') {
        @include assert {
          @include output {
            @include lg\:caret-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f0f9ff;
            }
          }
        }
      }

      @include it('lg\:caret-sky-100') {
        @include assert {
          @include output {
            @include lg\:caret-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e0f2fe;
            }
          }
        }
      }

      @include it('lg\:caret-sky-200') {
        @include assert {
          @include output {
            @include lg\:caret-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #bae6fd;
            }
          }
        }
      }

      @include it('lg\:caret-sky-300') {
        @include assert {
          @include output {
            @include lg\:caret-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #7dd3fc;
            }
          }
        }
      }

      @include it('lg\:caret-sky-400') {
        @include assert {
          @include output {
            @include lg\:caret-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #38bdf8;
            }
          }
        }
      }

      @include it('lg\:caret-sky-500') {
        @include assert {
          @include output {
            @include lg\:caret-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0ea5e9;
            }
          }
        }
      }

      @include it('lg\:caret-sky-600') {
        @include assert {
          @include output {
            @include lg\:caret-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0284c7;
            }
          }
        }
      }

      @include it('lg\:caret-sky-700') {
        @include assert {
          @include output {
            @include lg\:caret-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0369a1;
            }
          }
        }
      }

      @include it('lg\:caret-sky-800') {
        @include assert {
          @include output {
            @include lg\:caret-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #075985;
            }
          }
        }
      }

      @include it('lg\:caret-sky-900') {
        @include assert {
          @include output {
            @include lg\:caret-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #0c4a6e;
            }
          }
        }
      }

      @include it('lg\:caret-sky-950') {
        @include assert {
          @include output {
            @include lg\:caret-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #082f49;
            }
          }
        }
      }

      @include it('lg\:caret-blue-50') {
        @include assert {
          @include output {
            @include lg\:caret-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #eff6ff;
            }
          }
        }
      }

      @include it('lg\:caret-blue-100') {
        @include assert {
          @include output {
            @include lg\:caret-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #dbeafe;
            }
          }
        }
      }

      @include it('lg\:caret-blue-200') {
        @include assert {
          @include output {
            @include lg\:caret-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #bfdbfe;
            }
          }
        }
      }

      @include it('lg\:caret-blue-300') {
        @include assert {
          @include output {
            @include lg\:caret-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #93c5fd;
            }
          }
        }
      }

      @include it('lg\:caret-blue-400') {
        @include assert {
          @include output {
            @include lg\:caret-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #60a5fa;
            }
          }
        }
      }

      @include it('lg\:caret-blue-500') {
        @include assert {
          @include output {
            @include lg\:caret-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #3b82f6;
            }
          }
        }
      }

      @include it('lg\:caret-blue-600') {
        @include assert {
          @include output {
            @include lg\:caret-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #2563eb;
            }
          }
        }
      }

      @include it('lg\:caret-blue-700') {
        @include assert {
          @include output {
            @include lg\:caret-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1d4ed8;
            }
          }
        }
      }

      @include it('lg\:caret-blue-800') {
        @include assert {
          @include output {
            @include lg\:caret-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1e40af;
            }
          }
        }
      }

      @include it('lg\:caret-blue-900') {
        @include assert {
          @include output {
            @include lg\:caret-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1e3a8a;
            }
          }
        }
      }

      @include it('lg\:caret-blue-950') {
        @include assert {
          @include output {
            @include lg\:caret-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #172554;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-50') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #eef2ff;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-100') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e0e7ff;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-200') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #c7d2fe;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-300') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a5b4fc;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-400') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #818cf8;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-500') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #6366f1;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-600') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4f46e5;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-700') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4338ca;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-800') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #3730a3;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-900') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #312e81;
            }
          }
        }
      }

      @include it('lg\:caret-indigo-950') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #1e1b4b;
            }
          }
        }
      }

      @include it('lg\:caret-violet-50') {
        @include assert {
          @include output {
            @include lg\:caret-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f5f3ff;
            }
          }
        }
      }

      @include it('lg\:caret-violet-100') {
        @include assert {
          @include output {
            @include lg\:caret-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ede9fe;
            }
          }
        }
      }

      @include it('lg\:caret-violet-200') {
        @include assert {
          @include output {
            @include lg\:caret-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ddd6fe;
            }
          }
        }
      }

      @include it('lg\:caret-violet-300') {
        @include assert {
          @include output {
            @include lg\:caret-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #c4b5fd;
            }
          }
        }
      }

      @include it('lg\:caret-violet-400') {
        @include assert {
          @include output {
            @include lg\:caret-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a78bfa;
            }
          }
        }
      }

      @include it('lg\:caret-violet-500') {
        @include assert {
          @include output {
            @include lg\:caret-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #8b5cf6;
            }
          }
        }
      }

      @include it('lg\:caret-violet-600') {
        @include assert {
          @include output {
            @include lg\:caret-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #7c3aed;
            }
          }
        }
      }

      @include it('lg\:caret-violet-700') {
        @include assert {
          @include output {
            @include lg\:caret-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #6d28d9;
            }
          }
        }
      }

      @include it('lg\:caret-violet-800') {
        @include assert {
          @include output {
            @include lg\:caret-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #5b21b6;
            }
          }
        }
      }

      @include it('lg\:caret-violet-900') {
        @include assert {
          @include output {
            @include lg\:caret-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4c1d95;
            }
          }
        }
      }

      @include it('lg\:caret-violet-950') {
        @include assert {
          @include output {
            @include lg\:caret-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #2e1065;
            }
          }
        }
      }

      @include it('lg\:caret-purple-50') {
        @include assert {
          @include output {
            @include lg\:caret-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #faf5ff;
            }
          }
        }
      }

      @include it('lg\:caret-purple-100') {
        @include assert {
          @include output {
            @include lg\:caret-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f3e8ff;
            }
          }
        }
      }

      @include it('lg\:caret-purple-200') {
        @include assert {
          @include output {
            @include lg\:caret-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e9d5ff;
            }
          }
        }
      }

      @include it('lg\:caret-purple-300') {
        @include assert {
          @include output {
            @include lg\:caret-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d8b4fe;
            }
          }
        }
      }

      @include it('lg\:caret-purple-400') {
        @include assert {
          @include output {
            @include lg\:caret-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #c084fc;
            }
          }
        }
      }

      @include it('lg\:caret-purple-500') {
        @include assert {
          @include output {
            @include lg\:caret-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a855f7;
            }
          }
        }
      }

      @include it('lg\:caret-purple-600') {
        @include assert {
          @include output {
            @include lg\:caret-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #9333ea;
            }
          }
        }
      }

      @include it('lg\:caret-purple-700') {
        @include assert {
          @include output {
            @include lg\:caret-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #7e22ce;
            }
          }
        }
      }

      @include it('lg\:caret-purple-800') {
        @include assert {
          @include output {
            @include lg\:caret-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #6b21a8;
            }
          }
        }
      }

      @include it('lg\:caret-purple-900') {
        @include assert {
          @include output {
            @include lg\:caret-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #581c87;
            }
          }
        }
      }

      @include it('lg\:caret-purple-950') {
        @include assert {
          @include output {
            @include lg\:caret-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #3b0764;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-50') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fdf4ff;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-100') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fae8ff;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-200') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f5d0fe;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-300') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f0abfc;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-400') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e879f9;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-500') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #d946ef;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-600') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #c026d3;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-700') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #a21caf;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-800') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #86198f;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-900') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #701a75;
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-950') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4a044e;
            }
          }
        }
      }

      @include it('lg\:caret-pink-50') {
        @include assert {
          @include output {
            @include lg\:caret-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fdf2f8;
            }
          }
        }
      }

      @include it('lg\:caret-pink-100') {
        @include assert {
          @include output {
            @include lg\:caret-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fce7f3;
            }
          }
        }
      }

      @include it('lg\:caret-pink-200') {
        @include assert {
          @include output {
            @include lg\:caret-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fbcfe8;
            }
          }
        }
      }

      @include it('lg\:caret-pink-300') {
        @include assert {
          @include output {
            @include lg\:caret-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f9a8d4;
            }
          }
        }
      }

      @include it('lg\:caret-pink-400') {
        @include assert {
          @include output {
            @include lg\:caret-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f472b6;
            }
          }
        }
      }

      @include it('lg\:caret-pink-500') {
        @include assert {
          @include output {
            @include lg\:caret-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ec4899;
            }
          }
        }
      }

      @include it('lg\:caret-pink-600') {
        @include assert {
          @include output {
            @include lg\:caret-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #db2777;
            }
          }
        }
      }

      @include it('lg\:caret-pink-700') {
        @include assert {
          @include output {
            @include lg\:caret-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #be185d;
            }
          }
        }
      }

      @include it('lg\:caret-pink-800') {
        @include assert {
          @include output {
            @include lg\:caret-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #9d174d;
            }
          }
        }
      }

      @include it('lg\:caret-pink-900') {
        @include assert {
          @include output {
            @include lg\:caret-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #831843;
            }
          }
        }
      }

      @include it('lg\:caret-pink-950') {
        @include assert {
          @include output {
            @include lg\:caret-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #500724;
            }
          }
        }
      }

      @include it('lg\:caret-rose-50') {
        @include assert {
          @include output {
            @include lg\:caret-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fff1f2;
            }
          }
        }
      }

      @include it('lg\:caret-rose-100') {
        @include assert {
          @include output {
            @include lg\:caret-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #ffe4e6;
            }
          }
        }
      }

      @include it('lg\:caret-rose-200') {
        @include assert {
          @include output {
            @include lg\:caret-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fecdd3;
            }
          }
        }
      }

      @include it('lg\:caret-rose-300') {
        @include assert {
          @include output {
            @include lg\:caret-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fda4af;
            }
          }
        }
      }

      @include it('lg\:caret-rose-400') {
        @include assert {
          @include output {
            @include lg\:caret-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #fb7185;
            }
          }
        }
      }

      @include it('lg\:caret-rose-500') {
        @include assert {
          @include output {
            @include lg\:caret-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #f43f5e;
            }
          }
        }
      }

      @include it('lg\:caret-rose-600') {
        @include assert {
          @include output {
            @include lg\:caret-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #e11d48;
            }
          }
        }
      }

      @include it('lg\:caret-rose-700') {
        @include assert {
          @include output {
            @include lg\:caret-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #be123c;
            }
          }
        }
      }

      @include it('lg\:caret-rose-800') {
        @include assert {
          @include output {
            @include lg\:caret-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #9f1239;
            }
          }
        }
      }

      @include it('lg\:caret-rose-900') {
        @include assert {
          @include output {
            @include lg\:caret-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #881337;
            }
          }
        }
      }

      @include it('lg\:caret-rose-950') {
        @include assert {
          @include output {
            @include lg\:caret-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #4c0519;
            }
          }
        }
      }

      @include it('lg\:caret-transparent\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-transparent\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(transparent, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-black\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-black\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#000, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-white\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-white\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f8fafc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f1f5f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e2e8f0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#cbd5e1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#94a3b8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#64748b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#475569, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#334155, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1e293b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0f172a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-slate-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-slate-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#020617, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f9fafb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f3f4f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e5e7eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d1d5db, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#9ca3af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#6b7280, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4b5563, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#374151, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1f2937, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#111827, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-gray-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-gray-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#030712, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f4f4f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e4e4e7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d4d4d8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a1a1aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#71717a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#52525b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#3f3f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#27272a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#18181b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-zinc-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-zinc-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#09090b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f5f5f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e5e5e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d4d4d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a3a3a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#737373, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#525252, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#404040, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#262626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#171717, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-neutral-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-neutral-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0a0a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fafaf9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f5f5f4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e7e5e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d6d3d1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a8a29e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#78716c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#57534e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#44403c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#292524, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1c1917, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-stone-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-stone-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0c0a09, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fef2f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fee2e2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fecaca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fca5a5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f87171, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ef4444, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#dc2626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#b91c1c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#991b1b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#7f1d1d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-red-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-red-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#450a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fff7ed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ffedd5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fed7aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fdba74, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fb923c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f97316, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ea580c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#c2410c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#9a3412, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#7c2d12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-orange-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-orange-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#431407, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fffbeb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fef3c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fde68a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fcd34d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fbbf24, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f59e0b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d97706, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#b45309, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#92400e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#78350f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-amber-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-amber-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#451a03, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fefce8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fef9c3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fef08a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fde047, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#facc15, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#eab308, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ca8a04, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a16207, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#854d0e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#713f12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-yellow-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-yellow-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#422006, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f7fee7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ecfccb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d9f99d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#bef264, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a3e635, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#84cc16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#65a30d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4d7c0f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#3f6212, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#365314, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-lime-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-lime-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1a2e05, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f0fdf4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#dcfce7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#bbf7d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#86efac, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4ade80, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#22c55e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#16a34a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#15803d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#166534, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#14532d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-green-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-green-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#052e16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ecfdf5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d1fae5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a7f3d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#6ee7b7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#34d399, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#10b981, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#059669, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#047857, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#065f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#064e3b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-emerald-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-emerald-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#022c22, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f0fdfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ccfbf1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#99f6e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#5eead4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#2dd4bf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#14b8a6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0d9488, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0f766e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#115e59, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#134e4a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-teal-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-teal-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#042f2e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ecfeff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#cffafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a5f3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#67e8f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#22d3ee, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#06b6d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0891b2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0e7490, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#155e75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#164e63, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-cyan-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-cyan-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#083344, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f0f9ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e0f2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#bae6fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#7dd3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#38bdf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0ea5e9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0284c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0369a1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#075985, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#0c4a6e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-sky-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-sky-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#082f49, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#eff6ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#dbeafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#bfdbfe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#93c5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#60a5fa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#3b82f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#2563eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1d4ed8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1e40af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1e3a8a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-blue-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-blue-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#172554, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#eef2ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e0e7ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#c7d2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a5b4fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#818cf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#6366f1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4f46e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4338ca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#3730a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#312e81, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-indigo-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-indigo-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#1e1b4b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f5f3ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ede9fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ddd6fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#c4b5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a78bfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#8b5cf6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#7c3aed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#6d28d9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#5b21b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4c1d95, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-violet-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-violet-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#2e1065, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#faf5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f3e8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e9d5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d8b4fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#c084fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a855f7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#9333ea, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#7e22ce, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#6b21a8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#581c87, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-purple-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-purple-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#3b0764, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fdf4ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fae8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f5d0fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f0abfc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e879f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#d946ef, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#c026d3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#a21caf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#86198f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#701a75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-fuchsia-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-fuchsia-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4a044e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fdf2f8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fce7f3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fbcfe8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f9a8d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f472b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ec4899, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#db2777, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#be185d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#9d174d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#831843, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-pink-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-pink-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#500724, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-50\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fff1f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-100\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#ffe4e6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-200\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fecdd3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-300\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fda4af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-400\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#fb7185, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-500\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#f43f5e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-600\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#e11d48, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-700\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#be123c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-800\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#9f1239, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-900\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#881337, $alpha: 0.11);
            }
          }
        }
      }

      @include it('lg\:caret-rose-950\/(0.11)') {
        @include assert {
          @include output {
            @include lg\:caret-rose-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: color.change(#4c0519, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-inherit') {
        @include assert {
          @include output {
            @include xl\:caret-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: inherit;
            }
          }
        }
      }

      @include it('xl\:caret-current') {
        @include assert {
          @include output {
            @include xl\:caret-current;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: currentColor;
            }
          }
        }
      }

      @include it('xl\:caret-transparent') {
        @include assert {
          @include output {
            @include xl\:caret-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: transparent;
            }
          }
        }
      }

      @include it('xl\:caret-black') {
        @include assert {
          @include output {
            @include xl\:caret-black;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #000;
            }
          }
        }
      }

      @include it('xl\:caret-white') {
        @include assert {
          @include output {
            @include xl\:caret-white;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fff;
            }
          }
        }
      }

      @include it('xl\:caret-slate-50') {
        @include assert {
          @include output {
            @include xl\:caret-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f8fafc;
            }
          }
        }
      }

      @include it('xl\:caret-slate-100') {
        @include assert {
          @include output {
            @include xl\:caret-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f1f5f9;
            }
          }
        }
      }

      @include it('xl\:caret-slate-200') {
        @include assert {
          @include output {
            @include xl\:caret-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e2e8f0;
            }
          }
        }
      }

      @include it('xl\:caret-slate-300') {
        @include assert {
          @include output {
            @include xl\:caret-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #cbd5e1;
            }
          }
        }
      }

      @include it('xl\:caret-slate-400') {
        @include assert {
          @include output {
            @include xl\:caret-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #94a3b8;
            }
          }
        }
      }

      @include it('xl\:caret-slate-500') {
        @include assert {
          @include output {
            @include xl\:caret-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #64748b;
            }
          }
        }
      }

      @include it('xl\:caret-slate-600') {
        @include assert {
          @include output {
            @include xl\:caret-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #475569;
            }
          }
        }
      }

      @include it('xl\:caret-slate-700') {
        @include assert {
          @include output {
            @include xl\:caret-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #334155;
            }
          }
        }
      }

      @include it('xl\:caret-slate-800') {
        @include assert {
          @include output {
            @include xl\:caret-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1e293b;
            }
          }
        }
      }

      @include it('xl\:caret-slate-900') {
        @include assert {
          @include output {
            @include xl\:caret-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0f172a;
            }
          }
        }
      }

      @include it('xl\:caret-slate-950') {
        @include assert {
          @include output {
            @include xl\:caret-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #020617;
            }
          }
        }
      }

      @include it('xl\:caret-gray-50') {
        @include assert {
          @include output {
            @include xl\:caret-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f9fafb;
            }
          }
        }
      }

      @include it('xl\:caret-gray-100') {
        @include assert {
          @include output {
            @include xl\:caret-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f3f4f6;
            }
          }
        }
      }

      @include it('xl\:caret-gray-200') {
        @include assert {
          @include output {
            @include xl\:caret-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e5e7eb;
            }
          }
        }
      }

      @include it('xl\:caret-gray-300') {
        @include assert {
          @include output {
            @include xl\:caret-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d1d5db;
            }
          }
        }
      }

      @include it('xl\:caret-gray-400') {
        @include assert {
          @include output {
            @include xl\:caret-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #9ca3af;
            }
          }
        }
      }

      @include it('xl\:caret-gray-500') {
        @include assert {
          @include output {
            @include xl\:caret-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #6b7280;
            }
          }
        }
      }

      @include it('xl\:caret-gray-600') {
        @include assert {
          @include output {
            @include xl\:caret-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4b5563;
            }
          }
        }
      }

      @include it('xl\:caret-gray-700') {
        @include assert {
          @include output {
            @include xl\:caret-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #374151;
            }
          }
        }
      }

      @include it('xl\:caret-gray-800') {
        @include assert {
          @include output {
            @include xl\:caret-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1f2937;
            }
          }
        }
      }

      @include it('xl\:caret-gray-900') {
        @include assert {
          @include output {
            @include xl\:caret-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #111827;
            }
          }
        }
      }

      @include it('xl\:caret-gray-950') {
        @include assert {
          @include output {
            @include xl\:caret-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #030712;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-50') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-100') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f4f4f5;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-200') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e4e4e7;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-300') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d4d4d8;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-400') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a1a1aa;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-500') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #71717a;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-600') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #52525b;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-700') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #3f3f46;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-800') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #27272a;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-900') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #18181b;
            }
          }
        }
      }

      @include it('xl\:caret-zinc-950') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #09090b;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-50') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-100') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f5f5f5;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-200') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e5e5e5;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-300') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d4d4d4;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-400') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a3a3a3;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-500') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #737373;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-600') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #525252;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-700') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #404040;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-800') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #262626;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-900') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #171717;
            }
          }
        }
      }

      @include it('xl\:caret-neutral-950') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0a0a0a;
            }
          }
        }
      }

      @include it('xl\:caret-stone-50') {
        @include assert {
          @include output {
            @include xl\:caret-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fafaf9;
            }
          }
        }
      }

      @include it('xl\:caret-stone-100') {
        @include assert {
          @include output {
            @include xl\:caret-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f5f5f4;
            }
          }
        }
      }

      @include it('xl\:caret-stone-200') {
        @include assert {
          @include output {
            @include xl\:caret-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e7e5e4;
            }
          }
        }
      }

      @include it('xl\:caret-stone-300') {
        @include assert {
          @include output {
            @include xl\:caret-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d6d3d1;
            }
          }
        }
      }

      @include it('xl\:caret-stone-400') {
        @include assert {
          @include output {
            @include xl\:caret-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a8a29e;
            }
          }
        }
      }

      @include it('xl\:caret-stone-500') {
        @include assert {
          @include output {
            @include xl\:caret-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #78716c;
            }
          }
        }
      }

      @include it('xl\:caret-stone-600') {
        @include assert {
          @include output {
            @include xl\:caret-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #57534e;
            }
          }
        }
      }

      @include it('xl\:caret-stone-700') {
        @include assert {
          @include output {
            @include xl\:caret-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #44403c;
            }
          }
        }
      }

      @include it('xl\:caret-stone-800') {
        @include assert {
          @include output {
            @include xl\:caret-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #292524;
            }
          }
        }
      }

      @include it('xl\:caret-stone-900') {
        @include assert {
          @include output {
            @include xl\:caret-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1c1917;
            }
          }
        }
      }

      @include it('xl\:caret-stone-950') {
        @include assert {
          @include output {
            @include xl\:caret-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0c0a09;
            }
          }
        }
      }

      @include it('xl\:caret-red-50') {
        @include assert {
          @include output {
            @include xl\:caret-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fef2f2;
            }
          }
        }
      }

      @include it('xl\:caret-red-100') {
        @include assert {
          @include output {
            @include xl\:caret-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fee2e2;
            }
          }
        }
      }

      @include it('xl\:caret-red-200') {
        @include assert {
          @include output {
            @include xl\:caret-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fecaca;
            }
          }
        }
      }

      @include it('xl\:caret-red-300') {
        @include assert {
          @include output {
            @include xl\:caret-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fca5a5;
            }
          }
        }
      }

      @include it('xl\:caret-red-400') {
        @include assert {
          @include output {
            @include xl\:caret-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f87171;
            }
          }
        }
      }

      @include it('xl\:caret-red-500') {
        @include assert {
          @include output {
            @include xl\:caret-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ef4444;
            }
          }
        }
      }

      @include it('xl\:caret-red-600') {
        @include assert {
          @include output {
            @include xl\:caret-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #dc2626;
            }
          }
        }
      }

      @include it('xl\:caret-red-700') {
        @include assert {
          @include output {
            @include xl\:caret-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #b91c1c;
            }
          }
        }
      }

      @include it('xl\:caret-red-800') {
        @include assert {
          @include output {
            @include xl\:caret-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #991b1b;
            }
          }
        }
      }

      @include it('xl\:caret-red-900') {
        @include assert {
          @include output {
            @include xl\:caret-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #7f1d1d;
            }
          }
        }
      }

      @include it('xl\:caret-red-950') {
        @include assert {
          @include output {
            @include xl\:caret-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #450a0a;
            }
          }
        }
      }

      @include it('xl\:caret-orange-50') {
        @include assert {
          @include output {
            @include xl\:caret-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fff7ed;
            }
          }
        }
      }

      @include it('xl\:caret-orange-100') {
        @include assert {
          @include output {
            @include xl\:caret-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ffedd5;
            }
          }
        }
      }

      @include it('xl\:caret-orange-200') {
        @include assert {
          @include output {
            @include xl\:caret-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fed7aa;
            }
          }
        }
      }

      @include it('xl\:caret-orange-300') {
        @include assert {
          @include output {
            @include xl\:caret-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fdba74;
            }
          }
        }
      }

      @include it('xl\:caret-orange-400') {
        @include assert {
          @include output {
            @include xl\:caret-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fb923c;
            }
          }
        }
      }

      @include it('xl\:caret-orange-500') {
        @include assert {
          @include output {
            @include xl\:caret-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f97316;
            }
          }
        }
      }

      @include it('xl\:caret-orange-600') {
        @include assert {
          @include output {
            @include xl\:caret-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ea580c;
            }
          }
        }
      }

      @include it('xl\:caret-orange-700') {
        @include assert {
          @include output {
            @include xl\:caret-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #c2410c;
            }
          }
        }
      }

      @include it('xl\:caret-orange-800') {
        @include assert {
          @include output {
            @include xl\:caret-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #9a3412;
            }
          }
        }
      }

      @include it('xl\:caret-orange-900') {
        @include assert {
          @include output {
            @include xl\:caret-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #7c2d12;
            }
          }
        }
      }

      @include it('xl\:caret-orange-950') {
        @include assert {
          @include output {
            @include xl\:caret-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #431407;
            }
          }
        }
      }

      @include it('xl\:caret-amber-50') {
        @include assert {
          @include output {
            @include xl\:caret-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fffbeb;
            }
          }
        }
      }

      @include it('xl\:caret-amber-100') {
        @include assert {
          @include output {
            @include xl\:caret-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fef3c7;
            }
          }
        }
      }

      @include it('xl\:caret-amber-200') {
        @include assert {
          @include output {
            @include xl\:caret-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fde68a;
            }
          }
        }
      }

      @include it('xl\:caret-amber-300') {
        @include assert {
          @include output {
            @include xl\:caret-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fcd34d;
            }
          }
        }
      }

      @include it('xl\:caret-amber-400') {
        @include assert {
          @include output {
            @include xl\:caret-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fbbf24;
            }
          }
        }
      }

      @include it('xl\:caret-amber-500') {
        @include assert {
          @include output {
            @include xl\:caret-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f59e0b;
            }
          }
        }
      }

      @include it('xl\:caret-amber-600') {
        @include assert {
          @include output {
            @include xl\:caret-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d97706;
            }
          }
        }
      }

      @include it('xl\:caret-amber-700') {
        @include assert {
          @include output {
            @include xl\:caret-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #b45309;
            }
          }
        }
      }

      @include it('xl\:caret-amber-800') {
        @include assert {
          @include output {
            @include xl\:caret-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #92400e;
            }
          }
        }
      }

      @include it('xl\:caret-amber-900') {
        @include assert {
          @include output {
            @include xl\:caret-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #78350f;
            }
          }
        }
      }

      @include it('xl\:caret-amber-950') {
        @include assert {
          @include output {
            @include xl\:caret-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #451a03;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-50') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fefce8;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-100') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fef9c3;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-200') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fef08a;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-300') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fde047;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-400') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #facc15;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-500') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #eab308;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-600') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ca8a04;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-700') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a16207;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-800') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #854d0e;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-900') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #713f12;
            }
          }
        }
      }

      @include it('xl\:caret-yellow-950') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #422006;
            }
          }
        }
      }

      @include it('xl\:caret-lime-50') {
        @include assert {
          @include output {
            @include xl\:caret-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f7fee7;
            }
          }
        }
      }

      @include it('xl\:caret-lime-100') {
        @include assert {
          @include output {
            @include xl\:caret-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ecfccb;
            }
          }
        }
      }

      @include it('xl\:caret-lime-200') {
        @include assert {
          @include output {
            @include xl\:caret-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d9f99d;
            }
          }
        }
      }

      @include it('xl\:caret-lime-300') {
        @include assert {
          @include output {
            @include xl\:caret-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #bef264;
            }
          }
        }
      }

      @include it('xl\:caret-lime-400') {
        @include assert {
          @include output {
            @include xl\:caret-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a3e635;
            }
          }
        }
      }

      @include it('xl\:caret-lime-500') {
        @include assert {
          @include output {
            @include xl\:caret-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #84cc16;
            }
          }
        }
      }

      @include it('xl\:caret-lime-600') {
        @include assert {
          @include output {
            @include xl\:caret-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #65a30d;
            }
          }
        }
      }

      @include it('xl\:caret-lime-700') {
        @include assert {
          @include output {
            @include xl\:caret-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4d7c0f;
            }
          }
        }
      }

      @include it('xl\:caret-lime-800') {
        @include assert {
          @include output {
            @include xl\:caret-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #3f6212;
            }
          }
        }
      }

      @include it('xl\:caret-lime-900') {
        @include assert {
          @include output {
            @include xl\:caret-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #365314;
            }
          }
        }
      }

      @include it('xl\:caret-lime-950') {
        @include assert {
          @include output {
            @include xl\:caret-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1a2e05;
            }
          }
        }
      }

      @include it('xl\:caret-green-50') {
        @include assert {
          @include output {
            @include xl\:caret-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f0fdf4;
            }
          }
        }
      }

      @include it('xl\:caret-green-100') {
        @include assert {
          @include output {
            @include xl\:caret-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #dcfce7;
            }
          }
        }
      }

      @include it('xl\:caret-green-200') {
        @include assert {
          @include output {
            @include xl\:caret-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #bbf7d0;
            }
          }
        }
      }

      @include it('xl\:caret-green-300') {
        @include assert {
          @include output {
            @include xl\:caret-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #86efac;
            }
          }
        }
      }

      @include it('xl\:caret-green-400') {
        @include assert {
          @include output {
            @include xl\:caret-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4ade80;
            }
          }
        }
      }

      @include it('xl\:caret-green-500') {
        @include assert {
          @include output {
            @include xl\:caret-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #22c55e;
            }
          }
        }
      }

      @include it('xl\:caret-green-600') {
        @include assert {
          @include output {
            @include xl\:caret-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #16a34a;
            }
          }
        }
      }

      @include it('xl\:caret-green-700') {
        @include assert {
          @include output {
            @include xl\:caret-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #15803d;
            }
          }
        }
      }

      @include it('xl\:caret-green-800') {
        @include assert {
          @include output {
            @include xl\:caret-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #166534;
            }
          }
        }
      }

      @include it('xl\:caret-green-900') {
        @include assert {
          @include output {
            @include xl\:caret-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #14532d;
            }
          }
        }
      }

      @include it('xl\:caret-green-950') {
        @include assert {
          @include output {
            @include xl\:caret-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #052e16;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-50') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ecfdf5;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-100') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d1fae5;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-200') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a7f3d0;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-300') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #6ee7b7;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-400') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #34d399;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-500') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #10b981;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-600') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #059669;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-700') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #047857;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-800') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #065f46;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-900') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #064e3b;
            }
          }
        }
      }

      @include it('xl\:caret-emerald-950') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #022c22;
            }
          }
        }
      }

      @include it('xl\:caret-teal-50') {
        @include assert {
          @include output {
            @include xl\:caret-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f0fdfa;
            }
          }
        }
      }

      @include it('xl\:caret-teal-100') {
        @include assert {
          @include output {
            @include xl\:caret-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ccfbf1;
            }
          }
        }
      }

      @include it('xl\:caret-teal-200') {
        @include assert {
          @include output {
            @include xl\:caret-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #99f6e4;
            }
          }
        }
      }

      @include it('xl\:caret-teal-300') {
        @include assert {
          @include output {
            @include xl\:caret-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #5eead4;
            }
          }
        }
      }

      @include it('xl\:caret-teal-400') {
        @include assert {
          @include output {
            @include xl\:caret-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #2dd4bf;
            }
          }
        }
      }

      @include it('xl\:caret-teal-500') {
        @include assert {
          @include output {
            @include xl\:caret-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #14b8a6;
            }
          }
        }
      }

      @include it('xl\:caret-teal-600') {
        @include assert {
          @include output {
            @include xl\:caret-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0d9488;
            }
          }
        }
      }

      @include it('xl\:caret-teal-700') {
        @include assert {
          @include output {
            @include xl\:caret-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0f766e;
            }
          }
        }
      }

      @include it('xl\:caret-teal-800') {
        @include assert {
          @include output {
            @include xl\:caret-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #115e59;
            }
          }
        }
      }

      @include it('xl\:caret-teal-900') {
        @include assert {
          @include output {
            @include xl\:caret-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #134e4a;
            }
          }
        }
      }

      @include it('xl\:caret-teal-950') {
        @include assert {
          @include output {
            @include xl\:caret-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #042f2e;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-50') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ecfeff;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-100') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #cffafe;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-200') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a5f3fc;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-300') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #67e8f9;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-400') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #22d3ee;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-500') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #06b6d4;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-600') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0891b2;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-700') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0e7490;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-800') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #155e75;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-900') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #164e63;
            }
          }
        }
      }

      @include it('xl\:caret-cyan-950') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #083344;
            }
          }
        }
      }

      @include it('xl\:caret-sky-50') {
        @include assert {
          @include output {
            @include xl\:caret-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f0f9ff;
            }
          }
        }
      }

      @include it('xl\:caret-sky-100') {
        @include assert {
          @include output {
            @include xl\:caret-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e0f2fe;
            }
          }
        }
      }

      @include it('xl\:caret-sky-200') {
        @include assert {
          @include output {
            @include xl\:caret-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #bae6fd;
            }
          }
        }
      }

      @include it('xl\:caret-sky-300') {
        @include assert {
          @include output {
            @include xl\:caret-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #7dd3fc;
            }
          }
        }
      }

      @include it('xl\:caret-sky-400') {
        @include assert {
          @include output {
            @include xl\:caret-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #38bdf8;
            }
          }
        }
      }

      @include it('xl\:caret-sky-500') {
        @include assert {
          @include output {
            @include xl\:caret-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0ea5e9;
            }
          }
        }
      }

      @include it('xl\:caret-sky-600') {
        @include assert {
          @include output {
            @include xl\:caret-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0284c7;
            }
          }
        }
      }

      @include it('xl\:caret-sky-700') {
        @include assert {
          @include output {
            @include xl\:caret-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0369a1;
            }
          }
        }
      }

      @include it('xl\:caret-sky-800') {
        @include assert {
          @include output {
            @include xl\:caret-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #075985;
            }
          }
        }
      }

      @include it('xl\:caret-sky-900') {
        @include assert {
          @include output {
            @include xl\:caret-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #0c4a6e;
            }
          }
        }
      }

      @include it('xl\:caret-sky-950') {
        @include assert {
          @include output {
            @include xl\:caret-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #082f49;
            }
          }
        }
      }

      @include it('xl\:caret-blue-50') {
        @include assert {
          @include output {
            @include xl\:caret-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #eff6ff;
            }
          }
        }
      }

      @include it('xl\:caret-blue-100') {
        @include assert {
          @include output {
            @include xl\:caret-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #dbeafe;
            }
          }
        }
      }

      @include it('xl\:caret-blue-200') {
        @include assert {
          @include output {
            @include xl\:caret-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #bfdbfe;
            }
          }
        }
      }

      @include it('xl\:caret-blue-300') {
        @include assert {
          @include output {
            @include xl\:caret-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #93c5fd;
            }
          }
        }
      }

      @include it('xl\:caret-blue-400') {
        @include assert {
          @include output {
            @include xl\:caret-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #60a5fa;
            }
          }
        }
      }

      @include it('xl\:caret-blue-500') {
        @include assert {
          @include output {
            @include xl\:caret-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #3b82f6;
            }
          }
        }
      }

      @include it('xl\:caret-blue-600') {
        @include assert {
          @include output {
            @include xl\:caret-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #2563eb;
            }
          }
        }
      }

      @include it('xl\:caret-blue-700') {
        @include assert {
          @include output {
            @include xl\:caret-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1d4ed8;
            }
          }
        }
      }

      @include it('xl\:caret-blue-800') {
        @include assert {
          @include output {
            @include xl\:caret-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1e40af;
            }
          }
        }
      }

      @include it('xl\:caret-blue-900') {
        @include assert {
          @include output {
            @include xl\:caret-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1e3a8a;
            }
          }
        }
      }

      @include it('xl\:caret-blue-950') {
        @include assert {
          @include output {
            @include xl\:caret-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #172554;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-50') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #eef2ff;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-100') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e0e7ff;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-200') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #c7d2fe;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-300') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a5b4fc;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-400') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #818cf8;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-500') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #6366f1;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-600') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4f46e5;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-700') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4338ca;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-800') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #3730a3;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-900') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #312e81;
            }
          }
        }
      }

      @include it('xl\:caret-indigo-950') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #1e1b4b;
            }
          }
        }
      }

      @include it('xl\:caret-violet-50') {
        @include assert {
          @include output {
            @include xl\:caret-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f5f3ff;
            }
          }
        }
      }

      @include it('xl\:caret-violet-100') {
        @include assert {
          @include output {
            @include xl\:caret-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ede9fe;
            }
          }
        }
      }

      @include it('xl\:caret-violet-200') {
        @include assert {
          @include output {
            @include xl\:caret-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ddd6fe;
            }
          }
        }
      }

      @include it('xl\:caret-violet-300') {
        @include assert {
          @include output {
            @include xl\:caret-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #c4b5fd;
            }
          }
        }
      }

      @include it('xl\:caret-violet-400') {
        @include assert {
          @include output {
            @include xl\:caret-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a78bfa;
            }
          }
        }
      }

      @include it('xl\:caret-violet-500') {
        @include assert {
          @include output {
            @include xl\:caret-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #8b5cf6;
            }
          }
        }
      }

      @include it('xl\:caret-violet-600') {
        @include assert {
          @include output {
            @include xl\:caret-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #7c3aed;
            }
          }
        }
      }

      @include it('xl\:caret-violet-700') {
        @include assert {
          @include output {
            @include xl\:caret-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #6d28d9;
            }
          }
        }
      }

      @include it('xl\:caret-violet-800') {
        @include assert {
          @include output {
            @include xl\:caret-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #5b21b6;
            }
          }
        }
      }

      @include it('xl\:caret-violet-900') {
        @include assert {
          @include output {
            @include xl\:caret-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4c1d95;
            }
          }
        }
      }

      @include it('xl\:caret-violet-950') {
        @include assert {
          @include output {
            @include xl\:caret-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #2e1065;
            }
          }
        }
      }

      @include it('xl\:caret-purple-50') {
        @include assert {
          @include output {
            @include xl\:caret-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #faf5ff;
            }
          }
        }
      }

      @include it('xl\:caret-purple-100') {
        @include assert {
          @include output {
            @include xl\:caret-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f3e8ff;
            }
          }
        }
      }

      @include it('xl\:caret-purple-200') {
        @include assert {
          @include output {
            @include xl\:caret-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e9d5ff;
            }
          }
        }
      }

      @include it('xl\:caret-purple-300') {
        @include assert {
          @include output {
            @include xl\:caret-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d8b4fe;
            }
          }
        }
      }

      @include it('xl\:caret-purple-400') {
        @include assert {
          @include output {
            @include xl\:caret-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #c084fc;
            }
          }
        }
      }

      @include it('xl\:caret-purple-500') {
        @include assert {
          @include output {
            @include xl\:caret-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a855f7;
            }
          }
        }
      }

      @include it('xl\:caret-purple-600') {
        @include assert {
          @include output {
            @include xl\:caret-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #9333ea;
            }
          }
        }
      }

      @include it('xl\:caret-purple-700') {
        @include assert {
          @include output {
            @include xl\:caret-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #7e22ce;
            }
          }
        }
      }

      @include it('xl\:caret-purple-800') {
        @include assert {
          @include output {
            @include xl\:caret-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #6b21a8;
            }
          }
        }
      }

      @include it('xl\:caret-purple-900') {
        @include assert {
          @include output {
            @include xl\:caret-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #581c87;
            }
          }
        }
      }

      @include it('xl\:caret-purple-950') {
        @include assert {
          @include output {
            @include xl\:caret-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #3b0764;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-50') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fdf4ff;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-100') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fae8ff;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-200') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f5d0fe;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-300') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f0abfc;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-400') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e879f9;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-500') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #d946ef;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-600') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #c026d3;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-700') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #a21caf;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-800') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #86198f;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-900') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #701a75;
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-950') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4a044e;
            }
          }
        }
      }

      @include it('xl\:caret-pink-50') {
        @include assert {
          @include output {
            @include xl\:caret-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fdf2f8;
            }
          }
        }
      }

      @include it('xl\:caret-pink-100') {
        @include assert {
          @include output {
            @include xl\:caret-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fce7f3;
            }
          }
        }
      }

      @include it('xl\:caret-pink-200') {
        @include assert {
          @include output {
            @include xl\:caret-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fbcfe8;
            }
          }
        }
      }

      @include it('xl\:caret-pink-300') {
        @include assert {
          @include output {
            @include xl\:caret-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f9a8d4;
            }
          }
        }
      }

      @include it('xl\:caret-pink-400') {
        @include assert {
          @include output {
            @include xl\:caret-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f472b6;
            }
          }
        }
      }

      @include it('xl\:caret-pink-500') {
        @include assert {
          @include output {
            @include xl\:caret-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ec4899;
            }
          }
        }
      }

      @include it('xl\:caret-pink-600') {
        @include assert {
          @include output {
            @include xl\:caret-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #db2777;
            }
          }
        }
      }

      @include it('xl\:caret-pink-700') {
        @include assert {
          @include output {
            @include xl\:caret-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #be185d;
            }
          }
        }
      }

      @include it('xl\:caret-pink-800') {
        @include assert {
          @include output {
            @include xl\:caret-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #9d174d;
            }
          }
        }
      }

      @include it('xl\:caret-pink-900') {
        @include assert {
          @include output {
            @include xl\:caret-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #831843;
            }
          }
        }
      }

      @include it('xl\:caret-pink-950') {
        @include assert {
          @include output {
            @include xl\:caret-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #500724;
            }
          }
        }
      }

      @include it('xl\:caret-rose-50') {
        @include assert {
          @include output {
            @include xl\:caret-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fff1f2;
            }
          }
        }
      }

      @include it('xl\:caret-rose-100') {
        @include assert {
          @include output {
            @include xl\:caret-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #ffe4e6;
            }
          }
        }
      }

      @include it('xl\:caret-rose-200') {
        @include assert {
          @include output {
            @include xl\:caret-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fecdd3;
            }
          }
        }
      }

      @include it('xl\:caret-rose-300') {
        @include assert {
          @include output {
            @include xl\:caret-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fda4af;
            }
          }
        }
      }

      @include it('xl\:caret-rose-400') {
        @include assert {
          @include output {
            @include xl\:caret-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #fb7185;
            }
          }
        }
      }

      @include it('xl\:caret-rose-500') {
        @include assert {
          @include output {
            @include xl\:caret-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #f43f5e;
            }
          }
        }
      }

      @include it('xl\:caret-rose-600') {
        @include assert {
          @include output {
            @include xl\:caret-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #e11d48;
            }
          }
        }
      }

      @include it('xl\:caret-rose-700') {
        @include assert {
          @include output {
            @include xl\:caret-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #be123c;
            }
          }
        }
      }

      @include it('xl\:caret-rose-800') {
        @include assert {
          @include output {
            @include xl\:caret-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #9f1239;
            }
          }
        }
      }

      @include it('xl\:caret-rose-900') {
        @include assert {
          @include output {
            @include xl\:caret-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #881337;
            }
          }
        }
      }

      @include it('xl\:caret-rose-950') {
        @include assert {
          @include output {
            @include xl\:caret-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #4c0519;
            }
          }
        }
      }

      @include it('xl\:caret-transparent\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-transparent\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(transparent, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-black\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-black\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#000, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-white\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-white\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f8fafc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f1f5f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e2e8f0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#cbd5e1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#94a3b8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#64748b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#475569, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#334155, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1e293b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0f172a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-slate-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-slate-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#020617, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f9fafb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f3f4f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e5e7eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d1d5db, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#9ca3af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#6b7280, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4b5563, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#374151, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1f2937, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#111827, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-gray-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-gray-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#030712, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f4f4f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e4e4e7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d4d4d8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a1a1aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#71717a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#52525b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#3f3f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#27272a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#18181b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-zinc-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-zinc-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#09090b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f5f5f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e5e5e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d4d4d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a3a3a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#737373, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#525252, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#404040, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#262626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#171717, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-neutral-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-neutral-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0a0a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fafaf9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f5f5f4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e7e5e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d6d3d1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a8a29e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#78716c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#57534e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#44403c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#292524, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1c1917, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-stone-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-stone-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0c0a09, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fef2f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fee2e2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fecaca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fca5a5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f87171, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ef4444, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#dc2626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#b91c1c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#991b1b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#7f1d1d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-red-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-red-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#450a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fff7ed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ffedd5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fed7aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fdba74, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fb923c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f97316, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ea580c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#c2410c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#9a3412, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#7c2d12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-orange-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-orange-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#431407, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fffbeb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fef3c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fde68a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fcd34d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fbbf24, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f59e0b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d97706, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#b45309, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#92400e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#78350f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-amber-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-amber-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#451a03, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fefce8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fef9c3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fef08a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fde047, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#facc15, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#eab308, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ca8a04, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a16207, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#854d0e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#713f12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-yellow-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-yellow-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#422006, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f7fee7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ecfccb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d9f99d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#bef264, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a3e635, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#84cc16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#65a30d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4d7c0f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#3f6212, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#365314, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-lime-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-lime-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1a2e05, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f0fdf4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#dcfce7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#bbf7d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#86efac, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4ade80, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#22c55e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#16a34a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#15803d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#166534, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#14532d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-green-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-green-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#052e16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ecfdf5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d1fae5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a7f3d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#6ee7b7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#34d399, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#10b981, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#059669, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#047857, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#065f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#064e3b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-emerald-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-emerald-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#022c22, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f0fdfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ccfbf1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#99f6e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#5eead4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#2dd4bf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#14b8a6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0d9488, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0f766e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#115e59, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#134e4a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-teal-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-teal-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#042f2e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ecfeff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#cffafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a5f3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#67e8f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#22d3ee, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#06b6d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0891b2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0e7490, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#155e75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#164e63, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-cyan-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-cyan-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#083344, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f0f9ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e0f2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#bae6fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#7dd3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#38bdf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0ea5e9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0284c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0369a1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#075985, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#0c4a6e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-sky-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-sky-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#082f49, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#eff6ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#dbeafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#bfdbfe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#93c5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#60a5fa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#3b82f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#2563eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1d4ed8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1e40af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1e3a8a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-blue-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-blue-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#172554, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#eef2ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e0e7ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#c7d2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a5b4fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#818cf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#6366f1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4f46e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4338ca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#3730a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#312e81, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-indigo-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-indigo-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#1e1b4b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f5f3ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ede9fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ddd6fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#c4b5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a78bfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#8b5cf6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#7c3aed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#6d28d9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#5b21b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4c1d95, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-violet-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-violet-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#2e1065, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#faf5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f3e8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e9d5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d8b4fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#c084fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a855f7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#9333ea, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#7e22ce, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#6b21a8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#581c87, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-purple-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-purple-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#3b0764, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fdf4ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fae8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f5d0fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f0abfc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e879f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#d946ef, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#c026d3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#a21caf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#86198f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#701a75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-fuchsia-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-fuchsia-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4a044e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fdf2f8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fce7f3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fbcfe8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f9a8d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f472b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ec4899, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#db2777, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#be185d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#9d174d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#831843, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-pink-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-pink-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#500724, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-50\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fff1f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-100\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#ffe4e6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-200\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fecdd3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-300\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fda4af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-400\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#fb7185, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-500\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#f43f5e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-600\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#e11d48, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-700\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#be123c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-800\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#9f1239, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-900\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#881337, $alpha: 0.11);
            }
          }
        }
      }

      @include it('xl\:caret-rose-950\/(0.11)') {
        @include assert {
          @include output {
            @include xl\:caret-rose-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: color.change(#4c0519, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-inherit') {
        @include assert {
          @include output {
            @include \2xl\:caret-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: inherit;
            }
          }
        }
      }

      @include it('\2xl\:caret-current') {
        @include assert {
          @include output {
            @include \2xl\:caret-current;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: currentColor;
            }
          }
        }
      }

      @include it('\2xl\:caret-transparent') {
        @include assert {
          @include output {
            @include \2xl\:caret-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: transparent;
            }
          }
        }
      }

      @include it('\2xl\:caret-black') {
        @include assert {
          @include output {
            @include \2xl\:caret-black;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #000;
            }
          }
        }
      }

      @include it('\2xl\:caret-white') {
        @include assert {
          @include output {
            @include \2xl\:caret-white;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fff;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f8fafc;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f1f5f9;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e2e8f0;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #cbd5e1;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #94a3b8;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #64748b;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #475569;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #334155;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1e293b;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0f172a;
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #020617;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f9fafb;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f3f4f6;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e5e7eb;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d1d5db;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #9ca3af;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #6b7280;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4b5563;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #374151;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1f2937;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #111827;
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #030712;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f4f4f5;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e4e4e7;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d4d4d8;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a1a1aa;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #71717a;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #52525b;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #3f3f46;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #27272a;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #18181b;
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #09090b;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fafafa;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f5f5f5;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e5e5e5;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d4d4d4;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a3a3a3;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #737373;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #525252;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #404040;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #262626;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #171717;
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0a0a0a;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fafaf9;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f5f5f4;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e7e5e4;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d6d3d1;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a8a29e;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #78716c;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #57534e;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #44403c;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #292524;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1c1917;
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0c0a09;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fef2f2;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fee2e2;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fecaca;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fca5a5;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f87171;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ef4444;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #dc2626;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #b91c1c;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #991b1b;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #7f1d1d;
            }
          }
        }
      }

      @include it('\2xl\:caret-red-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #450a0a;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fff7ed;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ffedd5;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fed7aa;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fdba74;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fb923c;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f97316;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ea580c;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #c2410c;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #9a3412;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #7c2d12;
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #431407;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fffbeb;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fef3c7;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fde68a;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fcd34d;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fbbf24;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f59e0b;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d97706;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #b45309;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #92400e;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #78350f;
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #451a03;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fefce8;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fef9c3;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fef08a;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fde047;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #facc15;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #eab308;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ca8a04;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a16207;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #854d0e;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #713f12;
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #422006;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f7fee7;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ecfccb;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d9f99d;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #bef264;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a3e635;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #84cc16;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #65a30d;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4d7c0f;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #3f6212;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #365314;
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1a2e05;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f0fdf4;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #dcfce7;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #bbf7d0;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #86efac;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4ade80;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #22c55e;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #16a34a;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #15803d;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #166534;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #14532d;
            }
          }
        }
      }

      @include it('\2xl\:caret-green-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #052e16;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ecfdf5;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d1fae5;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a7f3d0;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #6ee7b7;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #34d399;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #10b981;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #059669;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #047857;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #065f46;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #064e3b;
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #022c22;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f0fdfa;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ccfbf1;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #99f6e4;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #5eead4;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #2dd4bf;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #14b8a6;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0d9488;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0f766e;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #115e59;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #134e4a;
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #042f2e;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ecfeff;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #cffafe;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a5f3fc;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #67e8f9;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #22d3ee;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #06b6d4;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0891b2;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0e7490;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #155e75;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #164e63;
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #083344;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f0f9ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e0f2fe;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #bae6fd;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #7dd3fc;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #38bdf8;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0ea5e9;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0284c7;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0369a1;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #075985;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #0c4a6e;
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #082f49;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #eff6ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #dbeafe;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #bfdbfe;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #93c5fd;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #60a5fa;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #3b82f6;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #2563eb;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1d4ed8;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1e40af;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1e3a8a;
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #172554;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #eef2ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e0e7ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #c7d2fe;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a5b4fc;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #818cf8;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #6366f1;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4f46e5;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4338ca;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #3730a3;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #312e81;
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #1e1b4b;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f5f3ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ede9fe;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ddd6fe;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #c4b5fd;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a78bfa;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #8b5cf6;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #7c3aed;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #6d28d9;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #5b21b6;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4c1d95;
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #2e1065;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #faf5ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f3e8ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e9d5ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d8b4fe;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #c084fc;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a855f7;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #9333ea;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #7e22ce;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #6b21a8;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #581c87;
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #3b0764;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fdf4ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fae8ff;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f5d0fe;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f0abfc;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e879f9;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #d946ef;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #c026d3;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #a21caf;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #86198f;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #701a75;
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4a044e;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fdf2f8;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fce7f3;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fbcfe8;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f9a8d4;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f472b6;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ec4899;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #db2777;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #be185d;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #9d174d;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #831843;
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #500724;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-50') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fff1f2;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-100') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #ffe4e6;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-200') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fecdd3;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-300') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fda4af;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-400') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #fb7185;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-500') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #f43f5e;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-600') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #e11d48;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-700') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #be123c;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-800') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #9f1239;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-900') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #881337;
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-950') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #4c0519;
            }
          }
        }
      }

      @include it('\2xl\:caret-transparent\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-transparent\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(transparent, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-black\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-black\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#000, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-white\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-white\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f8fafc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f1f5f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e2e8f0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#cbd5e1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#94a3b8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#64748b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#475569, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#334155, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1e293b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0f172a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-slate-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-slate-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#020617, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f9fafb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f3f4f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e5e7eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d1d5db, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#9ca3af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#6b7280, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4b5563, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#374151, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1f2937, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#111827, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-gray-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-gray-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#030712, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f4f4f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e4e4e7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d4d4d8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a1a1aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#71717a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#52525b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#3f3f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#27272a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#18181b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-zinc-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-zinc-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#09090b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fafafa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f5f5f5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e5e5e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d4d4d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a3a3a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#737373, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#525252, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#404040, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#262626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#171717, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-neutral-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-neutral-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0a0a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fafaf9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f5f5f4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e7e5e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d6d3d1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a8a29e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#78716c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#57534e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#44403c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#292524, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1c1917, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-stone-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-stone-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0c0a09, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fef2f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fee2e2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fecaca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fca5a5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f87171, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ef4444, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#dc2626, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#b91c1c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#991b1b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#7f1d1d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-red-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-red-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#450a0a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fff7ed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ffedd5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fed7aa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fdba74, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fb923c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f97316, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ea580c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#c2410c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#9a3412, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#7c2d12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-orange-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-orange-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#431407, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fffbeb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fef3c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fde68a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fcd34d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fbbf24, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f59e0b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d97706, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#b45309, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#92400e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#78350f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-amber-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-amber-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#451a03, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fefce8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fef9c3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fef08a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fde047, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#facc15, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#eab308, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ca8a04, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a16207, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#854d0e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#713f12, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-yellow-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-yellow-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#422006, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f7fee7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ecfccb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d9f99d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#bef264, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a3e635, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#84cc16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#65a30d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4d7c0f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#3f6212, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#365314, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-lime-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-lime-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1a2e05, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f0fdf4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#dcfce7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#bbf7d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#86efac, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4ade80, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#22c55e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#16a34a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#15803d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#166534, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#14532d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-green-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-green-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#052e16, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ecfdf5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d1fae5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a7f3d0, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#6ee7b7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#34d399, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#10b981, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#059669, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#047857, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#065f46, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#064e3b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-emerald-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-emerald-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#022c22, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f0fdfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ccfbf1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#99f6e4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#5eead4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#2dd4bf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#14b8a6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0d9488, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0f766e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#115e59, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#134e4a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-teal-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-teal-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#042f2e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ecfeff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#cffafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a5f3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#67e8f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#22d3ee, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#06b6d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0891b2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0e7490, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#155e75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#164e63, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-cyan-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-cyan-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#083344, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f0f9ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e0f2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#bae6fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#7dd3fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#38bdf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0ea5e9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0284c7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0369a1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#075985, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#0c4a6e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-sky-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-sky-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#082f49, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#eff6ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#dbeafe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#bfdbfe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#93c5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#60a5fa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#3b82f6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#2563eb, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1d4ed8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1e40af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1e3a8a, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-blue-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-blue-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#172554, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#eef2ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e0e7ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#c7d2fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a5b4fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#818cf8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#6366f1, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4f46e5, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4338ca, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#3730a3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#312e81, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-indigo-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-indigo-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#1e1b4b, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f5f3ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ede9fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ddd6fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#c4b5fd, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a78bfa, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#8b5cf6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#7c3aed, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#6d28d9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#5b21b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4c1d95, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-violet-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-violet-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#2e1065, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#faf5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f3e8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e9d5ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d8b4fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#c084fc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a855f7, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#9333ea, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#7e22ce, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#6b21a8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#581c87, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-purple-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-purple-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#3b0764, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fdf4ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fae8ff, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f5d0fe, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f0abfc, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e879f9, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#d946ef, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#c026d3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#a21caf, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#86198f, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#701a75, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-fuchsia-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-fuchsia-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4a044e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fdf2f8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fce7f3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fbcfe8, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f9a8d4, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f472b6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ec4899, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#db2777, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#be185d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#9d174d, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#831843, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-pink-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-pink-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#500724, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-50\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-50\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fff1f2, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-100\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-100\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#ffe4e6, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-200\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-200\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fecdd3, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-300\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-300\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fda4af, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-400\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-400\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#fb7185, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-500\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-500\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#f43f5e, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-600\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-600\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#e11d48, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-700\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-700\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#be123c, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-800\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-800\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#9f1239, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-900\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-900\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#881337, $alpha: 0.11);
            }
          }
        }
      }

      @include it('\2xl\:caret-rose-950\/(0.11)') {
        @include assert {
          @include output {
            @include \2xl\:caret-rose-950\/(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: color.change(#4c0519, $alpha: 0.11);
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('caret-(#50d71e)') {
        @include assert {
          @include output {
            @include caret-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            caret-color: #50d71e;
          }
        }
      }

      @include it('sm\:caret-(#50d71e)') {
        @include assert {
          @include output {
            @include sm\:caret-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              caret-color: #50d71e;
            }
          }
        }
      }

      @include it('md\:caret-(#50d71e)') {
        @include assert {
          @include output {
            @include md\:caret-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              caret-color: #50d71e;
            }
          }
        }
      }

      @include it('lg\:caret-(#50d71e)') {
        @include assert {
          @include output {
            @include lg\:caret-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              caret-color: #50d71e;
            }
          }
        }
      }

      @include it('xl\:caret-(#50d71e)') {
        @include assert {
          @include output {
            @include xl\:caret-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              caret-color: #50d71e;
            }
          }
        }
      }

      @include it('2xl\:caret-(#50d71e)') {
        @include assert {
          @include output {
            @include \2xl\:caret-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              caret-color: #50d71e;
            }
          }
        }
      }
    }
  }
}
