@use "../../mode0" as *;
@use "true" as *;

// for testing negative values

@mixin -inset-0 {
  @include inset-(-$\0);
}

@mixin -inset-x-0 {
  @include inset-x-(-$\0);
}

@mixin -inset-y-0 {
  @include inset-y-(-$\0);
}

@mixin -start-0 {
  @include start-(-$\0);
}

@mixin -end-0 {
  @include end-(-$\0);
}

@mixin -top-0 {
  @include top-(-$\0);
}

@mixin -right-0 {
  @include right-(-$\0);
}

@mixin -bottom-0 {
  @include bottom-(-$\0);
}

@mixin -left-0 {
  @include left-(-$\0);
}

@mixin -inset-px {
  @include inset-(-$\px);
}

@mixin -inset-x-px {
  @include inset-x-(-$\px);
}

@mixin -inset-y-px {
  @include inset-y-(-$\px);
}

@mixin -start-px {
  @include start-(-$\px);
}

@mixin -end-px {
  @include end-(-$\px);
}

@mixin -top-px {
  @include top-(-$\px);
}

@mixin -right-px {
  @include right-(-$\px);
}

@mixin -bottom-px {
  @include bottom-(-$\px);
}

@mixin -left-px {
  @include left-(-$\px);
}

@mixin -inset-0\.5 {
  @include inset-(-$\0\.5);
}

@mixin -inset-x-0\.5 {
  @include inset-x-(-$\0\.5);
}

@mixin -inset-y-0\.5 {
  @include inset-y-(-$\0\.5);
}

@mixin -start-0\.5 {
  @include start-(-$\0\.5);
}

@mixin -end-0\.5 {
  @include end-(-$\0\.5);
}

@mixin -top-0\.5 {
  @include top-(-$\0\.5);
}

@mixin -right-0\.5 {
  @include right-(-$\0\.5);
}

@mixin -bottom-0\.5 {
  @include bottom-(-$\0\.5);
}

@mixin -left-0\.5 {
  @include left-(-$\0\.5);
}

@mixin -inset-1 {
  @include inset-(-$\1);
}

@mixin -inset-x-1 {
  @include inset-x-(-$\1);
}

@mixin -inset-y-1 {
  @include inset-y-(-$\1);
}

@mixin -start-1 {
  @include start-(-$\1);
}

@mixin -end-1 {
  @include end-(-$\1);
}

@mixin -top-1 {
  @include top-(-$\1);
}

@mixin -right-1 {
  @include right-(-$\1);
}

@mixin -bottom-1 {
  @include bottom-(-$\1);
}

@mixin -left-1 {
  @include left-(-$\1);
}

@mixin -inset-1\.5 {
  @include inset-(-$\1\.5);
}

@mixin -inset-x-1\.5 {
  @include inset-x-(-$\1\.5);
}

@mixin -inset-y-1\.5 {
  @include inset-y-(-$\1\.5);
}

@mixin -start-1\.5 {
  @include start-(-$\1\.5);
}

@mixin -end-1\.5 {
  @include end-(-$\1\.5);
}

@mixin -top-1\.5 {
  @include top-(-$\1\.5);
}

@mixin -right-1\.5 {
  @include right-(-$\1\.5);
}

@mixin -bottom-1\.5 {
  @include bottom-(-$\1\.5);
}

@mixin -left-1\.5 {
  @include left-(-$\1\.5);
}

@mixin -inset-2 {
  @include inset-(-$\2);
}

@mixin -inset-x-2 {
  @include inset-x-(-$\2);
}

@mixin -inset-y-2 {
  @include inset-y-(-$\2);
}

@mixin -start-2 {
  @include start-(-$\2);
}

@mixin -end-2 {
  @include end-(-$\2);
}

@mixin -top-2 {
  @include top-(-$\2);
}

@mixin -right-2 {
  @include right-(-$\2);
}

@mixin -bottom-2 {
  @include bottom-(-$\2);
}

@mixin -left-2 {
  @include left-(-$\2);
}

@mixin -inset-2\.5 {
  @include inset-(-$\2\.5);
}

@mixin -inset-x-2\.5 {
  @include inset-x-(-$\2\.5);
}

@mixin -inset-y-2\.5 {
  @include inset-y-(-$\2\.5);
}

@mixin -start-2\.5 {
  @include start-(-$\2\.5);
}

@mixin -end-2\.5 {
  @include end-(-$\2\.5);
}

@mixin -top-2\.5 {
  @include top-(-$\2\.5);
}

@mixin -right-2\.5 {
  @include right-(-$\2\.5);
}

@mixin -bottom-2\.5 {
  @include bottom-(-$\2\.5);
}

@mixin -left-2\.5 {
  @include left-(-$\2\.5);
}

@mixin -inset-3 {
  @include inset-(-$\3);
}

@mixin -inset-x-3 {
  @include inset-x-(-$\3);
}

@mixin -inset-y-3 {
  @include inset-y-(-$\3);
}

@mixin -start-3 {
  @include start-(-$\3);
}

@mixin -end-3 {
  @include end-(-$\3);
}

@mixin -top-3 {
  @include top-(-$\3);
}

@mixin -right-3 {
  @include right-(-$\3);
}

@mixin -bottom-3 {
  @include bottom-(-$\3);
}

@mixin -left-3 {
  @include left-(-$\3);
}

@mixin -inset-3\.5 {
  @include inset-(-$\3\.5);
}

@mixin -inset-x-3\.5 {
  @include inset-x-(-$\3\.5);
}

@mixin -inset-y-3\.5 {
  @include inset-y-(-$\3\.5);
}

@mixin -start-3\.5 {
  @include start-(-$\3\.5);
}

@mixin -end-3\.5 {
  @include end-(-$\3\.5);
}

@mixin -top-3\.5 {
  @include top-(-$\3\.5);
}

@mixin -right-3\.5 {
  @include right-(-$\3\.5);
}

@mixin -bottom-3\.5 {
  @include bottom-(-$\3\.5);
}

@mixin -left-3\.5 {
  @include left-(-$\3\.5);
}

@mixin -inset-4 {
  @include inset-(-$\4);
}

@mixin -inset-x-4 {
  @include inset-x-(-$\4);
}

@mixin -inset-y-4 {
  @include inset-y-(-$\4);
}

@mixin -start-4 {
  @include start-(-$\4);
}

@mixin -end-4 {
  @include end-(-$\4);
}

@mixin -top-4 {
  @include top-(-$\4);
}

@mixin -right-4 {
  @include right-(-$\4);
}

@mixin -bottom-4 {
  @include bottom-(-$\4);
}

@mixin -left-4 {
  @include left-(-$\4);
}

@mixin -inset-5 {
  @include inset-(-$\5);
}

@mixin -inset-x-5 {
  @include inset-x-(-$\5);
}

@mixin -inset-y-5 {
  @include inset-y-(-$\5);
}

@mixin -start-5 {
  @include start-(-$\5);
}

@mixin -end-5 {
  @include end-(-$\5);
}

@mixin -top-5 {
  @include top-(-$\5);
}

@mixin -right-5 {
  @include right-(-$\5);
}

@mixin -bottom-5 {
  @include bottom-(-$\5);
}

@mixin -left-5 {
  @include left-(-$\5);
}

@mixin -inset-6 {
  @include inset-(-$\6);
}

@mixin -inset-x-6 {
  @include inset-x-(-$\6);
}

@mixin -inset-y-6 {
  @include inset-y-(-$\6);
}

@mixin -start-6 {
  @include start-(-$\6);
}

@mixin -end-6 {
  @include end-(-$\6);
}

@mixin -top-6 {
  @include top-(-$\6);
}

@mixin -right-6 {
  @include right-(-$\6);
}

@mixin -bottom-6 {
  @include bottom-(-$\6);
}

@mixin -left-6 {
  @include left-(-$\6);
}

@mixin -inset-7 {
  @include inset-(-$\7);
}

@mixin -inset-x-7 {
  @include inset-x-(-$\7);
}

@mixin -inset-y-7 {
  @include inset-y-(-$\7);
}

@mixin -start-7 {
  @include start-(-$\7);
}

@mixin -end-7 {
  @include end-(-$\7);
}

@mixin -top-7 {
  @include top-(-$\7);
}

@mixin -right-7 {
  @include right-(-$\7);
}

@mixin -bottom-7 {
  @include bottom-(-$\7);
}

@mixin -left-7 {
  @include left-(-$\7);
}

@mixin -inset-8 {
  @include inset-(-$\8);
}

@mixin -inset-x-8 {
  @include inset-x-(-$\8);
}

@mixin -inset-y-8 {
  @include inset-y-(-$\8);
}

@mixin -start-8 {
  @include start-(-$\8);
}

@mixin -end-8 {
  @include end-(-$\8);
}

@mixin -top-8 {
  @include top-(-$\8);
}

@mixin -right-8 {
  @include right-(-$\8);
}

@mixin -bottom-8 {
  @include bottom-(-$\8);
}

@mixin -left-8 {
  @include left-(-$\8);
}

@mixin -inset-9 {
  @include inset-(-$\9);
}

@mixin -inset-x-9 {
  @include inset-x-(-$\9);
}

@mixin -inset-y-9 {
  @include inset-y-(-$\9);
}

@mixin -start-9 {
  @include start-(-$\9);
}

@mixin -end-9 {
  @include end-(-$\9);
}

@mixin -top-9 {
  @include top-(-$\9);
}

@mixin -right-9 {
  @include right-(-$\9);
}

@mixin -bottom-9 {
  @include bottom-(-$\9);
}

@mixin -left-9 {
  @include left-(-$\9);
}

@mixin -inset-10 {
  @include inset-(-$\10);
}

@mixin -inset-x-10 {
  @include inset-x-(-$\10);
}

@mixin -inset-y-10 {
  @include inset-y-(-$\10);
}

@mixin -start-10 {
  @include start-(-$\10);
}

@mixin -end-10 {
  @include end-(-$\10);
}

@mixin -top-10 {
  @include top-(-$\10);
}

@mixin -right-10 {
  @include right-(-$\10);
}

@mixin -bottom-10 {
  @include bottom-(-$\10);
}

@mixin -left-10 {
  @include left-(-$\10);
}

@mixin -inset-11 {
  @include inset-(-$\11);
}

@mixin -inset-x-11 {
  @include inset-x-(-$\11);
}

@mixin -inset-y-11 {
  @include inset-y-(-$\11);
}

@mixin -start-11 {
  @include start-(-$\11);
}

@mixin -end-11 {
  @include end-(-$\11);
}

@mixin -top-11 {
  @include top-(-$\11);
}

@mixin -right-11 {
  @include right-(-$\11);
}

@mixin -bottom-11 {
  @include bottom-(-$\11);
}

@mixin -left-11 {
  @include left-(-$\11);
}

@mixin -inset-12 {
  @include inset-(-$\12);
}

@mixin -inset-x-12 {
  @include inset-x-(-$\12);
}

@mixin -inset-y-12 {
  @include inset-y-(-$\12);
}

@mixin -start-12 {
  @include start-(-$\12);
}

@mixin -end-12 {
  @include end-(-$\12);
}

@mixin -top-12 {
  @include top-(-$\12);
}

@mixin -right-12 {
  @include right-(-$\12);
}

@mixin -bottom-12 {
  @include bottom-(-$\12);
}

@mixin -left-12 {
  @include left-(-$\12);
}

@mixin -inset-14 {
  @include inset-(-$\14);
}

@mixin -inset-x-14 {
  @include inset-x-(-$\14);
}

@mixin -inset-y-14 {
  @include inset-y-(-$\14);
}

@mixin -start-14 {
  @include start-(-$\14);
}

@mixin -end-14 {
  @include end-(-$\14);
}

@mixin -top-14 {
  @include top-(-$\14);
}

@mixin -right-14 {
  @include right-(-$\14);
}

@mixin -bottom-14 {
  @include bottom-(-$\14);
}

@mixin -left-14 {
  @include left-(-$\14);
}

@mixin -inset-16 {
  @include inset-(-$\16);
}

@mixin -inset-x-16 {
  @include inset-x-(-$\16);
}

@mixin -inset-y-16 {
  @include inset-y-(-$\16);
}

@mixin -start-16 {
  @include start-(-$\16);
}

@mixin -end-16 {
  @include end-(-$\16);
}

@mixin -top-16 {
  @include top-(-$\16);
}

@mixin -right-16 {
  @include right-(-$\16);
}

@mixin -bottom-16 {
  @include bottom-(-$\16);
}

@mixin -left-16 {
  @include left-(-$\16);
}

@mixin -inset-20 {
  @include inset-(-$\20);
}

@mixin -inset-x-20 {
  @include inset-x-(-$\20);
}

@mixin -inset-y-20 {
  @include inset-y-(-$\20);
}

@mixin -start-20 {
  @include start-(-$\20);
}

@mixin -end-20 {
  @include end-(-$\20);
}

@mixin -top-20 {
  @include top-(-$\20);
}

@mixin -right-20 {
  @include right-(-$\20);
}

@mixin -bottom-20 {
  @include bottom-(-$\20);
}

@mixin -left-20 {
  @include left-(-$\20);
}

@mixin -inset-24 {
  @include inset-(-$\24);
}

@mixin -inset-x-24 {
  @include inset-x-(-$\24);
}

@mixin -inset-y-24 {
  @include inset-y-(-$\24);
}

@mixin -start-24 {
  @include start-(-$\24);
}

@mixin -end-24 {
  @include end-(-$\24);
}

@mixin -top-24 {
  @include top-(-$\24);
}

@mixin -right-24 {
  @include right-(-$\24);
}

@mixin -bottom-24 {
  @include bottom-(-$\24);
}

@mixin -left-24 {
  @include left-(-$\24);
}

@mixin -inset-28 {
  @include inset-(-$\28);
}

@mixin -inset-x-28 {
  @include inset-x-(-$\28);
}

@mixin -inset-y-28 {
  @include inset-y-(-$\28);
}

@mixin -start-28 {
  @include start-(-$\28);
}

@mixin -end-28 {
  @include end-(-$\28);
}

@mixin -top-28 {
  @include top-(-$\28);
}

@mixin -right-28 {
  @include right-(-$\28);
}

@mixin -bottom-28 {
  @include bottom-(-$\28);
}

@mixin -left-28 {
  @include left-(-$\28);
}

@mixin -inset-32 {
  @include inset-(-$\32);
}

@mixin -inset-x-32 {
  @include inset-x-(-$\32);
}

@mixin -inset-y-32 {
  @include inset-y-(-$\32);
}

@mixin -start-32 {
  @include start-(-$\32);
}

@mixin -end-32 {
  @include end-(-$\32);
}

@mixin -top-32 {
  @include top-(-$\32);
}

@mixin -right-32 {
  @include right-(-$\32);
}

@mixin -bottom-32 {
  @include bottom-(-$\32);
}

@mixin -left-32 {
  @include left-(-$\32);
}

@mixin -inset-36 {
  @include inset-(-$\36);
}

@mixin -inset-x-36 {
  @include inset-x-(-$\36);
}

@mixin -inset-y-36 {
  @include inset-y-(-$\36);
}

@mixin -start-36 {
  @include start-(-$\36);
}

@mixin -end-36 {
  @include end-(-$\36);
}

@mixin -top-36 {
  @include top-(-$\36);
}

@mixin -right-36 {
  @include right-(-$\36);
}

@mixin -bottom-36 {
  @include bottom-(-$\36);
}

@mixin -left-36 {
  @include left-(-$\36);
}

@mixin -inset-40 {
  @include inset-(-$\40);
}

@mixin -inset-x-40 {
  @include inset-x-(-$\40);
}

@mixin -inset-y-40 {
  @include inset-y-(-$\40);
}

@mixin -start-40 {
  @include start-(-$\40);
}

@mixin -end-40 {
  @include end-(-$\40);
}

@mixin -top-40 {
  @include top-(-$\40);
}

@mixin -right-40 {
  @include right-(-$\40);
}

@mixin -bottom-40 {
  @include bottom-(-$\40);
}

@mixin -left-40 {
  @include left-(-$\40);
}

@mixin -inset-44 {
  @include inset-(-$\44);
}

@mixin -inset-x-44 {
  @include inset-x-(-$\44);
}

@mixin -inset-y-44 {
  @include inset-y-(-$\44);
}

@mixin -start-44 {
  @include start-(-$\44);
}

@mixin -end-44 {
  @include end-(-$\44);
}

@mixin -top-44 {
  @include top-(-$\44);
}

@mixin -right-44 {
  @include right-(-$\44);
}

@mixin -bottom-44 {
  @include bottom-(-$\44);
}

@mixin -left-44 {
  @include left-(-$\44);
}

@mixin -inset-48 {
  @include inset-(-$\48);
}

@mixin -inset-x-48 {
  @include inset-x-(-$\48);
}

@mixin -inset-y-48 {
  @include inset-y-(-$\48);
}

@mixin -start-48 {
  @include start-(-$\48);
}

@mixin -end-48 {
  @include end-(-$\48);
}

@mixin -top-48 {
  @include top-(-$\48);
}

@mixin -right-48 {
  @include right-(-$\48);
}

@mixin -bottom-48 {
  @include bottom-(-$\48);
}

@mixin -left-48 {
  @include left-(-$\48);
}

@mixin -inset-52 {
  @include inset-(-$\52);
}

@mixin -inset-x-52 {
  @include inset-x-(-$\52);
}

@mixin -inset-y-52 {
  @include inset-y-(-$\52);
}

@mixin -start-52 {
  @include start-(-$\52);
}

@mixin -end-52 {
  @include end-(-$\52);
}

@mixin -top-52 {
  @include top-(-$\52);
}

@mixin -right-52 {
  @include right-(-$\52);
}

@mixin -bottom-52 {
  @include bottom-(-$\52);
}

@mixin -left-52 {
  @include left-(-$\52);
}

@mixin -inset-56 {
  @include inset-(-$\56);
}

@mixin -inset-x-56 {
  @include inset-x-(-$\56);
}

@mixin -inset-y-56 {
  @include inset-y-(-$\56);
}

@mixin -start-56 {
  @include start-(-$\56);
}

@mixin -end-56 {
  @include end-(-$\56);
}

@mixin -top-56 {
  @include top-(-$\56);
}

@mixin -right-56 {
  @include right-(-$\56);
}

@mixin -bottom-56 {
  @include bottom-(-$\56);
}

@mixin -left-56 {
  @include left-(-$\56);
}

@mixin -inset-60 {
  @include inset-(-$\60);
}

@mixin -inset-x-60 {
  @include inset-x-(-$\60);
}

@mixin -inset-y-60 {
  @include inset-y-(-$\60);
}

@mixin -start-60 {
  @include start-(-$\60);
}

@mixin -end-60 {
  @include end-(-$\60);
}

@mixin -top-60 {
  @include top-(-$\60);
}

@mixin -right-60 {
  @include right-(-$\60);
}

@mixin -bottom-60 {
  @include bottom-(-$\60);
}

@mixin -left-60 {
  @include left-(-$\60);
}

@mixin -inset-64 {
  @include inset-(-$\64);
}

@mixin -inset-x-64 {
  @include inset-x-(-$\64);
}

@mixin -inset-y-64 {
  @include inset-y-(-$\64);
}

@mixin -start-64 {
  @include start-(-$\64);
}

@mixin -end-64 {
  @include end-(-$\64);
}

@mixin -top-64 {
  @include top-(-$\64);
}

@mixin -right-64 {
  @include right-(-$\64);
}

@mixin -bottom-64 {
  @include bottom-(-$\64);
}

@mixin -left-64 {
  @include left-(-$\64);
}

@mixin -inset-72 {
  @include inset-(-$\72);
}

@mixin -inset-x-72 {
  @include inset-x-(-$\72);
}

@mixin -inset-y-72 {
  @include inset-y-(-$\72);
}

@mixin -start-72 {
  @include start-(-$\72);
}

@mixin -end-72 {
  @include end-(-$\72);
}

@mixin -top-72 {
  @include top-(-$\72);
}

@mixin -right-72 {
  @include right-(-$\72);
}

@mixin -bottom-72 {
  @include bottom-(-$\72);
}

@mixin -left-72 {
  @include left-(-$\72);
}

@mixin -inset-80 {
  @include inset-(-$\80);
}

@mixin -inset-x-80 {
  @include inset-x-(-$\80);
}

@mixin -inset-y-80 {
  @include inset-y-(-$\80);
}

@mixin -start-80 {
  @include start-(-$\80);
}

@mixin -end-80 {
  @include end-(-$\80);
}

@mixin -top-80 {
  @include top-(-$\80);
}

@mixin -right-80 {
  @include right-(-$\80);
}

@mixin -bottom-80 {
  @include bottom-(-$\80);
}

@mixin -left-80 {
  @include left-(-$\80);
}

@mixin -inset-96 {
  @include inset-(-$\96);
}

@mixin -inset-x-96 {
  @include inset-x-(-$\96);
}

@mixin -inset-y-96 {
  @include inset-y-(-$\96);
}

@mixin -start-96 {
  @include start-(-$\96);
}

@mixin -end-96 {
  @include end-(-$\96);
}

@mixin -top-96 {
  @include top-(-$\96);
}

@mixin -right-96 {
  @include right-(-$\96);
}

@mixin -bottom-96 {
  @include bottom-(-$\96);
}

@mixin -left-96 {
  @include left-(-$\96);
}

@mixin -inset-1\/2 {
  @include inset-(-50%);
}

@mixin -inset-1\/3 {
  @include inset-(-33.333333%);
}

@mixin -inset-2\/3 {
  @include inset-(-66.666667%);
}

@mixin -inset-1\/4 {
  @include inset-(-25%);
}

@mixin -inset-2\/4 {
  @include inset-(-50%);
}

@mixin -inset-3\/4 {
  @include inset-(-75%);
}

@mixin -inset-full {
  @include inset-(-100%);
}

@mixin -inset-x-1\/2 {
  @include inset-x-(-50%);
}

@mixin -inset-x-1\/3 {
  @include inset-x-(-33.333333%);
}

@mixin -inset-x-2\/3 {
  @include inset-x-(-66.666667%);
}

@mixin -inset-x-1\/4 {
  @include inset-x-(-25%);
}

@mixin -inset-x-2\/4 {
  @include inset-x-(-50%);
}

@mixin -inset-x-3\/4 {
  @include inset-x-(-75%);
}

@mixin -inset-x-full {
  @include inset-x-(-100%);
}

@mixin -inset-y-1\/2 {
  @include inset-y-(-50%);
}

@mixin -inset-y-1\/3 {
  @include inset-y-(-33.333333%);
}

@mixin -inset-y-2\/3 {
  @include inset-y-(-66.666667%);
}

@mixin -inset-y-1\/4 {
  @include inset-y-(-25%);
}

@mixin -inset-y-2\/4 {
  @include inset-y-(-50%);
}

@mixin -inset-y-3\/4 {
  @include inset-y-(-75%);
}

@mixin -inset-y-full {
  @include inset-y-(-100%);
}

@mixin -start-1\/2 {
  @include start-(-50%);
}

@mixin -start-1\/3 {
  @include start-(-33.333333%);
}

@mixin -start-2\/3 {
  @include start-(-66.666667%);
}

@mixin -start-1\/4 {
  @include start-(-25%);
}

@mixin -start-2\/4 {
  @include start-(-50%);
}

@mixin -start-3\/4 {
  @include start-(-75%);
}

@mixin -start-full {
  @include start-(-100%);
}

@mixin -end-1\/2 {
  @include end-(-50%);
}

@mixin -end-1\/3 {
  @include end-(-33.333333%);
}

@mixin -end-2\/3 {
  @include end-(-66.666667%);
}

@mixin -end-1\/4 {
  @include end-(-25%);
}

@mixin -end-2\/4 {
  @include end-(-50%);
}

@mixin -end-3\/4 {
  @include end-(-75%);
}

@mixin -end-full {
  @include end-(-100%);
}

@mixin -top-1\/2 {
  @include top-(-50%);
}

@mixin -top-1\/3 {
  @include top-(-33.333333%);
}

@mixin -top-2\/3 {
  @include top-(-66.666667%);
}

@mixin -top-1\/4 {
  @include top-(-25%);
}

@mixin -top-2\/4 {
  @include top-(-50%);
}

@mixin -top-3\/4 {
  @include top-(-75%);
}

@mixin -top-full {
  @include top-(-100%);
}

@mixin -right-1\/2 {
  @include right-(-50%);
}

@mixin -right-1\/3 {
  @include right-(-33.333333%);
}

@mixin -right-2\/3 {
  @include right-(-66.666667%);
}

@mixin -right-1\/4 {
  @include right-(-25%);
}

@mixin -right-2\/4 {
  @include right-(-50%);
}

@mixin -right-3\/4 {
  @include right-(-75%);
}

@mixin -right-full {
  @include right-(-100%);
}

@mixin -bottom-1\/2 {
  @include bottom-(-50%);
}

@mixin -bottom-1\/3 {
  @include bottom-(-33.333333%);
}

@mixin -bottom-2\/3 {
  @include bottom-(-66.666667%);
}

@mixin -bottom-1\/4 {
  @include bottom-(-25%);
}

@mixin -bottom-2\/4 {
  @include bottom-(-50%);
}

@mixin -bottom-3\/4 {
  @include bottom-(-75%);
}

@mixin -bottom-full {
  @include bottom-(-100%);
}

@mixin -left-1\/2 {
  @include left-(-50%);
}

@mixin -left-1\/3 {
  @include left-(-33.333333%);
}

@mixin -left-2\/3 {
  @include left-(-66.666667%);
}

@mixin -left-1\/4 {
  @include left-(-25%);
}

@mixin -left-2\/4 {
  @include left-(-50%);
}

@mixin -left-3\/4 {
  @include left-(-75%);
}

@mixin -left-full {
  @include left-(-100%);
}

@mixin sm\:-inset-0 {
  @include inset-(-$\0, $sm);
}

@mixin sm\:-inset-x-0 {
  @include inset-x-(-$\0, $sm);
}

@mixin sm\:-inset-y-0 {
  @include inset-y-(-$\0, $sm);
}

@mixin sm\:-start-0 {
  @include start-(-$\0, $sm);
}

@mixin sm\:-end-0 {
  @include end-(-$\0, $sm);
}

@mixin sm\:-top-0 {
  @include top-(-$\0, $sm);
}

@mixin sm\:-right-0 {
  @include right-(-$\0, $sm);
}

@mixin sm\:-bottom-0 {
  @include bottom-(-$\0, $sm);
}

@mixin sm\:-left-0 {
  @include left-(-$\0, $sm);
}

@mixin sm\:-inset-px {
  @include inset-(-$\px, $sm);
}

@mixin sm\:-inset-x-px {
  @include inset-x-(-$\px, $sm);
}

@mixin sm\:-inset-y-px {
  @include inset-y-(-$\px, $sm);
}

@mixin sm\:-start-px {
  @include start-(-$\px, $sm);
}

@mixin sm\:-end-px {
  @include end-(-$\px, $sm);
}

@mixin sm\:-top-px {
  @include top-(-$\px, $sm);
}

@mixin sm\:-right-px {
  @include right-(-$\px, $sm);
}

@mixin sm\:-bottom-px {
  @include bottom-(-$\px, $sm);
}

@mixin sm\:-left-px {
  @include left-(-$\px, $sm);
}

@mixin sm\:-inset-0\.5 {
  @include inset-(-$\0\.5, $sm);
}

@mixin sm\:-inset-x-0\.5 {
  @include inset-x-(-$\0\.5, $sm);
}

@mixin sm\:-inset-y-0\.5 {
  @include inset-y-(-$\0\.5, $sm);
}

@mixin sm\:-start-0\.5 {
  @include start-(-$\0\.5, $sm);
}

@mixin sm\:-end-0\.5 {
  @include end-(-$\0\.5, $sm);
}

@mixin sm\:-top-0\.5 {
  @include top-(-$\0\.5, $sm);
}

@mixin sm\:-right-0\.5 {
  @include right-(-$\0\.5, $sm);
}

@mixin sm\:-bottom-0\.5 {
  @include bottom-(-$\0\.5, $sm);
}

@mixin sm\:-left-0\.5 {
  @include left-(-$\0\.5, $sm);
}

@mixin sm\:-inset-1 {
  @include inset-(-$\1, $sm);
}

@mixin sm\:-inset-x-1 {
  @include inset-x-(-$\1, $sm);
}

@mixin sm\:-inset-y-1 {
  @include inset-y-(-$\1, $sm);
}

@mixin sm\:-start-1 {
  @include start-(-$\1, $sm);
}

@mixin sm\:-end-1 {
  @include end-(-$\1, $sm);
}

@mixin sm\:-top-1 {
  @include top-(-$\1, $sm);
}

@mixin sm\:-right-1 {
  @include right-(-$\1, $sm);
}

@mixin sm\:-bottom-1 {
  @include bottom-(-$\1, $sm);
}

@mixin sm\:-left-1 {
  @include left-(-$\1, $sm);
}

@mixin sm\:-inset-1\.5 {
  @include inset-(-$\1\.5, $sm);
}

@mixin sm\:-inset-x-1\.5 {
  @include inset-x-(-$\1\.5, $sm);
}

@mixin sm\:-inset-y-1\.5 {
  @include inset-y-(-$\1\.5, $sm);
}

@mixin sm\:-start-1\.5 {
  @include start-(-$\1\.5, $sm);
}

@mixin sm\:-end-1\.5 {
  @include end-(-$\1\.5, $sm);
}

@mixin sm\:-top-1\.5 {
  @include top-(-$\1\.5, $sm);
}

@mixin sm\:-right-1\.5 {
  @include right-(-$\1\.5, $sm);
}

@mixin sm\:-bottom-1\.5 {
  @include bottom-(-$\1\.5, $sm);
}

@mixin sm\:-left-1\.5 {
  @include left-(-$\1\.5, $sm);
}

@mixin sm\:-inset-2 {
  @include inset-(-$\2, $sm);
}

@mixin sm\:-inset-x-2 {
  @include inset-x-(-$\2, $sm);
}

@mixin sm\:-inset-y-2 {
  @include inset-y-(-$\2, $sm);
}

@mixin sm\:-start-2 {
  @include start-(-$\2, $sm);
}

@mixin sm\:-end-2 {
  @include end-(-$\2, $sm);
}

@mixin sm\:-top-2 {
  @include top-(-$\2, $sm);
}

@mixin sm\:-right-2 {
  @include right-(-$\2, $sm);
}

@mixin sm\:-bottom-2 {
  @include bottom-(-$\2, $sm);
}

@mixin sm\:-left-2 {
  @include left-(-$\2, $sm);
}

@mixin sm\:-inset-2\.5 {
  @include inset-(-$\2\.5, $sm);
}

@mixin sm\:-inset-x-2\.5 {
  @include inset-x-(-$\2\.5, $sm);
}

@mixin sm\:-inset-y-2\.5 {
  @include inset-y-(-$\2\.5, $sm);
}

@mixin sm\:-start-2\.5 {
  @include start-(-$\2\.5, $sm);
}

@mixin sm\:-end-2\.5 {
  @include end-(-$\2\.5, $sm);
}

@mixin sm\:-top-2\.5 {
  @include top-(-$\2\.5, $sm);
}

@mixin sm\:-right-2\.5 {
  @include right-(-$\2\.5, $sm);
}

@mixin sm\:-bottom-2\.5 {
  @include bottom-(-$\2\.5, $sm);
}

@mixin sm\:-left-2\.5 {
  @include left-(-$\2\.5, $sm);
}

@mixin sm\:-inset-3 {
  @include inset-(-$\3, $sm);
}

@mixin sm\:-inset-x-3 {
  @include inset-x-(-$\3, $sm);
}

@mixin sm\:-inset-y-3 {
  @include inset-y-(-$\3, $sm);
}

@mixin sm\:-start-3 {
  @include start-(-$\3, $sm);
}

@mixin sm\:-end-3 {
  @include end-(-$\3, $sm);
}

@mixin sm\:-top-3 {
  @include top-(-$\3, $sm);
}

@mixin sm\:-right-3 {
  @include right-(-$\3, $sm);
}

@mixin sm\:-bottom-3 {
  @include bottom-(-$\3, $sm);
}

@mixin sm\:-left-3 {
  @include left-(-$\3, $sm);
}

@mixin sm\:-inset-3\.5 {
  @include inset-(-$\3\.5, $sm);
}

@mixin sm\:-inset-x-3\.5 {
  @include inset-x-(-$\3\.5, $sm);
}

@mixin sm\:-inset-y-3\.5 {
  @include inset-y-(-$\3\.5, $sm);
}

@mixin sm\:-start-3\.5 {
  @include start-(-$\3\.5, $sm);
}

@mixin sm\:-end-3\.5 {
  @include end-(-$\3\.5, $sm);
}

@mixin sm\:-top-3\.5 {
  @include top-(-$\3\.5, $sm);
}

@mixin sm\:-right-3\.5 {
  @include right-(-$\3\.5, $sm);
}

@mixin sm\:-bottom-3\.5 {
  @include bottom-(-$\3\.5, $sm);
}

@mixin sm\:-left-3\.5 {
  @include left-(-$\3\.5, $sm);
}

@mixin sm\:-inset-4 {
  @include inset-(-$\4, $sm);
}

@mixin sm\:-inset-x-4 {
  @include inset-x-(-$\4, $sm);
}

@mixin sm\:-inset-y-4 {
  @include inset-y-(-$\4, $sm);
}

@mixin sm\:-start-4 {
  @include start-(-$\4, $sm);
}

@mixin sm\:-end-4 {
  @include end-(-$\4, $sm);
}

@mixin sm\:-top-4 {
  @include top-(-$\4, $sm);
}

@mixin sm\:-right-4 {
  @include right-(-$\4, $sm);
}

@mixin sm\:-bottom-4 {
  @include bottom-(-$\4, $sm);
}

@mixin sm\:-left-4 {
  @include left-(-$\4, $sm);
}

@mixin sm\:-inset-5 {
  @include inset-(-$\5, $sm);
}

@mixin sm\:-inset-x-5 {
  @include inset-x-(-$\5, $sm);
}

@mixin sm\:-inset-y-5 {
  @include inset-y-(-$\5, $sm);
}

@mixin sm\:-start-5 {
  @include start-(-$\5, $sm);
}

@mixin sm\:-end-5 {
  @include end-(-$\5, $sm);
}

@mixin sm\:-top-5 {
  @include top-(-$\5, $sm);
}

@mixin sm\:-right-5 {
  @include right-(-$\5, $sm);
}

@mixin sm\:-bottom-5 {
  @include bottom-(-$\5, $sm);
}

@mixin sm\:-left-5 {
  @include left-(-$\5, $sm);
}

@mixin sm\:-inset-6 {
  @include inset-(-$\6, $sm);
}

@mixin sm\:-inset-x-6 {
  @include inset-x-(-$\6, $sm);
}

@mixin sm\:-inset-y-6 {
  @include inset-y-(-$\6, $sm);
}

@mixin sm\:-start-6 {
  @include start-(-$\6, $sm);
}

@mixin sm\:-end-6 {
  @include end-(-$\6, $sm);
}

@mixin sm\:-top-6 {
  @include top-(-$\6, $sm);
}

@mixin sm\:-right-6 {
  @include right-(-$\6, $sm);
}

@mixin sm\:-bottom-6 {
  @include bottom-(-$\6, $sm);
}

@mixin sm\:-left-6 {
  @include left-(-$\6, $sm);
}

@mixin sm\:-inset-7 {
  @include inset-(-$\7, $sm);
}

@mixin sm\:-inset-x-7 {
  @include inset-x-(-$\7, $sm);
}

@mixin sm\:-inset-y-7 {
  @include inset-y-(-$\7, $sm);
}

@mixin sm\:-start-7 {
  @include start-(-$\7, $sm);
}

@mixin sm\:-end-7 {
  @include end-(-$\7, $sm);
}

@mixin sm\:-top-7 {
  @include top-(-$\7, $sm);
}

@mixin sm\:-right-7 {
  @include right-(-$\7, $sm);
}

@mixin sm\:-bottom-7 {
  @include bottom-(-$\7, $sm);
}

@mixin sm\:-left-7 {
  @include left-(-$\7, $sm);
}

@mixin sm\:-inset-8 {
  @include inset-(-$\8, $sm);
}

@mixin sm\:-inset-x-8 {
  @include inset-x-(-$\8, $sm);
}

@mixin sm\:-inset-y-8 {
  @include inset-y-(-$\8, $sm);
}

@mixin sm\:-start-8 {
  @include start-(-$\8, $sm);
}

@mixin sm\:-end-8 {
  @include end-(-$\8, $sm);
}

@mixin sm\:-top-8 {
  @include top-(-$\8, $sm);
}

@mixin sm\:-right-8 {
  @include right-(-$\8, $sm);
}

@mixin sm\:-bottom-8 {
  @include bottom-(-$\8, $sm);
}

@mixin sm\:-left-8 {
  @include left-(-$\8, $sm);
}

@mixin sm\:-inset-9 {
  @include inset-(-$\9, $sm);
}

@mixin sm\:-inset-x-9 {
  @include inset-x-(-$\9, $sm);
}

@mixin sm\:-inset-y-9 {
  @include inset-y-(-$\9, $sm);
}

@mixin sm\:-start-9 {
  @include start-(-$\9, $sm);
}

@mixin sm\:-end-9 {
  @include end-(-$\9, $sm);
}

@mixin sm\:-top-9 {
  @include top-(-$\9, $sm);
}

@mixin sm\:-right-9 {
  @include right-(-$\9, $sm);
}

@mixin sm\:-bottom-9 {
  @include bottom-(-$\9, $sm);
}

@mixin sm\:-left-9 {
  @include left-(-$\9, $sm);
}

@mixin sm\:-inset-10 {
  @include inset-(-$\10, $sm);
}

@mixin sm\:-inset-x-10 {
  @include inset-x-(-$\10, $sm);
}

@mixin sm\:-inset-y-10 {
  @include inset-y-(-$\10, $sm);
}

@mixin sm\:-start-10 {
  @include start-(-$\10, $sm);
}

@mixin sm\:-end-10 {
  @include end-(-$\10, $sm);
}

@mixin sm\:-top-10 {
  @include top-(-$\10, $sm);
}

@mixin sm\:-right-10 {
  @include right-(-$\10, $sm);
}

@mixin sm\:-bottom-10 {
  @include bottom-(-$\10, $sm);
}

@mixin sm\:-left-10 {
  @include left-(-$\10, $sm);
}

@mixin sm\:-inset-11 {
  @include inset-(-$\11, $sm);
}

@mixin sm\:-inset-x-11 {
  @include inset-x-(-$\11, $sm);
}

@mixin sm\:-inset-y-11 {
  @include inset-y-(-$\11, $sm);
}

@mixin sm\:-start-11 {
  @include start-(-$\11, $sm);
}

@mixin sm\:-end-11 {
  @include end-(-$\11, $sm);
}

@mixin sm\:-top-11 {
  @include top-(-$\11, $sm);
}

@mixin sm\:-right-11 {
  @include right-(-$\11, $sm);
}

@mixin sm\:-bottom-11 {
  @include bottom-(-$\11, $sm);
}

@mixin sm\:-left-11 {
  @include left-(-$\11, $sm);
}

@mixin sm\:-inset-12 {
  @include inset-(-$\12, $sm);
}

@mixin sm\:-inset-x-12 {
  @include inset-x-(-$\12, $sm);
}

@mixin sm\:-inset-y-12 {
  @include inset-y-(-$\12, $sm);
}

@mixin sm\:-start-12 {
  @include start-(-$\12, $sm);
}

@mixin sm\:-end-12 {
  @include end-(-$\12, $sm);
}

@mixin sm\:-top-12 {
  @include top-(-$\12, $sm);
}

@mixin sm\:-right-12 {
  @include right-(-$\12, $sm);
}

@mixin sm\:-bottom-12 {
  @include bottom-(-$\12, $sm);
}

@mixin sm\:-left-12 {
  @include left-(-$\12, $sm);
}

@mixin sm\:-inset-14 {
  @include inset-(-$\14, $sm);
}

@mixin sm\:-inset-x-14 {
  @include inset-x-(-$\14, $sm);
}

@mixin sm\:-inset-y-14 {
  @include inset-y-(-$\14, $sm);
}

@mixin sm\:-start-14 {
  @include start-(-$\14, $sm);
}

@mixin sm\:-end-14 {
  @include end-(-$\14, $sm);
}

@mixin sm\:-top-14 {
  @include top-(-$\14, $sm);
}

@mixin sm\:-right-14 {
  @include right-(-$\14, $sm);
}

@mixin sm\:-bottom-14 {
  @include bottom-(-$\14, $sm);
}

@mixin sm\:-left-14 {
  @include left-(-$\14, $sm);
}

@mixin sm\:-inset-16 {
  @include inset-(-$\16, $sm);
}

@mixin sm\:-inset-x-16 {
  @include inset-x-(-$\16, $sm);
}

@mixin sm\:-inset-y-16 {
  @include inset-y-(-$\16, $sm);
}

@mixin sm\:-start-16 {
  @include start-(-$\16, $sm);
}

@mixin sm\:-end-16 {
  @include end-(-$\16, $sm);
}

@mixin sm\:-top-16 {
  @include top-(-$\16, $sm);
}

@mixin sm\:-right-16 {
  @include right-(-$\16, $sm);
}

@mixin sm\:-bottom-16 {
  @include bottom-(-$\16, $sm);
}

@mixin sm\:-left-16 {
  @include left-(-$\16, $sm);
}

@mixin sm\:-inset-20 {
  @include inset-(-$\20, $sm);
}

@mixin sm\:-inset-x-20 {
  @include inset-x-(-$\20, $sm);
}

@mixin sm\:-inset-y-20 {
  @include inset-y-(-$\20, $sm);
}

@mixin sm\:-start-20 {
  @include start-(-$\20, $sm);
}

@mixin sm\:-end-20 {
  @include end-(-$\20, $sm);
}

@mixin sm\:-top-20 {
  @include top-(-$\20, $sm);
}

@mixin sm\:-right-20 {
  @include right-(-$\20, $sm);
}

@mixin sm\:-bottom-20 {
  @include bottom-(-$\20, $sm);
}

@mixin sm\:-left-20 {
  @include left-(-$\20, $sm);
}

@mixin sm\:-inset-24 {
  @include inset-(-$\24, $sm);
}

@mixin sm\:-inset-x-24 {
  @include inset-x-(-$\24, $sm);
}

@mixin sm\:-inset-y-24 {
  @include inset-y-(-$\24, $sm);
}

@mixin sm\:-start-24 {
  @include start-(-$\24, $sm);
}

@mixin sm\:-end-24 {
  @include end-(-$\24, $sm);
}

@mixin sm\:-top-24 {
  @include top-(-$\24, $sm);
}

@mixin sm\:-right-24 {
  @include right-(-$\24, $sm);
}

@mixin sm\:-bottom-24 {
  @include bottom-(-$\24, $sm);
}

@mixin sm\:-left-24 {
  @include left-(-$\24, $sm);
}

@mixin sm\:-inset-28 {
  @include inset-(-$\28, $sm);
}

@mixin sm\:-inset-x-28 {
  @include inset-x-(-$\28, $sm);
}

@mixin sm\:-inset-y-28 {
  @include inset-y-(-$\28, $sm);
}

@mixin sm\:-start-28 {
  @include start-(-$\28, $sm);
}

@mixin sm\:-end-28 {
  @include end-(-$\28, $sm);
}

@mixin sm\:-top-28 {
  @include top-(-$\28, $sm);
}

@mixin sm\:-right-28 {
  @include right-(-$\28, $sm);
}

@mixin sm\:-bottom-28 {
  @include bottom-(-$\28, $sm);
}

@mixin sm\:-left-28 {
  @include left-(-$\28, $sm);
}

@mixin sm\:-inset-32 {
  @include inset-(-$\32, $sm);
}

@mixin sm\:-inset-x-32 {
  @include inset-x-(-$\32, $sm);
}

@mixin sm\:-inset-y-32 {
  @include inset-y-(-$\32, $sm);
}

@mixin sm\:-start-32 {
  @include start-(-$\32, $sm);
}

@mixin sm\:-end-32 {
  @include end-(-$\32, $sm);
}

@mixin sm\:-top-32 {
  @include top-(-$\32, $sm);
}

@mixin sm\:-right-32 {
  @include right-(-$\32, $sm);
}

@mixin sm\:-bottom-32 {
  @include bottom-(-$\32, $sm);
}

@mixin sm\:-left-32 {
  @include left-(-$\32, $sm);
}

@mixin sm\:-inset-36 {
  @include inset-(-$\36, $sm);
}

@mixin sm\:-inset-x-36 {
  @include inset-x-(-$\36, $sm);
}

@mixin sm\:-inset-y-36 {
  @include inset-y-(-$\36, $sm);
}

@mixin sm\:-start-36 {
  @include start-(-$\36, $sm);
}

@mixin sm\:-end-36 {
  @include end-(-$\36, $sm);
}

@mixin sm\:-top-36 {
  @include top-(-$\36, $sm);
}

@mixin sm\:-right-36 {
  @include right-(-$\36, $sm);
}

@mixin sm\:-bottom-36 {
  @include bottom-(-$\36, $sm);
}

@mixin sm\:-left-36 {
  @include left-(-$\36, $sm);
}

@mixin sm\:-inset-40 {
  @include inset-(-$\40, $sm);
}

@mixin sm\:-inset-x-40 {
  @include inset-x-(-$\40, $sm);
}

@mixin sm\:-inset-y-40 {
  @include inset-y-(-$\40, $sm);
}

@mixin sm\:-start-40 {
  @include start-(-$\40, $sm);
}

@mixin sm\:-end-40 {
  @include end-(-$\40, $sm);
}

@mixin sm\:-top-40 {
  @include top-(-$\40, $sm);
}

@mixin sm\:-right-40 {
  @include right-(-$\40, $sm);
}

@mixin sm\:-bottom-40 {
  @include bottom-(-$\40, $sm);
}

@mixin sm\:-left-40 {
  @include left-(-$\40, $sm);
}

@mixin sm\:-inset-44 {
  @include inset-(-$\44, $sm);
}

@mixin sm\:-inset-x-44 {
  @include inset-x-(-$\44, $sm);
}

@mixin sm\:-inset-y-44 {
  @include inset-y-(-$\44, $sm);
}

@mixin sm\:-start-44 {
  @include start-(-$\44, $sm);
}

@mixin sm\:-end-44 {
  @include end-(-$\44, $sm);
}

@mixin sm\:-top-44 {
  @include top-(-$\44, $sm);
}

@mixin sm\:-right-44 {
  @include right-(-$\44, $sm);
}

@mixin sm\:-bottom-44 {
  @include bottom-(-$\44, $sm);
}

@mixin sm\:-left-44 {
  @include left-(-$\44, $sm);
}

@mixin sm\:-inset-48 {
  @include inset-(-$\48, $sm);
}

@mixin sm\:-inset-x-48 {
  @include inset-x-(-$\48, $sm);
}

@mixin sm\:-inset-y-48 {
  @include inset-y-(-$\48, $sm);
}

@mixin sm\:-start-48 {
  @include start-(-$\48, $sm);
}

@mixin sm\:-end-48 {
  @include end-(-$\48, $sm);
}

@mixin sm\:-top-48 {
  @include top-(-$\48, $sm);
}

@mixin sm\:-right-48 {
  @include right-(-$\48, $sm);
}

@mixin sm\:-bottom-48 {
  @include bottom-(-$\48, $sm);
}

@mixin sm\:-left-48 {
  @include left-(-$\48, $sm);
}

@mixin sm\:-inset-52 {
  @include inset-(-$\52, $sm);
}

@mixin sm\:-inset-x-52 {
  @include inset-x-(-$\52, $sm);
}

@mixin sm\:-inset-y-52 {
  @include inset-y-(-$\52, $sm);
}

@mixin sm\:-start-52 {
  @include start-(-$\52, $sm);
}

@mixin sm\:-end-52 {
  @include end-(-$\52, $sm);
}

@mixin sm\:-top-52 {
  @include top-(-$\52, $sm);
}

@mixin sm\:-right-52 {
  @include right-(-$\52, $sm);
}

@mixin sm\:-bottom-52 {
  @include bottom-(-$\52, $sm);
}

@mixin sm\:-left-52 {
  @include left-(-$\52, $sm);
}

@mixin sm\:-inset-56 {
  @include inset-(-$\56, $sm);
}

@mixin sm\:-inset-x-56 {
  @include inset-x-(-$\56, $sm);
}

@mixin sm\:-inset-y-56 {
  @include inset-y-(-$\56, $sm);
}

@mixin sm\:-start-56 {
  @include start-(-$\56, $sm);
}

@mixin sm\:-end-56 {
  @include end-(-$\56, $sm);
}

@mixin sm\:-top-56 {
  @include top-(-$\56, $sm);
}

@mixin sm\:-right-56 {
  @include right-(-$\56, $sm);
}

@mixin sm\:-bottom-56 {
  @include bottom-(-$\56, $sm);
}

@mixin sm\:-left-56 {
  @include left-(-$\56, $sm);
}

@mixin sm\:-inset-60 {
  @include inset-(-$\60, $sm);
}

@mixin sm\:-inset-x-60 {
  @include inset-x-(-$\60, $sm);
}

@mixin sm\:-inset-y-60 {
  @include inset-y-(-$\60, $sm);
}

@mixin sm\:-start-60 {
  @include start-(-$\60, $sm);
}

@mixin sm\:-end-60 {
  @include end-(-$\60, $sm);
}

@mixin sm\:-top-60 {
  @include top-(-$\60, $sm);
}

@mixin sm\:-right-60 {
  @include right-(-$\60, $sm);
}

@mixin sm\:-bottom-60 {
  @include bottom-(-$\60, $sm);
}

@mixin sm\:-left-60 {
  @include left-(-$\60, $sm);
}

@mixin sm\:-inset-64 {
  @include inset-(-$\64, $sm);
}

@mixin sm\:-inset-x-64 {
  @include inset-x-(-$\64, $sm);
}

@mixin sm\:-inset-y-64 {
  @include inset-y-(-$\64, $sm);
}

@mixin sm\:-start-64 {
  @include start-(-$\64, $sm);
}

@mixin sm\:-end-64 {
  @include end-(-$\64, $sm);
}

@mixin sm\:-top-64 {
  @include top-(-$\64, $sm);
}

@mixin sm\:-right-64 {
  @include right-(-$\64, $sm);
}

@mixin sm\:-bottom-64 {
  @include bottom-(-$\64, $sm);
}

@mixin sm\:-left-64 {
  @include left-(-$\64, $sm);
}

@mixin sm\:-inset-72 {
  @include inset-(-$\72, $sm);
}

@mixin sm\:-inset-x-72 {
  @include inset-x-(-$\72, $sm);
}

@mixin sm\:-inset-y-72 {
  @include inset-y-(-$\72, $sm);
}

@mixin sm\:-start-72 {
  @include start-(-$\72, $sm);
}

@mixin sm\:-end-72 {
  @include end-(-$\72, $sm);
}

@mixin sm\:-top-72 {
  @include top-(-$\72, $sm);
}

@mixin sm\:-right-72 {
  @include right-(-$\72, $sm);
}

@mixin sm\:-bottom-72 {
  @include bottom-(-$\72, $sm);
}

@mixin sm\:-left-72 {
  @include left-(-$\72, $sm);
}

@mixin sm\:-inset-80 {
  @include inset-(-$\80, $sm);
}

@mixin sm\:-inset-x-80 {
  @include inset-x-(-$\80, $sm);
}

@mixin sm\:-inset-y-80 {
  @include inset-y-(-$\80, $sm);
}

@mixin sm\:-start-80 {
  @include start-(-$\80, $sm);
}

@mixin sm\:-end-80 {
  @include end-(-$\80, $sm);
}

@mixin sm\:-top-80 {
  @include top-(-$\80, $sm);
}

@mixin sm\:-right-80 {
  @include right-(-$\80, $sm);
}

@mixin sm\:-bottom-80 {
  @include bottom-(-$\80, $sm);
}

@mixin sm\:-left-80 {
  @include left-(-$\80, $sm);
}

@mixin sm\:-inset-96 {
  @include inset-(-$\96, $sm);
}

@mixin sm\:-inset-x-96 {
  @include inset-x-(-$\96, $sm);
}

@mixin sm\:-inset-y-96 {
  @include inset-y-(-$\96, $sm);
}

@mixin sm\:-start-96 {
  @include start-(-$\96, $sm);
}

@mixin sm\:-end-96 {
  @include end-(-$\96, $sm);
}

@mixin sm\:-top-96 {
  @include top-(-$\96, $sm);
}

@mixin sm\:-right-96 {
  @include right-(-$\96, $sm);
}

@mixin sm\:-bottom-96 {
  @include bottom-(-$\96, $sm);
}

@mixin sm\:-left-96 {
  @include left-(-$\96, $sm);
}

@mixin sm\:-inset-1\/2 {
  @include inset-(-50%, $sm);
}

@mixin sm\:-inset-1\/3 {
  @include inset-(-33.333333%, $sm);
}

@mixin sm\:-inset-2\/3 {
  @include inset-(-66.666667%, $sm);
}

@mixin sm\:-inset-1\/4 {
  @include inset-(-25%, $sm);
}

@mixin sm\:-inset-2\/4 {
  @include inset-(-50%, $sm);
}

@mixin sm\:-inset-3\/4 {
  @include inset-(-75%, $sm);
}

@mixin sm\:-inset-full {
  @include inset-(-100%, $sm);
}

@mixin sm\:-inset-x-1\/2 {
  @include inset-x-(-50%, $sm);
}

@mixin sm\:-inset-x-1\/3 {
  @include inset-x-(-33.333333%, $sm);
}

@mixin sm\:-inset-x-2\/3 {
  @include inset-x-(-66.666667%, $sm);
}

@mixin sm\:-inset-x-1\/4 {
  @include inset-x-(-25%, $sm);
}

@mixin sm\:-inset-x-2\/4 {
  @include inset-x-(-50%, $sm);
}

@mixin sm\:-inset-x-3\/4 {
  @include inset-x-(-75%, $sm);
}

@mixin sm\:-inset-x-full {
  @include inset-x-(-100%, $sm);
}

@mixin sm\:-inset-y-1\/2 {
  @include inset-y-(-50%, $sm);
}

@mixin sm\:-inset-y-1\/3 {
  @include inset-y-(-33.333333%, $sm);
}

@mixin sm\:-inset-y-2\/3 {
  @include inset-y-(-66.666667%, $sm);
}

@mixin sm\:-inset-y-1\/4 {
  @include inset-y-(-25%, $sm);
}

@mixin sm\:-inset-y-2\/4 {
  @include inset-y-(-50%, $sm);
}

@mixin sm\:-inset-y-3\/4 {
  @include inset-y-(-75%, $sm);
}

@mixin sm\:-inset-y-full {
  @include inset-y-(-100%, $sm);
}

@mixin sm\:-start-1\/2 {
  @include start-(-50%, $sm);
}

@mixin sm\:-start-1\/3 {
  @include start-(-33.333333%, $sm);
}

@mixin sm\:-start-2\/3 {
  @include start-(-66.666667%, $sm);
}

@mixin sm\:-start-1\/4 {
  @include start-(-25%, $sm);
}

@mixin sm\:-start-2\/4 {
  @include start-(-50%, $sm);
}

@mixin sm\:-start-3\/4 {
  @include start-(-75%, $sm);
}

@mixin sm\:-start-full {
  @include start-(-100%, $sm);
}

@mixin sm\:-end-1\/2 {
  @include end-(-50%, $sm);
}

@mixin sm\:-end-1\/3 {
  @include end-(-33.333333%, $sm);
}

@mixin sm\:-end-2\/3 {
  @include end-(-66.666667%, $sm);
}

@mixin sm\:-end-1\/4 {
  @include end-(-25%, $sm);
}

@mixin sm\:-end-2\/4 {
  @include end-(-50%, $sm);
}

@mixin sm\:-end-3\/4 {
  @include end-(-75%, $sm);
}

@mixin sm\:-end-full {
  @include end-(-100%, $sm);
}

@mixin sm\:-top-1\/2 {
  @include top-(-50%, $sm);
}

@mixin sm\:-top-1\/3 {
  @include top-(-33.333333%, $sm);
}

@mixin sm\:-top-2\/3 {
  @include top-(-66.666667%, $sm);
}

@mixin sm\:-top-1\/4 {
  @include top-(-25%, $sm);
}

@mixin sm\:-top-2\/4 {
  @include top-(-50%, $sm);
}

@mixin sm\:-top-3\/4 {
  @include top-(-75%, $sm);
}

@mixin sm\:-top-full {
  @include top-(-100%, $sm);
}

@mixin sm\:-right-1\/2 {
  @include right-(-50%, $sm);
}

@mixin sm\:-right-1\/3 {
  @include right-(-33.333333%, $sm);
}

@mixin sm\:-right-2\/3 {
  @include right-(-66.666667%, $sm);
}

@mixin sm\:-right-1\/4 {
  @include right-(-25%, $sm);
}

@mixin sm\:-right-2\/4 {
  @include right-(-50%, $sm);
}

@mixin sm\:-right-3\/4 {
  @include right-(-75%, $sm);
}

@mixin sm\:-right-full {
  @include right-(-100%, $sm);
}

@mixin sm\:-bottom-1\/2 {
  @include bottom-(-50%, $sm);
}

@mixin sm\:-bottom-1\/3 {
  @include bottom-(-33.333333%, $sm);
}

@mixin sm\:-bottom-2\/3 {
  @include bottom-(-66.666667%, $sm);
}

@mixin sm\:-bottom-1\/4 {
  @include bottom-(-25%, $sm);
}

@mixin sm\:-bottom-2\/4 {
  @include bottom-(-50%, $sm);
}

@mixin sm\:-bottom-3\/4 {
  @include bottom-(-75%, $sm);
}

@mixin sm\:-bottom-full {
  @include bottom-(-100%, $sm);
}

@mixin sm\:-left-1\/2 {
  @include left-(-50%, $sm);
}

@mixin sm\:-left-1\/3 {
  @include left-(-33.333333%, $sm);
}

@mixin sm\:-left-2\/3 {
  @include left-(-66.666667%, $sm);
}

@mixin sm\:-left-1\/4 {
  @include left-(-25%, $sm);
}

@mixin sm\:-left-2\/4 {
  @include left-(-50%, $sm);
}

@mixin sm\:-left-3\/4 {
  @include left-(-75%, $sm);
}

@mixin sm\:-left-full {
  @include left-(-100%, $sm);
}

@mixin md\:-inset-0 {
  @include inset-(-$\0, $md);
}

@mixin md\:-inset-x-0 {
  @include inset-x-(-$\0, $md);
}

@mixin md\:-inset-y-0 {
  @include inset-y-(-$\0, $md);
}

@mixin md\:-start-0 {
  @include start-(-$\0, $md);
}

@mixin md\:-end-0 {
  @include end-(-$\0, $md);
}

@mixin md\:-top-0 {
  @include top-(-$\0, $md);
}

@mixin md\:-right-0 {
  @include right-(-$\0, $md);
}

@mixin md\:-bottom-0 {
  @include bottom-(-$\0, $md);
}

@mixin md\:-left-0 {
  @include left-(-$\0, $md);
}

@mixin md\:-inset-px {
  @include inset-(-$\px, $md);
}

@mixin md\:-inset-x-px {
  @include inset-x-(-$\px, $md);
}

@mixin md\:-inset-y-px {
  @include inset-y-(-$\px, $md);
}

@mixin md\:-start-px {
  @include start-(-$\px, $md);
}

@mixin md\:-end-px {
  @include end-(-$\px, $md);
}

@mixin md\:-top-px {
  @include top-(-$\px, $md);
}

@mixin md\:-right-px {
  @include right-(-$\px, $md);
}

@mixin md\:-bottom-px {
  @include bottom-(-$\px, $md);
}

@mixin md\:-left-px {
  @include left-(-$\px, $md);
}

@mixin md\:-inset-0\.5 {
  @include inset-(-$\0\.5, $md);
}

@mixin md\:-inset-x-0\.5 {
  @include inset-x-(-$\0\.5, $md);
}

@mixin md\:-inset-y-0\.5 {
  @include inset-y-(-$\0\.5, $md);
}

@mixin md\:-start-0\.5 {
  @include start-(-$\0\.5, $md);
}

@mixin md\:-end-0\.5 {
  @include end-(-$\0\.5, $md);
}

@mixin md\:-top-0\.5 {
  @include top-(-$\0\.5, $md);
}

@mixin md\:-right-0\.5 {
  @include right-(-$\0\.5, $md);
}

@mixin md\:-bottom-0\.5 {
  @include bottom-(-$\0\.5, $md);
}

@mixin md\:-left-0\.5 {
  @include left-(-$\0\.5, $md);
}

@mixin md\:-inset-1 {
  @include inset-(-$\1, $md);
}

@mixin md\:-inset-x-1 {
  @include inset-x-(-$\1, $md);
}

@mixin md\:-inset-y-1 {
  @include inset-y-(-$\1, $md);
}

@mixin md\:-start-1 {
  @include start-(-$\1, $md);
}

@mixin md\:-end-1 {
  @include end-(-$\1, $md);
}

@mixin md\:-top-1 {
  @include top-(-$\1, $md);
}

@mixin md\:-right-1 {
  @include right-(-$\1, $md);
}

@mixin md\:-bottom-1 {
  @include bottom-(-$\1, $md);
}

@mixin md\:-left-1 {
  @include left-(-$\1, $md);
}

@mixin md\:-inset-1\.5 {
  @include inset-(-$\1\.5, $md);
}

@mixin md\:-inset-x-1\.5 {
  @include inset-x-(-$\1\.5, $md);
}

@mixin md\:-inset-y-1\.5 {
  @include inset-y-(-$\1\.5, $md);
}

@mixin md\:-start-1\.5 {
  @include start-(-$\1\.5, $md);
}

@mixin md\:-end-1\.5 {
  @include end-(-$\1\.5, $md);
}

@mixin md\:-top-1\.5 {
  @include top-(-$\1\.5, $md);
}

@mixin md\:-right-1\.5 {
  @include right-(-$\1\.5, $md);
}

@mixin md\:-bottom-1\.5 {
  @include bottom-(-$\1\.5, $md);
}

@mixin md\:-left-1\.5 {
  @include left-(-$\1\.5, $md);
}

@mixin md\:-inset-2 {
  @include inset-(-$\2, $md);
}

@mixin md\:-inset-x-2 {
  @include inset-x-(-$\2, $md);
}

@mixin md\:-inset-y-2 {
  @include inset-y-(-$\2, $md);
}

@mixin md\:-start-2 {
  @include start-(-$\2, $md);
}

@mixin md\:-end-2 {
  @include end-(-$\2, $md);
}

@mixin md\:-top-2 {
  @include top-(-$\2, $md);
}

@mixin md\:-right-2 {
  @include right-(-$\2, $md);
}

@mixin md\:-bottom-2 {
  @include bottom-(-$\2, $md);
}

@mixin md\:-left-2 {
  @include left-(-$\2, $md);
}

@mixin md\:-inset-2\.5 {
  @include inset-(-$\2\.5, $md);
}

@mixin md\:-inset-x-2\.5 {
  @include inset-x-(-$\2\.5, $md);
}

@mixin md\:-inset-y-2\.5 {
  @include inset-y-(-$\2\.5, $md);
}

@mixin md\:-start-2\.5 {
  @include start-(-$\2\.5, $md);
}

@mixin md\:-end-2\.5 {
  @include end-(-$\2\.5, $md);
}

@mixin md\:-top-2\.5 {
  @include top-(-$\2\.5, $md);
}

@mixin md\:-right-2\.5 {
  @include right-(-$\2\.5, $md);
}

@mixin md\:-bottom-2\.5 {
  @include bottom-(-$\2\.5, $md);
}

@mixin md\:-left-2\.5 {
  @include left-(-$\2\.5, $md);
}

@mixin md\:-inset-3 {
  @include inset-(-$\3, $md);
}

@mixin md\:-inset-x-3 {
  @include inset-x-(-$\3, $md);
}

@mixin md\:-inset-y-3 {
  @include inset-y-(-$\3, $md);
}

@mixin md\:-start-3 {
  @include start-(-$\3, $md);
}

@mixin md\:-end-3 {
  @include end-(-$\3, $md);
}

@mixin md\:-top-3 {
  @include top-(-$\3, $md);
}

@mixin md\:-right-3 {
  @include right-(-$\3, $md);
}

@mixin md\:-bottom-3 {
  @include bottom-(-$\3, $md);
}

@mixin md\:-left-3 {
  @include left-(-$\3, $md);
}

@mixin md\:-inset-3\.5 {
  @include inset-(-$\3\.5, $md);
}

@mixin md\:-inset-x-3\.5 {
  @include inset-x-(-$\3\.5, $md);
}

@mixin md\:-inset-y-3\.5 {
  @include inset-y-(-$\3\.5, $md);
}

@mixin md\:-start-3\.5 {
  @include start-(-$\3\.5, $md);
}

@mixin md\:-end-3\.5 {
  @include end-(-$\3\.5, $md);
}

@mixin md\:-top-3\.5 {
  @include top-(-$\3\.5, $md);
}

@mixin md\:-right-3\.5 {
  @include right-(-$\3\.5, $md);
}

@mixin md\:-bottom-3\.5 {
  @include bottom-(-$\3\.5, $md);
}

@mixin md\:-left-3\.5 {
  @include left-(-$\3\.5, $md);
}

@mixin md\:-inset-4 {
  @include inset-(-$\4, $md);
}

@mixin md\:-inset-x-4 {
  @include inset-x-(-$\4, $md);
}

@mixin md\:-inset-y-4 {
  @include inset-y-(-$\4, $md);
}

@mixin md\:-start-4 {
  @include start-(-$\4, $md);
}

@mixin md\:-end-4 {
  @include end-(-$\4, $md);
}

@mixin md\:-top-4 {
  @include top-(-$\4, $md);
}

@mixin md\:-right-4 {
  @include right-(-$\4, $md);
}

@mixin md\:-bottom-4 {
  @include bottom-(-$\4, $md);
}

@mixin md\:-left-4 {
  @include left-(-$\4, $md);
}

@mixin md\:-inset-5 {
  @include inset-(-$\5, $md);
}

@mixin md\:-inset-x-5 {
  @include inset-x-(-$\5, $md);
}

@mixin md\:-inset-y-5 {
  @include inset-y-(-$\5, $md);
}

@mixin md\:-start-5 {
  @include start-(-$\5, $md);
}

@mixin md\:-end-5 {
  @include end-(-$\5, $md);
}

@mixin md\:-top-5 {
  @include top-(-$\5, $md);
}

@mixin md\:-right-5 {
  @include right-(-$\5, $md);
}

@mixin md\:-bottom-5 {
  @include bottom-(-$\5, $md);
}

@mixin md\:-left-5 {
  @include left-(-$\5, $md);
}

@mixin md\:-inset-6 {
  @include inset-(-$\6, $md);
}

@mixin md\:-inset-x-6 {
  @include inset-x-(-$\6, $md);
}

@mixin md\:-inset-y-6 {
  @include inset-y-(-$\6, $md);
}

@mixin md\:-start-6 {
  @include start-(-$\6, $md);
}

@mixin md\:-end-6 {
  @include end-(-$\6, $md);
}

@mixin md\:-top-6 {
  @include top-(-$\6, $md);
}

@mixin md\:-right-6 {
  @include right-(-$\6, $md);
}

@mixin md\:-bottom-6 {
  @include bottom-(-$\6, $md);
}

@mixin md\:-left-6 {
  @include left-(-$\6, $md);
}

@mixin md\:-inset-7 {
  @include inset-(-$\7, $md);
}

@mixin md\:-inset-x-7 {
  @include inset-x-(-$\7, $md);
}

@mixin md\:-inset-y-7 {
  @include inset-y-(-$\7, $md);
}

@mixin md\:-start-7 {
  @include start-(-$\7, $md);
}

@mixin md\:-end-7 {
  @include end-(-$\7, $md);
}

@mixin md\:-top-7 {
  @include top-(-$\7, $md);
}

@mixin md\:-right-7 {
  @include right-(-$\7, $md);
}

@mixin md\:-bottom-7 {
  @include bottom-(-$\7, $md);
}

@mixin md\:-left-7 {
  @include left-(-$\7, $md);
}

@mixin md\:-inset-8 {
  @include inset-(-$\8, $md);
}

@mixin md\:-inset-x-8 {
  @include inset-x-(-$\8, $md);
}

@mixin md\:-inset-y-8 {
  @include inset-y-(-$\8, $md);
}

@mixin md\:-start-8 {
  @include start-(-$\8, $md);
}

@mixin md\:-end-8 {
  @include end-(-$\8, $md);
}

@mixin md\:-top-8 {
  @include top-(-$\8, $md);
}

@mixin md\:-right-8 {
  @include right-(-$\8, $md);
}

@mixin md\:-bottom-8 {
  @include bottom-(-$\8, $md);
}

@mixin md\:-left-8 {
  @include left-(-$\8, $md);
}

@mixin md\:-inset-9 {
  @include inset-(-$\9, $md);
}

@mixin md\:-inset-x-9 {
  @include inset-x-(-$\9, $md);
}

@mixin md\:-inset-y-9 {
  @include inset-y-(-$\9, $md);
}

@mixin md\:-start-9 {
  @include start-(-$\9, $md);
}

@mixin md\:-end-9 {
  @include end-(-$\9, $md);
}

@mixin md\:-top-9 {
  @include top-(-$\9, $md);
}

@mixin md\:-right-9 {
  @include right-(-$\9, $md);
}

@mixin md\:-bottom-9 {
  @include bottom-(-$\9, $md);
}

@mixin md\:-left-9 {
  @include left-(-$\9, $md);
}

@mixin md\:-inset-10 {
  @include inset-(-$\10, $md);
}

@mixin md\:-inset-x-10 {
  @include inset-x-(-$\10, $md);
}

@mixin md\:-inset-y-10 {
  @include inset-y-(-$\10, $md);
}

@mixin md\:-start-10 {
  @include start-(-$\10, $md);
}

@mixin md\:-end-10 {
  @include end-(-$\10, $md);
}

@mixin md\:-top-10 {
  @include top-(-$\10, $md);
}

@mixin md\:-right-10 {
  @include right-(-$\10, $md);
}

@mixin md\:-bottom-10 {
  @include bottom-(-$\10, $md);
}

@mixin md\:-left-10 {
  @include left-(-$\10, $md);
}

@mixin md\:-inset-11 {
  @include inset-(-$\11, $md);
}

@mixin md\:-inset-x-11 {
  @include inset-x-(-$\11, $md);
}

@mixin md\:-inset-y-11 {
  @include inset-y-(-$\11, $md);
}

@mixin md\:-start-11 {
  @include start-(-$\11, $md);
}

@mixin md\:-end-11 {
  @include end-(-$\11, $md);
}

@mixin md\:-top-11 {
  @include top-(-$\11, $md);
}

@mixin md\:-right-11 {
  @include right-(-$\11, $md);
}

@mixin md\:-bottom-11 {
  @include bottom-(-$\11, $md);
}

@mixin md\:-left-11 {
  @include left-(-$\11, $md);
}

@mixin md\:-inset-12 {
  @include inset-(-$\12, $md);
}

@mixin md\:-inset-x-12 {
  @include inset-x-(-$\12, $md);
}

@mixin md\:-inset-y-12 {
  @include inset-y-(-$\12, $md);
}

@mixin md\:-start-12 {
  @include start-(-$\12, $md);
}

@mixin md\:-end-12 {
  @include end-(-$\12, $md);
}

@mixin md\:-top-12 {
  @include top-(-$\12, $md);
}

@mixin md\:-right-12 {
  @include right-(-$\12, $md);
}

@mixin md\:-bottom-12 {
  @include bottom-(-$\12, $md);
}

@mixin md\:-left-12 {
  @include left-(-$\12, $md);
}

@mixin md\:-inset-14 {
  @include inset-(-$\14, $md);
}

@mixin md\:-inset-x-14 {
  @include inset-x-(-$\14, $md);
}

@mixin md\:-inset-y-14 {
  @include inset-y-(-$\14, $md);
}

@mixin md\:-start-14 {
  @include start-(-$\14, $md);
}

@mixin md\:-end-14 {
  @include end-(-$\14, $md);
}

@mixin md\:-top-14 {
  @include top-(-$\14, $md);
}

@mixin md\:-right-14 {
  @include right-(-$\14, $md);
}

@mixin md\:-bottom-14 {
  @include bottom-(-$\14, $md);
}

@mixin md\:-left-14 {
  @include left-(-$\14, $md);
}

@mixin md\:-inset-16 {
  @include inset-(-$\16, $md);
}

@mixin md\:-inset-x-16 {
  @include inset-x-(-$\16, $md);
}

@mixin md\:-inset-y-16 {
  @include inset-y-(-$\16, $md);
}

@mixin md\:-start-16 {
  @include start-(-$\16, $md);
}

@mixin md\:-end-16 {
  @include end-(-$\16, $md);
}

@mixin md\:-top-16 {
  @include top-(-$\16, $md);
}

@mixin md\:-right-16 {
  @include right-(-$\16, $md);
}

@mixin md\:-bottom-16 {
  @include bottom-(-$\16, $md);
}

@mixin md\:-left-16 {
  @include left-(-$\16, $md);
}

@mixin md\:-inset-20 {
  @include inset-(-$\20, $md);
}

@mixin md\:-inset-x-20 {
  @include inset-x-(-$\20, $md);
}

@mixin md\:-inset-y-20 {
  @include inset-y-(-$\20, $md);
}

@mixin md\:-start-20 {
  @include start-(-$\20, $md);
}

@mixin md\:-end-20 {
  @include end-(-$\20, $md);
}

@mixin md\:-top-20 {
  @include top-(-$\20, $md);
}

@mixin md\:-right-20 {
  @include right-(-$\20, $md);
}

@mixin md\:-bottom-20 {
  @include bottom-(-$\20, $md);
}

@mixin md\:-left-20 {
  @include left-(-$\20, $md);
}

@mixin md\:-inset-24 {
  @include inset-(-$\24, $md);
}

@mixin md\:-inset-x-24 {
  @include inset-x-(-$\24, $md);
}

@mixin md\:-inset-y-24 {
  @include inset-y-(-$\24, $md);
}

@mixin md\:-start-24 {
  @include start-(-$\24, $md);
}

@mixin md\:-end-24 {
  @include end-(-$\24, $md);
}

@mixin md\:-top-24 {
  @include top-(-$\24, $md);
}

@mixin md\:-right-24 {
  @include right-(-$\24, $md);
}

@mixin md\:-bottom-24 {
  @include bottom-(-$\24, $md);
}

@mixin md\:-left-24 {
  @include left-(-$\24, $md);
}

@mixin md\:-inset-28 {
  @include inset-(-$\28, $md);
}

@mixin md\:-inset-x-28 {
  @include inset-x-(-$\28, $md);
}

@mixin md\:-inset-y-28 {
  @include inset-y-(-$\28, $md);
}

@mixin md\:-start-28 {
  @include start-(-$\28, $md);
}

@mixin md\:-end-28 {
  @include end-(-$\28, $md);
}

@mixin md\:-top-28 {
  @include top-(-$\28, $md);
}

@mixin md\:-right-28 {
  @include right-(-$\28, $md);
}

@mixin md\:-bottom-28 {
  @include bottom-(-$\28, $md);
}

@mixin md\:-left-28 {
  @include left-(-$\28, $md);
}

@mixin md\:-inset-32 {
  @include inset-(-$\32, $md);
}

@mixin md\:-inset-x-32 {
  @include inset-x-(-$\32, $md);
}

@mixin md\:-inset-y-32 {
  @include inset-y-(-$\32, $md);
}

@mixin md\:-start-32 {
  @include start-(-$\32, $md);
}

@mixin md\:-end-32 {
  @include end-(-$\32, $md);
}

@mixin md\:-top-32 {
  @include top-(-$\32, $md);
}

@mixin md\:-right-32 {
  @include right-(-$\32, $md);
}

@mixin md\:-bottom-32 {
  @include bottom-(-$\32, $md);
}

@mixin md\:-left-32 {
  @include left-(-$\32, $md);
}

@mixin md\:-inset-36 {
  @include inset-(-$\36, $md);
}

@mixin md\:-inset-x-36 {
  @include inset-x-(-$\36, $md);
}

@mixin md\:-inset-y-36 {
  @include inset-y-(-$\36, $md);
}

@mixin md\:-start-36 {
  @include start-(-$\36, $md);
}

@mixin md\:-end-36 {
  @include end-(-$\36, $md);
}

@mixin md\:-top-36 {
  @include top-(-$\36, $md);
}

@mixin md\:-right-36 {
  @include right-(-$\36, $md);
}

@mixin md\:-bottom-36 {
  @include bottom-(-$\36, $md);
}

@mixin md\:-left-36 {
  @include left-(-$\36, $md);
}

@mixin md\:-inset-40 {
  @include inset-(-$\40, $md);
}

@mixin md\:-inset-x-40 {
  @include inset-x-(-$\40, $md);
}

@mixin md\:-inset-y-40 {
  @include inset-y-(-$\40, $md);
}

@mixin md\:-start-40 {
  @include start-(-$\40, $md);
}

@mixin md\:-end-40 {
  @include end-(-$\40, $md);
}

@mixin md\:-top-40 {
  @include top-(-$\40, $md);
}

@mixin md\:-right-40 {
  @include right-(-$\40, $md);
}

@mixin md\:-bottom-40 {
  @include bottom-(-$\40, $md);
}

@mixin md\:-left-40 {
  @include left-(-$\40, $md);
}

@mixin md\:-inset-44 {
  @include inset-(-$\44, $md);
}

@mixin md\:-inset-x-44 {
  @include inset-x-(-$\44, $md);
}

@mixin md\:-inset-y-44 {
  @include inset-y-(-$\44, $md);
}

@mixin md\:-start-44 {
  @include start-(-$\44, $md);
}

@mixin md\:-end-44 {
  @include end-(-$\44, $md);
}

@mixin md\:-top-44 {
  @include top-(-$\44, $md);
}

@mixin md\:-right-44 {
  @include right-(-$\44, $md);
}

@mixin md\:-bottom-44 {
  @include bottom-(-$\44, $md);
}

@mixin md\:-left-44 {
  @include left-(-$\44, $md);
}

@mixin md\:-inset-48 {
  @include inset-(-$\48, $md);
}

@mixin md\:-inset-x-48 {
  @include inset-x-(-$\48, $md);
}

@mixin md\:-inset-y-48 {
  @include inset-y-(-$\48, $md);
}

@mixin md\:-start-48 {
  @include start-(-$\48, $md);
}

@mixin md\:-end-48 {
  @include end-(-$\48, $md);
}

@mixin md\:-top-48 {
  @include top-(-$\48, $md);
}

@mixin md\:-right-48 {
  @include right-(-$\48, $md);
}

@mixin md\:-bottom-48 {
  @include bottom-(-$\48, $md);
}

@mixin md\:-left-48 {
  @include left-(-$\48, $md);
}

@mixin md\:-inset-52 {
  @include inset-(-$\52, $md);
}

@mixin md\:-inset-x-52 {
  @include inset-x-(-$\52, $md);
}

@mixin md\:-inset-y-52 {
  @include inset-y-(-$\52, $md);
}

@mixin md\:-start-52 {
  @include start-(-$\52, $md);
}

@mixin md\:-end-52 {
  @include end-(-$\52, $md);
}

@mixin md\:-top-52 {
  @include top-(-$\52, $md);
}

@mixin md\:-right-52 {
  @include right-(-$\52, $md);
}

@mixin md\:-bottom-52 {
  @include bottom-(-$\52, $md);
}

@mixin md\:-left-52 {
  @include left-(-$\52, $md);
}

@mixin md\:-inset-56 {
  @include inset-(-$\56, $md);
}

@mixin md\:-inset-x-56 {
  @include inset-x-(-$\56, $md);
}

@mixin md\:-inset-y-56 {
  @include inset-y-(-$\56, $md);
}

@mixin md\:-start-56 {
  @include start-(-$\56, $md);
}

@mixin md\:-end-56 {
  @include end-(-$\56, $md);
}

@mixin md\:-top-56 {
  @include top-(-$\56, $md);
}

@mixin md\:-right-56 {
  @include right-(-$\56, $md);
}

@mixin md\:-bottom-56 {
  @include bottom-(-$\56, $md);
}

@mixin md\:-left-56 {
  @include left-(-$\56, $md);
}

@mixin md\:-inset-60 {
  @include inset-(-$\60, $md);
}

@mixin md\:-inset-x-60 {
  @include inset-x-(-$\60, $md);
}

@mixin md\:-inset-y-60 {
  @include inset-y-(-$\60, $md);
}

@mixin md\:-start-60 {
  @include start-(-$\60, $md);
}

@mixin md\:-end-60 {
  @include end-(-$\60, $md);
}

@mixin md\:-top-60 {
  @include top-(-$\60, $md);
}

@mixin md\:-right-60 {
  @include right-(-$\60, $md);
}

@mixin md\:-bottom-60 {
  @include bottom-(-$\60, $md);
}

@mixin md\:-left-60 {
  @include left-(-$\60, $md);
}

@mixin md\:-inset-64 {
  @include inset-(-$\64, $md);
}

@mixin md\:-inset-x-64 {
  @include inset-x-(-$\64, $md);
}

@mixin md\:-inset-y-64 {
  @include inset-y-(-$\64, $md);
}

@mixin md\:-start-64 {
  @include start-(-$\64, $md);
}

@mixin md\:-end-64 {
  @include end-(-$\64, $md);
}

@mixin md\:-top-64 {
  @include top-(-$\64, $md);
}

@mixin md\:-right-64 {
  @include right-(-$\64, $md);
}

@mixin md\:-bottom-64 {
  @include bottom-(-$\64, $md);
}

@mixin md\:-left-64 {
  @include left-(-$\64, $md);
}

@mixin md\:-inset-72 {
  @include inset-(-$\72, $md);
}

@mixin md\:-inset-x-72 {
  @include inset-x-(-$\72, $md);
}

@mixin md\:-inset-y-72 {
  @include inset-y-(-$\72, $md);
}

@mixin md\:-start-72 {
  @include start-(-$\72, $md);
}

@mixin md\:-end-72 {
  @include end-(-$\72, $md);
}

@mixin md\:-top-72 {
  @include top-(-$\72, $md);
}

@mixin md\:-right-72 {
  @include right-(-$\72, $md);
}

@mixin md\:-bottom-72 {
  @include bottom-(-$\72, $md);
}

@mixin md\:-left-72 {
  @include left-(-$\72, $md);
}

@mixin md\:-inset-80 {
  @include inset-(-$\80, $md);
}

@mixin md\:-inset-x-80 {
  @include inset-x-(-$\80, $md);
}

@mixin md\:-inset-y-80 {
  @include inset-y-(-$\80, $md);
}

@mixin md\:-start-80 {
  @include start-(-$\80, $md);
}

@mixin md\:-end-80 {
  @include end-(-$\80, $md);
}

@mixin md\:-top-80 {
  @include top-(-$\80, $md);
}

@mixin md\:-right-80 {
  @include right-(-$\80, $md);
}

@mixin md\:-bottom-80 {
  @include bottom-(-$\80, $md);
}

@mixin md\:-left-80 {
  @include left-(-$\80, $md);
}

@mixin md\:-inset-96 {
  @include inset-(-$\96, $md);
}

@mixin md\:-inset-x-96 {
  @include inset-x-(-$\96, $md);
}

@mixin md\:-inset-y-96 {
  @include inset-y-(-$\96, $md);
}

@mixin md\:-start-96 {
  @include start-(-$\96, $md);
}

@mixin md\:-end-96 {
  @include end-(-$\96, $md);
}

@mixin md\:-top-96 {
  @include top-(-$\96, $md);
}

@mixin md\:-right-96 {
  @include right-(-$\96, $md);
}

@mixin md\:-bottom-96 {
  @include bottom-(-$\96, $md);
}

@mixin md\:-left-96 {
  @include left-(-$\96, $md);
}

@mixin md\:-inset-1\/2 {
  @include inset-(-50%, $md);
}

@mixin md\:-inset-1\/3 {
  @include inset-(-33.333333%, $md);
}

@mixin md\:-inset-2\/3 {
  @include inset-(-66.666667%, $md);
}

@mixin md\:-inset-1\/4 {
  @include inset-(-25%, $md);
}

@mixin md\:-inset-2\/4 {
  @include inset-(-50%, $md);
}

@mixin md\:-inset-3\/4 {
  @include inset-(-75%, $md);
}

@mixin md\:-inset-full {
  @include inset-(-100%, $md);
}

@mixin md\:-inset-x-1\/2 {
  @include inset-x-(-50%, $md);
}

@mixin md\:-inset-x-1\/3 {
  @include inset-x-(-33.333333%, $md);
}

@mixin md\:-inset-x-2\/3 {
  @include inset-x-(-66.666667%, $md);
}

@mixin md\:-inset-x-1\/4 {
  @include inset-x-(-25%, $md);
}

@mixin md\:-inset-x-2\/4 {
  @include inset-x-(-50%, $md);
}

@mixin md\:-inset-x-3\/4 {
  @include inset-x-(-75%, $md);
}

@mixin md\:-inset-x-full {
  @include inset-x-(-100%, $md);
}

@mixin md\:-inset-y-1\/2 {
  @include inset-y-(-50%, $md);
}

@mixin md\:-inset-y-1\/3 {
  @include inset-y-(-33.333333%, $md);
}

@mixin md\:-inset-y-2\/3 {
  @include inset-y-(-66.666667%, $md);
}

@mixin md\:-inset-y-1\/4 {
  @include inset-y-(-25%, $md);
}

@mixin md\:-inset-y-2\/4 {
  @include inset-y-(-50%, $md);
}

@mixin md\:-inset-y-3\/4 {
  @include inset-y-(-75%, $md);
}

@mixin md\:-inset-y-full {
  @include inset-y-(-100%, $md);
}

@mixin md\:-start-1\/2 {
  @include start-(-50%, $md);
}

@mixin md\:-start-1\/3 {
  @include start-(-33.333333%, $md);
}

@mixin md\:-start-2\/3 {
  @include start-(-66.666667%, $md);
}

@mixin md\:-start-1\/4 {
  @include start-(-25%, $md);
}

@mixin md\:-start-2\/4 {
  @include start-(-50%, $md);
}

@mixin md\:-start-3\/4 {
  @include start-(-75%, $md);
}

@mixin md\:-start-full {
  @include start-(-100%, $md);
}

@mixin md\:-end-1\/2 {
  @include end-(-50%, $md);
}

@mixin md\:-end-1\/3 {
  @include end-(-33.333333%, $md);
}

@mixin md\:-end-2\/3 {
  @include end-(-66.666667%, $md);
}

@mixin md\:-end-1\/4 {
  @include end-(-25%, $md);
}

@mixin md\:-end-2\/4 {
  @include end-(-50%, $md);
}

@mixin md\:-end-3\/4 {
  @include end-(-75%, $md);
}

@mixin md\:-end-full {
  @include end-(-100%, $md);
}

@mixin md\:-top-1\/2 {
  @include top-(-50%, $md);
}

@mixin md\:-top-1\/3 {
  @include top-(-33.333333%, $md);
}

@mixin md\:-top-2\/3 {
  @include top-(-66.666667%, $md);
}

@mixin md\:-top-1\/4 {
  @include top-(-25%, $md);
}

@mixin md\:-top-2\/4 {
  @include top-(-50%, $md);
}

@mixin md\:-top-3\/4 {
  @include top-(-75%, $md);
}

@mixin md\:-top-full {
  @include top-(-100%, $md);
}

@mixin md\:-right-1\/2 {
  @include right-(-50%, $md);
}

@mixin md\:-right-1\/3 {
  @include right-(-33.333333%, $md);
}

@mixin md\:-right-2\/3 {
  @include right-(-66.666667%, $md);
}

@mixin md\:-right-1\/4 {
  @include right-(-25%, $md);
}

@mixin md\:-right-2\/4 {
  @include right-(-50%, $md);
}

@mixin md\:-right-3\/4 {
  @include right-(-75%, $md);
}

@mixin md\:-right-full {
  @include right-(-100%, $md);
}

@mixin md\:-bottom-1\/2 {
  @include bottom-(-50%, $md);
}

@mixin md\:-bottom-1\/3 {
  @include bottom-(-33.333333%, $md);
}

@mixin md\:-bottom-2\/3 {
  @include bottom-(-66.666667%, $md);
}

@mixin md\:-bottom-1\/4 {
  @include bottom-(-25%, $md);
}

@mixin md\:-bottom-2\/4 {
  @include bottom-(-50%, $md);
}

@mixin md\:-bottom-3\/4 {
  @include bottom-(-75%, $md);
}

@mixin md\:-bottom-full {
  @include bottom-(-100%, $md);
}

@mixin md\:-left-1\/2 {
  @include left-(-50%, $md);
}

@mixin md\:-left-1\/3 {
  @include left-(-33.333333%, $md);
}

@mixin md\:-left-2\/3 {
  @include left-(-66.666667%, $md);
}

@mixin md\:-left-1\/4 {
  @include left-(-25%, $md);
}

@mixin md\:-left-2\/4 {
  @include left-(-50%, $md);
}

@mixin md\:-left-3\/4 {
  @include left-(-75%, $md);
}

@mixin md\:-left-full {
  @include left-(-100%, $md);
}

@mixin lg\:-inset-0 {
  @include inset-(-$\0, $lg);
}

@mixin lg\:-inset-x-0 {
  @include inset-x-(-$\0, $lg);
}

@mixin lg\:-inset-y-0 {
  @include inset-y-(-$\0, $lg);
}

@mixin lg\:-start-0 {
  @include start-(-$\0, $lg);
}

@mixin lg\:-end-0 {
  @include end-(-$\0, $lg);
}

@mixin lg\:-top-0 {
  @include top-(-$\0, $lg);
}

@mixin lg\:-right-0 {
  @include right-(-$\0, $lg);
}

@mixin lg\:-bottom-0 {
  @include bottom-(-$\0, $lg);
}

@mixin lg\:-left-0 {
  @include left-(-$\0, $lg);
}

@mixin lg\:-inset-px {
  @include inset-(-$\px, $lg);
}

@mixin lg\:-inset-x-px {
  @include inset-x-(-$\px, $lg);
}

@mixin lg\:-inset-y-px {
  @include inset-y-(-$\px, $lg);
}

@mixin lg\:-start-px {
  @include start-(-$\px, $lg);
}

@mixin lg\:-end-px {
  @include end-(-$\px, $lg);
}

@mixin lg\:-top-px {
  @include top-(-$\px, $lg);
}

@mixin lg\:-right-px {
  @include right-(-$\px, $lg);
}

@mixin lg\:-bottom-px {
  @include bottom-(-$\px, $lg);
}

@mixin lg\:-left-px {
  @include left-(-$\px, $lg);
}

@mixin lg\:-inset-0\.5 {
  @include inset-(-$\0\.5, $lg);
}

@mixin lg\:-inset-x-0\.5 {
  @include inset-x-(-$\0\.5, $lg);
}

@mixin lg\:-inset-y-0\.5 {
  @include inset-y-(-$\0\.5, $lg);
}

@mixin lg\:-start-0\.5 {
  @include start-(-$\0\.5, $lg);
}

@mixin lg\:-end-0\.5 {
  @include end-(-$\0\.5, $lg);
}

@mixin lg\:-top-0\.5 {
  @include top-(-$\0\.5, $lg);
}

@mixin lg\:-right-0\.5 {
  @include right-(-$\0\.5, $lg);
}

@mixin lg\:-bottom-0\.5 {
  @include bottom-(-$\0\.5, $lg);
}

@mixin lg\:-left-0\.5 {
  @include left-(-$\0\.5, $lg);
}

@mixin lg\:-inset-1 {
  @include inset-(-$\1, $lg);
}

@mixin lg\:-inset-x-1 {
  @include inset-x-(-$\1, $lg);
}

@mixin lg\:-inset-y-1 {
  @include inset-y-(-$\1, $lg);
}

@mixin lg\:-start-1 {
  @include start-(-$\1, $lg);
}

@mixin lg\:-end-1 {
  @include end-(-$\1, $lg);
}

@mixin lg\:-top-1 {
  @include top-(-$\1, $lg);
}

@mixin lg\:-right-1 {
  @include right-(-$\1, $lg);
}

@mixin lg\:-bottom-1 {
  @include bottom-(-$\1, $lg);
}

@mixin lg\:-left-1 {
  @include left-(-$\1, $lg);
}

@mixin lg\:-inset-1\.5 {
  @include inset-(-$\1\.5, $lg);
}

@mixin lg\:-inset-x-1\.5 {
  @include inset-x-(-$\1\.5, $lg);
}

@mixin lg\:-inset-y-1\.5 {
  @include inset-y-(-$\1\.5, $lg);
}

@mixin lg\:-start-1\.5 {
  @include start-(-$\1\.5, $lg);
}

@mixin lg\:-end-1\.5 {
  @include end-(-$\1\.5, $lg);
}

@mixin lg\:-top-1\.5 {
  @include top-(-$\1\.5, $lg);
}

@mixin lg\:-right-1\.5 {
  @include right-(-$\1\.5, $lg);
}

@mixin lg\:-bottom-1\.5 {
  @include bottom-(-$\1\.5, $lg);
}

@mixin lg\:-left-1\.5 {
  @include left-(-$\1\.5, $lg);
}

@mixin lg\:-inset-2 {
  @include inset-(-$\2, $lg);
}

@mixin lg\:-inset-x-2 {
  @include inset-x-(-$\2, $lg);
}

@mixin lg\:-inset-y-2 {
  @include inset-y-(-$\2, $lg);
}

@mixin lg\:-start-2 {
  @include start-(-$\2, $lg);
}

@mixin lg\:-end-2 {
  @include end-(-$\2, $lg);
}

@mixin lg\:-top-2 {
  @include top-(-$\2, $lg);
}

@mixin lg\:-right-2 {
  @include right-(-$\2, $lg);
}

@mixin lg\:-bottom-2 {
  @include bottom-(-$\2, $lg);
}

@mixin lg\:-left-2 {
  @include left-(-$\2, $lg);
}

@mixin lg\:-inset-2\.5 {
  @include inset-(-$\2\.5, $lg);
}

@mixin lg\:-inset-x-2\.5 {
  @include inset-x-(-$\2\.5, $lg);
}

@mixin lg\:-inset-y-2\.5 {
  @include inset-y-(-$\2\.5, $lg);
}

@mixin lg\:-start-2\.5 {
  @include start-(-$\2\.5, $lg);
}

@mixin lg\:-end-2\.5 {
  @include end-(-$\2\.5, $lg);
}

@mixin lg\:-top-2\.5 {
  @include top-(-$\2\.5, $lg);
}

@mixin lg\:-right-2\.5 {
  @include right-(-$\2\.5, $lg);
}

@mixin lg\:-bottom-2\.5 {
  @include bottom-(-$\2\.5, $lg);
}

@mixin lg\:-left-2\.5 {
  @include left-(-$\2\.5, $lg);
}

@mixin lg\:-inset-3 {
  @include inset-(-$\3, $lg);
}

@mixin lg\:-inset-x-3 {
  @include inset-x-(-$\3, $lg);
}

@mixin lg\:-inset-y-3 {
  @include inset-y-(-$\3, $lg);
}

@mixin lg\:-start-3 {
  @include start-(-$\3, $lg);
}

@mixin lg\:-end-3 {
  @include end-(-$\3, $lg);
}

@mixin lg\:-top-3 {
  @include top-(-$\3, $lg);
}

@mixin lg\:-right-3 {
  @include right-(-$\3, $lg);
}

@mixin lg\:-bottom-3 {
  @include bottom-(-$\3, $lg);
}

@mixin lg\:-left-3 {
  @include left-(-$\3, $lg);
}

@mixin lg\:-inset-3\.5 {
  @include inset-(-$\3\.5, $lg);
}

@mixin lg\:-inset-x-3\.5 {
  @include inset-x-(-$\3\.5, $lg);
}

@mixin lg\:-inset-y-3\.5 {
  @include inset-y-(-$\3\.5, $lg);
}

@mixin lg\:-start-3\.5 {
  @include start-(-$\3\.5, $lg);
}

@mixin lg\:-end-3\.5 {
  @include end-(-$\3\.5, $lg);
}

@mixin lg\:-top-3\.5 {
  @include top-(-$\3\.5, $lg);
}

@mixin lg\:-right-3\.5 {
  @include right-(-$\3\.5, $lg);
}

@mixin lg\:-bottom-3\.5 {
  @include bottom-(-$\3\.5, $lg);
}

@mixin lg\:-left-3\.5 {
  @include left-(-$\3\.5, $lg);
}

@mixin lg\:-inset-4 {
  @include inset-(-$\4, $lg);
}

@mixin lg\:-inset-x-4 {
  @include inset-x-(-$\4, $lg);
}

@mixin lg\:-inset-y-4 {
  @include inset-y-(-$\4, $lg);
}

@mixin lg\:-start-4 {
  @include start-(-$\4, $lg);
}

@mixin lg\:-end-4 {
  @include end-(-$\4, $lg);
}

@mixin lg\:-top-4 {
  @include top-(-$\4, $lg);
}

@mixin lg\:-right-4 {
  @include right-(-$\4, $lg);
}

@mixin lg\:-bottom-4 {
  @include bottom-(-$\4, $lg);
}

@mixin lg\:-left-4 {
  @include left-(-$\4, $lg);
}

@mixin lg\:-inset-5 {
  @include inset-(-$\5, $lg);
}

@mixin lg\:-inset-x-5 {
  @include inset-x-(-$\5, $lg);
}

@mixin lg\:-inset-y-5 {
  @include inset-y-(-$\5, $lg);
}

@mixin lg\:-start-5 {
  @include start-(-$\5, $lg);
}

@mixin lg\:-end-5 {
  @include end-(-$\5, $lg);
}

@mixin lg\:-top-5 {
  @include top-(-$\5, $lg);
}

@mixin lg\:-right-5 {
  @include right-(-$\5, $lg);
}

@mixin lg\:-bottom-5 {
  @include bottom-(-$\5, $lg);
}

@mixin lg\:-left-5 {
  @include left-(-$\5, $lg);
}

@mixin lg\:-inset-6 {
  @include inset-(-$\6, $lg);
}

@mixin lg\:-inset-x-6 {
  @include inset-x-(-$\6, $lg);
}

@mixin lg\:-inset-y-6 {
  @include inset-y-(-$\6, $lg);
}

@mixin lg\:-start-6 {
  @include start-(-$\6, $lg);
}

@mixin lg\:-end-6 {
  @include end-(-$\6, $lg);
}

@mixin lg\:-top-6 {
  @include top-(-$\6, $lg);
}

@mixin lg\:-right-6 {
  @include right-(-$\6, $lg);
}

@mixin lg\:-bottom-6 {
  @include bottom-(-$\6, $lg);
}

@mixin lg\:-left-6 {
  @include left-(-$\6, $lg);
}

@mixin lg\:-inset-7 {
  @include inset-(-$\7, $lg);
}

@mixin lg\:-inset-x-7 {
  @include inset-x-(-$\7, $lg);
}

@mixin lg\:-inset-y-7 {
  @include inset-y-(-$\7, $lg);
}

@mixin lg\:-start-7 {
  @include start-(-$\7, $lg);
}

@mixin lg\:-end-7 {
  @include end-(-$\7, $lg);
}

@mixin lg\:-top-7 {
  @include top-(-$\7, $lg);
}

@mixin lg\:-right-7 {
  @include right-(-$\7, $lg);
}

@mixin lg\:-bottom-7 {
  @include bottom-(-$\7, $lg);
}

@mixin lg\:-left-7 {
  @include left-(-$\7, $lg);
}

@mixin lg\:-inset-8 {
  @include inset-(-$\8, $lg);
}

@mixin lg\:-inset-x-8 {
  @include inset-x-(-$\8, $lg);
}

@mixin lg\:-inset-y-8 {
  @include inset-y-(-$\8, $lg);
}

@mixin lg\:-start-8 {
  @include start-(-$\8, $lg);
}

@mixin lg\:-end-8 {
  @include end-(-$\8, $lg);
}

@mixin lg\:-top-8 {
  @include top-(-$\8, $lg);
}

@mixin lg\:-right-8 {
  @include right-(-$\8, $lg);
}

@mixin lg\:-bottom-8 {
  @include bottom-(-$\8, $lg);
}

@mixin lg\:-left-8 {
  @include left-(-$\8, $lg);
}

@mixin lg\:-inset-9 {
  @include inset-(-$\9, $lg);
}

@mixin lg\:-inset-x-9 {
  @include inset-x-(-$\9, $lg);
}

@mixin lg\:-inset-y-9 {
  @include inset-y-(-$\9, $lg);
}

@mixin lg\:-start-9 {
  @include start-(-$\9, $lg);
}

@mixin lg\:-end-9 {
  @include end-(-$\9, $lg);
}

@mixin lg\:-top-9 {
  @include top-(-$\9, $lg);
}

@mixin lg\:-right-9 {
  @include right-(-$\9, $lg);
}

@mixin lg\:-bottom-9 {
  @include bottom-(-$\9, $lg);
}

@mixin lg\:-left-9 {
  @include left-(-$\9, $lg);
}

@mixin lg\:-inset-10 {
  @include inset-(-$\10, $lg);
}

@mixin lg\:-inset-x-10 {
  @include inset-x-(-$\10, $lg);
}

@mixin lg\:-inset-y-10 {
  @include inset-y-(-$\10, $lg);
}

@mixin lg\:-start-10 {
  @include start-(-$\10, $lg);
}

@mixin lg\:-end-10 {
  @include end-(-$\10, $lg);
}

@mixin lg\:-top-10 {
  @include top-(-$\10, $lg);
}

@mixin lg\:-right-10 {
  @include right-(-$\10, $lg);
}

@mixin lg\:-bottom-10 {
  @include bottom-(-$\10, $lg);
}

@mixin lg\:-left-10 {
  @include left-(-$\10, $lg);
}

@mixin lg\:-inset-11 {
  @include inset-(-$\11, $lg);
}

@mixin lg\:-inset-x-11 {
  @include inset-x-(-$\11, $lg);
}

@mixin lg\:-inset-y-11 {
  @include inset-y-(-$\11, $lg);
}

@mixin lg\:-start-11 {
  @include start-(-$\11, $lg);
}

@mixin lg\:-end-11 {
  @include end-(-$\11, $lg);
}

@mixin lg\:-top-11 {
  @include top-(-$\11, $lg);
}

@mixin lg\:-right-11 {
  @include right-(-$\11, $lg);
}

@mixin lg\:-bottom-11 {
  @include bottom-(-$\11, $lg);
}

@mixin lg\:-left-11 {
  @include left-(-$\11, $lg);
}

@mixin lg\:-inset-12 {
  @include inset-(-$\12, $lg);
}

@mixin lg\:-inset-x-12 {
  @include inset-x-(-$\12, $lg);
}

@mixin lg\:-inset-y-12 {
  @include inset-y-(-$\12, $lg);
}

@mixin lg\:-start-12 {
  @include start-(-$\12, $lg);
}

@mixin lg\:-end-12 {
  @include end-(-$\12, $lg);
}

@mixin lg\:-top-12 {
  @include top-(-$\12, $lg);
}

@mixin lg\:-right-12 {
  @include right-(-$\12, $lg);
}

@mixin lg\:-bottom-12 {
  @include bottom-(-$\12, $lg);
}

@mixin lg\:-left-12 {
  @include left-(-$\12, $lg);
}

@mixin lg\:-inset-14 {
  @include inset-(-$\14, $lg);
}

@mixin lg\:-inset-x-14 {
  @include inset-x-(-$\14, $lg);
}

@mixin lg\:-inset-y-14 {
  @include inset-y-(-$\14, $lg);
}

@mixin lg\:-start-14 {
  @include start-(-$\14, $lg);
}

@mixin lg\:-end-14 {
  @include end-(-$\14, $lg);
}

@mixin lg\:-top-14 {
  @include top-(-$\14, $lg);
}

@mixin lg\:-right-14 {
  @include right-(-$\14, $lg);
}

@mixin lg\:-bottom-14 {
  @include bottom-(-$\14, $lg);
}

@mixin lg\:-left-14 {
  @include left-(-$\14, $lg);
}

@mixin lg\:-inset-16 {
  @include inset-(-$\16, $lg);
}

@mixin lg\:-inset-x-16 {
  @include inset-x-(-$\16, $lg);
}

@mixin lg\:-inset-y-16 {
  @include inset-y-(-$\16, $lg);
}

@mixin lg\:-start-16 {
  @include start-(-$\16, $lg);
}

@mixin lg\:-end-16 {
  @include end-(-$\16, $lg);
}

@mixin lg\:-top-16 {
  @include top-(-$\16, $lg);
}

@mixin lg\:-right-16 {
  @include right-(-$\16, $lg);
}

@mixin lg\:-bottom-16 {
  @include bottom-(-$\16, $lg);
}

@mixin lg\:-left-16 {
  @include left-(-$\16, $lg);
}

@mixin lg\:-inset-20 {
  @include inset-(-$\20, $lg);
}

@mixin lg\:-inset-x-20 {
  @include inset-x-(-$\20, $lg);
}

@mixin lg\:-inset-y-20 {
  @include inset-y-(-$\20, $lg);
}

@mixin lg\:-start-20 {
  @include start-(-$\20, $lg);
}

@mixin lg\:-end-20 {
  @include end-(-$\20, $lg);
}

@mixin lg\:-top-20 {
  @include top-(-$\20, $lg);
}

@mixin lg\:-right-20 {
  @include right-(-$\20, $lg);
}

@mixin lg\:-bottom-20 {
  @include bottom-(-$\20, $lg);
}

@mixin lg\:-left-20 {
  @include left-(-$\20, $lg);
}

@mixin lg\:-inset-24 {
  @include inset-(-$\24, $lg);
}

@mixin lg\:-inset-x-24 {
  @include inset-x-(-$\24, $lg);
}

@mixin lg\:-inset-y-24 {
  @include inset-y-(-$\24, $lg);
}

@mixin lg\:-start-24 {
  @include start-(-$\24, $lg);
}

@mixin lg\:-end-24 {
  @include end-(-$\24, $lg);
}

@mixin lg\:-top-24 {
  @include top-(-$\24, $lg);
}

@mixin lg\:-right-24 {
  @include right-(-$\24, $lg);
}

@mixin lg\:-bottom-24 {
  @include bottom-(-$\24, $lg);
}

@mixin lg\:-left-24 {
  @include left-(-$\24, $lg);
}

@mixin lg\:-inset-28 {
  @include inset-(-$\28, $lg);
}

@mixin lg\:-inset-x-28 {
  @include inset-x-(-$\28, $lg);
}

@mixin lg\:-inset-y-28 {
  @include inset-y-(-$\28, $lg);
}

@mixin lg\:-start-28 {
  @include start-(-$\28, $lg);
}

@mixin lg\:-end-28 {
  @include end-(-$\28, $lg);
}

@mixin lg\:-top-28 {
  @include top-(-$\28, $lg);
}

@mixin lg\:-right-28 {
  @include right-(-$\28, $lg);
}

@mixin lg\:-bottom-28 {
  @include bottom-(-$\28, $lg);
}

@mixin lg\:-left-28 {
  @include left-(-$\28, $lg);
}

@mixin lg\:-inset-32 {
  @include inset-(-$\32, $lg);
}

@mixin lg\:-inset-x-32 {
  @include inset-x-(-$\32, $lg);
}

@mixin lg\:-inset-y-32 {
  @include inset-y-(-$\32, $lg);
}

@mixin lg\:-start-32 {
  @include start-(-$\32, $lg);
}

@mixin lg\:-end-32 {
  @include end-(-$\32, $lg);
}

@mixin lg\:-top-32 {
  @include top-(-$\32, $lg);
}

@mixin lg\:-right-32 {
  @include right-(-$\32, $lg);
}

@mixin lg\:-bottom-32 {
  @include bottom-(-$\32, $lg);
}

@mixin lg\:-left-32 {
  @include left-(-$\32, $lg);
}

@mixin lg\:-inset-36 {
  @include inset-(-$\36, $lg);
}

@mixin lg\:-inset-x-36 {
  @include inset-x-(-$\36, $lg);
}

@mixin lg\:-inset-y-36 {
  @include inset-y-(-$\36, $lg);
}

@mixin lg\:-start-36 {
  @include start-(-$\36, $lg);
}

@mixin lg\:-end-36 {
  @include end-(-$\36, $lg);
}

@mixin lg\:-top-36 {
  @include top-(-$\36, $lg);
}

@mixin lg\:-right-36 {
  @include right-(-$\36, $lg);
}

@mixin lg\:-bottom-36 {
  @include bottom-(-$\36, $lg);
}

@mixin lg\:-left-36 {
  @include left-(-$\36, $lg);
}

@mixin lg\:-inset-40 {
  @include inset-(-$\40, $lg);
}

@mixin lg\:-inset-x-40 {
  @include inset-x-(-$\40, $lg);
}

@mixin lg\:-inset-y-40 {
  @include inset-y-(-$\40, $lg);
}

@mixin lg\:-start-40 {
  @include start-(-$\40, $lg);
}

@mixin lg\:-end-40 {
  @include end-(-$\40, $lg);
}

@mixin lg\:-top-40 {
  @include top-(-$\40, $lg);
}

@mixin lg\:-right-40 {
  @include right-(-$\40, $lg);
}

@mixin lg\:-bottom-40 {
  @include bottom-(-$\40, $lg);
}

@mixin lg\:-left-40 {
  @include left-(-$\40, $lg);
}

@mixin lg\:-inset-44 {
  @include inset-(-$\44, $lg);
}

@mixin lg\:-inset-x-44 {
  @include inset-x-(-$\44, $lg);
}

@mixin lg\:-inset-y-44 {
  @include inset-y-(-$\44, $lg);
}

@mixin lg\:-start-44 {
  @include start-(-$\44, $lg);
}

@mixin lg\:-end-44 {
  @include end-(-$\44, $lg);
}

@mixin lg\:-top-44 {
  @include top-(-$\44, $lg);
}

@mixin lg\:-right-44 {
  @include right-(-$\44, $lg);
}

@mixin lg\:-bottom-44 {
  @include bottom-(-$\44, $lg);
}

@mixin lg\:-left-44 {
  @include left-(-$\44, $lg);
}

@mixin lg\:-inset-48 {
  @include inset-(-$\48, $lg);
}

@mixin lg\:-inset-x-48 {
  @include inset-x-(-$\48, $lg);
}

@mixin lg\:-inset-y-48 {
  @include inset-y-(-$\48, $lg);
}

@mixin lg\:-start-48 {
  @include start-(-$\48, $lg);
}

@mixin lg\:-end-48 {
  @include end-(-$\48, $lg);
}

@mixin lg\:-top-48 {
  @include top-(-$\48, $lg);
}

@mixin lg\:-right-48 {
  @include right-(-$\48, $lg);
}

@mixin lg\:-bottom-48 {
  @include bottom-(-$\48, $lg);
}

@mixin lg\:-left-48 {
  @include left-(-$\48, $lg);
}

@mixin lg\:-inset-52 {
  @include inset-(-$\52, $lg);
}

@mixin lg\:-inset-x-52 {
  @include inset-x-(-$\52, $lg);
}

@mixin lg\:-inset-y-52 {
  @include inset-y-(-$\52, $lg);
}

@mixin lg\:-start-52 {
  @include start-(-$\52, $lg);
}

@mixin lg\:-end-52 {
  @include end-(-$\52, $lg);
}

@mixin lg\:-top-52 {
  @include top-(-$\52, $lg);
}

@mixin lg\:-right-52 {
  @include right-(-$\52, $lg);
}

@mixin lg\:-bottom-52 {
  @include bottom-(-$\52, $lg);
}

@mixin lg\:-left-52 {
  @include left-(-$\52, $lg);
}

@mixin lg\:-inset-56 {
  @include inset-(-$\56, $lg);
}

@mixin lg\:-inset-x-56 {
  @include inset-x-(-$\56, $lg);
}

@mixin lg\:-inset-y-56 {
  @include inset-y-(-$\56, $lg);
}

@mixin lg\:-start-56 {
  @include start-(-$\56, $lg);
}

@mixin lg\:-end-56 {
  @include end-(-$\56, $lg);
}

@mixin lg\:-top-56 {
  @include top-(-$\56, $lg);
}

@mixin lg\:-right-56 {
  @include right-(-$\56, $lg);
}

@mixin lg\:-bottom-56 {
  @include bottom-(-$\56, $lg);
}

@mixin lg\:-left-56 {
  @include left-(-$\56, $lg);
}

@mixin lg\:-inset-60 {
  @include inset-(-$\60, $lg);
}

@mixin lg\:-inset-x-60 {
  @include inset-x-(-$\60, $lg);
}

@mixin lg\:-inset-y-60 {
  @include inset-y-(-$\60, $lg);
}

@mixin lg\:-start-60 {
  @include start-(-$\60, $lg);
}

@mixin lg\:-end-60 {
  @include end-(-$\60, $lg);
}

@mixin lg\:-top-60 {
  @include top-(-$\60, $lg);
}

@mixin lg\:-right-60 {
  @include right-(-$\60, $lg);
}

@mixin lg\:-bottom-60 {
  @include bottom-(-$\60, $lg);
}

@mixin lg\:-left-60 {
  @include left-(-$\60, $lg);
}

@mixin lg\:-inset-64 {
  @include inset-(-$\64, $lg);
}

@mixin lg\:-inset-x-64 {
  @include inset-x-(-$\64, $lg);
}

@mixin lg\:-inset-y-64 {
  @include inset-y-(-$\64, $lg);
}

@mixin lg\:-start-64 {
  @include start-(-$\64, $lg);
}

@mixin lg\:-end-64 {
  @include end-(-$\64, $lg);
}

@mixin lg\:-top-64 {
  @include top-(-$\64, $lg);
}

@mixin lg\:-right-64 {
  @include right-(-$\64, $lg);
}

@mixin lg\:-bottom-64 {
  @include bottom-(-$\64, $lg);
}

@mixin lg\:-left-64 {
  @include left-(-$\64, $lg);
}

@mixin lg\:-inset-72 {
  @include inset-(-$\72, $lg);
}

@mixin lg\:-inset-x-72 {
  @include inset-x-(-$\72, $lg);
}

@mixin lg\:-inset-y-72 {
  @include inset-y-(-$\72, $lg);
}

@mixin lg\:-start-72 {
  @include start-(-$\72, $lg);
}

@mixin lg\:-end-72 {
  @include end-(-$\72, $lg);
}

@mixin lg\:-top-72 {
  @include top-(-$\72, $lg);
}

@mixin lg\:-right-72 {
  @include right-(-$\72, $lg);
}

@mixin lg\:-bottom-72 {
  @include bottom-(-$\72, $lg);
}

@mixin lg\:-left-72 {
  @include left-(-$\72, $lg);
}

@mixin lg\:-inset-80 {
  @include inset-(-$\80, $lg);
}

@mixin lg\:-inset-x-80 {
  @include inset-x-(-$\80, $lg);
}

@mixin lg\:-inset-y-80 {
  @include inset-y-(-$\80, $lg);
}

@mixin lg\:-start-80 {
  @include start-(-$\80, $lg);
}

@mixin lg\:-end-80 {
  @include end-(-$\80, $lg);
}

@mixin lg\:-top-80 {
  @include top-(-$\80, $lg);
}

@mixin lg\:-right-80 {
  @include right-(-$\80, $lg);
}

@mixin lg\:-bottom-80 {
  @include bottom-(-$\80, $lg);
}

@mixin lg\:-left-80 {
  @include left-(-$\80, $lg);
}

@mixin lg\:-inset-96 {
  @include inset-(-$\96, $lg);
}

@mixin lg\:-inset-x-96 {
  @include inset-x-(-$\96, $lg);
}

@mixin lg\:-inset-y-96 {
  @include inset-y-(-$\96, $lg);
}

@mixin lg\:-start-96 {
  @include start-(-$\96, $lg);
}

@mixin lg\:-end-96 {
  @include end-(-$\96, $lg);
}

@mixin lg\:-top-96 {
  @include top-(-$\96, $lg);
}

@mixin lg\:-right-96 {
  @include right-(-$\96, $lg);
}

@mixin lg\:-bottom-96 {
  @include bottom-(-$\96, $lg);
}

@mixin lg\:-left-96 {
  @include left-(-$\96, $lg);
}

@mixin lg\:-inset-1\/2 {
  @include inset-(-50%, $lg);
}

@mixin lg\:-inset-1\/3 {
  @include inset-(-33.333333%, $lg);
}

@mixin lg\:-inset-2\/3 {
  @include inset-(-66.666667%, $lg);
}

@mixin lg\:-inset-1\/4 {
  @include inset-(-25%, $lg);
}

@mixin lg\:-inset-2\/4 {
  @include inset-(-50%, $lg);
}

@mixin lg\:-inset-3\/4 {
  @include inset-(-75%, $lg);
}

@mixin lg\:-inset-full {
  @include inset-(-100%, $lg);
}

@mixin lg\:-inset-x-1\/2 {
  @include inset-x-(-50%, $lg);
}

@mixin lg\:-inset-x-1\/3 {
  @include inset-x-(-33.333333%, $lg);
}

@mixin lg\:-inset-x-2\/3 {
  @include inset-x-(-66.666667%, $lg);
}

@mixin lg\:-inset-x-1\/4 {
  @include inset-x-(-25%, $lg);
}

@mixin lg\:-inset-x-2\/4 {
  @include inset-x-(-50%, $lg);
}

@mixin lg\:-inset-x-3\/4 {
  @include inset-x-(-75%, $lg);
}

@mixin lg\:-inset-x-full {
  @include inset-x-(-100%, $lg);
}

@mixin lg\:-inset-y-1\/2 {
  @include inset-y-(-50%, $lg);
}

@mixin lg\:-inset-y-1\/3 {
  @include inset-y-(-33.333333%, $lg);
}

@mixin lg\:-inset-y-2\/3 {
  @include inset-y-(-66.666667%, $lg);
}

@mixin lg\:-inset-y-1\/4 {
  @include inset-y-(-25%, $lg);
}

@mixin lg\:-inset-y-2\/4 {
  @include inset-y-(-50%, $lg);
}

@mixin lg\:-inset-y-3\/4 {
  @include inset-y-(-75%, $lg);
}

@mixin lg\:-inset-y-full {
  @include inset-y-(-100%, $lg);
}

@mixin lg\:-start-1\/2 {
  @include start-(-50%, $lg);
}

@mixin lg\:-start-1\/3 {
  @include start-(-33.333333%, $lg);
}

@mixin lg\:-start-2\/3 {
  @include start-(-66.666667%, $lg);
}

@mixin lg\:-start-1\/4 {
  @include start-(-25%, $lg);
}

@mixin lg\:-start-2\/4 {
  @include start-(-50%, $lg);
}

@mixin lg\:-start-3\/4 {
  @include start-(-75%, $lg);
}

@mixin lg\:-start-full {
  @include start-(-100%, $lg);
}

@mixin lg\:-end-1\/2 {
  @include end-(-50%, $lg);
}

@mixin lg\:-end-1\/3 {
  @include end-(-33.333333%, $lg);
}

@mixin lg\:-end-2\/3 {
  @include end-(-66.666667%, $lg);
}

@mixin lg\:-end-1\/4 {
  @include end-(-25%, $lg);
}

@mixin lg\:-end-2\/4 {
  @include end-(-50%, $lg);
}

@mixin lg\:-end-3\/4 {
  @include end-(-75%, $lg);
}

@mixin lg\:-end-full {
  @include end-(-100%, $lg);
}

@mixin lg\:-top-1\/2 {
  @include top-(-50%, $lg);
}

@mixin lg\:-top-1\/3 {
  @include top-(-33.333333%, $lg);
}

@mixin lg\:-top-2\/3 {
  @include top-(-66.666667%, $lg);
}

@mixin lg\:-top-1\/4 {
  @include top-(-25%, $lg);
}

@mixin lg\:-top-2\/4 {
  @include top-(-50%, $lg);
}

@mixin lg\:-top-3\/4 {
  @include top-(-75%, $lg);
}

@mixin lg\:-top-full {
  @include top-(-100%, $lg);
}

@mixin lg\:-right-1\/2 {
  @include right-(-50%, $lg);
}

@mixin lg\:-right-1\/3 {
  @include right-(-33.333333%, $lg);
}

@mixin lg\:-right-2\/3 {
  @include right-(-66.666667%, $lg);
}

@mixin lg\:-right-1\/4 {
  @include right-(-25%, $lg);
}

@mixin lg\:-right-2\/4 {
  @include right-(-50%, $lg);
}

@mixin lg\:-right-3\/4 {
  @include right-(-75%, $lg);
}

@mixin lg\:-right-full {
  @include right-(-100%, $lg);
}

@mixin lg\:-bottom-1\/2 {
  @include bottom-(-50%, $lg);
}

@mixin lg\:-bottom-1\/3 {
  @include bottom-(-33.333333%, $lg);
}

@mixin lg\:-bottom-2\/3 {
  @include bottom-(-66.666667%, $lg);
}

@mixin lg\:-bottom-1\/4 {
  @include bottom-(-25%, $lg);
}

@mixin lg\:-bottom-2\/4 {
  @include bottom-(-50%, $lg);
}

@mixin lg\:-bottom-3\/4 {
  @include bottom-(-75%, $lg);
}

@mixin lg\:-bottom-full {
  @include bottom-(-100%, $lg);
}

@mixin lg\:-left-1\/2 {
  @include left-(-50%, $lg);
}

@mixin lg\:-left-1\/3 {
  @include left-(-33.333333%, $lg);
}

@mixin lg\:-left-2\/3 {
  @include left-(-66.666667%, $lg);
}

@mixin lg\:-left-1\/4 {
  @include left-(-25%, $lg);
}

@mixin lg\:-left-2\/4 {
  @include left-(-50%, $lg);
}

@mixin lg\:-left-3\/4 {
  @include left-(-75%, $lg);
}

@mixin lg\:-left-full {
  @include left-(-100%, $lg);
}

@mixin xl\:-inset-0 {
  @include inset-(-$\0, $xl);
}

@mixin xl\:-inset-x-0 {
  @include inset-x-(-$\0, $xl);
}

@mixin xl\:-inset-y-0 {
  @include inset-y-(-$\0, $xl);
}

@mixin xl\:-start-0 {
  @include start-(-$\0, $xl);
}

@mixin xl\:-end-0 {
  @include end-(-$\0, $xl);
}

@mixin xl\:-top-0 {
  @include top-(-$\0, $xl);
}

@mixin xl\:-right-0 {
  @include right-(-$\0, $xl);
}

@mixin xl\:-bottom-0 {
  @include bottom-(-$\0, $xl);
}

@mixin xl\:-left-0 {
  @include left-(-$\0, $xl);
}

@mixin xl\:-inset-px {
  @include inset-(-$\px, $xl);
}

@mixin xl\:-inset-x-px {
  @include inset-x-(-$\px, $xl);
}

@mixin xl\:-inset-y-px {
  @include inset-y-(-$\px, $xl);
}

@mixin xl\:-start-px {
  @include start-(-$\px, $xl);
}

@mixin xl\:-end-px {
  @include end-(-$\px, $xl);
}

@mixin xl\:-top-px {
  @include top-(-$\px, $xl);
}

@mixin xl\:-right-px {
  @include right-(-$\px, $xl);
}

@mixin xl\:-bottom-px {
  @include bottom-(-$\px, $xl);
}

@mixin xl\:-left-px {
  @include left-(-$\px, $xl);
}

@mixin xl\:-inset-0\.5 {
  @include inset-(-$\0\.5, $xl);
}

@mixin xl\:-inset-x-0\.5 {
  @include inset-x-(-$\0\.5, $xl);
}

@mixin xl\:-inset-y-0\.5 {
  @include inset-y-(-$\0\.5, $xl);
}

@mixin xl\:-start-0\.5 {
  @include start-(-$\0\.5, $xl);
}

@mixin xl\:-end-0\.5 {
  @include end-(-$\0\.5, $xl);
}

@mixin xl\:-top-0\.5 {
  @include top-(-$\0\.5, $xl);
}

@mixin xl\:-right-0\.5 {
  @include right-(-$\0\.5, $xl);
}

@mixin xl\:-bottom-0\.5 {
  @include bottom-(-$\0\.5, $xl);
}

@mixin xl\:-left-0\.5 {
  @include left-(-$\0\.5, $xl);
}

@mixin xl\:-inset-1 {
  @include inset-(-$\1, $xl);
}

@mixin xl\:-inset-x-1 {
  @include inset-x-(-$\1, $xl);
}

@mixin xl\:-inset-y-1 {
  @include inset-y-(-$\1, $xl);
}

@mixin xl\:-start-1 {
  @include start-(-$\1, $xl);
}

@mixin xl\:-end-1 {
  @include end-(-$\1, $xl);
}

@mixin xl\:-top-1 {
  @include top-(-$\1, $xl);
}

@mixin xl\:-right-1 {
  @include right-(-$\1, $xl);
}

@mixin xl\:-bottom-1 {
  @include bottom-(-$\1, $xl);
}

@mixin xl\:-left-1 {
  @include left-(-$\1, $xl);
}

@mixin xl\:-inset-1\.5 {
  @include inset-(-$\1\.5, $xl);
}

@mixin xl\:-inset-x-1\.5 {
  @include inset-x-(-$\1\.5, $xl);
}

@mixin xl\:-inset-y-1\.5 {
  @include inset-y-(-$\1\.5, $xl);
}

@mixin xl\:-start-1\.5 {
  @include start-(-$\1\.5, $xl);
}

@mixin xl\:-end-1\.5 {
  @include end-(-$\1\.5, $xl);
}

@mixin xl\:-top-1\.5 {
  @include top-(-$\1\.5, $xl);
}

@mixin xl\:-right-1\.5 {
  @include right-(-$\1\.5, $xl);
}

@mixin xl\:-bottom-1\.5 {
  @include bottom-(-$\1\.5, $xl);
}

@mixin xl\:-left-1\.5 {
  @include left-(-$\1\.5, $xl);
}

@mixin xl\:-inset-2 {
  @include inset-(-$\2, $xl);
}

@mixin xl\:-inset-x-2 {
  @include inset-x-(-$\2, $xl);
}

@mixin xl\:-inset-y-2 {
  @include inset-y-(-$\2, $xl);
}

@mixin xl\:-start-2 {
  @include start-(-$\2, $xl);
}

@mixin xl\:-end-2 {
  @include end-(-$\2, $xl);
}

@mixin xl\:-top-2 {
  @include top-(-$\2, $xl);
}

@mixin xl\:-right-2 {
  @include right-(-$\2, $xl);
}

@mixin xl\:-bottom-2 {
  @include bottom-(-$\2, $xl);
}

@mixin xl\:-left-2 {
  @include left-(-$\2, $xl);
}

@mixin xl\:-inset-2\.5 {
  @include inset-(-$\2\.5, $xl);
}

@mixin xl\:-inset-x-2\.5 {
  @include inset-x-(-$\2\.5, $xl);
}

@mixin xl\:-inset-y-2\.5 {
  @include inset-y-(-$\2\.5, $xl);
}

@mixin xl\:-start-2\.5 {
  @include start-(-$\2\.5, $xl);
}

@mixin xl\:-end-2\.5 {
  @include end-(-$\2\.5, $xl);
}

@mixin xl\:-top-2\.5 {
  @include top-(-$\2\.5, $xl);
}

@mixin xl\:-right-2\.5 {
  @include right-(-$\2\.5, $xl);
}

@mixin xl\:-bottom-2\.5 {
  @include bottom-(-$\2\.5, $xl);
}

@mixin xl\:-left-2\.5 {
  @include left-(-$\2\.5, $xl);
}

@mixin xl\:-inset-3 {
  @include inset-(-$\3, $xl);
}

@mixin xl\:-inset-x-3 {
  @include inset-x-(-$\3, $xl);
}

@mixin xl\:-inset-y-3 {
  @include inset-y-(-$\3, $xl);
}

@mixin xl\:-start-3 {
  @include start-(-$\3, $xl);
}

@mixin xl\:-end-3 {
  @include end-(-$\3, $xl);
}

@mixin xl\:-top-3 {
  @include top-(-$\3, $xl);
}

@mixin xl\:-right-3 {
  @include right-(-$\3, $xl);
}

@mixin xl\:-bottom-3 {
  @include bottom-(-$\3, $xl);
}

@mixin xl\:-left-3 {
  @include left-(-$\3, $xl);
}

@mixin xl\:-inset-3\.5 {
  @include inset-(-$\3\.5, $xl);
}

@mixin xl\:-inset-x-3\.5 {
  @include inset-x-(-$\3\.5, $xl);
}

@mixin xl\:-inset-y-3\.5 {
  @include inset-y-(-$\3\.5, $xl);
}

@mixin xl\:-start-3\.5 {
  @include start-(-$\3\.5, $xl);
}

@mixin xl\:-end-3\.5 {
  @include end-(-$\3\.5, $xl);
}

@mixin xl\:-top-3\.5 {
  @include top-(-$\3\.5, $xl);
}

@mixin xl\:-right-3\.5 {
  @include right-(-$\3\.5, $xl);
}

@mixin xl\:-bottom-3\.5 {
  @include bottom-(-$\3\.5, $xl);
}

@mixin xl\:-left-3\.5 {
  @include left-(-$\3\.5, $xl);
}

@mixin xl\:-inset-4 {
  @include inset-(-$\4, $xl);
}

@mixin xl\:-inset-x-4 {
  @include inset-x-(-$\4, $xl);
}

@mixin xl\:-inset-y-4 {
  @include inset-y-(-$\4, $xl);
}

@mixin xl\:-start-4 {
  @include start-(-$\4, $xl);
}

@mixin xl\:-end-4 {
  @include end-(-$\4, $xl);
}

@mixin xl\:-top-4 {
  @include top-(-$\4, $xl);
}

@mixin xl\:-right-4 {
  @include right-(-$\4, $xl);
}

@mixin xl\:-bottom-4 {
  @include bottom-(-$\4, $xl);
}

@mixin xl\:-left-4 {
  @include left-(-$\4, $xl);
}

@mixin xl\:-inset-5 {
  @include inset-(-$\5, $xl);
}

@mixin xl\:-inset-x-5 {
  @include inset-x-(-$\5, $xl);
}

@mixin xl\:-inset-y-5 {
  @include inset-y-(-$\5, $xl);
}

@mixin xl\:-start-5 {
  @include start-(-$\5, $xl);
}

@mixin xl\:-end-5 {
  @include end-(-$\5, $xl);
}

@mixin xl\:-top-5 {
  @include top-(-$\5, $xl);
}

@mixin xl\:-right-5 {
  @include right-(-$\5, $xl);
}

@mixin xl\:-bottom-5 {
  @include bottom-(-$\5, $xl);
}

@mixin xl\:-left-5 {
  @include left-(-$\5, $xl);
}

@mixin xl\:-inset-6 {
  @include inset-(-$\6, $xl);
}

@mixin xl\:-inset-x-6 {
  @include inset-x-(-$\6, $xl);
}

@mixin xl\:-inset-y-6 {
  @include inset-y-(-$\6, $xl);
}

@mixin xl\:-start-6 {
  @include start-(-$\6, $xl);
}

@mixin xl\:-end-6 {
  @include end-(-$\6, $xl);
}

@mixin xl\:-top-6 {
  @include top-(-$\6, $xl);
}

@mixin xl\:-right-6 {
  @include right-(-$\6, $xl);
}

@mixin xl\:-bottom-6 {
  @include bottom-(-$\6, $xl);
}

@mixin xl\:-left-6 {
  @include left-(-$\6, $xl);
}

@mixin xl\:-inset-7 {
  @include inset-(-$\7, $xl);
}

@mixin xl\:-inset-x-7 {
  @include inset-x-(-$\7, $xl);
}

@mixin xl\:-inset-y-7 {
  @include inset-y-(-$\7, $xl);
}

@mixin xl\:-start-7 {
  @include start-(-$\7, $xl);
}

@mixin xl\:-end-7 {
  @include end-(-$\7, $xl);
}

@mixin xl\:-top-7 {
  @include top-(-$\7, $xl);
}

@mixin xl\:-right-7 {
  @include right-(-$\7, $xl);
}

@mixin xl\:-bottom-7 {
  @include bottom-(-$\7, $xl);
}

@mixin xl\:-left-7 {
  @include left-(-$\7, $xl);
}

@mixin xl\:-inset-8 {
  @include inset-(-$\8, $xl);
}

@mixin xl\:-inset-x-8 {
  @include inset-x-(-$\8, $xl);
}

@mixin xl\:-inset-y-8 {
  @include inset-y-(-$\8, $xl);
}

@mixin xl\:-start-8 {
  @include start-(-$\8, $xl);
}

@mixin xl\:-end-8 {
  @include end-(-$\8, $xl);
}

@mixin xl\:-top-8 {
  @include top-(-$\8, $xl);
}

@mixin xl\:-right-8 {
  @include right-(-$\8, $xl);
}

@mixin xl\:-bottom-8 {
  @include bottom-(-$\8, $xl);
}

@mixin xl\:-left-8 {
  @include left-(-$\8, $xl);
}

@mixin xl\:-inset-9 {
  @include inset-(-$\9, $xl);
}

@mixin xl\:-inset-x-9 {
  @include inset-x-(-$\9, $xl);
}

@mixin xl\:-inset-y-9 {
  @include inset-y-(-$\9, $xl);
}

@mixin xl\:-start-9 {
  @include start-(-$\9, $xl);
}

@mixin xl\:-end-9 {
  @include end-(-$\9, $xl);
}

@mixin xl\:-top-9 {
  @include top-(-$\9, $xl);
}

@mixin xl\:-right-9 {
  @include right-(-$\9, $xl);
}

@mixin xl\:-bottom-9 {
  @include bottom-(-$\9, $xl);
}

@mixin xl\:-left-9 {
  @include left-(-$\9, $xl);
}

@mixin xl\:-inset-10 {
  @include inset-(-$\10, $xl);
}

@mixin xl\:-inset-x-10 {
  @include inset-x-(-$\10, $xl);
}

@mixin xl\:-inset-y-10 {
  @include inset-y-(-$\10, $xl);
}

@mixin xl\:-start-10 {
  @include start-(-$\10, $xl);
}

@mixin xl\:-end-10 {
  @include end-(-$\10, $xl);
}

@mixin xl\:-top-10 {
  @include top-(-$\10, $xl);
}

@mixin xl\:-right-10 {
  @include right-(-$\10, $xl);
}

@mixin xl\:-bottom-10 {
  @include bottom-(-$\10, $xl);
}

@mixin xl\:-left-10 {
  @include left-(-$\10, $xl);
}

@mixin xl\:-inset-11 {
  @include inset-(-$\11, $xl);
}

@mixin xl\:-inset-x-11 {
  @include inset-x-(-$\11, $xl);
}

@mixin xl\:-inset-y-11 {
  @include inset-y-(-$\11, $xl);
}

@mixin xl\:-start-11 {
  @include start-(-$\11, $xl);
}

@mixin xl\:-end-11 {
  @include end-(-$\11, $xl);
}

@mixin xl\:-top-11 {
  @include top-(-$\11, $xl);
}

@mixin xl\:-right-11 {
  @include right-(-$\11, $xl);
}

@mixin xl\:-bottom-11 {
  @include bottom-(-$\11, $xl);
}

@mixin xl\:-left-11 {
  @include left-(-$\11, $xl);
}

@mixin xl\:-inset-12 {
  @include inset-(-$\12, $xl);
}

@mixin xl\:-inset-x-12 {
  @include inset-x-(-$\12, $xl);
}

@mixin xl\:-inset-y-12 {
  @include inset-y-(-$\12, $xl);
}

@mixin xl\:-start-12 {
  @include start-(-$\12, $xl);
}

@mixin xl\:-end-12 {
  @include end-(-$\12, $xl);
}

@mixin xl\:-top-12 {
  @include top-(-$\12, $xl);
}

@mixin xl\:-right-12 {
  @include right-(-$\12, $xl);
}

@mixin xl\:-bottom-12 {
  @include bottom-(-$\12, $xl);
}

@mixin xl\:-left-12 {
  @include left-(-$\12, $xl);
}

@mixin xl\:-inset-14 {
  @include inset-(-$\14, $xl);
}

@mixin xl\:-inset-x-14 {
  @include inset-x-(-$\14, $xl);
}

@mixin xl\:-inset-y-14 {
  @include inset-y-(-$\14, $xl);
}

@mixin xl\:-start-14 {
  @include start-(-$\14, $xl);
}

@mixin xl\:-end-14 {
  @include end-(-$\14, $xl);
}

@mixin xl\:-top-14 {
  @include top-(-$\14, $xl);
}

@mixin xl\:-right-14 {
  @include right-(-$\14, $xl);
}

@mixin xl\:-bottom-14 {
  @include bottom-(-$\14, $xl);
}

@mixin xl\:-left-14 {
  @include left-(-$\14, $xl);
}

@mixin xl\:-inset-16 {
  @include inset-(-$\16, $xl);
}

@mixin xl\:-inset-x-16 {
  @include inset-x-(-$\16, $xl);
}

@mixin xl\:-inset-y-16 {
  @include inset-y-(-$\16, $xl);
}

@mixin xl\:-start-16 {
  @include start-(-$\16, $xl);
}

@mixin xl\:-end-16 {
  @include end-(-$\16, $xl);
}

@mixin xl\:-top-16 {
  @include top-(-$\16, $xl);
}

@mixin xl\:-right-16 {
  @include right-(-$\16, $xl);
}

@mixin xl\:-bottom-16 {
  @include bottom-(-$\16, $xl);
}

@mixin xl\:-left-16 {
  @include left-(-$\16, $xl);
}

@mixin xl\:-inset-20 {
  @include inset-(-$\20, $xl);
}

@mixin xl\:-inset-x-20 {
  @include inset-x-(-$\20, $xl);
}

@mixin xl\:-inset-y-20 {
  @include inset-y-(-$\20, $xl);
}

@mixin xl\:-start-20 {
  @include start-(-$\20, $xl);
}

@mixin xl\:-end-20 {
  @include end-(-$\20, $xl);
}

@mixin xl\:-top-20 {
  @include top-(-$\20, $xl);
}

@mixin xl\:-right-20 {
  @include right-(-$\20, $xl);
}

@mixin xl\:-bottom-20 {
  @include bottom-(-$\20, $xl);
}

@mixin xl\:-left-20 {
  @include left-(-$\20, $xl);
}

@mixin xl\:-inset-24 {
  @include inset-(-$\24, $xl);
}

@mixin xl\:-inset-x-24 {
  @include inset-x-(-$\24, $xl);
}

@mixin xl\:-inset-y-24 {
  @include inset-y-(-$\24, $xl);
}

@mixin xl\:-start-24 {
  @include start-(-$\24, $xl);
}

@mixin xl\:-end-24 {
  @include end-(-$\24, $xl);
}

@mixin xl\:-top-24 {
  @include top-(-$\24, $xl);
}

@mixin xl\:-right-24 {
  @include right-(-$\24, $xl);
}

@mixin xl\:-bottom-24 {
  @include bottom-(-$\24, $xl);
}

@mixin xl\:-left-24 {
  @include left-(-$\24, $xl);
}

@mixin xl\:-inset-28 {
  @include inset-(-$\28, $xl);
}

@mixin xl\:-inset-x-28 {
  @include inset-x-(-$\28, $xl);
}

@mixin xl\:-inset-y-28 {
  @include inset-y-(-$\28, $xl);
}

@mixin xl\:-start-28 {
  @include start-(-$\28, $xl);
}

@mixin xl\:-end-28 {
  @include end-(-$\28, $xl);
}

@mixin xl\:-top-28 {
  @include top-(-$\28, $xl);
}

@mixin xl\:-right-28 {
  @include right-(-$\28, $xl);
}

@mixin xl\:-bottom-28 {
  @include bottom-(-$\28, $xl);
}

@mixin xl\:-left-28 {
  @include left-(-$\28, $xl);
}

@mixin xl\:-inset-32 {
  @include inset-(-$\32, $xl);
}

@mixin xl\:-inset-x-32 {
  @include inset-x-(-$\32, $xl);
}

@mixin xl\:-inset-y-32 {
  @include inset-y-(-$\32, $xl);
}

@mixin xl\:-start-32 {
  @include start-(-$\32, $xl);
}

@mixin xl\:-end-32 {
  @include end-(-$\32, $xl);
}

@mixin xl\:-top-32 {
  @include top-(-$\32, $xl);
}

@mixin xl\:-right-32 {
  @include right-(-$\32, $xl);
}

@mixin xl\:-bottom-32 {
  @include bottom-(-$\32, $xl);
}

@mixin xl\:-left-32 {
  @include left-(-$\32, $xl);
}

@mixin xl\:-inset-36 {
  @include inset-(-$\36, $xl);
}

@mixin xl\:-inset-x-36 {
  @include inset-x-(-$\36, $xl);
}

@mixin xl\:-inset-y-36 {
  @include inset-y-(-$\36, $xl);
}

@mixin xl\:-start-36 {
  @include start-(-$\36, $xl);
}

@mixin xl\:-end-36 {
  @include end-(-$\36, $xl);
}

@mixin xl\:-top-36 {
  @include top-(-$\36, $xl);
}

@mixin xl\:-right-36 {
  @include right-(-$\36, $xl);
}

@mixin xl\:-bottom-36 {
  @include bottom-(-$\36, $xl);
}

@mixin xl\:-left-36 {
  @include left-(-$\36, $xl);
}

@mixin xl\:-inset-40 {
  @include inset-(-$\40, $xl);
}

@mixin xl\:-inset-x-40 {
  @include inset-x-(-$\40, $xl);
}

@mixin xl\:-inset-y-40 {
  @include inset-y-(-$\40, $xl);
}

@mixin xl\:-start-40 {
  @include start-(-$\40, $xl);
}

@mixin xl\:-end-40 {
  @include end-(-$\40, $xl);
}

@mixin xl\:-top-40 {
  @include top-(-$\40, $xl);
}

@mixin xl\:-right-40 {
  @include right-(-$\40, $xl);
}

@mixin xl\:-bottom-40 {
  @include bottom-(-$\40, $xl);
}

@mixin xl\:-left-40 {
  @include left-(-$\40, $xl);
}

@mixin xl\:-inset-44 {
  @include inset-(-$\44, $xl);
}

@mixin xl\:-inset-x-44 {
  @include inset-x-(-$\44, $xl);
}

@mixin xl\:-inset-y-44 {
  @include inset-y-(-$\44, $xl);
}

@mixin xl\:-start-44 {
  @include start-(-$\44, $xl);
}

@mixin xl\:-end-44 {
  @include end-(-$\44, $xl);
}

@mixin xl\:-top-44 {
  @include top-(-$\44, $xl);
}

@mixin xl\:-right-44 {
  @include right-(-$\44, $xl);
}

@mixin xl\:-bottom-44 {
  @include bottom-(-$\44, $xl);
}

@mixin xl\:-left-44 {
  @include left-(-$\44, $xl);
}

@mixin xl\:-inset-48 {
  @include inset-(-$\48, $xl);
}

@mixin xl\:-inset-x-48 {
  @include inset-x-(-$\48, $xl);
}

@mixin xl\:-inset-y-48 {
  @include inset-y-(-$\48, $xl);
}

@mixin xl\:-start-48 {
  @include start-(-$\48, $xl);
}

@mixin xl\:-end-48 {
  @include end-(-$\48, $xl);
}

@mixin xl\:-top-48 {
  @include top-(-$\48, $xl);
}

@mixin xl\:-right-48 {
  @include right-(-$\48, $xl);
}

@mixin xl\:-bottom-48 {
  @include bottom-(-$\48, $xl);
}

@mixin xl\:-left-48 {
  @include left-(-$\48, $xl);
}

@mixin xl\:-inset-52 {
  @include inset-(-$\52, $xl);
}

@mixin xl\:-inset-x-52 {
  @include inset-x-(-$\52, $xl);
}

@mixin xl\:-inset-y-52 {
  @include inset-y-(-$\52, $xl);
}

@mixin xl\:-start-52 {
  @include start-(-$\52, $xl);
}

@mixin xl\:-end-52 {
  @include end-(-$\52, $xl);
}

@mixin xl\:-top-52 {
  @include top-(-$\52, $xl);
}

@mixin xl\:-right-52 {
  @include right-(-$\52, $xl);
}

@mixin xl\:-bottom-52 {
  @include bottom-(-$\52, $xl);
}

@mixin xl\:-left-52 {
  @include left-(-$\52, $xl);
}

@mixin xl\:-inset-56 {
  @include inset-(-$\56, $xl);
}

@mixin xl\:-inset-x-56 {
  @include inset-x-(-$\56, $xl);
}

@mixin xl\:-inset-y-56 {
  @include inset-y-(-$\56, $xl);
}

@mixin xl\:-start-56 {
  @include start-(-$\56, $xl);
}

@mixin xl\:-end-56 {
  @include end-(-$\56, $xl);
}

@mixin xl\:-top-56 {
  @include top-(-$\56, $xl);
}

@mixin xl\:-right-56 {
  @include right-(-$\56, $xl);
}

@mixin xl\:-bottom-56 {
  @include bottom-(-$\56, $xl);
}

@mixin xl\:-left-56 {
  @include left-(-$\56, $xl);
}

@mixin xl\:-inset-60 {
  @include inset-(-$\60, $xl);
}

@mixin xl\:-inset-x-60 {
  @include inset-x-(-$\60, $xl);
}

@mixin xl\:-inset-y-60 {
  @include inset-y-(-$\60, $xl);
}

@mixin xl\:-start-60 {
  @include start-(-$\60, $xl);
}

@mixin xl\:-end-60 {
  @include end-(-$\60, $xl);
}

@mixin xl\:-top-60 {
  @include top-(-$\60, $xl);
}

@mixin xl\:-right-60 {
  @include right-(-$\60, $xl);
}

@mixin xl\:-bottom-60 {
  @include bottom-(-$\60, $xl);
}

@mixin xl\:-left-60 {
  @include left-(-$\60, $xl);
}

@mixin xl\:-inset-64 {
  @include inset-(-$\64, $xl);
}

@mixin xl\:-inset-x-64 {
  @include inset-x-(-$\64, $xl);
}

@mixin xl\:-inset-y-64 {
  @include inset-y-(-$\64, $xl);
}

@mixin xl\:-start-64 {
  @include start-(-$\64, $xl);
}

@mixin xl\:-end-64 {
  @include end-(-$\64, $xl);
}

@mixin xl\:-top-64 {
  @include top-(-$\64, $xl);
}

@mixin xl\:-right-64 {
  @include right-(-$\64, $xl);
}

@mixin xl\:-bottom-64 {
  @include bottom-(-$\64, $xl);
}

@mixin xl\:-left-64 {
  @include left-(-$\64, $xl);
}

@mixin xl\:-inset-72 {
  @include inset-(-$\72, $xl);
}

@mixin xl\:-inset-x-72 {
  @include inset-x-(-$\72, $xl);
}

@mixin xl\:-inset-y-72 {
  @include inset-y-(-$\72, $xl);
}

@mixin xl\:-start-72 {
  @include start-(-$\72, $xl);
}

@mixin xl\:-end-72 {
  @include end-(-$\72, $xl);
}

@mixin xl\:-top-72 {
  @include top-(-$\72, $xl);
}

@mixin xl\:-right-72 {
  @include right-(-$\72, $xl);
}

@mixin xl\:-bottom-72 {
  @include bottom-(-$\72, $xl);
}

@mixin xl\:-left-72 {
  @include left-(-$\72, $xl);
}

@mixin xl\:-inset-80 {
  @include inset-(-$\80, $xl);
}

@mixin xl\:-inset-x-80 {
  @include inset-x-(-$\80, $xl);
}

@mixin xl\:-inset-y-80 {
  @include inset-y-(-$\80, $xl);
}

@mixin xl\:-start-80 {
  @include start-(-$\80, $xl);
}

@mixin xl\:-end-80 {
  @include end-(-$\80, $xl);
}

@mixin xl\:-top-80 {
  @include top-(-$\80, $xl);
}

@mixin xl\:-right-80 {
  @include right-(-$\80, $xl);
}

@mixin xl\:-bottom-80 {
  @include bottom-(-$\80, $xl);
}

@mixin xl\:-left-80 {
  @include left-(-$\80, $xl);
}

@mixin xl\:-inset-96 {
  @include inset-(-$\96, $xl);
}

@mixin xl\:-inset-x-96 {
  @include inset-x-(-$\96, $xl);
}

@mixin xl\:-inset-y-96 {
  @include inset-y-(-$\96, $xl);
}

@mixin xl\:-start-96 {
  @include start-(-$\96, $xl);
}

@mixin xl\:-end-96 {
  @include end-(-$\96, $xl);
}

@mixin xl\:-top-96 {
  @include top-(-$\96, $xl);
}

@mixin xl\:-right-96 {
  @include right-(-$\96, $xl);
}

@mixin xl\:-bottom-96 {
  @include bottom-(-$\96, $xl);
}

@mixin xl\:-left-96 {
  @include left-(-$\96, $xl);
}

@mixin xl\:-inset-1\/2 {
  @include inset-(-50%, $xl);
}

@mixin xl\:-inset-1\/3 {
  @include inset-(-33.333333%, $xl);
}

@mixin xl\:-inset-2\/3 {
  @include inset-(-66.666667%, $xl);
}

@mixin xl\:-inset-1\/4 {
  @include inset-(-25%, $xl);
}

@mixin xl\:-inset-2\/4 {
  @include inset-(-50%, $xl);
}

@mixin xl\:-inset-3\/4 {
  @include inset-(-75%, $xl);
}

@mixin xl\:-inset-full {
  @include inset-(-100%, $xl);
}

@mixin xl\:-inset-x-1\/2 {
  @include inset-x-(-50%, $xl);
}

@mixin xl\:-inset-x-1\/3 {
  @include inset-x-(-33.333333%, $xl);
}

@mixin xl\:-inset-x-2\/3 {
  @include inset-x-(-66.666667%, $xl);
}

@mixin xl\:-inset-x-1\/4 {
  @include inset-x-(-25%, $xl);
}

@mixin xl\:-inset-x-2\/4 {
  @include inset-x-(-50%, $xl);
}

@mixin xl\:-inset-x-3\/4 {
  @include inset-x-(-75%, $xl);
}

@mixin xl\:-inset-x-full {
  @include inset-x-(-100%, $xl);
}

@mixin xl\:-inset-y-1\/2 {
  @include inset-y-(-50%, $xl);
}

@mixin xl\:-inset-y-1\/3 {
  @include inset-y-(-33.333333%, $xl);
}

@mixin xl\:-inset-y-2\/3 {
  @include inset-y-(-66.666667%, $xl);
}

@mixin xl\:-inset-y-1\/4 {
  @include inset-y-(-25%, $xl);
}

@mixin xl\:-inset-y-2\/4 {
  @include inset-y-(-50%, $xl);
}

@mixin xl\:-inset-y-3\/4 {
  @include inset-y-(-75%, $xl);
}

@mixin xl\:-inset-y-full {
  @include inset-y-(-100%, $xl);
}

@mixin xl\:-start-1\/2 {
  @include start-(-50%, $xl);
}

@mixin xl\:-start-1\/3 {
  @include start-(-33.333333%, $xl);
}

@mixin xl\:-start-2\/3 {
  @include start-(-66.666667%, $xl);
}

@mixin xl\:-start-1\/4 {
  @include start-(-25%, $xl);
}

@mixin xl\:-start-2\/4 {
  @include start-(-50%, $xl);
}

@mixin xl\:-start-3\/4 {
  @include start-(-75%, $xl);
}

@mixin xl\:-start-full {
  @include start-(-100%, $xl);
}

@mixin xl\:-end-1\/2 {
  @include end-(-50%, $xl);
}

@mixin xl\:-end-1\/3 {
  @include end-(-33.333333%, $xl);
}

@mixin xl\:-end-2\/3 {
  @include end-(-66.666667%, $xl);
}

@mixin xl\:-end-1\/4 {
  @include end-(-25%, $xl);
}

@mixin xl\:-end-2\/4 {
  @include end-(-50%, $xl);
}

@mixin xl\:-end-3\/4 {
  @include end-(-75%, $xl);
}

@mixin xl\:-end-full {
  @include end-(-100%, $xl);
}

@mixin xl\:-top-1\/2 {
  @include top-(-50%, $xl);
}

@mixin xl\:-top-1\/3 {
  @include top-(-33.333333%, $xl);
}

@mixin xl\:-top-2\/3 {
  @include top-(-66.666667%, $xl);
}

@mixin xl\:-top-1\/4 {
  @include top-(-25%, $xl);
}

@mixin xl\:-top-2\/4 {
  @include top-(-50%, $xl);
}

@mixin xl\:-top-3\/4 {
  @include top-(-75%, $xl);
}

@mixin xl\:-top-full {
  @include top-(-100%, $xl);
}

@mixin xl\:-right-1\/2 {
  @include right-(-50%, $xl);
}

@mixin xl\:-right-1\/3 {
  @include right-(-33.333333%, $xl);
}

@mixin xl\:-right-2\/3 {
  @include right-(-66.666667%, $xl);
}

@mixin xl\:-right-1\/4 {
  @include right-(-25%, $xl);
}

@mixin xl\:-right-2\/4 {
  @include right-(-50%, $xl);
}

@mixin xl\:-right-3\/4 {
  @include right-(-75%, $xl);
}

@mixin xl\:-right-full {
  @include right-(-100%, $xl);
}

@mixin xl\:-bottom-1\/2 {
  @include bottom-(-50%, $xl);
}

@mixin xl\:-bottom-1\/3 {
  @include bottom-(-33.333333%, $xl);
}

@mixin xl\:-bottom-2\/3 {
  @include bottom-(-66.666667%, $xl);
}

@mixin xl\:-bottom-1\/4 {
  @include bottom-(-25%, $xl);
}

@mixin xl\:-bottom-2\/4 {
  @include bottom-(-50%, $xl);
}

@mixin xl\:-bottom-3\/4 {
  @include bottom-(-75%, $xl);
}

@mixin xl\:-bottom-full {
  @include bottom-(-100%, $xl);
}

@mixin xl\:-left-1\/2 {
  @include left-(-50%, $xl);
}

@mixin xl\:-left-1\/3 {
  @include left-(-33.333333%, $xl);
}

@mixin xl\:-left-2\/3 {
  @include left-(-66.666667%, $xl);
}

@mixin xl\:-left-1\/4 {
  @include left-(-25%, $xl);
}

@mixin xl\:-left-2\/4 {
  @include left-(-50%, $xl);
}

@mixin xl\:-left-3\/4 {
  @include left-(-75%, $xl);
}

@mixin xl\:-left-full {
  @include left-(-100%, $xl);
}

@mixin \2xl\:-inset-0 {
  @include inset-(-$\0, $\2xl);
}

@mixin \2xl\:-inset-x-0 {
  @include inset-x-(-$\0, $\2xl);
}

@mixin \2xl\:-inset-y-0 {
  @include inset-y-(-$\0, $\2xl);
}

@mixin \2xl\:-start-0 {
  @include start-(-$\0, $\2xl);
}

@mixin \2xl\:-end-0 {
  @include end-(-$\0, $\2xl);
}

@mixin \2xl\:-top-0 {
  @include top-(-$\0, $\2xl);
}

@mixin \2xl\:-right-0 {
  @include right-(-$\0, $\2xl);
}

@mixin \2xl\:-bottom-0 {
  @include bottom-(-$\0, $\2xl);
}

@mixin \2xl\:-left-0 {
  @include left-(-$\0, $\2xl);
}

@mixin \2xl\:-inset-px {
  @include inset-(-$\px, $\2xl);
}

@mixin \2xl\:-inset-x-px {
  @include inset-x-(-$\px, $\2xl);
}

@mixin \2xl\:-inset-y-px {
  @include inset-y-(-$\px, $\2xl);
}

@mixin \2xl\:-start-px {
  @include start-(-$\px, $\2xl);
}

@mixin \2xl\:-end-px {
  @include end-(-$\px, $\2xl);
}

@mixin \2xl\:-top-px {
  @include top-(-$\px, $\2xl);
}

@mixin \2xl\:-right-px {
  @include right-(-$\px, $\2xl);
}

@mixin \2xl\:-bottom-px {
  @include bottom-(-$\px, $\2xl);
}

@mixin \2xl\:-left-px {
  @include left-(-$\px, $\2xl);
}

@mixin \2xl\:-inset-0\.5 {
  @include inset-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-inset-x-0\.5 {
  @include inset-x-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-inset-y-0\.5 {
  @include inset-y-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-start-0\.5 {
  @include start-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-end-0\.5 {
  @include end-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-top-0\.5 {
  @include top-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-right-0\.5 {
  @include right-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-bottom-0\.5 {
  @include bottom-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-left-0\.5 {
  @include left-(-$\0\.5, $\2xl);
}

@mixin \2xl\:-inset-1 {
  @include inset-(-$\1, $\2xl);
}

@mixin \2xl\:-inset-x-1 {
  @include inset-x-(-$\1, $\2xl);
}

@mixin \2xl\:-inset-y-1 {
  @include inset-y-(-$\1, $\2xl);
}

@mixin \2xl\:-start-1 {
  @include start-(-$\1, $\2xl);
}

@mixin \2xl\:-end-1 {
  @include end-(-$\1, $\2xl);
}

@mixin \2xl\:-top-1 {
  @include top-(-$\1, $\2xl);
}

@mixin \2xl\:-right-1 {
  @include right-(-$\1, $\2xl);
}

@mixin \2xl\:-bottom-1 {
  @include bottom-(-$\1, $\2xl);
}

@mixin \2xl\:-left-1 {
  @include left-(-$\1, $\2xl);
}

@mixin \2xl\:-inset-1\.5 {
  @include inset-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-inset-x-1\.5 {
  @include inset-x-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-inset-y-1\.5 {
  @include inset-y-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-start-1\.5 {
  @include start-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-end-1\.5 {
  @include end-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-top-1\.5 {
  @include top-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-right-1\.5 {
  @include right-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-bottom-1\.5 {
  @include bottom-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-left-1\.5 {
  @include left-(-$\1\.5, $\2xl);
}

@mixin \2xl\:-inset-2 {
  @include inset-(-$\2, $\2xl);
}

@mixin \2xl\:-inset-x-2 {
  @include inset-x-(-$\2, $\2xl);
}

@mixin \2xl\:-inset-y-2 {
  @include inset-y-(-$\2, $\2xl);
}

@mixin \2xl\:-start-2 {
  @include start-(-$\2, $\2xl);
}

@mixin \2xl\:-end-2 {
  @include end-(-$\2, $\2xl);
}

@mixin \2xl\:-top-2 {
  @include top-(-$\2, $\2xl);
}

@mixin \2xl\:-right-2 {
  @include right-(-$\2, $\2xl);
}

@mixin \2xl\:-bottom-2 {
  @include bottom-(-$\2, $\2xl);
}

@mixin \2xl\:-left-2 {
  @include left-(-$\2, $\2xl);
}

@mixin \2xl\:-inset-2\.5 {
  @include inset-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-inset-x-2\.5 {
  @include inset-x-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-inset-y-2\.5 {
  @include inset-y-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-start-2\.5 {
  @include start-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-end-2\.5 {
  @include end-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-top-2\.5 {
  @include top-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-right-2\.5 {
  @include right-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-bottom-2\.5 {
  @include bottom-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-left-2\.5 {
  @include left-(-$\2\.5, $\2xl);
}

@mixin \2xl\:-inset-3 {
  @include inset-(-$\3, $\2xl);
}

@mixin \2xl\:-inset-x-3 {
  @include inset-x-(-$\3, $\2xl);
}

@mixin \2xl\:-inset-y-3 {
  @include inset-y-(-$\3, $\2xl);
}

@mixin \2xl\:-start-3 {
  @include start-(-$\3, $\2xl);
}

@mixin \2xl\:-end-3 {
  @include end-(-$\3, $\2xl);
}

@mixin \2xl\:-top-3 {
  @include top-(-$\3, $\2xl);
}

@mixin \2xl\:-right-3 {
  @include right-(-$\3, $\2xl);
}

@mixin \2xl\:-bottom-3 {
  @include bottom-(-$\3, $\2xl);
}

@mixin \2xl\:-left-3 {
  @include left-(-$\3, $\2xl);
}

@mixin \2xl\:-inset-3\.5 {
  @include inset-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-inset-x-3\.5 {
  @include inset-x-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-inset-y-3\.5 {
  @include inset-y-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-start-3\.5 {
  @include start-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-end-3\.5 {
  @include end-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-top-3\.5 {
  @include top-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-right-3\.5 {
  @include right-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-bottom-3\.5 {
  @include bottom-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-left-3\.5 {
  @include left-(-$\3\.5, $\2xl);
}

@mixin \2xl\:-inset-4 {
  @include inset-(-$\4, $\2xl);
}

@mixin \2xl\:-inset-x-4 {
  @include inset-x-(-$\4, $\2xl);
}

@mixin \2xl\:-inset-y-4 {
  @include inset-y-(-$\4, $\2xl);
}

@mixin \2xl\:-start-4 {
  @include start-(-$\4, $\2xl);
}

@mixin \2xl\:-end-4 {
  @include end-(-$\4, $\2xl);
}

@mixin \2xl\:-top-4 {
  @include top-(-$\4, $\2xl);
}

@mixin \2xl\:-right-4 {
  @include right-(-$\4, $\2xl);
}

@mixin \2xl\:-bottom-4 {
  @include bottom-(-$\4, $\2xl);
}

@mixin \2xl\:-left-4 {
  @include left-(-$\4, $\2xl);
}

@mixin \2xl\:-inset-5 {
  @include inset-(-$\5, $\2xl);
}

@mixin \2xl\:-inset-x-5 {
  @include inset-x-(-$\5, $\2xl);
}

@mixin \2xl\:-inset-y-5 {
  @include inset-y-(-$\5, $\2xl);
}

@mixin \2xl\:-start-5 {
  @include start-(-$\5, $\2xl);
}

@mixin \2xl\:-end-5 {
  @include end-(-$\5, $\2xl);
}

@mixin \2xl\:-top-5 {
  @include top-(-$\5, $\2xl);
}

@mixin \2xl\:-right-5 {
  @include right-(-$\5, $\2xl);
}

@mixin \2xl\:-bottom-5 {
  @include bottom-(-$\5, $\2xl);
}

@mixin \2xl\:-left-5 {
  @include left-(-$\5, $\2xl);
}

@mixin \2xl\:-inset-6 {
  @include inset-(-$\6, $\2xl);
}

@mixin \2xl\:-inset-x-6 {
  @include inset-x-(-$\6, $\2xl);
}

@mixin \2xl\:-inset-y-6 {
  @include inset-y-(-$\6, $\2xl);
}

@mixin \2xl\:-start-6 {
  @include start-(-$\6, $\2xl);
}

@mixin \2xl\:-end-6 {
  @include end-(-$\6, $\2xl);
}

@mixin \2xl\:-top-6 {
  @include top-(-$\6, $\2xl);
}

@mixin \2xl\:-right-6 {
  @include right-(-$\6, $\2xl);
}

@mixin \2xl\:-bottom-6 {
  @include bottom-(-$\6, $\2xl);
}

@mixin \2xl\:-left-6 {
  @include left-(-$\6, $\2xl);
}

@mixin \2xl\:-inset-7 {
  @include inset-(-$\7, $\2xl);
}

@mixin \2xl\:-inset-x-7 {
  @include inset-x-(-$\7, $\2xl);
}

@mixin \2xl\:-inset-y-7 {
  @include inset-y-(-$\7, $\2xl);
}

@mixin \2xl\:-start-7 {
  @include start-(-$\7, $\2xl);
}

@mixin \2xl\:-end-7 {
  @include end-(-$\7, $\2xl);
}

@mixin \2xl\:-top-7 {
  @include top-(-$\7, $\2xl);
}

@mixin \2xl\:-right-7 {
  @include right-(-$\7, $\2xl);
}

@mixin \2xl\:-bottom-7 {
  @include bottom-(-$\7, $\2xl);
}

@mixin \2xl\:-left-7 {
  @include left-(-$\7, $\2xl);
}

@mixin \2xl\:-inset-8 {
  @include inset-(-$\8, $\2xl);
}

@mixin \2xl\:-inset-x-8 {
  @include inset-x-(-$\8, $\2xl);
}

@mixin \2xl\:-inset-y-8 {
  @include inset-y-(-$\8, $\2xl);
}

@mixin \2xl\:-start-8 {
  @include start-(-$\8, $\2xl);
}

@mixin \2xl\:-end-8 {
  @include end-(-$\8, $\2xl);
}

@mixin \2xl\:-top-8 {
  @include top-(-$\8, $\2xl);
}

@mixin \2xl\:-right-8 {
  @include right-(-$\8, $\2xl);
}

@mixin \2xl\:-bottom-8 {
  @include bottom-(-$\8, $\2xl);
}

@mixin \2xl\:-left-8 {
  @include left-(-$\8, $\2xl);
}

@mixin \2xl\:-inset-9 {
  @include inset-(-$\9, $\2xl);
}

@mixin \2xl\:-inset-x-9 {
  @include inset-x-(-$\9, $\2xl);
}

@mixin \2xl\:-inset-y-9 {
  @include inset-y-(-$\9, $\2xl);
}

@mixin \2xl\:-start-9 {
  @include start-(-$\9, $\2xl);
}

@mixin \2xl\:-end-9 {
  @include end-(-$\9, $\2xl);
}

@mixin \2xl\:-top-9 {
  @include top-(-$\9, $\2xl);
}

@mixin \2xl\:-right-9 {
  @include right-(-$\9, $\2xl);
}

@mixin \2xl\:-bottom-9 {
  @include bottom-(-$\9, $\2xl);
}

@mixin \2xl\:-left-9 {
  @include left-(-$\9, $\2xl);
}

@mixin \2xl\:-inset-10 {
  @include inset-(-$\10, $\2xl);
}

@mixin \2xl\:-inset-x-10 {
  @include inset-x-(-$\10, $\2xl);
}

@mixin \2xl\:-inset-y-10 {
  @include inset-y-(-$\10, $\2xl);
}

@mixin \2xl\:-start-10 {
  @include start-(-$\10, $\2xl);
}

@mixin \2xl\:-end-10 {
  @include end-(-$\10, $\2xl);
}

@mixin \2xl\:-top-10 {
  @include top-(-$\10, $\2xl);
}

@mixin \2xl\:-right-10 {
  @include right-(-$\10, $\2xl);
}

@mixin \2xl\:-bottom-10 {
  @include bottom-(-$\10, $\2xl);
}

@mixin \2xl\:-left-10 {
  @include left-(-$\10, $\2xl);
}

@mixin \2xl\:-inset-11 {
  @include inset-(-$\11, $\2xl);
}

@mixin \2xl\:-inset-x-11 {
  @include inset-x-(-$\11, $\2xl);
}

@mixin \2xl\:-inset-y-11 {
  @include inset-y-(-$\11, $\2xl);
}

@mixin \2xl\:-start-11 {
  @include start-(-$\11, $\2xl);
}

@mixin \2xl\:-end-11 {
  @include end-(-$\11, $\2xl);
}

@mixin \2xl\:-top-11 {
  @include top-(-$\11, $\2xl);
}

@mixin \2xl\:-right-11 {
  @include right-(-$\11, $\2xl);
}

@mixin \2xl\:-bottom-11 {
  @include bottom-(-$\11, $\2xl);
}

@mixin \2xl\:-left-11 {
  @include left-(-$\11, $\2xl);
}

@mixin \2xl\:-inset-12 {
  @include inset-(-$\12, $\2xl);
}

@mixin \2xl\:-inset-x-12 {
  @include inset-x-(-$\12, $\2xl);
}

@mixin \2xl\:-inset-y-12 {
  @include inset-y-(-$\12, $\2xl);
}

@mixin \2xl\:-start-12 {
  @include start-(-$\12, $\2xl);
}

@mixin \2xl\:-end-12 {
  @include end-(-$\12, $\2xl);
}

@mixin \2xl\:-top-12 {
  @include top-(-$\12, $\2xl);
}

@mixin \2xl\:-right-12 {
  @include right-(-$\12, $\2xl);
}

@mixin \2xl\:-bottom-12 {
  @include bottom-(-$\12, $\2xl);
}

@mixin \2xl\:-left-12 {
  @include left-(-$\12, $\2xl);
}

@mixin \2xl\:-inset-14 {
  @include inset-(-$\14, $\2xl);
}

@mixin \2xl\:-inset-x-14 {
  @include inset-x-(-$\14, $\2xl);
}

@mixin \2xl\:-inset-y-14 {
  @include inset-y-(-$\14, $\2xl);
}

@mixin \2xl\:-start-14 {
  @include start-(-$\14, $\2xl);
}

@mixin \2xl\:-end-14 {
  @include end-(-$\14, $\2xl);
}

@mixin \2xl\:-top-14 {
  @include top-(-$\14, $\2xl);
}

@mixin \2xl\:-right-14 {
  @include right-(-$\14, $\2xl);
}

@mixin \2xl\:-bottom-14 {
  @include bottom-(-$\14, $\2xl);
}

@mixin \2xl\:-left-14 {
  @include left-(-$\14, $\2xl);
}

@mixin \2xl\:-inset-16 {
  @include inset-(-$\16, $\2xl);
}

@mixin \2xl\:-inset-x-16 {
  @include inset-x-(-$\16, $\2xl);
}

@mixin \2xl\:-inset-y-16 {
  @include inset-y-(-$\16, $\2xl);
}

@mixin \2xl\:-start-16 {
  @include start-(-$\16, $\2xl);
}

@mixin \2xl\:-end-16 {
  @include end-(-$\16, $\2xl);
}

@mixin \2xl\:-top-16 {
  @include top-(-$\16, $\2xl);
}

@mixin \2xl\:-right-16 {
  @include right-(-$\16, $\2xl);
}

@mixin \2xl\:-bottom-16 {
  @include bottom-(-$\16, $\2xl);
}

@mixin \2xl\:-left-16 {
  @include left-(-$\16, $\2xl);
}

@mixin \2xl\:-inset-20 {
  @include inset-(-$\20, $\2xl);
}

@mixin \2xl\:-inset-x-20 {
  @include inset-x-(-$\20, $\2xl);
}

@mixin \2xl\:-inset-y-20 {
  @include inset-y-(-$\20, $\2xl);
}

@mixin \2xl\:-start-20 {
  @include start-(-$\20, $\2xl);
}

@mixin \2xl\:-end-20 {
  @include end-(-$\20, $\2xl);
}

@mixin \2xl\:-top-20 {
  @include top-(-$\20, $\2xl);
}

@mixin \2xl\:-right-20 {
  @include right-(-$\20, $\2xl);
}

@mixin \2xl\:-bottom-20 {
  @include bottom-(-$\20, $\2xl);
}

@mixin \2xl\:-left-20 {
  @include left-(-$\20, $\2xl);
}

@mixin \2xl\:-inset-24 {
  @include inset-(-$\24, $\2xl);
}

@mixin \2xl\:-inset-x-24 {
  @include inset-x-(-$\24, $\2xl);
}

@mixin \2xl\:-inset-y-24 {
  @include inset-y-(-$\24, $\2xl);
}

@mixin \2xl\:-start-24 {
  @include start-(-$\24, $\2xl);
}

@mixin \2xl\:-end-24 {
  @include end-(-$\24, $\2xl);
}

@mixin \2xl\:-top-24 {
  @include top-(-$\24, $\2xl);
}

@mixin \2xl\:-right-24 {
  @include right-(-$\24, $\2xl);
}

@mixin \2xl\:-bottom-24 {
  @include bottom-(-$\24, $\2xl);
}

@mixin \2xl\:-left-24 {
  @include left-(-$\24, $\2xl);
}

@mixin \2xl\:-inset-28 {
  @include inset-(-$\28, $\2xl);
}

@mixin \2xl\:-inset-x-28 {
  @include inset-x-(-$\28, $\2xl);
}

@mixin \2xl\:-inset-y-28 {
  @include inset-y-(-$\28, $\2xl);
}

@mixin \2xl\:-start-28 {
  @include start-(-$\28, $\2xl);
}

@mixin \2xl\:-end-28 {
  @include end-(-$\28, $\2xl);
}

@mixin \2xl\:-top-28 {
  @include top-(-$\28, $\2xl);
}

@mixin \2xl\:-right-28 {
  @include right-(-$\28, $\2xl);
}

@mixin \2xl\:-bottom-28 {
  @include bottom-(-$\28, $\2xl);
}

@mixin \2xl\:-left-28 {
  @include left-(-$\28, $\2xl);
}

@mixin \2xl\:-inset-32 {
  @include inset-(-$\32, $\2xl);
}

@mixin \2xl\:-inset-x-32 {
  @include inset-x-(-$\32, $\2xl);
}

@mixin \2xl\:-inset-y-32 {
  @include inset-y-(-$\32, $\2xl);
}

@mixin \2xl\:-start-32 {
  @include start-(-$\32, $\2xl);
}

@mixin \2xl\:-end-32 {
  @include end-(-$\32, $\2xl);
}

@mixin \2xl\:-top-32 {
  @include top-(-$\32, $\2xl);
}

@mixin \2xl\:-right-32 {
  @include right-(-$\32, $\2xl);
}

@mixin \2xl\:-bottom-32 {
  @include bottom-(-$\32, $\2xl);
}

@mixin \2xl\:-left-32 {
  @include left-(-$\32, $\2xl);
}

@mixin \2xl\:-inset-36 {
  @include inset-(-$\36, $\2xl);
}

@mixin \2xl\:-inset-x-36 {
  @include inset-x-(-$\36, $\2xl);
}

@mixin \2xl\:-inset-y-36 {
  @include inset-y-(-$\36, $\2xl);
}

@mixin \2xl\:-start-36 {
  @include start-(-$\36, $\2xl);
}

@mixin \2xl\:-end-36 {
  @include end-(-$\36, $\2xl);
}

@mixin \2xl\:-top-36 {
  @include top-(-$\36, $\2xl);
}

@mixin \2xl\:-right-36 {
  @include right-(-$\36, $\2xl);
}

@mixin \2xl\:-bottom-36 {
  @include bottom-(-$\36, $\2xl);
}

@mixin \2xl\:-left-36 {
  @include left-(-$\36, $\2xl);
}

@mixin \2xl\:-inset-40 {
  @include inset-(-$\40, $\2xl);
}

@mixin \2xl\:-inset-x-40 {
  @include inset-x-(-$\40, $\2xl);
}

@mixin \2xl\:-inset-y-40 {
  @include inset-y-(-$\40, $\2xl);
}

@mixin \2xl\:-start-40 {
  @include start-(-$\40, $\2xl);
}

@mixin \2xl\:-end-40 {
  @include end-(-$\40, $\2xl);
}

@mixin \2xl\:-top-40 {
  @include top-(-$\40, $\2xl);
}

@mixin \2xl\:-right-40 {
  @include right-(-$\40, $\2xl);
}

@mixin \2xl\:-bottom-40 {
  @include bottom-(-$\40, $\2xl);
}

@mixin \2xl\:-left-40 {
  @include left-(-$\40, $\2xl);
}

@mixin \2xl\:-inset-44 {
  @include inset-(-$\44, $\2xl);
}

@mixin \2xl\:-inset-x-44 {
  @include inset-x-(-$\44, $\2xl);
}

@mixin \2xl\:-inset-y-44 {
  @include inset-y-(-$\44, $\2xl);
}

@mixin \2xl\:-start-44 {
  @include start-(-$\44, $\2xl);
}

@mixin \2xl\:-end-44 {
  @include end-(-$\44, $\2xl);
}

@mixin \2xl\:-top-44 {
  @include top-(-$\44, $\2xl);
}

@mixin \2xl\:-right-44 {
  @include right-(-$\44, $\2xl);
}

@mixin \2xl\:-bottom-44 {
  @include bottom-(-$\44, $\2xl);
}

@mixin \2xl\:-left-44 {
  @include left-(-$\44, $\2xl);
}

@mixin \2xl\:-inset-48 {
  @include inset-(-$\48, $\2xl);
}

@mixin \2xl\:-inset-x-48 {
  @include inset-x-(-$\48, $\2xl);
}

@mixin \2xl\:-inset-y-48 {
  @include inset-y-(-$\48, $\2xl);
}

@mixin \2xl\:-start-48 {
  @include start-(-$\48, $\2xl);
}

@mixin \2xl\:-end-48 {
  @include end-(-$\48, $\2xl);
}

@mixin \2xl\:-top-48 {
  @include top-(-$\48, $\2xl);
}

@mixin \2xl\:-right-48 {
  @include right-(-$\48, $\2xl);
}

@mixin \2xl\:-bottom-48 {
  @include bottom-(-$\48, $\2xl);
}

@mixin \2xl\:-left-48 {
  @include left-(-$\48, $\2xl);
}

@mixin \2xl\:-inset-52 {
  @include inset-(-$\52, $\2xl);
}

@mixin \2xl\:-inset-x-52 {
  @include inset-x-(-$\52, $\2xl);
}

@mixin \2xl\:-inset-y-52 {
  @include inset-y-(-$\52, $\2xl);
}

@mixin \2xl\:-start-52 {
  @include start-(-$\52, $\2xl);
}

@mixin \2xl\:-end-52 {
  @include end-(-$\52, $\2xl);
}

@mixin \2xl\:-top-52 {
  @include top-(-$\52, $\2xl);
}

@mixin \2xl\:-right-52 {
  @include right-(-$\52, $\2xl);
}

@mixin \2xl\:-bottom-52 {
  @include bottom-(-$\52, $\2xl);
}

@mixin \2xl\:-left-52 {
  @include left-(-$\52, $\2xl);
}

@mixin \2xl\:-inset-56 {
  @include inset-(-$\56, $\2xl);
}

@mixin \2xl\:-inset-x-56 {
  @include inset-x-(-$\56, $\2xl);
}

@mixin \2xl\:-inset-y-56 {
  @include inset-y-(-$\56, $\2xl);
}

@mixin \2xl\:-start-56 {
  @include start-(-$\56, $\2xl);
}

@mixin \2xl\:-end-56 {
  @include end-(-$\56, $\2xl);
}

@mixin \2xl\:-top-56 {
  @include top-(-$\56, $\2xl);
}

@mixin \2xl\:-right-56 {
  @include right-(-$\56, $\2xl);
}

@mixin \2xl\:-bottom-56 {
  @include bottom-(-$\56, $\2xl);
}

@mixin \2xl\:-left-56 {
  @include left-(-$\56, $\2xl);
}

@mixin \2xl\:-inset-60 {
  @include inset-(-$\60, $\2xl);
}

@mixin \2xl\:-inset-x-60 {
  @include inset-x-(-$\60, $\2xl);
}

@mixin \2xl\:-inset-y-60 {
  @include inset-y-(-$\60, $\2xl);
}

@mixin \2xl\:-start-60 {
  @include start-(-$\60, $\2xl);
}

@mixin \2xl\:-end-60 {
  @include end-(-$\60, $\2xl);
}

@mixin \2xl\:-top-60 {
  @include top-(-$\60, $\2xl);
}

@mixin \2xl\:-right-60 {
  @include right-(-$\60, $\2xl);
}

@mixin \2xl\:-bottom-60 {
  @include bottom-(-$\60, $\2xl);
}

@mixin \2xl\:-left-60 {
  @include left-(-$\60, $\2xl);
}

@mixin \2xl\:-inset-64 {
  @include inset-(-$\64, $\2xl);
}

@mixin \2xl\:-inset-x-64 {
  @include inset-x-(-$\64, $\2xl);
}

@mixin \2xl\:-inset-y-64 {
  @include inset-y-(-$\64, $\2xl);
}

@mixin \2xl\:-start-64 {
  @include start-(-$\64, $\2xl);
}

@mixin \2xl\:-end-64 {
  @include end-(-$\64, $\2xl);
}

@mixin \2xl\:-top-64 {
  @include top-(-$\64, $\2xl);
}

@mixin \2xl\:-right-64 {
  @include right-(-$\64, $\2xl);
}

@mixin \2xl\:-bottom-64 {
  @include bottom-(-$\64, $\2xl);
}

@mixin \2xl\:-left-64 {
  @include left-(-$\64, $\2xl);
}

@mixin \2xl\:-inset-72 {
  @include inset-(-$\72, $\2xl);
}

@mixin \2xl\:-inset-x-72 {
  @include inset-x-(-$\72, $\2xl);
}

@mixin \2xl\:-inset-y-72 {
  @include inset-y-(-$\72, $\2xl);
}

@mixin \2xl\:-start-72 {
  @include start-(-$\72, $\2xl);
}

@mixin \2xl\:-end-72 {
  @include end-(-$\72, $\2xl);
}

@mixin \2xl\:-top-72 {
  @include top-(-$\72, $\2xl);
}

@mixin \2xl\:-right-72 {
  @include right-(-$\72, $\2xl);
}

@mixin \2xl\:-bottom-72 {
  @include bottom-(-$\72, $\2xl);
}

@mixin \2xl\:-left-72 {
  @include left-(-$\72, $\2xl);
}

@mixin \2xl\:-inset-80 {
  @include inset-(-$\80, $\2xl);
}

@mixin \2xl\:-inset-x-80 {
  @include inset-x-(-$\80, $\2xl);
}

@mixin \2xl\:-inset-y-80 {
  @include inset-y-(-$\80, $\2xl);
}

@mixin \2xl\:-start-80 {
  @include start-(-$\80, $\2xl);
}

@mixin \2xl\:-end-80 {
  @include end-(-$\80, $\2xl);
}

@mixin \2xl\:-top-80 {
  @include top-(-$\80, $\2xl);
}

@mixin \2xl\:-right-80 {
  @include right-(-$\80, $\2xl);
}

@mixin \2xl\:-bottom-80 {
  @include bottom-(-$\80, $\2xl);
}

@mixin \2xl\:-left-80 {
  @include left-(-$\80, $\2xl);
}

@mixin \2xl\:-inset-96 {
  @include inset-(-$\96, $\2xl);
}

@mixin \2xl\:-inset-x-96 {
  @include inset-x-(-$\96, $\2xl);
}

@mixin \2xl\:-inset-y-96 {
  @include inset-y-(-$\96, $\2xl);
}

@mixin \2xl\:-start-96 {
  @include start-(-$\96, $\2xl);
}

@mixin \2xl\:-end-96 {
  @include end-(-$\96, $\2xl);
}

@mixin \2xl\:-top-96 {
  @include top-(-$\96, $\2xl);
}

@mixin \2xl\:-right-96 {
  @include right-(-$\96, $\2xl);
}

@mixin \2xl\:-bottom-96 {
  @include bottom-(-$\96, $\2xl);
}

@mixin \2xl\:-left-96 {
  @include left-(-$\96, $\2xl);
}

@mixin \2xl\:-inset-1\/2 {
  @include inset-(-50%, $\2xl);
}

@mixin \2xl\:-inset-1\/3 {
  @include inset-(-33.333333%, $\2xl);
}

@mixin \2xl\:-inset-2\/3 {
  @include inset-(-66.666667%, $\2xl);
}

@mixin \2xl\:-inset-1\/4 {
  @include inset-(-25%, $\2xl);
}

@mixin \2xl\:-inset-2\/4 {
  @include inset-(-50%, $\2xl);
}

@mixin \2xl\:-inset-3\/4 {
  @include inset-(-75%, $\2xl);
}

@mixin \2xl\:-inset-full {
  @include inset-(-100%, $\2xl);
}

@mixin \2xl\:-inset-x-1\/2 {
  @include inset-x-(-50%, $\2xl);
}

@mixin \2xl\:-inset-x-1\/3 {
  @include inset-x-(-33.333333%, $\2xl);
}

@mixin \2xl\:-inset-x-2\/3 {
  @include inset-x-(-66.666667%, $\2xl);
}

@mixin \2xl\:-inset-x-1\/4 {
  @include inset-x-(-25%, $\2xl);
}

@mixin \2xl\:-inset-x-2\/4 {
  @include inset-x-(-50%, $\2xl);
}

@mixin \2xl\:-inset-x-3\/4 {
  @include inset-x-(-75%, $\2xl);
}

@mixin \2xl\:-inset-x-full {
  @include inset-x-(-100%, $\2xl);
}

@mixin \2xl\:-inset-y-1\/2 {
  @include inset-y-(-50%, $\2xl);
}

@mixin \2xl\:-inset-y-1\/3 {
  @include inset-y-(-33.333333%, $\2xl);
}

@mixin \2xl\:-inset-y-2\/3 {
  @include inset-y-(-66.666667%, $\2xl);
}

@mixin \2xl\:-inset-y-1\/4 {
  @include inset-y-(-25%, $\2xl);
}

@mixin \2xl\:-inset-y-2\/4 {
  @include inset-y-(-50%, $\2xl);
}

@mixin \2xl\:-inset-y-3\/4 {
  @include inset-y-(-75%, $\2xl);
}

@mixin \2xl\:-inset-y-full {
  @include inset-y-(-100%, $\2xl);
}

@mixin \2xl\:-start-1\/2 {
  @include start-(-50%, $\2xl);
}

@mixin \2xl\:-start-1\/3 {
  @include start-(-33.333333%, $\2xl);
}

@mixin \2xl\:-start-2\/3 {
  @include start-(-66.666667%, $\2xl);
}

@mixin \2xl\:-start-1\/4 {
  @include start-(-25%, $\2xl);
}

@mixin \2xl\:-start-2\/4 {
  @include start-(-50%, $\2xl);
}

@mixin \2xl\:-start-3\/4 {
  @include start-(-75%, $\2xl);
}

@mixin \2xl\:-start-full {
  @include start-(-100%, $\2xl);
}

@mixin \2xl\:-end-1\/2 {
  @include end-(-50%, $\2xl);
}

@mixin \2xl\:-end-1\/3 {
  @include end-(-33.333333%, $\2xl);
}

@mixin \2xl\:-end-2\/3 {
  @include end-(-66.666667%, $\2xl);
}

@mixin \2xl\:-end-1\/4 {
  @include end-(-25%, $\2xl);
}

@mixin \2xl\:-end-2\/4 {
  @include end-(-50%, $\2xl);
}

@mixin \2xl\:-end-3\/4 {
  @include end-(-75%, $\2xl);
}

@mixin \2xl\:-end-full {
  @include end-(-100%, $\2xl);
}

@mixin \2xl\:-top-1\/2 {
  @include top-(-50%, $\2xl);
}

@mixin \2xl\:-top-1\/3 {
  @include top-(-33.333333%, $\2xl);
}

@mixin \2xl\:-top-2\/3 {
  @include top-(-66.666667%, $\2xl);
}

@mixin \2xl\:-top-1\/4 {
  @include top-(-25%, $\2xl);
}

@mixin \2xl\:-top-2\/4 {
  @include top-(-50%, $\2xl);
}

@mixin \2xl\:-top-3\/4 {
  @include top-(-75%, $\2xl);
}

@mixin \2xl\:-top-full {
  @include top-(-100%, $\2xl);
}

@mixin \2xl\:-right-1\/2 {
  @include right-(-50%, $\2xl);
}

@mixin \2xl\:-right-1\/3 {
  @include right-(-33.333333%, $\2xl);
}

@mixin \2xl\:-right-2\/3 {
  @include right-(-66.666667%, $\2xl);
}

@mixin \2xl\:-right-1\/4 {
  @include right-(-25%, $\2xl);
}

@mixin \2xl\:-right-2\/4 {
  @include right-(-50%, $\2xl);
}

@mixin \2xl\:-right-3\/4 {
  @include right-(-75%, $\2xl);
}

@mixin \2xl\:-right-full {
  @include right-(-100%, $\2xl);
}

@mixin \2xl\:-bottom-1\/2 {
  @include bottom-(-50%, $\2xl);
}

@mixin \2xl\:-bottom-1\/3 {
  @include bottom-(-33.333333%, $\2xl);
}

@mixin \2xl\:-bottom-2\/3 {
  @include bottom-(-66.666667%, $\2xl);
}

@mixin \2xl\:-bottom-1\/4 {
  @include bottom-(-25%, $\2xl);
}

@mixin \2xl\:-bottom-2\/4 {
  @include bottom-(-50%, $\2xl);
}

@mixin \2xl\:-bottom-3\/4 {
  @include bottom-(-75%, $\2xl);
}

@mixin \2xl\:-bottom-full {
  @include bottom-(-100%, $\2xl);
}

@mixin \2xl\:-left-1\/2 {
  @include left-(-50%, $\2xl);
}

@mixin \2xl\:-left-1\/3 {
  @include left-(-33.333333%, $\2xl);
}

@mixin \2xl\:-left-2\/3 {
  @include left-(-66.666667%, $\2xl);
}

@mixin \2xl\:-left-1\/4 {
  @include left-(-25%, $\2xl);
}

@mixin \2xl\:-left-2\/4 {
  @include left-(-50%, $\2xl);
}

@mixin \2xl\:-left-3\/4 {
  @include left-(-75%, $\2xl);
}

@mixin \2xl\:-left-full {
  @include left-(-100%, $\2xl);
}

@mixin -inset-($v) {
  @include inset-(-($v));
}

@mixin -inset-x-($v) {
  @include inset-x-(-($v));
}

@mixin -inset-y-($v) {
  @include inset-y-(-($v));
}

@mixin -start-($v) {
  @include start-(-($v));
}

@mixin -end-($v) {
  @include end-(-($v));
}

@mixin -top-($v) {
  @include top-(-($v));
}

@mixin -right-($v) {
  @include right-(-($v));
}

@mixin -bottom-($v) {
  @include bottom-(-($v));
}

@mixin -left-($v) {
  @include left-(-($v));
}

@mixin sm\:-inset-($v) {
  @include inset-(-($v), $sm);
}

@mixin sm\:-inset-x-($v) {
  @include inset-x-(-($v), $sm);
}

@mixin sm\:-inset-y-($v) {
  @include inset-y-(-($v), $sm);
}

@mixin sm\:-start-($v) {
  @include start-(-($v), $sm);
}

@mixin sm\:-end-($v) {
  @include end-(-($v), $sm);
}

@mixin sm\:-top-($v) {
  @include top-(-($v), $sm);
}

@mixin sm\:-right-($v) {
  @include right-(-($v), $sm);
}

@mixin sm\:-bottom-($v) {
  @include bottom-(-($v), $sm);
}

@mixin sm\:-left-($v) {
  @include left-(-($v), $sm);
}

@mixin md\:-inset-($v) {
  @include inset-(-($v), $md);
}

@mixin md\:-inset-x-($v) {
  @include inset-x-(-($v), $md);
}

@mixin md\:-inset-y-($v) {
  @include inset-y-(-($v), $md);
}

@mixin md\:-start-($v) {
  @include start-(-($v), $md);
}

@mixin md\:-end-($v) {
  @include end-(-($v), $md);
}

@mixin md\:-top-($v) {
  @include top-(-($v), $md);
}

@mixin md\:-right-($v) {
  @include right-(-($v), $md);
}

@mixin md\:-bottom-($v) {
  @include bottom-(-($v), $md);
}

@mixin md\:-left-($v) {
  @include left-(-($v), $md);
}

@mixin lg\:-inset-($v) {
  @include inset-(-($v), $lg);
}

@mixin lg\:-inset-x-($v) {
  @include inset-x-(-($v), $lg);
}

@mixin lg\:-inset-y-($v) {
  @include inset-y-(-($v), $lg);
}

@mixin lg\:-start-($v) {
  @include start-(-($v), $lg);
}

@mixin lg\:-end-($v) {
  @include end-(-($v), $lg);
}

@mixin lg\:-top-($v) {
  @include top-(-($v), $lg);
}

@mixin lg\:-right-($v) {
  @include right-(-($v), $lg);
}

@mixin lg\:-bottom-($v) {
  @include bottom-(-($v), $lg);
}

@mixin lg\:-left-($v) {
  @include left-(-($v), $lg);
}

@mixin xl\:-inset-($v) {
  @include inset-(-($v), $xl);
}

@mixin xl\:-inset-x-($v) {
  @include inset-x-(-($v), $xl);
}

@mixin xl\:-inset-y-($v) {
  @include inset-y-(-($v), $xl);
}

@mixin xl\:-start-($v) {
  @include start-(-($v), $xl);
}

@mixin xl\:-end-($v) {
  @include end-(-($v), $xl);
}

@mixin xl\:-top-($v) {
  @include top-(-($v), $xl);
}

@mixin xl\:-right-($v) {
  @include right-(-($v), $xl);
}

@mixin xl\:-bottom-($v) {
  @include bottom-(-($v), $xl);
}

@mixin xl\:-left-($v) {
  @include left-(-($v), $xl);
}

@mixin \2xl\:-inset-($v) {
  @include inset-(-($v), $\2xl);
}

@mixin \2xl\:-inset-x-($v) {
  @include inset-x-(-($v), $\2xl);
}

@mixin \2xl\:-inset-y-($v) {
  @include inset-y-(-($v), $\2xl);
}

@mixin \2xl\:-start-($v) {
  @include start-(-($v), $\2xl);
}

@mixin \2xl\:-end-($v) {
  @include end-(-($v), $\2xl);
}

@mixin \2xl\:-top-($v) {
  @include top-(-($v), $\2xl);
}

@mixin \2xl\:-right-($v) {
  @include right-(-($v), $\2xl);
}

@mixin \2xl\:-bottom-($v) {
  @include bottom-(-($v), $\2xl);
}

@mixin \2xl\:-left-($v) {
  @include left-(-($v), $\2xl);
}

@include describe("1.Layout") {
  @include describe("Top / Right / Bottom / Left") {
    @include describe("Basic") {
      @include it("inset-0") {
        @include assert {
          @include output {
            @include inset-0;
            @include reset;
          }

          @include expect {
            inset: 0px;
          }
        }
      }

      @include it("inset-x-0") {
        @include assert {
          @include output {
            @include inset-x-0;
            @include reset;
          }

          @include expect {
            left: 0px;
            right: 0px;
          }
        }
      }

      @include it("inset-y-0") {
        @include assert {
          @include output {
            @include inset-y-0;
            @include reset;
          }

          @include expect {
            top: 0px;
            bottom: 0px;
          }
        }
      }

      @include it("start-0") {
        @include assert {
          @include output {
            @include start-0;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0px;
          }
        }
      }

      @include it("end-0") {
        @include assert {
          @include output {
            @include end-0;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0px;
          }
        }
      }

      @include it("top-0") {
        @include assert {
          @include output {
            @include top-0;
            @include reset;
          }

          @include expect {
            top: 0px;
          }
        }
      }

      @include it("right-0") {
        @include assert {
          @include output {
            @include right-0;
            @include reset;
          }

          @include expect {
            right: 0px;
          }
        }
      }

      @include it("bottom-0") {
        @include assert {
          @include output {
            @include bottom-0;
            @include reset;
          }

          @include expect {
            bottom: 0px;
          }
        }
      }

      @include it("left-0") {
        @include assert {
          @include output {
            @include left-0;
            @include reset;
          }

          @include expect {
            left: 0px;
          }
        }
      }

      @include it("inset-px") {
        @include assert {
          @include output {
            @include inset-px;
            @include reset;
          }

          @include expect {
            inset: 1px;
          }
        }
      }

      @include it("inset-x-px") {
        @include assert {
          @include output {
            @include inset-x-px;
            @include reset;
          }

          @include expect {
            left: 1px;
            right: 1px;
          }
        }
      }

      @include it("inset-y-px") {
        @include assert {
          @include output {
            @include inset-y-px;
            @include reset;
          }

          @include expect {
            top: 1px;
            bottom: 1px;
          }
        }
      }

      @include it("start-px") {
        @include assert {
          @include output {
            @include start-px;
            @include reset;
          }

          @include expect {
            inset-inline-start: 1px;
          }
        }
      }

      @include it("end-px") {
        @include assert {
          @include output {
            @include end-px;
            @include reset;
          }

          @include expect {
            inset-inline-end: 1px;
          }
        }
      }

      @include it("top-px") {
        @include assert {
          @include output {
            @include top-px;
            @include reset;
          }

          @include expect {
            top: 1px;
          }
        }
      }

      @include it("right-px") {
        @include assert {
          @include output {
            @include right-px;
            @include reset;
          }

          @include expect {
            right: 1px;
          }
        }
      }

      @include it("bottom-px") {
        @include assert {
          @include output {
            @include bottom-px;
            @include reset;
          }

          @include expect {
            bottom: 1px;
          }
        }
      }

      @include it("left-px") {
        @include assert {
          @include output {
            @include left-px;
            @include reset;
          }

          @include expect {
            left: 1px;
          }
        }
      }

      @include it("inset-0\.5") {
        @include assert {
          @include output {
            @include inset-0\.5;
            @include reset;
          }

          @include expect {
            inset: 0.125rem;
          }
        }
      }

      @include it("inset-x-0\.5") {
        @include assert {
          @include output {
            @include inset-x-0\.5;
            @include reset;
          }

          @include expect {
            left: 0.125rem;
            right: 0.125rem;
          }
        }
      }

      @include it("inset-y-0\.5") {
        @include assert {
          @include output {
            @include inset-y-0\.5;
            @include reset;
          }

          @include expect {
            top: 0.125rem;
            bottom: 0.125rem;
          }
        }
      }

      @include it("start-0\.5") {
        @include assert {
          @include output {
            @include start-0\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.125rem;
          }
        }
      }

      @include it("end-0\.5") {
        @include assert {
          @include output {
            @include end-0\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.125rem;
          }
        }
      }

      @include it("top-0\.5") {
        @include assert {
          @include output {
            @include top-0\.5;
            @include reset;
          }

          @include expect {
            top: 0.125rem;
          }
        }
      }

      @include it("right-0\.5") {
        @include assert {
          @include output {
            @include right-0\.5;
            @include reset;
          }

          @include expect {
            right: 0.125rem;
          }
        }
      }

      @include it("bottom-0\.5") {
        @include assert {
          @include output {
            @include bottom-0\.5;
            @include reset;
          }

          @include expect {
            bottom: 0.125rem;
          }
        }
      }

      @include it("left-0\.5") {
        @include assert {
          @include output {
            @include left-0\.5;
            @include reset;
          }

          @include expect {
            left: 0.125rem;
          }
        }
      }

      @include it("inset-1") {
        @include assert {
          @include output {
            @include inset-1;
            @include reset;
          }

          @include expect {
            inset: 0.25rem;
          }
        }
      }

      @include it("inset-x-1") {
        @include assert {
          @include output {
            @include inset-x-1;
            @include reset;
          }

          @include expect {
            left: 0.25rem;
            right: 0.25rem;
          }
        }
      }

      @include it("inset-y-1") {
        @include assert {
          @include output {
            @include inset-y-1;
            @include reset;
          }

          @include expect {
            top: 0.25rem;
            bottom: 0.25rem;
          }
        }
      }

      @include it("start-1") {
        @include assert {
          @include output {
            @include start-1;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.25rem;
          }
        }
      }

      @include it("end-1") {
        @include assert {
          @include output {
            @include end-1;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.25rem;
          }
        }
      }

      @include it("top-1") {
        @include assert {
          @include output {
            @include top-1;
            @include reset;
          }

          @include expect {
            top: 0.25rem;
          }
        }
      }

      @include it("right-1") {
        @include assert {
          @include output {
            @include right-1;
            @include reset;
          }

          @include expect {
            right: 0.25rem;
          }
        }
      }

      @include it("bottom-1") {
        @include assert {
          @include output {
            @include bottom-1;
            @include reset;
          }

          @include expect {
            bottom: 0.25rem;
          }
        }
      }

      @include it("left-1") {
        @include assert {
          @include output {
            @include left-1;
            @include reset;
          }

          @include expect {
            left: 0.25rem;
          }
        }
      }

      @include it("inset-1\.5") {
        @include assert {
          @include output {
            @include inset-1\.5;
            @include reset;
          }

          @include expect {
            inset: 0.375rem;
          }
        }
      }

      @include it("inset-x-1\.5") {
        @include assert {
          @include output {
            @include inset-x-1\.5;
            @include reset;
          }

          @include expect {
            left: 0.375rem;
            right: 0.375rem;
          }
        }
      }

      @include it("inset-y-1\.5") {
        @include assert {
          @include output {
            @include inset-y-1\.5;
            @include reset;
          }

          @include expect {
            top: 0.375rem;
            bottom: 0.375rem;
          }
        }
      }

      @include it("start-1\.5") {
        @include assert {
          @include output {
            @include start-1\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.375rem;
          }
        }
      }

      @include it("end-1\.5") {
        @include assert {
          @include output {
            @include end-1\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.375rem;
          }
        }
      }

      @include it("top-1\.5") {
        @include assert {
          @include output {
            @include top-1\.5;
            @include reset;
          }

          @include expect {
            top: 0.375rem;
          }
        }
      }

      @include it("right-1\.5") {
        @include assert {
          @include output {
            @include right-1\.5;
            @include reset;
          }

          @include expect {
            right: 0.375rem;
          }
        }
      }

      @include it("bottom-1\.5") {
        @include assert {
          @include output {
            @include bottom-1\.5;
            @include reset;
          }

          @include expect {
            bottom: 0.375rem;
          }
        }
      }

      @include it("left-1\.5") {
        @include assert {
          @include output {
            @include left-1\.5;
            @include reset;
          }

          @include expect {
            left: 0.375rem;
          }
        }
      }

      @include it("inset-2") {
        @include assert {
          @include output {
            @include inset-2;
            @include reset;
          }

          @include expect {
            inset: 0.5rem;
          }
        }
      }

      @include it("inset-x-2") {
        @include assert {
          @include output {
            @include inset-x-2;
            @include reset;
          }

          @include expect {
            left: 0.5rem;
            right: 0.5rem;
          }
        }
      }

      @include it("inset-y-2") {
        @include assert {
          @include output {
            @include inset-y-2;
            @include reset;
          }

          @include expect {
            top: 0.5rem;
            bottom: 0.5rem;
          }
        }
      }

      @include it("start-2") {
        @include assert {
          @include output {
            @include start-2;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.5rem;
          }
        }
      }

      @include it("end-2") {
        @include assert {
          @include output {
            @include end-2;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.5rem;
          }
        }
      }

      @include it("top-2") {
        @include assert {
          @include output {
            @include top-2;
            @include reset;
          }

          @include expect {
            top: 0.5rem;
          }
        }
      }

      @include it("right-2") {
        @include assert {
          @include output {
            @include right-2;
            @include reset;
          }

          @include expect {
            right: 0.5rem;
          }
        }
      }

      @include it("bottom-2") {
        @include assert {
          @include output {
            @include bottom-2;
            @include reset;
          }

          @include expect {
            bottom: 0.5rem;
          }
        }
      }

      @include it("left-2") {
        @include assert {
          @include output {
            @include left-2;
            @include reset;
          }

          @include expect {
            left: 0.5rem;
          }
        }
      }

      @include it("inset-2\.5") {
        @include assert {
          @include output {
            @include inset-2\.5;
            @include reset;
          }

          @include expect {
            inset: 0.625rem;
          }
        }
      }

      @include it("inset-x-2\.5") {
        @include assert {
          @include output {
            @include inset-x-2\.5;
            @include reset;
          }

          @include expect {
            left: 0.625rem;
            right: 0.625rem;
          }
        }
      }

      @include it("inset-y-2\.5") {
        @include assert {
          @include output {
            @include inset-y-2\.5;
            @include reset;
          }

          @include expect {
            top: 0.625rem;
            bottom: 0.625rem;
          }
        }
      }

      @include it("start-2\.5") {
        @include assert {
          @include output {
            @include start-2\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.625rem;
          }
        }
      }

      @include it("end-2\.5") {
        @include assert {
          @include output {
            @include end-2\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.625rem;
          }
        }
      }

      @include it("top-2\.5") {
        @include assert {
          @include output {
            @include top-2\.5;
            @include reset;
          }

          @include expect {
            top: 0.625rem;
          }
        }
      }

      @include it("right-2\.5") {
        @include assert {
          @include output {
            @include right-2\.5;
            @include reset;
          }

          @include expect {
            right: 0.625rem;
          }
        }
      }

      @include it("bottom-2\.5") {
        @include assert {
          @include output {
            @include bottom-2\.5;
            @include reset;
          }

          @include expect {
            bottom: 0.625rem;
          }
        }
      }

      @include it("left-2\.5") {
        @include assert {
          @include output {
            @include left-2\.5;
            @include reset;
          }

          @include expect {
            left: 0.625rem;
          }
        }
      }

      @include it("inset-3") {
        @include assert {
          @include output {
            @include inset-3;
            @include reset;
          }

          @include expect {
            inset: 0.75rem;
          }
        }
      }

      @include it("inset-x-3") {
        @include assert {
          @include output {
            @include inset-x-3;
            @include reset;
          }

          @include expect {
            left: 0.75rem;
            right: 0.75rem;
          }
        }
      }

      @include it("inset-y-3") {
        @include assert {
          @include output {
            @include inset-y-3;
            @include reset;
          }

          @include expect {
            top: 0.75rem;
            bottom: 0.75rem;
          }
        }
      }

      @include it("start-3") {
        @include assert {
          @include output {
            @include start-3;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.75rem;
          }
        }
      }

      @include it("end-3") {
        @include assert {
          @include output {
            @include end-3;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.75rem;
          }
        }
      }

      @include it("top-3") {
        @include assert {
          @include output {
            @include top-3;
            @include reset;
          }

          @include expect {
            top: 0.75rem;
          }
        }
      }

      @include it("right-3") {
        @include assert {
          @include output {
            @include right-3;
            @include reset;
          }

          @include expect {
            right: 0.75rem;
          }
        }
      }

      @include it("bottom-3") {
        @include assert {
          @include output {
            @include bottom-3;
            @include reset;
          }

          @include expect {
            bottom: 0.75rem;
          }
        }
      }

      @include it("left-3") {
        @include assert {
          @include output {
            @include left-3;
            @include reset;
          }

          @include expect {
            left: 0.75rem;
          }
        }
      }

      @include it("inset-3\.5") {
        @include assert {
          @include output {
            @include inset-3\.5;
            @include reset;
          }

          @include expect {
            inset: 0.875rem;
          }
        }
      }

      @include it("inset-x-3\.5") {
        @include assert {
          @include output {
            @include inset-x-3\.5;
            @include reset;
          }

          @include expect {
            left: 0.875rem;
            right: 0.875rem;
          }
        }
      }

      @include it("inset-y-3\.5") {
        @include assert {
          @include output {
            @include inset-y-3\.5;
            @include reset;
          }

          @include expect {
            top: 0.875rem;
            bottom: 0.875rem;
          }
        }
      }

      @include it("start-3\.5") {
        @include assert {
          @include output {
            @include start-3\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0.875rem;
          }
        }
      }

      @include it("end-3\.5") {
        @include assert {
          @include output {
            @include end-3\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0.875rem;
          }
        }
      }

      @include it("top-3\.5") {
        @include assert {
          @include output {
            @include top-3\.5;
            @include reset;
          }

          @include expect {
            top: 0.875rem;
          }
        }
      }

      @include it("right-3\.5") {
        @include assert {
          @include output {
            @include right-3\.5;
            @include reset;
          }

          @include expect {
            right: 0.875rem;
          }
        }
      }

      @include it("bottom-3\.5") {
        @include assert {
          @include output {
            @include bottom-3\.5;
            @include reset;
          }

          @include expect {
            bottom: 0.875rem;
          }
        }
      }

      @include it("left-3\.5") {
        @include assert {
          @include output {
            @include left-3\.5;
            @include reset;
          }

          @include expect {
            left: 0.875rem;
          }
        }
      }

      @include it("inset-4") {
        @include assert {
          @include output {
            @include inset-4;
            @include reset;
          }

          @include expect {
            inset: 1rem;
          }
        }
      }

      @include it("inset-x-4") {
        @include assert {
          @include output {
            @include inset-x-4;
            @include reset;
          }

          @include expect {
            left: 1rem;
            right: 1rem;
          }
        }
      }

      @include it("inset-y-4") {
        @include assert {
          @include output {
            @include inset-y-4;
            @include reset;
          }

          @include expect {
            top: 1rem;
            bottom: 1rem;
          }
        }
      }

      @include it("start-4") {
        @include assert {
          @include output {
            @include start-4;
            @include reset;
          }

          @include expect {
            inset-inline-start: 1rem;
          }
        }
      }

      @include it("end-4") {
        @include assert {
          @include output {
            @include end-4;
            @include reset;
          }

          @include expect {
            inset-inline-end: 1rem;
          }
        }
      }

      @include it("top-4") {
        @include assert {
          @include output {
            @include top-4;
            @include reset;
          }

          @include expect {
            top: 1rem;
          }
        }
      }

      @include it("right-4") {
        @include assert {
          @include output {
            @include right-4;
            @include reset;
          }

          @include expect {
            right: 1rem;
          }
        }
      }

      @include it("bottom-4") {
        @include assert {
          @include output {
            @include bottom-4;
            @include reset;
          }

          @include expect {
            bottom: 1rem;
          }
        }
      }

      @include it("left-4") {
        @include assert {
          @include output {
            @include left-4;
            @include reset;
          }

          @include expect {
            left: 1rem;
          }
        }
      }

      @include it("inset-5") {
        @include assert {
          @include output {
            @include inset-5;
            @include reset;
          }

          @include expect {
            inset: 1.25rem;
          }
        }
      }

      @include it("inset-x-5") {
        @include assert {
          @include output {
            @include inset-x-5;
            @include reset;
          }

          @include expect {
            left: 1.25rem;
            right: 1.25rem;
          }
        }
      }

      @include it("inset-y-5") {
        @include assert {
          @include output {
            @include inset-y-5;
            @include reset;
          }

          @include expect {
            top: 1.25rem;
            bottom: 1.25rem;
          }
        }
      }

      @include it("start-5") {
        @include assert {
          @include output {
            @include start-5;
            @include reset;
          }

          @include expect {
            inset-inline-start: 1.25rem;
          }
        }
      }

      @include it("end-5") {
        @include assert {
          @include output {
            @include end-5;
            @include reset;
          }

          @include expect {
            inset-inline-end: 1.25rem;
          }
        }
      }

      @include it("top-5") {
        @include assert {
          @include output {
            @include top-5;
            @include reset;
          }

          @include expect {
            top: 1.25rem;
          }
        }
      }

      @include it("right-5") {
        @include assert {
          @include output {
            @include right-5;
            @include reset;
          }

          @include expect {
            right: 1.25rem;
          }
        }
      }

      @include it("bottom-5") {
        @include assert {
          @include output {
            @include bottom-5;
            @include reset;
          }

          @include expect {
            bottom: 1.25rem;
          }
        }
      }

      @include it("left-5") {
        @include assert {
          @include output {
            @include left-5;
            @include reset;
          }

          @include expect {
            left: 1.25rem;
          }
        }
      }

      @include it("inset-6") {
        @include assert {
          @include output {
            @include inset-6;
            @include reset;
          }

          @include expect {
            inset: 1.5rem;
          }
        }
      }

      @include it("inset-x-6") {
        @include assert {
          @include output {
            @include inset-x-6;
            @include reset;
          }

          @include expect {
            left: 1.5rem;
            right: 1.5rem;
          }
        }
      }

      @include it("inset-y-6") {
        @include assert {
          @include output {
            @include inset-y-6;
            @include reset;
          }

          @include expect {
            top: 1.5rem;
            bottom: 1.5rem;
          }
        }
      }

      @include it("start-6") {
        @include assert {
          @include output {
            @include start-6;
            @include reset;
          }

          @include expect {
            inset-inline-start: 1.5rem;
          }
        }
      }

      @include it("end-6") {
        @include assert {
          @include output {
            @include end-6;
            @include reset;
          }

          @include expect {
            inset-inline-end: 1.5rem;
          }
        }
      }

      @include it("top-6") {
        @include assert {
          @include output {
            @include top-6;
            @include reset;
          }

          @include expect {
            top: 1.5rem;
          }
        }
      }

      @include it("right-6") {
        @include assert {
          @include output {
            @include right-6;
            @include reset;
          }

          @include expect {
            right: 1.5rem;
          }
        }
      }

      @include it("bottom-6") {
        @include assert {
          @include output {
            @include bottom-6;
            @include reset;
          }

          @include expect {
            bottom: 1.5rem;
          }
        }
      }

      @include it("left-6") {
        @include assert {
          @include output {
            @include left-6;
            @include reset;
          }

          @include expect {
            left: 1.5rem;
          }
        }
      }

      @include it("inset-7") {
        @include assert {
          @include output {
            @include inset-7;
            @include reset;
          }

          @include expect {
            inset: 1.75rem;
          }
        }
      }

      @include it("inset-x-7") {
        @include assert {
          @include output {
            @include inset-x-7;
            @include reset;
          }

          @include expect {
            left: 1.75rem;
            right: 1.75rem;
          }
        }
      }

      @include it("inset-y-7") {
        @include assert {
          @include output {
            @include inset-y-7;
            @include reset;
          }

          @include expect {
            top: 1.75rem;
            bottom: 1.75rem;
          }
        }
      }

      @include it("start-7") {
        @include assert {
          @include output {
            @include start-7;
            @include reset;
          }

          @include expect {
            inset-inline-start: 1.75rem;
          }
        }
      }

      @include it("end-7") {
        @include assert {
          @include output {
            @include end-7;
            @include reset;
          }

          @include expect {
            inset-inline-end: 1.75rem;
          }
        }
      }

      @include it("top-7") {
        @include assert {
          @include output {
            @include top-7;
            @include reset;
          }

          @include expect {
            top: 1.75rem;
          }
        }
      }

      @include it("right-7") {
        @include assert {
          @include output {
            @include right-7;
            @include reset;
          }

          @include expect {
            right: 1.75rem;
          }
        }
      }

      @include it("bottom-7") {
        @include assert {
          @include output {
            @include bottom-7;
            @include reset;
          }

          @include expect {
            bottom: 1.75rem;
          }
        }
      }

      @include it("left-7") {
        @include assert {
          @include output {
            @include left-7;
            @include reset;
          }

          @include expect {
            left: 1.75rem;
          }
        }
      }

      @include it("inset-8") {
        @include assert {
          @include output {
            @include inset-8;
            @include reset;
          }

          @include expect {
            inset: 2rem;
          }
        }
      }

      @include it("inset-x-8") {
        @include assert {
          @include output {
            @include inset-x-8;
            @include reset;
          }

          @include expect {
            left: 2rem;
            right: 2rem;
          }
        }
      }

      @include it("inset-y-8") {
        @include assert {
          @include output {
            @include inset-y-8;
            @include reset;
          }

          @include expect {
            top: 2rem;
            bottom: 2rem;
          }
        }
      }

      @include it("start-8") {
        @include assert {
          @include output {
            @include start-8;
            @include reset;
          }

          @include expect {
            inset-inline-start: 2rem;
          }
        }
      }

      @include it("end-8") {
        @include assert {
          @include output {
            @include end-8;
            @include reset;
          }

          @include expect {
            inset-inline-end: 2rem;
          }
        }
      }

      @include it("top-8") {
        @include assert {
          @include output {
            @include top-8;
            @include reset;
          }

          @include expect {
            top: 2rem;
          }
        }
      }

      @include it("right-8") {
        @include assert {
          @include output {
            @include right-8;
            @include reset;
          }

          @include expect {
            right: 2rem;
          }
        }
      }

      @include it("bottom-8") {
        @include assert {
          @include output {
            @include bottom-8;
            @include reset;
          }

          @include expect {
            bottom: 2rem;
          }
        }
      }

      @include it("left-8") {
        @include assert {
          @include output {
            @include left-8;
            @include reset;
          }

          @include expect {
            left: 2rem;
          }
        }
      }

      @include it("inset-9") {
        @include assert {
          @include output {
            @include inset-9;
            @include reset;
          }

          @include expect {
            inset: 2.25rem;
          }
        }
      }

      @include it("inset-x-9") {
        @include assert {
          @include output {
            @include inset-x-9;
            @include reset;
          }

          @include expect {
            left: 2.25rem;
            right: 2.25rem;
          }
        }
      }

      @include it("inset-y-9") {
        @include assert {
          @include output {
            @include inset-y-9;
            @include reset;
          }

          @include expect {
            top: 2.25rem;
            bottom: 2.25rem;
          }
        }
      }

      @include it("start-9") {
        @include assert {
          @include output {
            @include start-9;
            @include reset;
          }

          @include expect {
            inset-inline-start: 2.25rem;
          }
        }
      }

      @include it("end-9") {
        @include assert {
          @include output {
            @include end-9;
            @include reset;
          }

          @include expect {
            inset-inline-end: 2.25rem;
          }
        }
      }

      @include it("top-9") {
        @include assert {
          @include output {
            @include top-9;
            @include reset;
          }

          @include expect {
            top: 2.25rem;
          }
        }
      }

      @include it("right-9") {
        @include assert {
          @include output {
            @include right-9;
            @include reset;
          }

          @include expect {
            right: 2.25rem;
          }
        }
      }

      @include it("bottom-9") {
        @include assert {
          @include output {
            @include bottom-9;
            @include reset;
          }

          @include expect {
            bottom: 2.25rem;
          }
        }
      }

      @include it("left-9") {
        @include assert {
          @include output {
            @include left-9;
            @include reset;
          }

          @include expect {
            left: 2.25rem;
          }
        }
      }

      @include it("inset-10") {
        @include assert {
          @include output {
            @include inset-10;
            @include reset;
          }

          @include expect {
            inset: 2.5rem;
          }
        }
      }

      @include it("inset-x-10") {
        @include assert {
          @include output {
            @include inset-x-10;
            @include reset;
          }

          @include expect {
            left: 2.5rem;
            right: 2.5rem;
          }
        }
      }

      @include it("inset-y-10") {
        @include assert {
          @include output {
            @include inset-y-10;
            @include reset;
          }

          @include expect {
            top: 2.5rem;
            bottom: 2.5rem;
          }
        }
      }

      @include it("start-10") {
        @include assert {
          @include output {
            @include start-10;
            @include reset;
          }

          @include expect {
            inset-inline-start: 2.5rem;
          }
        }
      }

      @include it("end-10") {
        @include assert {
          @include output {
            @include end-10;
            @include reset;
          }

          @include expect {
            inset-inline-end: 2.5rem;
          }
        }
      }

      @include it("top-10") {
        @include assert {
          @include output {
            @include top-10;
            @include reset;
          }

          @include expect {
            top: 2.5rem;
          }
        }
      }

      @include it("right-10") {
        @include assert {
          @include output {
            @include right-10;
            @include reset;
          }

          @include expect {
            right: 2.5rem;
          }
        }
      }

      @include it("bottom-10") {
        @include assert {
          @include output {
            @include bottom-10;
            @include reset;
          }

          @include expect {
            bottom: 2.5rem;
          }
        }
      }

      @include it("left-10") {
        @include assert {
          @include output {
            @include left-10;
            @include reset;
          }

          @include expect {
            left: 2.5rem;
          }
        }
      }

      @include it("inset-11") {
        @include assert {
          @include output {
            @include inset-11;
            @include reset;
          }

          @include expect {
            inset: 2.75rem;
          }
        }
      }

      @include it("inset-x-11") {
        @include assert {
          @include output {
            @include inset-x-11;
            @include reset;
          }

          @include expect {
            left: 2.75rem;
            right: 2.75rem;
          }
        }
      }

      @include it("inset-y-11") {
        @include assert {
          @include output {
            @include inset-y-11;
            @include reset;
          }

          @include expect {
            top: 2.75rem;
            bottom: 2.75rem;
          }
        }
      }

      @include it("start-11") {
        @include assert {
          @include output {
            @include start-11;
            @include reset;
          }

          @include expect {
            inset-inline-start: 2.75rem;
          }
        }
      }

      @include it("end-11") {
        @include assert {
          @include output {
            @include end-11;
            @include reset;
          }

          @include expect {
            inset-inline-end: 2.75rem;
          }
        }
      }

      @include it("top-11") {
        @include assert {
          @include output {
            @include top-11;
            @include reset;
          }

          @include expect {
            top: 2.75rem;
          }
        }
      }

      @include it("right-11") {
        @include assert {
          @include output {
            @include right-11;
            @include reset;
          }

          @include expect {
            right: 2.75rem;
          }
        }
      }

      @include it("bottom-11") {
        @include assert {
          @include output {
            @include bottom-11;
            @include reset;
          }

          @include expect {
            bottom: 2.75rem;
          }
        }
      }

      @include it("left-11") {
        @include assert {
          @include output {
            @include left-11;
            @include reset;
          }

          @include expect {
            left: 2.75rem;
          }
        }
      }

      @include it("inset-12") {
        @include assert {
          @include output {
            @include inset-12;
            @include reset;
          }

          @include expect {
            inset: 3rem;
          }
        }
      }

      @include it("inset-x-12") {
        @include assert {
          @include output {
            @include inset-x-12;
            @include reset;
          }

          @include expect {
            left: 3rem;
            right: 3rem;
          }
        }
      }

      @include it("inset-y-12") {
        @include assert {
          @include output {
            @include inset-y-12;
            @include reset;
          }

          @include expect {
            top: 3rem;
            bottom: 3rem;
          }
        }
      }

      @include it("start-12") {
        @include assert {
          @include output {
            @include start-12;
            @include reset;
          }

          @include expect {
            inset-inline-start: 3rem;
          }
        }
      }

      @include it("end-12") {
        @include assert {
          @include output {
            @include end-12;
            @include reset;
          }

          @include expect {
            inset-inline-end: 3rem;
          }
        }
      }

      @include it("top-12") {
        @include assert {
          @include output {
            @include top-12;
            @include reset;
          }

          @include expect {
            top: 3rem;
          }
        }
      }

      @include it("right-12") {
        @include assert {
          @include output {
            @include right-12;
            @include reset;
          }

          @include expect {
            right: 3rem;
          }
        }
      }

      @include it("bottom-12") {
        @include assert {
          @include output {
            @include bottom-12;
            @include reset;
          }

          @include expect {
            bottom: 3rem;
          }
        }
      }

      @include it("left-12") {
        @include assert {
          @include output {
            @include left-12;
            @include reset;
          }

          @include expect {
            left: 3rem;
          }
        }
      }

      @include it("inset-14") {
        @include assert {
          @include output {
            @include inset-14;
            @include reset;
          }

          @include expect {
            inset: 3.5rem;
          }
        }
      }

      @include it("inset-x-14") {
        @include assert {
          @include output {
            @include inset-x-14;
            @include reset;
          }

          @include expect {
            left: 3.5rem;
            right: 3.5rem;
          }
        }
      }

      @include it("inset-y-14") {
        @include assert {
          @include output {
            @include inset-y-14;
            @include reset;
          }

          @include expect {
            top: 3.5rem;
            bottom: 3.5rem;
          }
        }
      }

      @include it("start-14") {
        @include assert {
          @include output {
            @include start-14;
            @include reset;
          }

          @include expect {
            inset-inline-start: 3.5rem;
          }
        }
      }

      @include it("end-14") {
        @include assert {
          @include output {
            @include end-14;
            @include reset;
          }

          @include expect {
            inset-inline-end: 3.5rem;
          }
        }
      }

      @include it("top-14") {
        @include assert {
          @include output {
            @include top-14;
            @include reset;
          }

          @include expect {
            top: 3.5rem;
          }
        }
      }

      @include it("right-14") {
        @include assert {
          @include output {
            @include right-14;
            @include reset;
          }

          @include expect {
            right: 3.5rem;
          }
        }
      }

      @include it("bottom-14") {
        @include assert {
          @include output {
            @include bottom-14;
            @include reset;
          }

          @include expect {
            bottom: 3.5rem;
          }
        }
      }

      @include it("left-14") {
        @include assert {
          @include output {
            @include left-14;
            @include reset;
          }

          @include expect {
            left: 3.5rem;
          }
        }
      }

      @include it("inset-16") {
        @include assert {
          @include output {
            @include inset-16;
            @include reset;
          }

          @include expect {
            inset: 4rem;
          }
        }
      }

      @include it("inset-x-16") {
        @include assert {
          @include output {
            @include inset-x-16;
            @include reset;
          }

          @include expect {
            left: 4rem;
            right: 4rem;
          }
        }
      }

      @include it("inset-y-16") {
        @include assert {
          @include output {
            @include inset-y-16;
            @include reset;
          }

          @include expect {
            top: 4rem;
            bottom: 4rem;
          }
        }
      }

      @include it("start-16") {
        @include assert {
          @include output {
            @include start-16;
            @include reset;
          }

          @include expect {
            inset-inline-start: 4rem;
          }
        }
      }

      @include it("end-16") {
        @include assert {
          @include output {
            @include end-16;
            @include reset;
          }

          @include expect {
            inset-inline-end: 4rem;
          }
        }
      }

      @include it("top-16") {
        @include assert {
          @include output {
            @include top-16;
            @include reset;
          }

          @include expect {
            top: 4rem;
          }
        }
      }

      @include it("right-16") {
        @include assert {
          @include output {
            @include right-16;
            @include reset;
          }

          @include expect {
            right: 4rem;
          }
        }
      }

      @include it("bottom-16") {
        @include assert {
          @include output {
            @include bottom-16;
            @include reset;
          }

          @include expect {
            bottom: 4rem;
          }
        }
      }

      @include it("left-16") {
        @include assert {
          @include output {
            @include left-16;
            @include reset;
          }

          @include expect {
            left: 4rem;
          }
        }
      }

      @include it("inset-20") {
        @include assert {
          @include output {
            @include inset-20;
            @include reset;
          }

          @include expect {
            inset: 5rem;
          }
        }
      }

      @include it("inset-x-20") {
        @include assert {
          @include output {
            @include inset-x-20;
            @include reset;
          }

          @include expect {
            left: 5rem;
            right: 5rem;
          }
        }
      }

      @include it("inset-y-20") {
        @include assert {
          @include output {
            @include inset-y-20;
            @include reset;
          }

          @include expect {
            top: 5rem;
            bottom: 5rem;
          }
        }
      }

      @include it("start-20") {
        @include assert {
          @include output {
            @include start-20;
            @include reset;
          }

          @include expect {
            inset-inline-start: 5rem;
          }
        }
      }

      @include it("end-20") {
        @include assert {
          @include output {
            @include end-20;
            @include reset;
          }

          @include expect {
            inset-inline-end: 5rem;
          }
        }
      }

      @include it("top-20") {
        @include assert {
          @include output {
            @include top-20;
            @include reset;
          }

          @include expect {
            top: 5rem;
          }
        }
      }

      @include it("right-20") {
        @include assert {
          @include output {
            @include right-20;
            @include reset;
          }

          @include expect {
            right: 5rem;
          }
        }
      }

      @include it("bottom-20") {
        @include assert {
          @include output {
            @include bottom-20;
            @include reset;
          }

          @include expect {
            bottom: 5rem;
          }
        }
      }

      @include it("left-20") {
        @include assert {
          @include output {
            @include left-20;
            @include reset;
          }

          @include expect {
            left: 5rem;
          }
        }
      }

      @include it("inset-24") {
        @include assert {
          @include output {
            @include inset-24;
            @include reset;
          }

          @include expect {
            inset: 6rem;
          }
        }
      }

      @include it("inset-x-24") {
        @include assert {
          @include output {
            @include inset-x-24;
            @include reset;
          }

          @include expect {
            left: 6rem;
            right: 6rem;
          }
        }
      }

      @include it("inset-y-24") {
        @include assert {
          @include output {
            @include inset-y-24;
            @include reset;
          }

          @include expect {
            top: 6rem;
            bottom: 6rem;
          }
        }
      }

      @include it("start-24") {
        @include assert {
          @include output {
            @include start-24;
            @include reset;
          }

          @include expect {
            inset-inline-start: 6rem;
          }
        }
      }

      @include it("end-24") {
        @include assert {
          @include output {
            @include end-24;
            @include reset;
          }

          @include expect {
            inset-inline-end: 6rem;
          }
        }
      }

      @include it("top-24") {
        @include assert {
          @include output {
            @include top-24;
            @include reset;
          }

          @include expect {
            top: 6rem;
          }
        }
      }

      @include it("right-24") {
        @include assert {
          @include output {
            @include right-24;
            @include reset;
          }

          @include expect {
            right: 6rem;
          }
        }
      }

      @include it("bottom-24") {
        @include assert {
          @include output {
            @include bottom-24;
            @include reset;
          }

          @include expect {
            bottom: 6rem;
          }
        }
      }

      @include it("left-24") {
        @include assert {
          @include output {
            @include left-24;
            @include reset;
          }

          @include expect {
            left: 6rem;
          }
        }
      }

      @include it("inset-28") {
        @include assert {
          @include output {
            @include inset-28;
            @include reset;
          }

          @include expect {
            inset: 7rem;
          }
        }
      }

      @include it("inset-x-28") {
        @include assert {
          @include output {
            @include inset-x-28;
            @include reset;
          }

          @include expect {
            left: 7rem;
            right: 7rem;
          }
        }
      }

      @include it("inset-y-28") {
        @include assert {
          @include output {
            @include inset-y-28;
            @include reset;
          }

          @include expect {
            top: 7rem;
            bottom: 7rem;
          }
        }
      }

      @include it("start-28") {
        @include assert {
          @include output {
            @include start-28;
            @include reset;
          }

          @include expect {
            inset-inline-start: 7rem;
          }
        }
      }

      @include it("end-28") {
        @include assert {
          @include output {
            @include end-28;
            @include reset;
          }

          @include expect {
            inset-inline-end: 7rem;
          }
        }
      }

      @include it("top-28") {
        @include assert {
          @include output {
            @include top-28;
            @include reset;
          }

          @include expect {
            top: 7rem;
          }
        }
      }

      @include it("right-28") {
        @include assert {
          @include output {
            @include right-28;
            @include reset;
          }

          @include expect {
            right: 7rem;
          }
        }
      }

      @include it("bottom-28") {
        @include assert {
          @include output {
            @include bottom-28;
            @include reset;
          }

          @include expect {
            bottom: 7rem;
          }
        }
      }

      @include it("left-28") {
        @include assert {
          @include output {
            @include left-28;
            @include reset;
          }

          @include expect {
            left: 7rem;
          }
        }
      }

      @include it("inset-32") {
        @include assert {
          @include output {
            @include inset-32;
            @include reset;
          }

          @include expect {
            inset: 8rem;
          }
        }
      }

      @include it("inset-x-32") {
        @include assert {
          @include output {
            @include inset-x-32;
            @include reset;
          }

          @include expect {
            left: 8rem;
            right: 8rem;
          }
        }
      }

      @include it("inset-y-32") {
        @include assert {
          @include output {
            @include inset-y-32;
            @include reset;
          }

          @include expect {
            top: 8rem;
            bottom: 8rem;
          }
        }
      }

      @include it("start-32") {
        @include assert {
          @include output {
            @include start-32;
            @include reset;
          }

          @include expect {
            inset-inline-start: 8rem;
          }
        }
      }

      @include it("end-32") {
        @include assert {
          @include output {
            @include end-32;
            @include reset;
          }

          @include expect {
            inset-inline-end: 8rem;
          }
        }
      }

      @include it("top-32") {
        @include assert {
          @include output {
            @include top-32;
            @include reset;
          }

          @include expect {
            top: 8rem;
          }
        }
      }

      @include it("right-32") {
        @include assert {
          @include output {
            @include right-32;
            @include reset;
          }

          @include expect {
            right: 8rem;
          }
        }
      }

      @include it("bottom-32") {
        @include assert {
          @include output {
            @include bottom-32;
            @include reset;
          }

          @include expect {
            bottom: 8rem;
          }
        }
      }

      @include it("left-32") {
        @include assert {
          @include output {
            @include left-32;
            @include reset;
          }

          @include expect {
            left: 8rem;
          }
        }
      }

      @include it("inset-36") {
        @include assert {
          @include output {
            @include inset-36;
            @include reset;
          }

          @include expect {
            inset: 9rem;
          }
        }
      }

      @include it("inset-x-36") {
        @include assert {
          @include output {
            @include inset-x-36;
            @include reset;
          }

          @include expect {
            left: 9rem;
            right: 9rem;
          }
        }
      }

      @include it("inset-y-36") {
        @include assert {
          @include output {
            @include inset-y-36;
            @include reset;
          }

          @include expect {
            top: 9rem;
            bottom: 9rem;
          }
        }
      }

      @include it("start-36") {
        @include assert {
          @include output {
            @include start-36;
            @include reset;
          }

          @include expect {
            inset-inline-start: 9rem;
          }
        }
      }

      @include it("end-36") {
        @include assert {
          @include output {
            @include end-36;
            @include reset;
          }

          @include expect {
            inset-inline-end: 9rem;
          }
        }
      }

      @include it("top-36") {
        @include assert {
          @include output {
            @include top-36;
            @include reset;
          }

          @include expect {
            top: 9rem;
          }
        }
      }

      @include it("right-36") {
        @include assert {
          @include output {
            @include right-36;
            @include reset;
          }

          @include expect {
            right: 9rem;
          }
        }
      }

      @include it("bottom-36") {
        @include assert {
          @include output {
            @include bottom-36;
            @include reset;
          }

          @include expect {
            bottom: 9rem;
          }
        }
      }

      @include it("left-36") {
        @include assert {
          @include output {
            @include left-36;
            @include reset;
          }

          @include expect {
            left: 9rem;
          }
        }
      }

      @include it("inset-40") {
        @include assert {
          @include output {
            @include inset-40;
            @include reset;
          }

          @include expect {
            inset: 10rem;
          }
        }
      }

      @include it("inset-x-40") {
        @include assert {
          @include output {
            @include inset-x-40;
            @include reset;
          }

          @include expect {
            left: 10rem;
            right: 10rem;
          }
        }
      }

      @include it("inset-y-40") {
        @include assert {
          @include output {
            @include inset-y-40;
            @include reset;
          }

          @include expect {
            top: 10rem;
            bottom: 10rem;
          }
        }
      }

      @include it("start-40") {
        @include assert {
          @include output {
            @include start-40;
            @include reset;
          }

          @include expect {
            inset-inline-start: 10rem;
          }
        }
      }

      @include it("end-40") {
        @include assert {
          @include output {
            @include end-40;
            @include reset;
          }

          @include expect {
            inset-inline-end: 10rem;
          }
        }
      }

      @include it("top-40") {
        @include assert {
          @include output {
            @include top-40;
            @include reset;
          }

          @include expect {
            top: 10rem;
          }
        }
      }

      @include it("right-40") {
        @include assert {
          @include output {
            @include right-40;
            @include reset;
          }

          @include expect {
            right: 10rem;
          }
        }
      }

      @include it("bottom-40") {
        @include assert {
          @include output {
            @include bottom-40;
            @include reset;
          }

          @include expect {
            bottom: 10rem;
          }
        }
      }

      @include it("left-40") {
        @include assert {
          @include output {
            @include left-40;
            @include reset;
          }

          @include expect {
            left: 10rem;
          }
        }
      }

      @include it("inset-44") {
        @include assert {
          @include output {
            @include inset-44;
            @include reset;
          }

          @include expect {
            inset: 11rem;
          }
        }
      }

      @include it("inset-x-44") {
        @include assert {
          @include output {
            @include inset-x-44;
            @include reset;
          }

          @include expect {
            left: 11rem;
            right: 11rem;
          }
        }
      }

      @include it("inset-y-44") {
        @include assert {
          @include output {
            @include inset-y-44;
            @include reset;
          }

          @include expect {
            top: 11rem;
            bottom: 11rem;
          }
        }
      }

      @include it("start-44") {
        @include assert {
          @include output {
            @include start-44;
            @include reset;
          }

          @include expect {
            inset-inline-start: 11rem;
          }
        }
      }

      @include it("end-44") {
        @include assert {
          @include output {
            @include end-44;
            @include reset;
          }

          @include expect {
            inset-inline-end: 11rem;
          }
        }
      }

      @include it("top-44") {
        @include assert {
          @include output {
            @include top-44;
            @include reset;
          }

          @include expect {
            top: 11rem;
          }
        }
      }

      @include it("right-44") {
        @include assert {
          @include output {
            @include right-44;
            @include reset;
          }

          @include expect {
            right: 11rem;
          }
        }
      }

      @include it("bottom-44") {
        @include assert {
          @include output {
            @include bottom-44;
            @include reset;
          }

          @include expect {
            bottom: 11rem;
          }
        }
      }

      @include it("left-44") {
        @include assert {
          @include output {
            @include left-44;
            @include reset;
          }

          @include expect {
            left: 11rem;
          }
        }
      }

      @include it("inset-48") {
        @include assert {
          @include output {
            @include inset-48;
            @include reset;
          }

          @include expect {
            inset: 12rem;
          }
        }
      }

      @include it("inset-x-48") {
        @include assert {
          @include output {
            @include inset-x-48;
            @include reset;
          }

          @include expect {
            left: 12rem;
            right: 12rem;
          }
        }
      }

      @include it("inset-y-48") {
        @include assert {
          @include output {
            @include inset-y-48;
            @include reset;
          }

          @include expect {
            top: 12rem;
            bottom: 12rem;
          }
        }
      }

      @include it("start-48") {
        @include assert {
          @include output {
            @include start-48;
            @include reset;
          }

          @include expect {
            inset-inline-start: 12rem;
          }
        }
      }

      @include it("end-48") {
        @include assert {
          @include output {
            @include end-48;
            @include reset;
          }

          @include expect {
            inset-inline-end: 12rem;
          }
        }
      }

      @include it("top-48") {
        @include assert {
          @include output {
            @include top-48;
            @include reset;
          }

          @include expect {
            top: 12rem;
          }
        }
      }

      @include it("right-48") {
        @include assert {
          @include output {
            @include right-48;
            @include reset;
          }

          @include expect {
            right: 12rem;
          }
        }
      }

      @include it("bottom-48") {
        @include assert {
          @include output {
            @include bottom-48;
            @include reset;
          }

          @include expect {
            bottom: 12rem;
          }
        }
      }

      @include it("left-48") {
        @include assert {
          @include output {
            @include left-48;
            @include reset;
          }

          @include expect {
            left: 12rem;
          }
        }
      }

      @include it("inset-52") {
        @include assert {
          @include output {
            @include inset-52;
            @include reset;
          }

          @include expect {
            inset: 13rem;
          }
        }
      }

      @include it("inset-x-52") {
        @include assert {
          @include output {
            @include inset-x-52;
            @include reset;
          }

          @include expect {
            left: 13rem;
            right: 13rem;
          }
        }
      }

      @include it("inset-y-52") {
        @include assert {
          @include output {
            @include inset-y-52;
            @include reset;
          }

          @include expect {
            top: 13rem;
            bottom: 13rem;
          }
        }
      }

      @include it("start-52") {
        @include assert {
          @include output {
            @include start-52;
            @include reset;
          }

          @include expect {
            inset-inline-start: 13rem;
          }
        }
      }

      @include it("end-52") {
        @include assert {
          @include output {
            @include end-52;
            @include reset;
          }

          @include expect {
            inset-inline-end: 13rem;
          }
        }
      }

      @include it("top-52") {
        @include assert {
          @include output {
            @include top-52;
            @include reset;
          }

          @include expect {
            top: 13rem;
          }
        }
      }

      @include it("right-52") {
        @include assert {
          @include output {
            @include right-52;
            @include reset;
          }

          @include expect {
            right: 13rem;
          }
        }
      }

      @include it("bottom-52") {
        @include assert {
          @include output {
            @include bottom-52;
            @include reset;
          }

          @include expect {
            bottom: 13rem;
          }
        }
      }

      @include it("left-52") {
        @include assert {
          @include output {
            @include left-52;
            @include reset;
          }

          @include expect {
            left: 13rem;
          }
        }
      }

      @include it("inset-56") {
        @include assert {
          @include output {
            @include inset-56;
            @include reset;
          }

          @include expect {
            inset: 14rem;
          }
        }
      }

      @include it("inset-x-56") {
        @include assert {
          @include output {
            @include inset-x-56;
            @include reset;
          }

          @include expect {
            left: 14rem;
            right: 14rem;
          }
        }
      }

      @include it("inset-y-56") {
        @include assert {
          @include output {
            @include inset-y-56;
            @include reset;
          }

          @include expect {
            top: 14rem;
            bottom: 14rem;
          }
        }
      }

      @include it("start-56") {
        @include assert {
          @include output {
            @include start-56;
            @include reset;
          }

          @include expect {
            inset-inline-start: 14rem;
          }
        }
      }

      @include it("end-56") {
        @include assert {
          @include output {
            @include end-56;
            @include reset;
          }

          @include expect {
            inset-inline-end: 14rem;
          }
        }
      }

      @include it("top-56") {
        @include assert {
          @include output {
            @include top-56;
            @include reset;
          }

          @include expect {
            top: 14rem;
          }
        }
      }

      @include it("right-56") {
        @include assert {
          @include output {
            @include right-56;
            @include reset;
          }

          @include expect {
            right: 14rem;
          }
        }
      }

      @include it("bottom-56") {
        @include assert {
          @include output {
            @include bottom-56;
            @include reset;
          }

          @include expect {
            bottom: 14rem;
          }
        }
      }

      @include it("left-56") {
        @include assert {
          @include output {
            @include left-56;
            @include reset;
          }

          @include expect {
            left: 14rem;
          }
        }
      }

      @include it("inset-60") {
        @include assert {
          @include output {
            @include inset-60;
            @include reset;
          }

          @include expect {
            inset: 15rem;
          }
        }
      }

      @include it("inset-x-60") {
        @include assert {
          @include output {
            @include inset-x-60;
            @include reset;
          }

          @include expect {
            left: 15rem;
            right: 15rem;
          }
        }
      }

      @include it("inset-y-60") {
        @include assert {
          @include output {
            @include inset-y-60;
            @include reset;
          }

          @include expect {
            top: 15rem;
            bottom: 15rem;
          }
        }
      }

      @include it("start-60") {
        @include assert {
          @include output {
            @include start-60;
            @include reset;
          }

          @include expect {
            inset-inline-start: 15rem;
          }
        }
      }

      @include it("end-60") {
        @include assert {
          @include output {
            @include end-60;
            @include reset;
          }

          @include expect {
            inset-inline-end: 15rem;
          }
        }
      }

      @include it("top-60") {
        @include assert {
          @include output {
            @include top-60;
            @include reset;
          }

          @include expect {
            top: 15rem;
          }
        }
      }

      @include it("right-60") {
        @include assert {
          @include output {
            @include right-60;
            @include reset;
          }

          @include expect {
            right: 15rem;
          }
        }
      }

      @include it("bottom-60") {
        @include assert {
          @include output {
            @include bottom-60;
            @include reset;
          }

          @include expect {
            bottom: 15rem;
          }
        }
      }

      @include it("left-60") {
        @include assert {
          @include output {
            @include left-60;
            @include reset;
          }

          @include expect {
            left: 15rem;
          }
        }
      }

      @include it("inset-64") {
        @include assert {
          @include output {
            @include inset-64;
            @include reset;
          }

          @include expect {
            inset: 16rem;
          }
        }
      }

      @include it("inset-x-64") {
        @include assert {
          @include output {
            @include inset-x-64;
            @include reset;
          }

          @include expect {
            left: 16rem;
            right: 16rem;
          }
        }
      }

      @include it("inset-y-64") {
        @include assert {
          @include output {
            @include inset-y-64;
            @include reset;
          }

          @include expect {
            top: 16rem;
            bottom: 16rem;
          }
        }
      }

      @include it("start-64") {
        @include assert {
          @include output {
            @include start-64;
            @include reset;
          }

          @include expect {
            inset-inline-start: 16rem;
          }
        }
      }

      @include it("end-64") {
        @include assert {
          @include output {
            @include end-64;
            @include reset;
          }

          @include expect {
            inset-inline-end: 16rem;
          }
        }
      }

      @include it("top-64") {
        @include assert {
          @include output {
            @include top-64;
            @include reset;
          }

          @include expect {
            top: 16rem;
          }
        }
      }

      @include it("right-64") {
        @include assert {
          @include output {
            @include right-64;
            @include reset;
          }

          @include expect {
            right: 16rem;
          }
        }
      }

      @include it("bottom-64") {
        @include assert {
          @include output {
            @include bottom-64;
            @include reset;
          }

          @include expect {
            bottom: 16rem;
          }
        }
      }

      @include it("left-64") {
        @include assert {
          @include output {
            @include left-64;
            @include reset;
          }

          @include expect {
            left: 16rem;
          }
        }
      }

      @include it("inset-72") {
        @include assert {
          @include output {
            @include inset-72;
            @include reset;
          }

          @include expect {
            inset: 18rem;
          }
        }
      }

      @include it("inset-x-72") {
        @include assert {
          @include output {
            @include inset-x-72;
            @include reset;
          }

          @include expect {
            left: 18rem;
            right: 18rem;
          }
        }
      }

      @include it("inset-y-72") {
        @include assert {
          @include output {
            @include inset-y-72;
            @include reset;
          }

          @include expect {
            top: 18rem;
            bottom: 18rem;
          }
        }
      }

      @include it("start-72") {
        @include assert {
          @include output {
            @include start-72;
            @include reset;
          }

          @include expect {
            inset-inline-start: 18rem;
          }
        }
      }

      @include it("end-72") {
        @include assert {
          @include output {
            @include end-72;
            @include reset;
          }

          @include expect {
            inset-inline-end: 18rem;
          }
        }
      }

      @include it("top-72") {
        @include assert {
          @include output {
            @include top-72;
            @include reset;
          }

          @include expect {
            top: 18rem;
          }
        }
      }

      @include it("right-72") {
        @include assert {
          @include output {
            @include right-72;
            @include reset;
          }

          @include expect {
            right: 18rem;
          }
        }
      }

      @include it("bottom-72") {
        @include assert {
          @include output {
            @include bottom-72;
            @include reset;
          }

          @include expect {
            bottom: 18rem;
          }
        }
      }

      @include it("left-72") {
        @include assert {
          @include output {
            @include left-72;
            @include reset;
          }

          @include expect {
            left: 18rem;
          }
        }
      }

      @include it("inset-80") {
        @include assert {
          @include output {
            @include inset-80;
            @include reset;
          }

          @include expect {
            inset: 20rem;
          }
        }
      }

      @include it("inset-x-80") {
        @include assert {
          @include output {
            @include inset-x-80;
            @include reset;
          }

          @include expect {
            left: 20rem;
            right: 20rem;
          }
        }
      }

      @include it("inset-y-80") {
        @include assert {
          @include output {
            @include inset-y-80;
            @include reset;
          }

          @include expect {
            top: 20rem;
            bottom: 20rem;
          }
        }
      }

      @include it("start-80") {
        @include assert {
          @include output {
            @include start-80;
            @include reset;
          }

          @include expect {
            inset-inline-start: 20rem;
          }
        }
      }

      @include it("end-80") {
        @include assert {
          @include output {
            @include end-80;
            @include reset;
          }

          @include expect {
            inset-inline-end: 20rem;
          }
        }
      }

      @include it("top-80") {
        @include assert {
          @include output {
            @include top-80;
            @include reset;
          }

          @include expect {
            top: 20rem;
          }
        }
      }

      @include it("right-80") {
        @include assert {
          @include output {
            @include right-80;
            @include reset;
          }

          @include expect {
            right: 20rem;
          }
        }
      }

      @include it("bottom-80") {
        @include assert {
          @include output {
            @include bottom-80;
            @include reset;
          }

          @include expect {
            bottom: 20rem;
          }
        }
      }

      @include it("left-80") {
        @include assert {
          @include output {
            @include left-80;
            @include reset;
          }

          @include expect {
            left: 20rem;
          }
        }
      }

      @include it("inset-96") {
        @include assert {
          @include output {
            @include inset-96;
            @include reset;
          }

          @include expect {
            inset: 24rem;
          }
        }
      }

      @include it("inset-x-96") {
        @include assert {
          @include output {
            @include inset-x-96;
            @include reset;
          }

          @include expect {
            left: 24rem;
            right: 24rem;
          }
        }
      }

      @include it("inset-y-96") {
        @include assert {
          @include output {
            @include inset-y-96;
            @include reset;
          }

          @include expect {
            top: 24rem;
            bottom: 24rem;
          }
        }
      }

      @include it("start-96") {
        @include assert {
          @include output {
            @include start-96;
            @include reset;
          }

          @include expect {
            inset-inline-start: 24rem;
          }
        }
      }

      @include it("end-96") {
        @include assert {
          @include output {
            @include end-96;
            @include reset;
          }

          @include expect {
            inset-inline-end: 24rem;
          }
        }
      }

      @include it("top-96") {
        @include assert {
          @include output {
            @include top-96;
            @include reset;
          }

          @include expect {
            top: 24rem;
          }
        }
      }

      @include it("right-96") {
        @include assert {
          @include output {
            @include right-96;
            @include reset;
          }

          @include expect {
            right: 24rem;
          }
        }
      }

      @include it("bottom-96") {
        @include assert {
          @include output {
            @include bottom-96;
            @include reset;
          }

          @include expect {
            bottom: 24rem;
          }
        }
      }

      @include it("left-96") {
        @include assert {
          @include output {
            @include left-96;
            @include reset;
          }

          @include expect {
            left: 24rem;
          }
        }
      }

      @include it("inset-auto") {
        @include assert {
          @include output {
            @include inset-auto;
            @include reset;
          }

          @include expect {
            inset: auto;
          }
        }
      }

      @include it("inset-1\/2") {
        @include assert {
          @include output {
            @include inset-1\/2;
            @include reset;
          }

          @include expect {
            inset: 50%;
          }
        }
      }

      @include it("inset-1\/3") {
        @include assert {
          @include output {
            @include inset-1\/3;
            @include reset;
          }

          @include expect {
            inset: 33.333333%;
          }
        }
      }

      @include it("inset-2\/3") {
        @include assert {
          @include output {
            @include inset-2\/3;
            @include reset;
          }

          @include expect {
            inset: 66.666667%;
          }
        }
      }

      @include it("inset-1\/4") {
        @include assert {
          @include output {
            @include inset-1\/4;
            @include reset;
          }

          @include expect {
            inset: 25%;
          }
        }
      }

      @include it("inset-2\/4") {
        @include assert {
          @include output {
            @include inset-2\/4;
            @include reset;
          }

          @include expect {
            inset: 50%;
          }
        }
      }

      @include it("inset-3\/4") {
        @include assert {
          @include output {
            @include inset-3\/4;
            @include reset;
          }

          @include expect {
            inset: 75%;
          }
        }
      }

      @include it("inset-full") {
        @include assert {
          @include output {
            @include inset-full;
            @include reset;
          }

          @include expect {
            inset: 100%;
          }
        }
      }

      @include it("inset-x-auto") {
        @include assert {
          @include output {
            @include inset-x-auto;
            @include reset;
          }

          @include expect {
            left: auto;
            right: auto;
          }
        }
      }

      @include it("inset-x-1\/2") {
        @include assert {
          @include output {
            @include inset-x-1\/2;
            @include reset;
          }

          @include expect {
            left: 50%;
            right: 50%;
          }
        }
      }

      @include it("inset-x-1\/3") {
        @include assert {
          @include output {
            @include inset-x-1\/3;
            @include reset;
          }

          @include expect {
            left: 33.333333%;
            right: 33.333333%;
          }
        }
      }

      @include it("inset-x-2\/3") {
        @include assert {
          @include output {
            @include inset-x-2\/3;
            @include reset;
          }

          @include expect {
            left: 66.666667%;
            right: 66.666667%;
          }
        }
      }

      @include it("inset-x-1\/4") {
        @include assert {
          @include output {
            @include inset-x-1\/4;
            @include reset;
          }

          @include expect {
            left: 25%;
            right: 25%;
          }
        }
      }

      @include it("inset-x-2\/4") {
        @include assert {
          @include output {
            @include inset-x-2\/4;
            @include reset;
          }

          @include expect {
            left: 50%;
            right: 50%;
          }
        }
      }

      @include it("inset-x-3\/4") {
        @include assert {
          @include output {
            @include inset-x-3\/4;
            @include reset;
          }

          @include expect {
            left: 75%;
            right: 75%;
          }
        }
      }

      @include it("inset-x-full") {
        @include assert {
          @include output {
            @include inset-x-full;
            @include reset;
          }

          @include expect {
            left: 100%;
            right: 100%;
          }
        }
      }

      @include it("inset-y-auto") {
        @include assert {
          @include output {
            @include inset-y-auto;
            @include reset;
          }

          @include expect {
            top: auto;
            bottom: auto;
          }
        }
      }

      @include it("inset-y-1\/2") {
        @include assert {
          @include output {
            @include inset-y-1\/2;
            @include reset;
          }

          @include expect {
            top: 50%;
            bottom: 50%;
          }
        }
      }

      @include it("inset-y-1\/3") {
        @include assert {
          @include output {
            @include inset-y-1\/3;
            @include reset;
          }

          @include expect {
            top: 33.333333%;
            bottom: 33.333333%;
          }
        }
      }

      @include it("inset-y-2\/3") {
        @include assert {
          @include output {
            @include inset-y-2\/3;
            @include reset;
          }

          @include expect {
            top: 66.666667%;
            bottom: 66.666667%;
          }
        }
      }

      @include it("inset-y-1\/4") {
        @include assert {
          @include output {
            @include inset-y-1\/4;
            @include reset;
          }

          @include expect {
            top: 25%;
            bottom: 25%;
          }
        }
      }

      @include it("inset-y-2\/4") {
        @include assert {
          @include output {
            @include inset-y-2\/4;
            @include reset;
          }

          @include expect {
            top: 50%;
            bottom: 50%;
          }
        }
      }

      @include it("inset-y-3\/4") {
        @include assert {
          @include output {
            @include inset-y-3\/4;
            @include reset;
          }

          @include expect {
            top: 75%;
            bottom: 75%;
          }
        }
      }

      @include it("inset-y-full") {
        @include assert {
          @include output {
            @include inset-y-full;
            @include reset;
          }

          @include expect {
            top: 100%;
            bottom: 100%;
          }
        }
      }

      @include it("start-auto") {
        @include assert {
          @include output {
            @include start-auto;
            @include reset;
          }

          @include expect {
            inset-inline-start: auto;
          }
        }
      }

      @include it("start-1\/2") {
        @include assert {
          @include output {
            @include start-1\/2;
            @include reset;
          }

          @include expect {
            inset-inline-start: 50%;
          }
        }
      }

      @include it("start-1\/3") {
        @include assert {
          @include output {
            @include start-1\/3;
            @include reset;
          }

          @include expect {
            inset-inline-start: 33.333333%;
          }
        }
      }

      @include it("start-2\/3") {
        @include assert {
          @include output {
            @include start-2\/3;
            @include reset;
          }

          @include expect {
            inset-inline-start: 66.666667%;
          }
        }
      }

      @include it("start-1\/4") {
        @include assert {
          @include output {
            @include start-1\/4;
            @include reset;
          }

          @include expect {
            inset-inline-start: 25%;
          }
        }
      }

      @include it("start-2\/4") {
        @include assert {
          @include output {
            @include start-2\/4;
            @include reset;
          }

          @include expect {
            inset-inline-start: 50%;
          }
        }
      }

      @include it("start-3\/4") {
        @include assert {
          @include output {
            @include start-3\/4;
            @include reset;
          }

          @include expect {
            inset-inline-start: 75%;
          }
        }
      }

      @include it("start-full") {
        @include assert {
          @include output {
            @include start-full;
            @include reset;
          }

          @include expect {
            inset-inline-start: 100%;
          }
        }
      }

      @include it("end-auto") {
        @include assert {
          @include output {
            @include end-auto;
            @include reset;
          }

          @include expect {
            inset-inline-end: auto;
          }
        }
      }

      @include it("end-1\/2") {
        @include assert {
          @include output {
            @include end-1\/2;
            @include reset;
          }

          @include expect {
            inset-inline-end: 50%;
          }
        }
      }

      @include it("end-1\/3") {
        @include assert {
          @include output {
            @include end-1\/3;
            @include reset;
          }

          @include expect {
            inset-inline-end: 33.333333%;
          }
        }
      }

      @include it("end-2\/3") {
        @include assert {
          @include output {
            @include end-2\/3;
            @include reset;
          }

          @include expect {
            inset-inline-end: 66.666667%;
          }
        }
      }

      @include it("end-1\/4") {
        @include assert {
          @include output {
            @include end-1\/4;
            @include reset;
          }

          @include expect {
            inset-inline-end: 25%;
          }
        }
      }

      @include it("end-2\/4") {
        @include assert {
          @include output {
            @include end-2\/4;
            @include reset;
          }

          @include expect {
            inset-inline-end: 50%;
          }
        }
      }

      @include it("end-3\/4") {
        @include assert {
          @include output {
            @include end-3\/4;
            @include reset;
          }

          @include expect {
            inset-inline-end: 75%;
          }
        }
      }

      @include it("end-full") {
        @include assert {
          @include output {
            @include end-full;
            @include reset;
          }

          @include expect {
            inset-inline-end: 100%;
          }
        }
      }

      @include it("top-auto") {
        @include assert {
          @include output {
            @include top-auto;
            @include reset;
          }

          @include expect {
            top: auto;
          }
        }
      }

      @include it("top-1\/2") {
        @include assert {
          @include output {
            @include top-1\/2;
            @include reset;
          }

          @include expect {
            top: 50%;
          }
        }
      }

      @include it("top-1\/3") {
        @include assert {
          @include output {
            @include top-1\/3;
            @include reset;
          }

          @include expect {
            top: 33.333333%;
          }
        }
      }

      @include it("top-2\/3") {
        @include assert {
          @include output {
            @include top-2\/3;
            @include reset;
          }

          @include expect {
            top: 66.666667%;
          }
        }
      }

      @include it("top-1\/4") {
        @include assert {
          @include output {
            @include top-1\/4;
            @include reset;
          }

          @include expect {
            top: 25%;
          }
        }
      }

      @include it("top-2\/4") {
        @include assert {
          @include output {
            @include top-2\/4;
            @include reset;
          }

          @include expect {
            top: 50%;
          }
        }
      }

      @include it("top-3\/4") {
        @include assert {
          @include output {
            @include top-3\/4;
            @include reset;
          }

          @include expect {
            top: 75%;
          }
        }
      }

      @include it("top-full") {
        @include assert {
          @include output {
            @include top-full;
            @include reset;
          }

          @include expect {
            top: 100%;
          }
        }
      }

      @include it("right-auto") {
        @include assert {
          @include output {
            @include right-auto;
            @include reset;
          }

          @include expect {
            right: auto;
          }
        }
      }

      @include it("right-1\/2") {
        @include assert {
          @include output {
            @include right-1\/2;
            @include reset;
          }

          @include expect {
            right: 50%;
          }
        }
      }

      @include it("right-1\/3") {
        @include assert {
          @include output {
            @include right-1\/3;
            @include reset;
          }

          @include expect {
            right: 33.333333%;
          }
        }
      }

      @include it("right-2\/3") {
        @include assert {
          @include output {
            @include right-2\/3;
            @include reset;
          }

          @include expect {
            right: 66.666667%;
          }
        }
      }

      @include it("right-1\/4") {
        @include assert {
          @include output {
            @include right-1\/4;
            @include reset;
          }

          @include expect {
            right: 25%;
          }
        }
      }

      @include it("right-2\/4") {
        @include assert {
          @include output {
            @include right-2\/4;
            @include reset;
          }

          @include expect {
            right: 50%;
          }
        }
      }

      @include it("right-3\/4") {
        @include assert {
          @include output {
            @include right-3\/4;
            @include reset;
          }

          @include expect {
            right: 75%;
          }
        }
      }

      @include it("right-full") {
        @include assert {
          @include output {
            @include right-full;
            @include reset;
          }

          @include expect {
            right: 100%;
          }
        }
      }

      @include it("bottom-auto") {
        @include assert {
          @include output {
            @include bottom-auto;
            @include reset;
          }

          @include expect {
            bottom: auto;
          }
        }
      }

      @include it("bottom-1\/2") {
        @include assert {
          @include output {
            @include bottom-1\/2;
            @include reset;
          }

          @include expect {
            bottom: 50%;
          }
        }
      }

      @include it("bottom-1\/3") {
        @include assert {
          @include output {
            @include bottom-1\/3;
            @include reset;
          }

          @include expect {
            bottom: 33.333333%;
          }
        }
      }

      @include it("bottom-2\/3") {
        @include assert {
          @include output {
            @include bottom-2\/3;
            @include reset;
          }

          @include expect {
            bottom: 66.666667%;
          }
        }
      }

      @include it("bottom-1\/4") {
        @include assert {
          @include output {
            @include bottom-1\/4;
            @include reset;
          }

          @include expect {
            bottom: 25%;
          }
        }
      }

      @include it("bottom-2\/4") {
        @include assert {
          @include output {
            @include bottom-2\/4;
            @include reset;
          }

          @include expect {
            bottom: 50%;
          }
        }
      }

      @include it("bottom-3\/4") {
        @include assert {
          @include output {
            @include bottom-3\/4;
            @include reset;
          }

          @include expect {
            bottom: 75%;
          }
        }
      }

      @include it("bottom-full") {
        @include assert {
          @include output {
            @include bottom-full;
            @include reset;
          }

          @include expect {
            bottom: 100%;
          }
        }
      }

      @include it("left-auto") {
        @include assert {
          @include output {
            @include left-auto;
            @include reset;
          }

          @include expect {
            left: auto;
          }
        }
      }

      @include it("left-1\/2") {
        @include assert {
          @include output {
            @include left-1\/2;
            @include reset;
          }

          @include expect {
            left: 50%;
          }
        }
      }

      @include it("left-1\/3") {
        @include assert {
          @include output {
            @include left-1\/3;
            @include reset;
          }

          @include expect {
            left: 33.333333%;
          }
        }
      }

      @include it("left-2\/3") {
        @include assert {
          @include output {
            @include left-2\/3;
            @include reset;
          }

          @include expect {
            left: 66.666667%;
          }
        }
      }

      @include it("left-1\/4") {
        @include assert {
          @include output {
            @include left-1\/4;
            @include reset;
          }

          @include expect {
            left: 25%;
          }
        }
      }

      @include it("left-2\/4") {
        @include assert {
          @include output {
            @include left-2\/4;
            @include reset;
          }

          @include expect {
            left: 50%;
          }
        }
      }

      @include it("left-3\/4") {
        @include assert {
          @include output {
            @include left-3\/4;
            @include reset;
          }

          @include expect {
            left: 75%;
          }
        }
      }

      @include it("left-full") {
        @include assert {
          @include output {
            @include left-full;
            @include reset;
          }

          @include expect {
            left: 100%;
          }
        }
      }

      @include it("-inset-0") {
        @include assert {
          @include output {
            @include -inset-0;
            @include reset;
          }

          @include expect {
            inset: 0px;
          }
        }
      }

      @include it("-inset-x-0") {
        @include assert {
          @include output {
            @include -inset-x-0;
            @include reset;
          }

          @include expect {
            left: 0px;
            right: 0px;
          }
        }
      }

      @include it("-inset-y-0") {
        @include assert {
          @include output {
            @include -inset-y-0;
            @include reset;
          }

          @include expect {
            top: 0px;
            bottom: 0px;
          }
        }
      }

      @include it("-start-0") {
        @include assert {
          @include output {
            @include -start-0;
            @include reset;
          }

          @include expect {
            inset-inline-start: 0px;
          }
        }
      }

      @include it("-end-0") {
        @include assert {
          @include output {
            @include -end-0;
            @include reset;
          }

          @include expect {
            inset-inline-end: 0px;
          }
        }
      }

      @include it("-top-0") {
        @include assert {
          @include output {
            @include -top-0;
            @include reset;
          }

          @include expect {
            top: 0px;
          }
        }
      }

      @include it("-right-0") {
        @include assert {
          @include output {
            @include -right-0;
            @include reset;
          }

          @include expect {
            right: 0px;
          }
        }
      }

      @include it("-bottom-0") {
        @include assert {
          @include output {
            @include -bottom-0;
            @include reset;
          }

          @include expect {
            bottom: 0px;
          }
        }
      }

      @include it("-left-0") {
        @include assert {
          @include output {
            @include -left-0;
            @include reset;
          }

          @include expect {
            left: 0px;
          }
        }
      }

      @include it("-inset-px") {
        @include assert {
          @include output {
            @include -inset-px;
            @include reset;
          }

          @include expect {
            inset: -1px;
          }
        }
      }

      @include it("-inset-x-px") {
        @include assert {
          @include output {
            @include -inset-x-px;
            @include reset;
          }

          @include expect {
            left: -1px;
            right: -1px;
          }
        }
      }

      @include it("-inset-y-px") {
        @include assert {
          @include output {
            @include -inset-y-px;
            @include reset;
          }

          @include expect {
            top: -1px;
            bottom: -1px;
          }
        }
      }

      @include it("-start-px") {
        @include assert {
          @include output {
            @include -start-px;
            @include reset;
          }

          @include expect {
            inset-inline-start: -1px;
          }
        }
      }

      @include it("-end-px") {
        @include assert {
          @include output {
            @include -end-px;
            @include reset;
          }

          @include expect {
            inset-inline-end: -1px;
          }
        }
      }

      @include it("-top-px") {
        @include assert {
          @include output {
            @include -top-px;
            @include reset;
          }

          @include expect {
            top: -1px;
          }
        }
      }

      @include it("-right-px") {
        @include assert {
          @include output {
            @include -right-px;
            @include reset;
          }

          @include expect {
            right: -1px;
          }
        }
      }

      @include it("-bottom-px") {
        @include assert {
          @include output {
            @include -bottom-px;
            @include reset;
          }

          @include expect {
            bottom: -1px;
          }
        }
      }

      @include it("-left-px") {
        @include assert {
          @include output {
            @include -left-px;
            @include reset;
          }

          @include expect {
            left: -1px;
          }
        }
      }

      @include it("-inset-0\.5") {
        @include assert {
          @include output {
            @include -inset-0\.5;
            @include reset;
          }

          @include expect {
            inset: -0.125rem;
          }
        }
      }

      @include it("-inset-x-0\.5") {
        @include assert {
          @include output {
            @include -inset-x-0\.5;
            @include reset;
          }

          @include expect {
            left: -0.125rem;
            right: -0.125rem;
          }
        }
      }

      @include it("-inset-y-0\.5") {
        @include assert {
          @include output {
            @include -inset-y-0\.5;
            @include reset;
          }

          @include expect {
            top: -0.125rem;
            bottom: -0.125rem;
          }
        }
      }

      @include it("-start-0\.5") {
        @include assert {
          @include output {
            @include -start-0\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.125rem;
          }
        }
      }

      @include it("-end-0\.5") {
        @include assert {
          @include output {
            @include -end-0\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.125rem;
          }
        }
      }

      @include it("-top-0\.5") {
        @include assert {
          @include output {
            @include -top-0\.5;
            @include reset;
          }

          @include expect {
            top: -0.125rem;
          }
        }
      }

      @include it("-right-0\.5") {
        @include assert {
          @include output {
            @include -right-0\.5;
            @include reset;
          }

          @include expect {
            right: -0.125rem;
          }
        }
      }

      @include it("-bottom-0\.5") {
        @include assert {
          @include output {
            @include -bottom-0\.5;
            @include reset;
          }

          @include expect {
            bottom: -0.125rem;
          }
        }
      }

      @include it("-left-0\.5") {
        @include assert {
          @include output {
            @include -left-0\.5;
            @include reset;
          }

          @include expect {
            left: -0.125rem;
          }
        }
      }

      @include it("-inset-1") {
        @include assert {
          @include output {
            @include -inset-1;
            @include reset;
          }

          @include expect {
            inset: -0.25rem;
          }
        }
      }

      @include it("-inset-x-1") {
        @include assert {
          @include output {
            @include -inset-x-1;
            @include reset;
          }

          @include expect {
            left: -0.25rem;
            right: -0.25rem;
          }
        }
      }

      @include it("-inset-y-1") {
        @include assert {
          @include output {
            @include -inset-y-1;
            @include reset;
          }

          @include expect {
            top: -0.25rem;
            bottom: -0.25rem;
          }
        }
      }

      @include it("-start-1") {
        @include assert {
          @include output {
            @include -start-1;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.25rem;
          }
        }
      }

      @include it("-end-1") {
        @include assert {
          @include output {
            @include -end-1;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.25rem;
          }
        }
      }

      @include it("-top-1") {
        @include assert {
          @include output {
            @include -top-1;
            @include reset;
          }

          @include expect {
            top: -0.25rem;
          }
        }
      }

      @include it("-right-1") {
        @include assert {
          @include output {
            @include -right-1;
            @include reset;
          }

          @include expect {
            right: -0.25rem;
          }
        }
      }

      @include it("-bottom-1") {
        @include assert {
          @include output {
            @include -bottom-1;
            @include reset;
          }

          @include expect {
            bottom: -0.25rem;
          }
        }
      }

      @include it("-left-1") {
        @include assert {
          @include output {
            @include -left-1;
            @include reset;
          }

          @include expect {
            left: -0.25rem;
          }
        }
      }

      @include it("-inset-1\.5") {
        @include assert {
          @include output {
            @include -inset-1\.5;
            @include reset;
          }

          @include expect {
            inset: -0.375rem;
          }
        }
      }

      @include it("-inset-x-1\.5") {
        @include assert {
          @include output {
            @include -inset-x-1\.5;
            @include reset;
          }

          @include expect {
            left: -0.375rem;
            right: -0.375rem;
          }
        }
      }

      @include it("-inset-y-1\.5") {
        @include assert {
          @include output {
            @include -inset-y-1\.5;
            @include reset;
          }

          @include expect {
            top: -0.375rem;
            bottom: -0.375rem;
          }
        }
      }

      @include it("-start-1\.5") {
        @include assert {
          @include output {
            @include -start-1\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.375rem;
          }
        }
      }

      @include it("-end-1\.5") {
        @include assert {
          @include output {
            @include -end-1\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.375rem;
          }
        }
      }

      @include it("-top-1\.5") {
        @include assert {
          @include output {
            @include -top-1\.5;
            @include reset;
          }

          @include expect {
            top: -0.375rem;
          }
        }
      }

      @include it("-right-1\.5") {
        @include assert {
          @include output {
            @include -right-1\.5;
            @include reset;
          }

          @include expect {
            right: -0.375rem;
          }
        }
      }

      @include it("-bottom-1\.5") {
        @include assert {
          @include output {
            @include -bottom-1\.5;
            @include reset;
          }

          @include expect {
            bottom: -0.375rem;
          }
        }
      }

      @include it("-left-1\.5") {
        @include assert {
          @include output {
            @include -left-1\.5;
            @include reset;
          }

          @include expect {
            left: -0.375rem;
          }
        }
      }

      @include it("-inset-2") {
        @include assert {
          @include output {
            @include -inset-2;
            @include reset;
          }

          @include expect {
            inset: -0.5rem;
          }
        }
      }

      @include it("-inset-x-2") {
        @include assert {
          @include output {
            @include -inset-x-2;
            @include reset;
          }

          @include expect {
            left: -0.5rem;
            right: -0.5rem;
          }
        }
      }

      @include it("-inset-y-2") {
        @include assert {
          @include output {
            @include -inset-y-2;
            @include reset;
          }

          @include expect {
            top: -0.5rem;
            bottom: -0.5rem;
          }
        }
      }

      @include it("-start-2") {
        @include assert {
          @include output {
            @include -start-2;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.5rem;
          }
        }
      }

      @include it("-end-2") {
        @include assert {
          @include output {
            @include -end-2;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.5rem;
          }
        }
      }

      @include it("-top-2") {
        @include assert {
          @include output {
            @include -top-2;
            @include reset;
          }

          @include expect {
            top: -0.5rem;
          }
        }
      }

      @include it("-right-2") {
        @include assert {
          @include output {
            @include -right-2;
            @include reset;
          }

          @include expect {
            right: -0.5rem;
          }
        }
      }

      @include it("-bottom-2") {
        @include assert {
          @include output {
            @include -bottom-2;
            @include reset;
          }

          @include expect {
            bottom: -0.5rem;
          }
        }
      }

      @include it("-left-2") {
        @include assert {
          @include output {
            @include -left-2;
            @include reset;
          }

          @include expect {
            left: -0.5rem;
          }
        }
      }

      @include it("-inset-2\.5") {
        @include assert {
          @include output {
            @include -inset-2\.5;
            @include reset;
          }

          @include expect {
            inset: -0.625rem;
          }
        }
      }

      @include it("-inset-x-2\.5") {
        @include assert {
          @include output {
            @include -inset-x-2\.5;
            @include reset;
          }

          @include expect {
            left: -0.625rem;
            right: -0.625rem;
          }
        }
      }

      @include it("-inset-y-2\.5") {
        @include assert {
          @include output {
            @include -inset-y-2\.5;
            @include reset;
          }

          @include expect {
            top: -0.625rem;
            bottom: -0.625rem;
          }
        }
      }

      @include it("-start-2\.5") {
        @include assert {
          @include output {
            @include -start-2\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.625rem;
          }
        }
      }

      @include it("-end-2\.5") {
        @include assert {
          @include output {
            @include -end-2\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.625rem;
          }
        }
      }

      @include it("-top-2\.5") {
        @include assert {
          @include output {
            @include -top-2\.5;
            @include reset;
          }

          @include expect {
            top: -0.625rem;
          }
        }
      }

      @include it("-right-2\.5") {
        @include assert {
          @include output {
            @include -right-2\.5;
            @include reset;
          }

          @include expect {
            right: -0.625rem;
          }
        }
      }

      @include it("-bottom-2\.5") {
        @include assert {
          @include output {
            @include -bottom-2\.5;
            @include reset;
          }

          @include expect {
            bottom: -0.625rem;
          }
        }
      }

      @include it("-left-2\.5") {
        @include assert {
          @include output {
            @include -left-2\.5;
            @include reset;
          }

          @include expect {
            left: -0.625rem;
          }
        }
      }

      @include it("-inset-3") {
        @include assert {
          @include output {
            @include -inset-3;
            @include reset;
          }

          @include expect {
            inset: -0.75rem;
          }
        }
      }

      @include it("-inset-x-3") {
        @include assert {
          @include output {
            @include -inset-x-3;
            @include reset;
          }

          @include expect {
            left: -0.75rem;
            right: -0.75rem;
          }
        }
      }

      @include it("-inset-y-3") {
        @include assert {
          @include output {
            @include -inset-y-3;
            @include reset;
          }

          @include expect {
            top: -0.75rem;
            bottom: -0.75rem;
          }
        }
      }

      @include it("-start-3") {
        @include assert {
          @include output {
            @include -start-3;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.75rem;
          }
        }
      }

      @include it("-end-3") {
        @include assert {
          @include output {
            @include -end-3;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.75rem;
          }
        }
      }

      @include it("-top-3") {
        @include assert {
          @include output {
            @include -top-3;
            @include reset;
          }

          @include expect {
            top: -0.75rem;
          }
        }
      }

      @include it("-right-3") {
        @include assert {
          @include output {
            @include -right-3;
            @include reset;
          }

          @include expect {
            right: -0.75rem;
          }
        }
      }

      @include it("-bottom-3") {
        @include assert {
          @include output {
            @include -bottom-3;
            @include reset;
          }

          @include expect {
            bottom: -0.75rem;
          }
        }
      }

      @include it("-left-3") {
        @include assert {
          @include output {
            @include -left-3;
            @include reset;
          }

          @include expect {
            left: -0.75rem;
          }
        }
      }

      @include it("-inset-3\.5") {
        @include assert {
          @include output {
            @include -inset-3\.5;
            @include reset;
          }

          @include expect {
            inset: -0.875rem;
          }
        }
      }

      @include it("-inset-x-3\.5") {
        @include assert {
          @include output {
            @include -inset-x-3\.5;
            @include reset;
          }

          @include expect {
            left: -0.875rem;
            right: -0.875rem;
          }
        }
      }

      @include it("-inset-y-3\.5") {
        @include assert {
          @include output {
            @include -inset-y-3\.5;
            @include reset;
          }

          @include expect {
            top: -0.875rem;
            bottom: -0.875rem;
          }
        }
      }

      @include it("-start-3\.5") {
        @include assert {
          @include output {
            @include -start-3\.5;
            @include reset;
          }

          @include expect {
            inset-inline-start: -0.875rem;
          }
        }
      }

      @include it("-end-3\.5") {
        @include assert {
          @include output {
            @include -end-3\.5;
            @include reset;
          }

          @include expect {
            inset-inline-end: -0.875rem;
          }
        }
      }

      @include it("-top-3\.5") {
        @include assert {
          @include output {
            @include -top-3\.5;
            @include reset;
          }

          @include expect {
            top: -0.875rem;
          }
        }
      }

      @include it("-right-3\.5") {
        @include assert {
          @include output {
            @include -right-3\.5;
            @include reset;
          }

          @include expect {
            right: -0.875rem;
          }
        }
      }

      @include it("-bottom-3\.5") {
        @include assert {
          @include output {
            @include -bottom-3\.5;
            @include reset;
          }

          @include expect {
            bottom: -0.875rem;
          }
        }
      }

      @include it("-left-3\.5") {
        @include assert {
          @include output {
            @include -left-3\.5;
            @include reset;
          }

          @include expect {
            left: -0.875rem;
          }
        }
      }

      @include it("-inset-4") {
        @include assert {
          @include output {
            @include -inset-4;
            @include reset;
          }

          @include expect {
            inset: -1rem;
          }
        }
      }

      @include it("-inset-x-4") {
        @include assert {
          @include output {
            @include -inset-x-4;
            @include reset;
          }

          @include expect {
            left: -1rem;
            right: -1rem;
          }
        }
      }

      @include it("-inset-y-4") {
        @include assert {
          @include output {
            @include -inset-y-4;
            @include reset;
          }

          @include expect {
            top: -1rem;
            bottom: -1rem;
          }
        }
      }

      @include it("-start-4") {
        @include assert {
          @include output {
            @include -start-4;
            @include reset;
          }

          @include expect {
            inset-inline-start: -1rem;
          }
        }
      }

      @include it("-end-4") {
        @include assert {
          @include output {
            @include -end-4;
            @include reset;
          }

          @include expect {
            inset-inline-end: -1rem;
          }
        }
      }

      @include it("-top-4") {
        @include assert {
          @include output {
            @include -top-4;
            @include reset;
          }

          @include expect {
            top: -1rem;
          }
        }
      }

      @include it("-right-4") {
        @include assert {
          @include output {
            @include -right-4;
            @include reset;
          }

          @include expect {
            right: -1rem;
          }
        }
      }

      @include it("-bottom-4") {
        @include assert {
          @include output {
            @include -bottom-4;
            @include reset;
          }

          @include expect {
            bottom: -1rem;
          }
        }
      }

      @include it("-left-4") {
        @include assert {
          @include output {
            @include -left-4;
            @include reset;
          }

          @include expect {
            left: -1rem;
          }
        }
      }

      @include it("-inset-5") {
        @include assert {
          @include output {
            @include -inset-5;
            @include reset;
          }

          @include expect {
            inset: -1.25rem;
          }
        }
      }

      @include it("-inset-x-5") {
        @include assert {
          @include output {
            @include -inset-x-5;
            @include reset;
          }

          @include expect {
            left: -1.25rem;
            right: -1.25rem;
          }
        }
      }

      @include it("-inset-y-5") {
        @include assert {
          @include output {
            @include -inset-y-5;
            @include reset;
          }

          @include expect {
            top: -1.25rem;
            bottom: -1.25rem;
          }
        }
      }

      @include it("-start-5") {
        @include assert {
          @include output {
            @include -start-5;
            @include reset;
          }

          @include expect {
            inset-inline-start: -1.25rem;
          }
        }
      }

      @include it("-end-5") {
        @include assert {
          @include output {
            @include -end-5;
            @include reset;
          }

          @include expect {
            inset-inline-end: -1.25rem;
          }
        }
      }

      @include it("-top-5") {
        @include assert {
          @include output {
            @include -top-5;
            @include reset;
          }

          @include expect {
            top: -1.25rem;
          }
        }
      }

      @include it("-right-5") {
        @include assert {
          @include output {
            @include -right-5;
            @include reset;
          }

          @include expect {
            right: -1.25rem;
          }
        }
      }

      @include it("-bottom-5") {
        @include assert {
          @include output {
            @include -bottom-5;
            @include reset;
          }

          @include expect {
            bottom: -1.25rem;
          }
        }
      }

      @include it("-left-5") {
        @include assert {
          @include output {
            @include -left-5;
            @include reset;
          }

          @include expect {
            left: -1.25rem;
          }
        }
      }

      @include it("-inset-6") {
        @include assert {
          @include output {
            @include -inset-6;
            @include reset;
          }

          @include expect {
            inset: -1.5rem;
          }
        }
      }

      @include it("-inset-x-6") {
        @include assert {
          @include output {
            @include -inset-x-6;
            @include reset;
          }

          @include expect {
            left: -1.5rem;
            right: -1.5rem;
          }
        }
      }

      @include it("-inset-y-6") {
        @include assert {
          @include output {
            @include -inset-y-6;
            @include reset;
          }

          @include expect {
            top: -1.5rem;
            bottom: -1.5rem;
          }
        }
      }

      @include it("-start-6") {
        @include assert {
          @include output {
            @include -start-6;
            @include reset;
          }

          @include expect {
            inset-inline-start: -1.5rem;
          }
        }
      }

      @include it("-end-6") {
        @include assert {
          @include output {
            @include -end-6;
            @include reset;
          }

          @include expect {
            inset-inline-end: -1.5rem;
          }
        }
      }

      @include it("-top-6") {
        @include assert {
          @include output {
            @include -top-6;
            @include reset;
          }

          @include expect {
            top: -1.5rem;
          }
        }
      }

      @include it("-right-6") {
        @include assert {
          @include output {
            @include -right-6;
            @include reset;
          }

          @include expect {
            right: -1.5rem;
          }
        }
      }

      @include it("-bottom-6") {
        @include assert {
          @include output {
            @include -bottom-6;
            @include reset;
          }

          @include expect {
            bottom: -1.5rem;
          }
        }
      }

      @include it("-left-6") {
        @include assert {
          @include output {
            @include -left-6;
            @include reset;
          }

          @include expect {
            left: -1.5rem;
          }
        }
      }

      @include it("-inset-7") {
        @include assert {
          @include output {
            @include -inset-7;
            @include reset;
          }

          @include expect {
            inset: -1.75rem;
          }
        }
      }

      @include it("-inset-x-7") {
        @include assert {
          @include output {
            @include -inset-x-7;
            @include reset;
          }

          @include expect {
            left: -1.75rem;
            right: -1.75rem;
          }
        }
      }

      @include it("-inset-y-7") {
        @include assert {
          @include output {
            @include -inset-y-7;
            @include reset;
          }

          @include expect {
            top: -1.75rem;
            bottom: -1.75rem;
          }
        }
      }

      @include it("-start-7") {
        @include assert {
          @include output {
            @include -start-7;
            @include reset;
          }

          @include expect {
            inset-inline-start: -1.75rem;
          }
        }
      }

      @include it("-end-7") {
        @include assert {
          @include output {
            @include -end-7;
            @include reset;
          }

          @include expect {
            inset-inline-end: -1.75rem;
          }
        }
      }

      @include it("-top-7") {
        @include assert {
          @include output {
            @include -top-7;
            @include reset;
          }

          @include expect {
            top: -1.75rem;
          }
        }
      }

      @include it("-right-7") {
        @include assert {
          @include output {
            @include -right-7;
            @include reset;
          }

          @include expect {
            right: -1.75rem;
          }
        }
      }

      @include it("-bottom-7") {
        @include assert {
          @include output {
            @include -bottom-7;
            @include reset;
          }

          @include expect {
            bottom: -1.75rem;
          }
        }
      }

      @include it("-left-7") {
        @include assert {
          @include output {
            @include -left-7;
            @include reset;
          }

          @include expect {
            left: -1.75rem;
          }
        }
      }

      @include it("-inset-8") {
        @include assert {
          @include output {
            @include -inset-8;
            @include reset;
          }

          @include expect {
            inset: -2rem;
          }
        }
      }

      @include it("-inset-x-8") {
        @include assert {
          @include output {
            @include -inset-x-8;
            @include reset;
          }

          @include expect {
            left: -2rem;
            right: -2rem;
          }
        }
      }

      @include it("-inset-y-8") {
        @include assert {
          @include output {
            @include -inset-y-8;
            @include reset;
          }

          @include expect {
            top: -2rem;
            bottom: -2rem;
          }
        }
      }

      @include it("-start-8") {
        @include assert {
          @include output {
            @include -start-8;
            @include reset;
          }

          @include expect {
            inset-inline-start: -2rem;
          }
        }
      }

      @include it("-end-8") {
        @include assert {
          @include output {
            @include -end-8;
            @include reset;
          }

          @include expect {
            inset-inline-end: -2rem;
          }
        }
      }

      @include it("-top-8") {
        @include assert {
          @include output {
            @include -top-8;
            @include reset;
          }

          @include expect {
            top: -2rem;
          }
        }
      }

      @include it("-right-8") {
        @include assert {
          @include output {
            @include -right-8;
            @include reset;
          }

          @include expect {
            right: -2rem;
          }
        }
      }

      @include it("-bottom-8") {
        @include assert {
          @include output {
            @include -bottom-8;
            @include reset;
          }

          @include expect {
            bottom: -2rem;
          }
        }
      }

      @include it("-left-8") {
        @include assert {
          @include output {
            @include -left-8;
            @include reset;
          }

          @include expect {
            left: -2rem;
          }
        }
      }

      @include it("-inset-9") {
        @include assert {
          @include output {
            @include -inset-9;
            @include reset;
          }

          @include expect {
            inset: -2.25rem;
          }
        }
      }

      @include it("-inset-x-9") {
        @include assert {
          @include output {
            @include -inset-x-9;
            @include reset;
          }

          @include expect {
            left: -2.25rem;
            right: -2.25rem;
          }
        }
      }

      @include it("-inset-y-9") {
        @include assert {
          @include output {
            @include -inset-y-9;
            @include reset;
          }

          @include expect {
            top: -2.25rem;
            bottom: -2.25rem;
          }
        }
      }

      @include it("-start-9") {
        @include assert {
          @include output {
            @include -start-9;
            @include reset;
          }

          @include expect {
            inset-inline-start: -2.25rem;
          }
        }
      }

      @include it("-end-9") {
        @include assert {
          @include output {
            @include -end-9;
            @include reset;
          }

          @include expect {
            inset-inline-end: -2.25rem;
          }
        }
      }

      @include it("-top-9") {
        @include assert {
          @include output {
            @include -top-9;
            @include reset;
          }

          @include expect {
            top: -2.25rem;
          }
        }
      }

      @include it("-right-9") {
        @include assert {
          @include output {
            @include -right-9;
            @include reset;
          }

          @include expect {
            right: -2.25rem;
          }
        }
      }

      @include it("-bottom-9") {
        @include assert {
          @include output {
            @include -bottom-9;
            @include reset;
          }

          @include expect {
            bottom: -2.25rem;
          }
        }
      }

      @include it("-left-9") {
        @include assert {
          @include output {
            @include -left-9;
            @include reset;
          }

          @include expect {
            left: -2.25rem;
          }
        }
      }

      @include it("-inset-10") {
        @include assert {
          @include output {
            @include -inset-10;
            @include reset;
          }

          @include expect {
            inset: -2.5rem;
          }
        }
      }

      @include it("-inset-x-10") {
        @include assert {
          @include output {
            @include -inset-x-10;
            @include reset;
          }

          @include expect {
            left: -2.5rem;
            right: -2.5rem;
          }
        }
      }

      @include it("-inset-y-10") {
        @include assert {
          @include output {
            @include -inset-y-10;
            @include reset;
          }

          @include expect {
            top: -2.5rem;
            bottom: -2.5rem;
          }
        }
      }

      @include it("-start-10") {
        @include assert {
          @include output {
            @include -start-10;
            @include reset;
          }

          @include expect {
            inset-inline-start: -2.5rem;
          }
        }
      }

      @include it("-end-10") {
        @include assert {
          @include output {
            @include -end-10;
            @include reset;
          }

          @include expect {
            inset-inline-end: -2.5rem;
          }
        }
      }

      @include it("-top-10") {
        @include assert {
          @include output {
            @include -top-10;
            @include reset;
          }

          @include expect {
            top: -2.5rem;
          }
        }
      }

      @include it("-right-10") {
        @include assert {
          @include output {
            @include -right-10;
            @include reset;
          }

          @include expect {
            right: -2.5rem;
          }
        }
      }

      @include it("-bottom-10") {
        @include assert {
          @include output {
            @include -bottom-10;
            @include reset;
          }

          @include expect {
            bottom: -2.5rem;
          }
        }
      }

      @include it("-left-10") {
        @include assert {
          @include output {
            @include -left-10;
            @include reset;
          }

          @include expect {
            left: -2.5rem;
          }
        }
      }

      @include it("-inset-11") {
        @include assert {
          @include output {
            @include -inset-11;
            @include reset;
          }

          @include expect {
            inset: -2.75rem;
          }
        }
      }

      @include it("-inset-x-11") {
        @include assert {
          @include output {
            @include -inset-x-11;
            @include reset;
          }

          @include expect {
            left: -2.75rem;
            right: -2.75rem;
          }
        }
      }

      @include it("-inset-y-11") {
        @include assert {
          @include output {
            @include -inset-y-11;
            @include reset;
          }

          @include expect {
            top: -2.75rem;
            bottom: -2.75rem;
          }
        }
      }

      @include it("-start-11") {
        @include assert {
          @include output {
            @include -start-11;
            @include reset;
          }

          @include expect {
            inset-inline-start: -2.75rem;
          }
        }
      }

      @include it("-end-11") {
        @include assert {
          @include output {
            @include -end-11;
            @include reset;
          }

          @include expect {
            inset-inline-end: -2.75rem;
          }
        }
      }

      @include it("-top-11") {
        @include assert {
          @include output {
            @include -top-11;
            @include reset;
          }

          @include expect {
            top: -2.75rem;
          }
        }
      }

      @include it("-right-11") {
        @include assert {
          @include output {
            @include -right-11;
            @include reset;
          }

          @include expect {
            right: -2.75rem;
          }
        }
      }

      @include it("-bottom-11") {
        @include assert {
          @include output {
            @include -bottom-11;
            @include reset;
          }

          @include expect {
            bottom: -2.75rem;
          }
        }
      }

      @include it("-left-11") {
        @include assert {
          @include output {
            @include -left-11;
            @include reset;
          }

          @include expect {
            left: -2.75rem;
          }
        }
      }

      @include it("-inset-12") {
        @include assert {
          @include output {
            @include -inset-12;
            @include reset;
          }

          @include expect {
            inset: -3rem;
          }
        }
      }

      @include it("-inset-x-12") {
        @include assert {
          @include output {
            @include -inset-x-12;
            @include reset;
          }

          @include expect {
            left: -3rem;
            right: -3rem;
          }
        }
      }

      @include it("-inset-y-12") {
        @include assert {
          @include output {
            @include -inset-y-12;
            @include reset;
          }

          @include expect {
            top: -3rem;
            bottom: -3rem;
          }
        }
      }

      @include it("-start-12") {
        @include assert {
          @include output {
            @include -start-12;
            @include reset;
          }

          @include expect {
            inset-inline-start: -3rem;
          }
        }
      }

      @include it("-end-12") {
        @include assert {
          @include output {
            @include -end-12;
            @include reset;
          }

          @include expect {
            inset-inline-end: -3rem;
          }
        }
      }

      @include it("-top-12") {
        @include assert {
          @include output {
            @include -top-12;
            @include reset;
          }

          @include expect {
            top: -3rem;
          }
        }
      }

      @include it("-right-12") {
        @include assert {
          @include output {
            @include -right-12;
            @include reset;
          }

          @include expect {
            right: -3rem;
          }
        }
      }

      @include it("-bottom-12") {
        @include assert {
          @include output {
            @include -bottom-12;
            @include reset;
          }

          @include expect {
            bottom: -3rem;
          }
        }
      }

      @include it("-left-12") {
        @include assert {
          @include output {
            @include -left-12;
            @include reset;
          }

          @include expect {
            left: -3rem;
          }
        }
      }

      @include it("-inset-14") {
        @include assert {
          @include output {
            @include -inset-14;
            @include reset;
          }

          @include expect {
            inset: -3.5rem;
          }
        }
      }

      @include it("-inset-x-14") {
        @include assert {
          @include output {
            @include -inset-x-14;
            @include reset;
          }

          @include expect {
            left: -3.5rem;
            right: -3.5rem;
          }
        }
      }

      @include it("-inset-y-14") {
        @include assert {
          @include output {
            @include -inset-y-14;
            @include reset;
          }

          @include expect {
            top: -3.5rem;
            bottom: -3.5rem;
          }
        }
      }

      @include it("-start-14") {
        @include assert {
          @include output {
            @include -start-14;
            @include reset;
          }

          @include expect {
            inset-inline-start: -3.5rem;
          }
        }
      }

      @include it("-end-14") {
        @include assert {
          @include output {
            @include -end-14;
            @include reset;
          }

          @include expect {
            inset-inline-end: -3.5rem;
          }
        }
      }

      @include it("-top-14") {
        @include assert {
          @include output {
            @include -top-14;
            @include reset;
          }

          @include expect {
            top: -3.5rem;
          }
        }
      }

      @include it("-right-14") {
        @include assert {
          @include output {
            @include -right-14;
            @include reset;
          }

          @include expect {
            right: -3.5rem;
          }
        }
      }

      @include it("-bottom-14") {
        @include assert {
          @include output {
            @include -bottom-14;
            @include reset;
          }

          @include expect {
            bottom: -3.5rem;
          }
        }
      }

      @include it("-left-14") {
        @include assert {
          @include output {
            @include -left-14;
            @include reset;
          }

          @include expect {
            left: -3.5rem;
          }
        }
      }

      @include it("-inset-16") {
        @include assert {
          @include output {
            @include -inset-16;
            @include reset;
          }

          @include expect {
            inset: -4rem;
          }
        }
      }

      @include it("-inset-x-16") {
        @include assert {
          @include output {
            @include -inset-x-16;
            @include reset;
          }

          @include expect {
            left: -4rem;
            right: -4rem;
          }
        }
      }

      @include it("-inset-y-16") {
        @include assert {
          @include output {
            @include -inset-y-16;
            @include reset;
          }

          @include expect {
            top: -4rem;
            bottom: -4rem;
          }
        }
      }

      @include it("-start-16") {
        @include assert {
          @include output {
            @include -start-16;
            @include reset;
          }

          @include expect {
            inset-inline-start: -4rem;
          }
        }
      }

      @include it("-end-16") {
        @include assert {
          @include output {
            @include -end-16;
            @include reset;
          }

          @include expect {
            inset-inline-end: -4rem;
          }
        }
      }

      @include it("-top-16") {
        @include assert {
          @include output {
            @include -top-16;
            @include reset;
          }

          @include expect {
            top: -4rem;
          }
        }
      }

      @include it("-right-16") {
        @include assert {
          @include output {
            @include -right-16;
            @include reset;
          }

          @include expect {
            right: -4rem;
          }
        }
      }

      @include it("-bottom-16") {
        @include assert {
          @include output {
            @include -bottom-16;
            @include reset;
          }

          @include expect {
            bottom: -4rem;
          }
        }
      }

      @include it("-left-16") {
        @include assert {
          @include output {
            @include -left-16;
            @include reset;
          }

          @include expect {
            left: -4rem;
          }
        }
      }

      @include it("-inset-20") {
        @include assert {
          @include output {
            @include -inset-20;
            @include reset;
          }

          @include expect {
            inset: -5rem;
          }
        }
      }

      @include it("-inset-x-20") {
        @include assert {
          @include output {
            @include -inset-x-20;
            @include reset;
          }

          @include expect {
            left: -5rem;
            right: -5rem;
          }
        }
      }

      @include it("-inset-y-20") {
        @include assert {
          @include output {
            @include -inset-y-20;
            @include reset;
          }

          @include expect {
            top: -5rem;
            bottom: -5rem;
          }
        }
      }

      @include it("-start-20") {
        @include assert {
          @include output {
            @include -start-20;
            @include reset;
          }

          @include expect {
            inset-inline-start: -5rem;
          }
        }
      }

      @include it("-end-20") {
        @include assert {
          @include output {
            @include -end-20;
            @include reset;
          }

          @include expect {
            inset-inline-end: -5rem;
          }
        }
      }

      @include it("-top-20") {
        @include assert {
          @include output {
            @include -top-20;
            @include reset;
          }

          @include expect {
            top: -5rem;
          }
        }
      }

      @include it("-right-20") {
        @include assert {
          @include output {
            @include -right-20;
            @include reset;
          }

          @include expect {
            right: -5rem;
          }
        }
      }

      @include it("-bottom-20") {
        @include assert {
          @include output {
            @include -bottom-20;
            @include reset;
          }

          @include expect {
            bottom: -5rem;
          }
        }
      }

      @include it("-left-20") {
        @include assert {
          @include output {
            @include -left-20;
            @include reset;
          }

          @include expect {
            left: -5rem;
          }
        }
      }

      @include it("-inset-24") {
        @include assert {
          @include output {
            @include -inset-24;
            @include reset;
          }

          @include expect {
            inset: -6rem;
          }
        }
      }

      @include it("-inset-x-24") {
        @include assert {
          @include output {
            @include -inset-x-24;
            @include reset;
          }

          @include expect {
            left: -6rem;
            right: -6rem;
          }
        }
      }

      @include it("-inset-y-24") {
        @include assert {
          @include output {
            @include -inset-y-24;
            @include reset;
          }

          @include expect {
            top: -6rem;
            bottom: -6rem;
          }
        }
      }

      @include it("-start-24") {
        @include assert {
          @include output {
            @include -start-24;
            @include reset;
          }

          @include expect {
            inset-inline-start: -6rem;
          }
        }
      }

      @include it("-end-24") {
        @include assert {
          @include output {
            @include -end-24;
            @include reset;
          }

          @include expect {
            inset-inline-end: -6rem;
          }
        }
      }

      @include it("-top-24") {
        @include assert {
          @include output {
            @include -top-24;
            @include reset;
          }

          @include expect {
            top: -6rem;
          }
        }
      }

      @include it("-right-24") {
        @include assert {
          @include output {
            @include -right-24;
            @include reset;
          }

          @include expect {
            right: -6rem;
          }
        }
      }

      @include it("-bottom-24") {
        @include assert {
          @include output {
            @include -bottom-24;
            @include reset;
          }

          @include expect {
            bottom: -6rem;
          }
        }
      }

      @include it("-left-24") {
        @include assert {
          @include output {
            @include -left-24;
            @include reset;
          }

          @include expect {
            left: -6rem;
          }
        }
      }

      @include it("-inset-28") {
        @include assert {
          @include output {
            @include -inset-28;
            @include reset;
          }

          @include expect {
            inset: -7rem;
          }
        }
      }

      @include it("-inset-x-28") {
        @include assert {
          @include output {
            @include -inset-x-28;
            @include reset;
          }

          @include expect {
            left: -7rem;
            right: -7rem;
          }
        }
      }

      @include it("-inset-y-28") {
        @include assert {
          @include output {
            @include -inset-y-28;
            @include reset;
          }

          @include expect {
            top: -7rem;
            bottom: -7rem;
          }
        }
      }

      @include it("-start-28") {
        @include assert {
          @include output {
            @include -start-28;
            @include reset;
          }

          @include expect {
            inset-inline-start: -7rem;
          }
        }
      }

      @include it("-end-28") {
        @include assert {
          @include output {
            @include -end-28;
            @include reset;
          }

          @include expect {
            inset-inline-end: -7rem;
          }
        }
      }

      @include it("-top-28") {
        @include assert {
          @include output {
            @include -top-28;
            @include reset;
          }

          @include expect {
            top: -7rem;
          }
        }
      }

      @include it("-right-28") {
        @include assert {
          @include output {
            @include -right-28;
            @include reset;
          }

          @include expect {
            right: -7rem;
          }
        }
      }

      @include it("-bottom-28") {
        @include assert {
          @include output {
            @include -bottom-28;
            @include reset;
          }

          @include expect {
            bottom: -7rem;
          }
        }
      }

      @include it("-left-28") {
        @include assert {
          @include output {
            @include -left-28;
            @include reset;
          }

          @include expect {
            left: -7rem;
          }
        }
      }

      @include it("-inset-32") {
        @include assert {
          @include output {
            @include -inset-32;
            @include reset;
          }

          @include expect {
            inset: -8rem;
          }
        }
      }

      @include it("-inset-x-32") {
        @include assert {
          @include output {
            @include -inset-x-32;
            @include reset;
          }

          @include expect {
            left: -8rem;
            right: -8rem;
          }
        }
      }

      @include it("-inset-y-32") {
        @include assert {
          @include output {
            @include -inset-y-32;
            @include reset;
          }

          @include expect {
            top: -8rem;
            bottom: -8rem;
          }
        }
      }

      @include it("-start-32") {
        @include assert {
          @include output {
            @include -start-32;
            @include reset;
          }

          @include expect {
            inset-inline-start: -8rem;
          }
        }
      }

      @include it("-end-32") {
        @include assert {
          @include output {
            @include -end-32;
            @include reset;
          }

          @include expect {
            inset-inline-end: -8rem;
          }
        }
      }

      @include it("-top-32") {
        @include assert {
          @include output {
            @include -top-32;
            @include reset;
          }

          @include expect {
            top: -8rem;
          }
        }
      }

      @include it("-right-32") {
        @include assert {
          @include output {
            @include -right-32;
            @include reset;
          }

          @include expect {
            right: -8rem;
          }
        }
      }

      @include it("-bottom-32") {
        @include assert {
          @include output {
            @include -bottom-32;
            @include reset;
          }

          @include expect {
            bottom: -8rem;
          }
        }
      }

      @include it("-left-32") {
        @include assert {
          @include output {
            @include -left-32;
            @include reset;
          }

          @include expect {
            left: -8rem;
          }
        }
      }

      @include it("-inset-36") {
        @include assert {
          @include output {
            @include -inset-36;
            @include reset;
          }

          @include expect {
            inset: -9rem;
          }
        }
      }

      @include it("-inset-x-36") {
        @include assert {
          @include output {
            @include -inset-x-36;
            @include reset;
          }

          @include expect {
            left: -9rem;
            right: -9rem;
          }
        }
      }

      @include it("-inset-y-36") {
        @include assert {
          @include output {
            @include -inset-y-36;
            @include reset;
          }

          @include expect {
            top: -9rem;
            bottom: -9rem;
          }
        }
      }

      @include it("-start-36") {
        @include assert {
          @include output {
            @include -start-36;
            @include reset;
          }

          @include expect {
            inset-inline-start: -9rem;
          }
        }
      }

      @include it("-end-36") {
        @include assert {
          @include output {
            @include -end-36;
            @include reset;
          }

          @include expect {
            inset-inline-end: -9rem;
          }
        }
      }

      @include it("-top-36") {
        @include assert {
          @include output {
            @include -top-36;
            @include reset;
          }

          @include expect {
            top: -9rem;
          }
        }
      }

      @include it("-right-36") {
        @include assert {
          @include output {
            @include -right-36;
            @include reset;
          }

          @include expect {
            right: -9rem;
          }
        }
      }

      @include it("-bottom-36") {
        @include assert {
          @include output {
            @include -bottom-36;
            @include reset;
          }

          @include expect {
            bottom: -9rem;
          }
        }
      }

      @include it("-left-36") {
        @include assert {
          @include output {
            @include -left-36;
            @include reset;
          }

          @include expect {
            left: -9rem;
          }
        }
      }

      @include it("-inset-40") {
        @include assert {
          @include output {
            @include -inset-40;
            @include reset;
          }

          @include expect {
            inset: -10rem;
          }
        }
      }

      @include it("-inset-x-40") {
        @include assert {
          @include output {
            @include -inset-x-40;
            @include reset;
          }

          @include expect {
            left: -10rem;
            right: -10rem;
          }
        }
      }

      @include it("-inset-y-40") {
        @include assert {
          @include output {
            @include -inset-y-40;
            @include reset;
          }

          @include expect {
            top: -10rem;
            bottom: -10rem;
          }
        }
      }

      @include it("-start-40") {
        @include assert {
          @include output {
            @include -start-40;
            @include reset;
          }

          @include expect {
            inset-inline-start: -10rem;
          }
        }
      }

      @include it("-end-40") {
        @include assert {
          @include output {
            @include -end-40;
            @include reset;
          }

          @include expect {
            inset-inline-end: -10rem;
          }
        }
      }

      @include it("-top-40") {
        @include assert {
          @include output {
            @include -top-40;
            @include reset;
          }

          @include expect {
            top: -10rem;
          }
        }
      }

      @include it("-right-40") {
        @include assert {
          @include output {
            @include -right-40;
            @include reset;
          }

          @include expect {
            right: -10rem;
          }
        }
      }

      @include it("-bottom-40") {
        @include assert {
          @include output {
            @include -bottom-40;
            @include reset;
          }

          @include expect {
            bottom: -10rem;
          }
        }
      }

      @include it("-left-40") {
        @include assert {
          @include output {
            @include -left-40;
            @include reset;
          }

          @include expect {
            left: -10rem;
          }
        }
      }

      @include it("-inset-44") {
        @include assert {
          @include output {
            @include -inset-44;
            @include reset;
          }

          @include expect {
            inset: -11rem;
          }
        }
      }

      @include it("-inset-x-44") {
        @include assert {
          @include output {
            @include -inset-x-44;
            @include reset;
          }

          @include expect {
            left: -11rem;
            right: -11rem;
          }
        }
      }

      @include it("-inset-y-44") {
        @include assert {
          @include output {
            @include -inset-y-44;
            @include reset;
          }

          @include expect {
            top: -11rem;
            bottom: -11rem;
          }
        }
      }

      @include it("-start-44") {
        @include assert {
          @include output {
            @include -start-44;
            @include reset;
          }

          @include expect {
            inset-inline-start: -11rem;
          }
        }
      }

      @include it("-end-44") {
        @include assert {
          @include output {
            @include -end-44;
            @include reset;
          }

          @include expect {
            inset-inline-end: -11rem;
          }
        }
      }

      @include it("-top-44") {
        @include assert {
          @include output {
            @include -top-44;
            @include reset;
          }

          @include expect {
            top: -11rem;
          }
        }
      }

      @include it("-right-44") {
        @include assert {
          @include output {
            @include -right-44;
            @include reset;
          }

          @include expect {
            right: -11rem;
          }
        }
      }

      @include it("-bottom-44") {
        @include assert {
          @include output {
            @include -bottom-44;
            @include reset;
          }

          @include expect {
            bottom: -11rem;
          }
        }
      }

      @include it("-left-44") {
        @include assert {
          @include output {
            @include -left-44;
            @include reset;
          }

          @include expect {
            left: -11rem;
          }
        }
      }

      @include it("-inset-48") {
        @include assert {
          @include output {
            @include -inset-48;
            @include reset;
          }

          @include expect {
            inset: -12rem;
          }
        }
      }

      @include it("-inset-x-48") {
        @include assert {
          @include output {
            @include -inset-x-48;
            @include reset;
          }

          @include expect {
            left: -12rem;
            right: -12rem;
          }
        }
      }

      @include it("-inset-y-48") {
        @include assert {
          @include output {
            @include -inset-y-48;
            @include reset;
          }

          @include expect {
            top: -12rem;
            bottom: -12rem;
          }
        }
      }

      @include it("-start-48") {
        @include assert {
          @include output {
            @include -start-48;
            @include reset;
          }

          @include expect {
            inset-inline-start: -12rem;
          }
        }
      }

      @include it("-end-48") {
        @include assert {
          @include output {
            @include -end-48;
            @include reset;
          }

          @include expect {
            inset-inline-end: -12rem;
          }
        }
      }

      @include it("-top-48") {
        @include assert {
          @include output {
            @include -top-48;
            @include reset;
          }

          @include expect {
            top: -12rem;
          }
        }
      }

      @include it("-right-48") {
        @include assert {
          @include output {
            @include -right-48;
            @include reset;
          }

          @include expect {
            right: -12rem;
          }
        }
      }

      @include it("-bottom-48") {
        @include assert {
          @include output {
            @include -bottom-48;
            @include reset;
          }

          @include expect {
            bottom: -12rem;
          }
        }
      }

      @include it("-left-48") {
        @include assert {
          @include output {
            @include -left-48;
            @include reset;
          }

          @include expect {
            left: -12rem;
          }
        }
      }

      @include it("-inset-52") {
        @include assert {
          @include output {
            @include -inset-52;
            @include reset;
          }

          @include expect {
            inset: -13rem;
          }
        }
      }

      @include it("-inset-x-52") {
        @include assert {
          @include output {
            @include -inset-x-52;
            @include reset;
          }

          @include expect {
            left: -13rem;
            right: -13rem;
          }
        }
      }

      @include it("-inset-y-52") {
        @include assert {
          @include output {
            @include -inset-y-52;
            @include reset;
          }

          @include expect {
            top: -13rem;
            bottom: -13rem;
          }
        }
      }

      @include it("-start-52") {
        @include assert {
          @include output {
            @include -start-52;
            @include reset;
          }

          @include expect {
            inset-inline-start: -13rem;
          }
        }
      }

      @include it("-end-52") {
        @include assert {
          @include output {
            @include -end-52;
            @include reset;
          }

          @include expect {
            inset-inline-end: -13rem;
          }
        }
      }

      @include it("-top-52") {
        @include assert {
          @include output {
            @include -top-52;
            @include reset;
          }

          @include expect {
            top: -13rem;
          }
        }
      }

      @include it("-right-52") {
        @include assert {
          @include output {
            @include -right-52;
            @include reset;
          }

          @include expect {
            right: -13rem;
          }
        }
      }

      @include it("-bottom-52") {
        @include assert {
          @include output {
            @include -bottom-52;
            @include reset;
          }

          @include expect {
            bottom: -13rem;
          }
        }
      }

      @include it("-left-52") {
        @include assert {
          @include output {
            @include -left-52;
            @include reset;
          }

          @include expect {
            left: -13rem;
          }
        }
      }

      @include it("-inset-56") {
        @include assert {
          @include output {
            @include -inset-56;
            @include reset;
          }

          @include expect {
            inset: -14rem;
          }
        }
      }

      @include it("-inset-x-56") {
        @include assert {
          @include output {
            @include -inset-x-56;
            @include reset;
          }

          @include expect {
            left: -14rem;
            right: -14rem;
          }
        }
      }

      @include it("-inset-y-56") {
        @include assert {
          @include output {
            @include -inset-y-56;
            @include reset;
          }

          @include expect {
            top: -14rem;
            bottom: -14rem;
          }
        }
      }

      @include it("-start-56") {
        @include assert {
          @include output {
            @include -start-56;
            @include reset;
          }

          @include expect {
            inset-inline-start: -14rem;
          }
        }
      }

      @include it("-end-56") {
        @include assert {
          @include output {
            @include -end-56;
            @include reset;
          }

          @include expect {
            inset-inline-end: -14rem;
          }
        }
      }

      @include it("-top-56") {
        @include assert {
          @include output {
            @include -top-56;
            @include reset;
          }

          @include expect {
            top: -14rem;
          }
        }
      }

      @include it("-right-56") {
        @include assert {
          @include output {
            @include -right-56;
            @include reset;
          }

          @include expect {
            right: -14rem;
          }
        }
      }

      @include it("-bottom-56") {
        @include assert {
          @include output {
            @include -bottom-56;
            @include reset;
          }

          @include expect {
            bottom: -14rem;
          }
        }
      }

      @include it("-left-56") {
        @include assert {
          @include output {
            @include -left-56;
            @include reset;
          }

          @include expect {
            left: -14rem;
          }
        }
      }

      @include it("-inset-60") {
        @include assert {
          @include output {
            @include -inset-60;
            @include reset;
          }

          @include expect {
            inset: -15rem;
          }
        }
      }

      @include it("-inset-x-60") {
        @include assert {
          @include output {
            @include -inset-x-60;
            @include reset;
          }

          @include expect {
            left: -15rem;
            right: -15rem;
          }
        }
      }

      @include it("-inset-y-60") {
        @include assert {
          @include output {
            @include -inset-y-60;
            @include reset;
          }

          @include expect {
            top: -15rem;
            bottom: -15rem;
          }
        }
      }

      @include it("-start-60") {
        @include assert {
          @include output {
            @include -start-60;
            @include reset;
          }

          @include expect {
            inset-inline-start: -15rem;
          }
        }
      }

      @include it("-end-60") {
        @include assert {
          @include output {
            @include -end-60;
            @include reset;
          }

          @include expect {
            inset-inline-end: -15rem;
          }
        }
      }

      @include it("-top-60") {
        @include assert {
          @include output {
            @include -top-60;
            @include reset;
          }

          @include expect {
            top: -15rem;
          }
        }
      }

      @include it("-right-60") {
        @include assert {
          @include output {
            @include -right-60;
            @include reset;
          }

          @include expect {
            right: -15rem;
          }
        }
      }

      @include it("-bottom-60") {
        @include assert {
          @include output {
            @include -bottom-60;
            @include reset;
          }

          @include expect {
            bottom: -15rem;
          }
        }
      }

      @include it("-left-60") {
        @include assert {
          @include output {
            @include -left-60;
            @include reset;
          }

          @include expect {
            left: -15rem;
          }
        }
      }

      @include it("-inset-64") {
        @include assert {
          @include output {
            @include -inset-64;
            @include reset;
          }

          @include expect {
            inset: -16rem;
          }
        }
      }

      @include it("-inset-x-64") {
        @include assert {
          @include output {
            @include -inset-x-64;
            @include reset;
          }

          @include expect {
            left: -16rem;
            right: -16rem;
          }
        }
      }

      @include it("-inset-y-64") {
        @include assert {
          @include output {
            @include -inset-y-64;
            @include reset;
          }

          @include expect {
            top: -16rem;
            bottom: -16rem;
          }
        }
      }

      @include it("-start-64") {
        @include assert {
          @include output {
            @include -start-64;
            @include reset;
          }

          @include expect {
            inset-inline-start: -16rem;
          }
        }
      }

      @include it("-end-64") {
        @include assert {
          @include output {
            @include -end-64;
            @include reset;
          }

          @include expect {
            inset-inline-end: -16rem;
          }
        }
      }

      @include it("-top-64") {
        @include assert {
          @include output {
            @include -top-64;
            @include reset;
          }

          @include expect {
            top: -16rem;
          }
        }
      }

      @include it("-right-64") {
        @include assert {
          @include output {
            @include -right-64;
            @include reset;
          }

          @include expect {
            right: -16rem;
          }
        }
      }

      @include it("-bottom-64") {
        @include assert {
          @include output {
            @include -bottom-64;
            @include reset;
          }

          @include expect {
            bottom: -16rem;
          }
        }
      }

      @include it("-left-64") {
        @include assert {
          @include output {
            @include -left-64;
            @include reset;
          }

          @include expect {
            left: -16rem;
          }
        }
      }

      @include it("-inset-72") {
        @include assert {
          @include output {
            @include -inset-72;
            @include reset;
          }

          @include expect {
            inset: -18rem;
          }
        }
      }

      @include it("-inset-x-72") {
        @include assert {
          @include output {
            @include -inset-x-72;
            @include reset;
          }

          @include expect {
            left: -18rem;
            right: -18rem;
          }
        }
      }

      @include it("-inset-y-72") {
        @include assert {
          @include output {
            @include -inset-y-72;
            @include reset;
          }

          @include expect {
            top: -18rem;
            bottom: -18rem;
          }
        }
      }

      @include it("-start-72") {
        @include assert {
          @include output {
            @include -start-72;
            @include reset;
          }

          @include expect {
            inset-inline-start: -18rem;
          }
        }
      }

      @include it("-end-72") {
        @include assert {
          @include output {
            @include -end-72;
            @include reset;
          }

          @include expect {
            inset-inline-end: -18rem;
          }
        }
      }

      @include it("-top-72") {
        @include assert {
          @include output {
            @include -top-72;
            @include reset;
          }

          @include expect {
            top: -18rem;
          }
        }
      }

      @include it("-right-72") {
        @include assert {
          @include output {
            @include -right-72;
            @include reset;
          }

          @include expect {
            right: -18rem;
          }
        }
      }

      @include it("-bottom-72") {
        @include assert {
          @include output {
            @include -bottom-72;
            @include reset;
          }

          @include expect {
            bottom: -18rem;
          }
        }
      }

      @include it("-left-72") {
        @include assert {
          @include output {
            @include -left-72;
            @include reset;
          }

          @include expect {
            left: -18rem;
          }
        }
      }

      @include it("-inset-80") {
        @include assert {
          @include output {
            @include -inset-80;
            @include reset;
          }

          @include expect {
            inset: -20rem;
          }
        }
      }

      @include it("-inset-x-80") {
        @include assert {
          @include output {
            @include -inset-x-80;
            @include reset;
          }

          @include expect {
            left: -20rem;
            right: -20rem;
          }
        }
      }

      @include it("-inset-y-80") {
        @include assert {
          @include output {
            @include -inset-y-80;
            @include reset;
          }

          @include expect {
            top: -20rem;
            bottom: -20rem;
          }
        }
      }

      @include it("-start-80") {
        @include assert {
          @include output {
            @include -start-80;
            @include reset;
          }

          @include expect {
            inset-inline-start: -20rem;
          }
        }
      }

      @include it("-end-80") {
        @include assert {
          @include output {
            @include -end-80;
            @include reset;
          }

          @include expect {
            inset-inline-end: -20rem;
          }
        }
      }

      @include it("-top-80") {
        @include assert {
          @include output {
            @include -top-80;
            @include reset;
          }

          @include expect {
            top: -20rem;
          }
        }
      }

      @include it("-right-80") {
        @include assert {
          @include output {
            @include -right-80;
            @include reset;
          }

          @include expect {
            right: -20rem;
          }
        }
      }

      @include it("-bottom-80") {
        @include assert {
          @include output {
            @include -bottom-80;
            @include reset;
          }

          @include expect {
            bottom: -20rem;
          }
        }
      }

      @include it("-left-80") {
        @include assert {
          @include output {
            @include -left-80;
            @include reset;
          }

          @include expect {
            left: -20rem;
          }
        }
      }

      @include it("-inset-96") {
        @include assert {
          @include output {
            @include -inset-96;
            @include reset;
          }

          @include expect {
            inset: -24rem;
          }
        }
      }

      @include it("-inset-x-96") {
        @include assert {
          @include output {
            @include -inset-x-96;
            @include reset;
          }

          @include expect {
            left: -24rem;
            right: -24rem;
          }
        }
      }

      @include it("-inset-y-96") {
        @include assert {
          @include output {
            @include -inset-y-96;
            @include reset;
          }

          @include expect {
            top: -24rem;
            bottom: -24rem;
          }
        }
      }

      @include it("-start-96") {
        @include assert {
          @include output {
            @include -start-96;
            @include reset;
          }

          @include expect {
            inset-inline-start: -24rem;
          }
        }
      }

      @include it("-end-96") {
        @include assert {
          @include output {
            @include -end-96;
            @include reset;
          }

          @include expect {
            inset-inline-end: -24rem;
          }
        }
      }

      @include it("-top-96") {
        @include assert {
          @include output {
            @include -top-96;
            @include reset;
          }

          @include expect {
            top: -24rem;
          }
        }
      }

      @include it("-right-96") {
        @include assert {
          @include output {
            @include -right-96;
            @include reset;
          }

          @include expect {
            right: -24rem;
          }
        }
      }

      @include it("-bottom-96") {
        @include assert {
          @include output {
            @include -bottom-96;
            @include reset;
          }

          @include expect {
            bottom: -24rem;
          }
        }
      }

      @include it("-left-96") {
        @include assert {
          @include output {
            @include -left-96;
            @include reset;
          }

          @include expect {
            left: -24rem;
          }
        }
      }

      @include it("-inset-1\/2") {
        @include assert {
          @include output {
            @include -inset-1\/2;
            @include reset;
          }

          @include expect {
            inset: -50%;
          }
        }
      }

      @include it("-inset-1\/3") {
        @include assert {
          @include output {
            @include -inset-1\/3;
            @include reset;
          }

          @include expect {
            inset: -33.333333%;
          }
        }
      }

      @include it("-inset-2\/3") {
        @include assert {
          @include output {
            @include -inset-2\/3;
            @include reset;
          }

          @include expect {
            inset: -66.666667%;
          }
        }
      }

      @include it("-inset-1\/4") {
        @include assert {
          @include output {
            @include -inset-1\/4;
            @include reset;
          }

          @include expect {
            inset: -25%;
          }
        }
      }

      @include it("-inset-2\/4") {
        @include assert {
          @include output {
            @include -inset-2\/4;
            @include reset;
          }

          @include expect {
            inset: -50%;
          }
        }
      }

      @include it("-inset-3\/4") {
        @include assert {
          @include output {
            @include -inset-3\/4;
            @include reset;
          }

          @include expect {
            inset: -75%;
          }
        }
      }

      @include it("-inset-full") {
        @include assert {
          @include output {
            @include -inset-full;
            @include reset;
          }

          @include expect {
            inset: -100%;
          }
        }
      }

      @include it("-inset-x-1\/2") {
        @include assert {
          @include output {
            @include -inset-x-1\/2;
            @include reset;
          }

          @include expect {
            left: -50%;
            right: -50%;
          }
        }
      }

      @include it("-inset-x-1\/3") {
        @include assert {
          @include output {
            @include -inset-x-1\/3;
            @include reset;
          }

          @include expect {
            left: -33.333333%;
            right: -33.333333%;
          }
        }
      }

      @include it("-inset-x-2\/3") {
        @include assert {
          @include output {
            @include -inset-x-2\/3;
            @include reset;
          }

          @include expect {
            left: -66.666667%;
            right: -66.666667%;
          }
        }
      }

      @include it("-inset-x-1\/4") {
        @include assert {
          @include output {
            @include -inset-x-1\/4;
            @include reset;
          }

          @include expect {
            left: -25%;
            right: -25%;
          }
        }
      }

      @include it("-inset-x-2\/4") {
        @include assert {
          @include output {
            @include -inset-x-2\/4;
            @include reset;
          }

          @include expect {
            left: -50%;
            right: -50%;
          }
        }
      }

      @include it("-inset-x-3\/4") {
        @include assert {
          @include output {
            @include -inset-x-3\/4;
            @include reset;
          }

          @include expect {
            left: -75%;
            right: -75%;
          }
        }
      }

      @include it("-inset-x-full") {
        @include assert {
          @include output {
            @include -inset-x-full;
            @include reset;
          }

          @include expect {
            left: -100%;
            right: -100%;
          }
        }
      }

      @include it("-inset-y-1\/2") {
        @include assert {
          @include output {
            @include -inset-y-1\/2;
            @include reset;
          }

          @include expect {
            top: -50%;
            bottom: -50%;
          }
        }
      }

      @include it("-inset-y-1\/3") {
        @include assert {
          @include output {
            @include -inset-y-1\/3;
            @include reset;
          }

          @include expect {
            top: -33.333333%;
            bottom: -33.333333%;
          }
        }
      }

      @include it("-inset-y-2\/3") {
        @include assert {
          @include output {
            @include -inset-y-2\/3;
            @include reset;
          }

          @include expect {
            top: -66.666667%;
            bottom: -66.666667%;
          }
        }
      }

      @include it("-inset-y-1\/4") {
        @include assert {
          @include output {
            @include -inset-y-1\/4;
            @include reset;
          }

          @include expect {
            top: -25%;
            bottom: -25%;
          }
        }
      }

      @include it("-inset-y-2\/4") {
        @include assert {
          @include output {
            @include -inset-y-2\/4;
            @include reset;
          }

          @include expect {
            top: -50%;
            bottom: -50%;
          }
        }
      }

      @include it("-inset-y-3\/4") {
        @include assert {
          @include output {
            @include -inset-y-3\/4;
            @include reset;
          }

          @include expect {
            top: -75%;
            bottom: -75%;
          }
        }
      }

      @include it("-inset-y-full") {
        @include assert {
          @include output {
            @include -inset-y-full;
            @include reset;
          }

          @include expect {
            top: -100%;
            bottom: -100%;
          }
        }
      }

      @include it("-start-1\/2") {
        @include assert {
          @include output {
            @include -start-1\/2;
            @include reset;
          }

          @include expect {
            inset-inline-start: -50%;
          }
        }
      }

      @include it("-start-1\/3") {
        @include assert {
          @include output {
            @include -start-1\/3;
            @include reset;
          }

          @include expect {
            inset-inline-start: -33.333333%;
          }
        }
      }

      @include it("-start-2\/3") {
        @include assert {
          @include output {
            @include -start-2\/3;
            @include reset;
          }

          @include expect {
            inset-inline-start: -66.666667%;
          }
        }
      }

      @include it("-start-1\/4") {
        @include assert {
          @include output {
            @include -start-1\/4;
            @include reset;
          }

          @include expect {
            inset-inline-start: -25%;
          }
        }
      }

      @include it("-start-2\/4") {
        @include assert {
          @include output {
            @include -start-2\/4;
            @include reset;
          }

          @include expect {
            inset-inline-start: -50%;
          }
        }
      }

      @include it("-start-3\/4") {
        @include assert {
          @include output {
            @include -start-3\/4;
            @include reset;
          }

          @include expect {
            inset-inline-start: -75%;
          }
        }
      }

      @include it("-start-full") {
        @include assert {
          @include output {
            @include -start-full;
            @include reset;
          }

          @include expect {
            inset-inline-start: -100%;
          }
        }
      }

      @include it("-end-1\/2") {
        @include assert {
          @include output {
            @include -end-1\/2;
            @include reset;
          }

          @include expect {
            inset-inline-end: -50%;
          }
        }
      }

      @include it("-end-1\/3") {
        @include assert {
          @include output {
            @include -end-1\/3;
            @include reset;
          }

          @include expect {
            inset-inline-end: -33.333333%;
          }
        }
      }

      @include it("-end-2\/3") {
        @include assert {
          @include output {
            @include -end-2\/3;
            @include reset;
          }

          @include expect {
            inset-inline-end: -66.666667%;
          }
        }
      }

      @include it("-end-1\/4") {
        @include assert {
          @include output {
            @include -end-1\/4;
            @include reset;
          }

          @include expect {
            inset-inline-end: -25%;
          }
        }
      }

      @include it("-end-2\/4") {
        @include assert {
          @include output {
            @include -end-2\/4;
            @include reset;
          }

          @include expect {
            inset-inline-end: -50%;
          }
        }
      }

      @include it("-end-3\/4") {
        @include assert {
          @include output {
            @include -end-3\/4;
            @include reset;
          }

          @include expect {
            inset-inline-end: -75%;
          }
        }
      }

      @include it("-end-full") {
        @include assert {
          @include output {
            @include -end-full;
            @include reset;
          }

          @include expect {
            inset-inline-end: -100%;
          }
        }
      }

      @include it("-top-1\/2") {
        @include assert {
          @include output {
            @include -top-1\/2;
            @include reset;
          }

          @include expect {
            top: -50%;
          }
        }
      }

      @include it("-top-1\/3") {
        @include assert {
          @include output {
            @include -top-1\/3;
            @include reset;
          }

          @include expect {
            top: -33.333333%;
          }
        }
      }

      @include it("-top-2\/3") {
        @include assert {
          @include output {
            @include -top-2\/3;
            @include reset;
          }

          @include expect {
            top: -66.666667%;
          }
        }
      }

      @include it("-top-1\/4") {
        @include assert {
          @include output {
            @include -top-1\/4;
            @include reset;
          }

          @include expect {
            top: -25%;
          }
        }
      }

      @include it("-top-2\/4") {
        @include assert {
          @include output {
            @include -top-2\/4;
            @include reset;
          }

          @include expect {
            top: -50%;
          }
        }
      }

      @include it("-top-3\/4") {
        @include assert {
          @include output {
            @include -top-3\/4;
            @include reset;
          }

          @include expect {
            top: -75%;
          }
        }
      }

      @include it("-top-full") {
        @include assert {
          @include output {
            @include -top-full;
            @include reset;
          }

          @include expect {
            top: -100%;
          }
        }
      }

      @include it("-right-1\/2") {
        @include assert {
          @include output {
            @include -right-1\/2;
            @include reset;
          }

          @include expect {
            right: -50%;
          }
        }
      }

      @include it("-right-1\/3") {
        @include assert {
          @include output {
            @include -right-1\/3;
            @include reset;
          }

          @include expect {
            right: -33.333333%;
          }
        }
      }

      @include it("-right-2\/3") {
        @include assert {
          @include output {
            @include -right-2\/3;
            @include reset;
          }

          @include expect {
            right: -66.666667%;
          }
        }
      }

      @include it("-right-1\/4") {
        @include assert {
          @include output {
            @include -right-1\/4;
            @include reset;
          }

          @include expect {
            right: -25%;
          }
        }
      }

      @include it("-right-2\/4") {
        @include assert {
          @include output {
            @include -right-2\/4;
            @include reset;
          }

          @include expect {
            right: -50%;
          }
        }
      }

      @include it("-right-3\/4") {
        @include assert {
          @include output {
            @include -right-3\/4;
            @include reset;
          }

          @include expect {
            right: -75%;
          }
        }
      }

      @include it("-right-full") {
        @include assert {
          @include output {
            @include -right-full;
            @include reset;
          }

          @include expect {
            right: -100%;
          }
        }
      }

      @include it("-bottom-1\/2") {
        @include assert {
          @include output {
            @include -bottom-1\/2;
            @include reset;
          }

          @include expect {
            bottom: -50%;
          }
        }
      }

      @include it("-bottom-1\/3") {
        @include assert {
          @include output {
            @include -bottom-1\/3;
            @include reset;
          }

          @include expect {
            bottom: -33.333333%;
          }
        }
      }

      @include it("-bottom-2\/3") {
        @include assert {
          @include output {
            @include -bottom-2\/3;
            @include reset;
          }

          @include expect {
            bottom: -66.666667%;
          }
        }
      }

      @include it("-bottom-1\/4") {
        @include assert {
          @include output {
            @include -bottom-1\/4;
            @include reset;
          }

          @include expect {
            bottom: -25%;
          }
        }
      }

      @include it("-bottom-2\/4") {
        @include assert {
          @include output {
            @include -bottom-2\/4;
            @include reset;
          }

          @include expect {
            bottom: -50%;
          }
        }
      }

      @include it("-bottom-3\/4") {
        @include assert {
          @include output {
            @include -bottom-3\/4;
            @include reset;
          }

          @include expect {
            bottom: -75%;
          }
        }
      }

      @include it("-bottom-full") {
        @include assert {
          @include output {
            @include -bottom-full;
            @include reset;
          }

          @include expect {
            bottom: -100%;
          }
        }
      }

      @include it("-left-1\/2") {
        @include assert {
          @include output {
            @include -left-1\/2;
            @include reset;
          }

          @include expect {
            left: -50%;
          }
        }
      }

      @include it("-left-1\/3") {
        @include assert {
          @include output {
            @include -left-1\/3;
            @include reset;
          }

          @include expect {
            left: -33.333333%;
          }
        }
      }

      @include it("-left-2\/3") {
        @include assert {
          @include output {
            @include -left-2\/3;
            @include reset;
          }

          @include expect {
            left: -66.666667%;
          }
        }
      }

      @include it("-left-1\/4") {
        @include assert {
          @include output {
            @include -left-1\/4;
            @include reset;
          }

          @include expect {
            left: -25%;
          }
        }
      }

      @include it("-left-2\/4") {
        @include assert {
          @include output {
            @include -left-2\/4;
            @include reset;
          }

          @include expect {
            left: -50%;
          }
        }
      }

      @include it("-left-3\/4") {
        @include assert {
          @include output {
            @include -left-3\/4;
            @include reset;
          }

          @include expect {
            left: -75%;
          }
        }
      }

      @include it("-left-full") {
        @include assert {
          @include output {
            @include -left-full;
            @include reset;
          }

          @include expect {
            left: -100%;
          }
        }
      }
    }

    @include describe("Rwd") {
      @include it("sm\:inset-0") {
        @include assert {
          @include output {
            @include sm\:inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0px;
            }
          }
        }
      }

      @include it("sm\:inset-x-0") {
        @include assert {
          @include output {
            @include sm\:inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("sm\:inset-y-0") {
        @include assert {
          @include output {
            @include sm\:inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:start-0") {
        @include assert {
          @include output {
            @include sm\:start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("sm\:end-0") {
        @include assert {
          @include output {
            @include sm\:end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("sm\:top-0") {
        @include assert {
          @include output {
            @include sm\:top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0px;
            }
          }
        }
      }

      @include it("sm\:right-0") {
        @include assert {
          @include output {
            @include sm\:right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0px;
            }
          }
        }
      }

      @include it("sm\:bottom-0") {
        @include assert {
          @include output {
            @include sm\:bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:left-0") {
        @include assert {
          @include output {
            @include sm\:left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0px;
            }
          }
        }
      }

      @include it("sm\:inset-px") {
        @include assert {
          @include output {
            @include sm\:inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 1px;
            }
          }
        }
      }

      @include it("sm\:inset-x-px") {
        @include assert {
          @include output {
            @include sm\:inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it("sm\:inset-y-px") {
        @include assert {
          @include output {
            @include sm\:inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it("sm\:start-px") {
        @include assert {
          @include output {
            @include sm\:start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it("sm\:end-px") {
        @include assert {
          @include output {
            @include sm\:end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it("sm\:top-px") {
        @include assert {
          @include output {
            @include sm\:top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1px;
            }
          }
        }
      }

      @include it("sm\:right-px") {
        @include assert {
          @include output {
            @include sm\:right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 1px;
            }
          }
        }
      }

      @include it("sm\:bottom-px") {
        @include assert {
          @include output {
            @include sm\:bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 1px;
            }
          }
        }
      }

      @include it("sm\:left-px") {
        @include assert {
          @include output {
            @include sm\:left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1px;
            }
          }
        }
      }

      @include it("sm\:inset-0\.5") {
        @include assert {
          @include output {
            @include sm\:inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-0\.5") {
        @include assert {
          @include output {
            @include sm\:inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-0\.5") {
        @include assert {
          @include output {
            @include sm\:inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:start-0\.5") {
        @include assert {
          @include output {
            @include sm\:start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:end-0\.5") {
        @include assert {
          @include output {
            @include sm\:end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:top-0\.5") {
        @include assert {
          @include output {
            @include sm\:top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:right-0\.5") {
        @include assert {
          @include output {
            @include sm\:right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:bottom-0\.5") {
        @include assert {
          @include output {
            @include sm\:bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:left-0\.5") {
        @include assert {
          @include output {
            @include sm\:left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it("sm\:inset-1") {
        @include assert {
          @include output {
            @include sm\:inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-1") {
        @include assert {
          @include output {
            @include sm\:inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-1") {
        @include assert {
          @include output {
            @include sm\:inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:start-1") {
        @include assert {
          @include output {
            @include sm\:start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:end-1") {
        @include assert {
          @include output {
            @include sm\:end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:top-1") {
        @include assert {
          @include output {
            @include sm\:top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:right-1") {
        @include assert {
          @include output {
            @include sm\:right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:bottom-1") {
        @include assert {
          @include output {
            @include sm\:bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:left-1") {
        @include assert {
          @include output {
            @include sm\:left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-1\.5") {
        @include assert {
          @include output {
            @include sm\:inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-1\.5") {
        @include assert {
          @include output {
            @include sm\:inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-1\.5") {
        @include assert {
          @include output {
            @include sm\:inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:start-1\.5") {
        @include assert {
          @include output {
            @include sm\:start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:end-1\.5") {
        @include assert {
          @include output {
            @include sm\:end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:top-1\.5") {
        @include assert {
          @include output {
            @include sm\:top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:right-1\.5") {
        @include assert {
          @include output {
            @include sm\:right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:bottom-1\.5") {
        @include assert {
          @include output {
            @include sm\:bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:left-1\.5") {
        @include assert {
          @include output {
            @include sm\:left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it("sm\:inset-2") {
        @include assert {
          @include output {
            @include sm\:inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-2") {
        @include assert {
          @include output {
            @include sm\:inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-2") {
        @include assert {
          @include output {
            @include sm\:inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:start-2") {
        @include assert {
          @include output {
            @include sm\:start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:end-2") {
        @include assert {
          @include output {
            @include sm\:end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:top-2") {
        @include assert {
          @include output {
            @include sm\:top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:right-2") {
        @include assert {
          @include output {
            @include sm\:right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:bottom-2") {
        @include assert {
          @include output {
            @include sm\:bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:left-2") {
        @include assert {
          @include output {
            @include sm\:left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-2\.5") {
        @include assert {
          @include output {
            @include sm\:inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-2\.5") {
        @include assert {
          @include output {
            @include sm\:inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-2\.5") {
        @include assert {
          @include output {
            @include sm\:inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:start-2\.5") {
        @include assert {
          @include output {
            @include sm\:start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:end-2\.5") {
        @include assert {
          @include output {
            @include sm\:end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:top-2\.5") {
        @include assert {
          @include output {
            @include sm\:top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:right-2\.5") {
        @include assert {
          @include output {
            @include sm\:right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:bottom-2\.5") {
        @include assert {
          @include output {
            @include sm\:bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:left-2\.5") {
        @include assert {
          @include output {
            @include sm\:left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it("sm\:inset-3") {
        @include assert {
          @include output {
            @include sm\:inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-3") {
        @include assert {
          @include output {
            @include sm\:inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-3") {
        @include assert {
          @include output {
            @include sm\:inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:start-3") {
        @include assert {
          @include output {
            @include sm\:start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:end-3") {
        @include assert {
          @include output {
            @include sm\:end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:top-3") {
        @include assert {
          @include output {
            @include sm\:top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:right-3") {
        @include assert {
          @include output {
            @include sm\:right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:bottom-3") {
        @include assert {
          @include output {
            @include sm\:bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:left-3") {
        @include assert {
          @include output {
            @include sm\:left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-3\.5") {
        @include assert {
          @include output {
            @include sm\:inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-3\.5") {
        @include assert {
          @include output {
            @include sm\:inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-3\.5") {
        @include assert {
          @include output {
            @include sm\:inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:start-3\.5") {
        @include assert {
          @include output {
            @include sm\:start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:end-3\.5") {
        @include assert {
          @include output {
            @include sm\:end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:top-3\.5") {
        @include assert {
          @include output {
            @include sm\:top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:right-3\.5") {
        @include assert {
          @include output {
            @include sm\:right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:bottom-3\.5") {
        @include assert {
          @include output {
            @include sm\:bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:left-3\.5") {
        @include assert {
          @include output {
            @include sm\:left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it("sm\:inset-4") {
        @include assert {
          @include output {
            @include sm\:inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 1rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-4") {
        @include assert {
          @include output {
            @include sm\:inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-4") {
        @include assert {
          @include output {
            @include sm\:inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it("sm\:start-4") {
        @include assert {
          @include output {
            @include sm\:start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it("sm\:end-4") {
        @include assert {
          @include output {
            @include sm\:end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it("sm\:top-4") {
        @include assert {
          @include output {
            @include sm\:top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1rem;
            }
          }
        }
      }

      @include it("sm\:right-4") {
        @include assert {
          @include output {
            @include sm\:right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 1rem;
            }
          }
        }
      }

      @include it("sm\:bottom-4") {
        @include assert {
          @include output {
            @include sm\:bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it("sm\:left-4") {
        @include assert {
          @include output {
            @include sm\:left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1rem;
            }
          }
        }
      }

      @include it("sm\:inset-5") {
        @include assert {
          @include output {
            @include sm\:inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-5") {
        @include assert {
          @include output {
            @include sm\:inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-5") {
        @include assert {
          @include output {
            @include sm\:inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:start-5") {
        @include assert {
          @include output {
            @include sm\:start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:end-5") {
        @include assert {
          @include output {
            @include sm\:end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:top-5") {
        @include assert {
          @include output {
            @include sm\:top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:right-5") {
        @include assert {
          @include output {
            @include sm\:right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:bottom-5") {
        @include assert {
          @include output {
            @include sm\:bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:left-5") {
        @include assert {
          @include output {
            @include sm\:left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-6") {
        @include assert {
          @include output {
            @include sm\:inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-6") {
        @include assert {
          @include output {
            @include sm\:inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-6") {
        @include assert {
          @include output {
            @include sm\:inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:start-6") {
        @include assert {
          @include output {
            @include sm\:start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:end-6") {
        @include assert {
          @include output {
            @include sm\:end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:top-6") {
        @include assert {
          @include output {
            @include sm\:top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:right-6") {
        @include assert {
          @include output {
            @include sm\:right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:bottom-6") {
        @include assert {
          @include output {
            @include sm\:bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:left-6") {
        @include assert {
          @include output {
            @include sm\:left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-7") {
        @include assert {
          @include output {
            @include sm\:inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-7") {
        @include assert {
          @include output {
            @include sm\:inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-7") {
        @include assert {
          @include output {
            @include sm\:inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:start-7") {
        @include assert {
          @include output {
            @include sm\:start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:end-7") {
        @include assert {
          @include output {
            @include sm\:end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:top-7") {
        @include assert {
          @include output {
            @include sm\:top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:right-7") {
        @include assert {
          @include output {
            @include sm\:right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:bottom-7") {
        @include assert {
          @include output {
            @include sm\:bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:left-7") {
        @include assert {
          @include output {
            @include sm\:left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-8") {
        @include assert {
          @include output {
            @include sm\:inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 2rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-8") {
        @include assert {
          @include output {
            @include sm\:inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-8") {
        @include assert {
          @include output {
            @include sm\:inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it("sm\:start-8") {
        @include assert {
          @include output {
            @include sm\:start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it("sm\:end-8") {
        @include assert {
          @include output {
            @include sm\:end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it("sm\:top-8") {
        @include assert {
          @include output {
            @include sm\:top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2rem;
            }
          }
        }
      }

      @include it("sm\:right-8") {
        @include assert {
          @include output {
            @include sm\:right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 2rem;
            }
          }
        }
      }

      @include it("sm\:bottom-8") {
        @include assert {
          @include output {
            @include sm\:bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it("sm\:left-8") {
        @include assert {
          @include output {
            @include sm\:left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2rem;
            }
          }
        }
      }

      @include it("sm\:inset-9") {
        @include assert {
          @include output {
            @include sm\:inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-9") {
        @include assert {
          @include output {
            @include sm\:inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-9") {
        @include assert {
          @include output {
            @include sm\:inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:start-9") {
        @include assert {
          @include output {
            @include sm\:start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:end-9") {
        @include assert {
          @include output {
            @include sm\:end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:top-9") {
        @include assert {
          @include output {
            @include sm\:top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:right-9") {
        @include assert {
          @include output {
            @include sm\:right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:bottom-9") {
        @include assert {
          @include output {
            @include sm\:bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:left-9") {
        @include assert {
          @include output {
            @include sm\:left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it("sm\:inset-10") {
        @include assert {
          @include output {
            @include sm\:inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-10") {
        @include assert {
          @include output {
            @include sm\:inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-10") {
        @include assert {
          @include output {
            @include sm\:inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:start-10") {
        @include assert {
          @include output {
            @include sm\:start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:end-10") {
        @include assert {
          @include output {
            @include sm\:end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:top-10") {
        @include assert {
          @include output {
            @include sm\:top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:right-10") {
        @include assert {
          @include output {
            @include sm\:right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:bottom-10") {
        @include assert {
          @include output {
            @include sm\:bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:left-10") {
        @include assert {
          @include output {
            @include sm\:left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-11") {
        @include assert {
          @include output {
            @include sm\:inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-11") {
        @include assert {
          @include output {
            @include sm\:inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-11") {
        @include assert {
          @include output {
            @include sm\:inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:start-11") {
        @include assert {
          @include output {
            @include sm\:start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:end-11") {
        @include assert {
          @include output {
            @include sm\:end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:top-11") {
        @include assert {
          @include output {
            @include sm\:top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:right-11") {
        @include assert {
          @include output {
            @include sm\:right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:bottom-11") {
        @include assert {
          @include output {
            @include sm\:bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:left-11") {
        @include assert {
          @include output {
            @include sm\:left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it("sm\:inset-12") {
        @include assert {
          @include output {
            @include sm\:inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 3rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-12") {
        @include assert {
          @include output {
            @include sm\:inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-12") {
        @include assert {
          @include output {
            @include sm\:inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it("sm\:start-12") {
        @include assert {
          @include output {
            @include sm\:start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it("sm\:end-12") {
        @include assert {
          @include output {
            @include sm\:end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it("sm\:top-12") {
        @include assert {
          @include output {
            @include sm\:top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 3rem;
            }
          }
        }
      }

      @include it("sm\:right-12") {
        @include assert {
          @include output {
            @include sm\:right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 3rem;
            }
          }
        }
      }

      @include it("sm\:bottom-12") {
        @include assert {
          @include output {
            @include sm\:bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it("sm\:left-12") {
        @include assert {
          @include output {
            @include sm\:left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 3rem;
            }
          }
        }
      }

      @include it("sm\:inset-14") {
        @include assert {
          @include output {
            @include sm\:inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-14") {
        @include assert {
          @include output {
            @include sm\:inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-14") {
        @include assert {
          @include output {
            @include sm\:inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:start-14") {
        @include assert {
          @include output {
            @include sm\:start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:end-14") {
        @include assert {
          @include output {
            @include sm\:end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:top-14") {
        @include assert {
          @include output {
            @include sm\:top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:right-14") {
        @include assert {
          @include output {
            @include sm\:right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:bottom-14") {
        @include assert {
          @include output {
            @include sm\:bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:left-14") {
        @include assert {
          @include output {
            @include sm\:left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it("sm\:inset-16") {
        @include assert {
          @include output {
            @include sm\:inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 4rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-16") {
        @include assert {
          @include output {
            @include sm\:inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-16") {
        @include assert {
          @include output {
            @include sm\:inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it("sm\:start-16") {
        @include assert {
          @include output {
            @include sm\:start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it("sm\:end-16") {
        @include assert {
          @include output {
            @include sm\:end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it("sm\:top-16") {
        @include assert {
          @include output {
            @include sm\:top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 4rem;
            }
          }
        }
      }

      @include it("sm\:right-16") {
        @include assert {
          @include output {
            @include sm\:right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 4rem;
            }
          }
        }
      }

      @include it("sm\:bottom-16") {
        @include assert {
          @include output {
            @include sm\:bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it("sm\:left-16") {
        @include assert {
          @include output {
            @include sm\:left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 4rem;
            }
          }
        }
      }

      @include it("sm\:inset-20") {
        @include assert {
          @include output {
            @include sm\:inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 5rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-20") {
        @include assert {
          @include output {
            @include sm\:inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-20") {
        @include assert {
          @include output {
            @include sm\:inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it("sm\:start-20") {
        @include assert {
          @include output {
            @include sm\:start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it("sm\:end-20") {
        @include assert {
          @include output {
            @include sm\:end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it("sm\:top-20") {
        @include assert {
          @include output {
            @include sm\:top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 5rem;
            }
          }
        }
      }

      @include it("sm\:right-20") {
        @include assert {
          @include output {
            @include sm\:right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 5rem;
            }
          }
        }
      }

      @include it("sm\:bottom-20") {
        @include assert {
          @include output {
            @include sm\:bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it("sm\:left-20") {
        @include assert {
          @include output {
            @include sm\:left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 5rem;
            }
          }
        }
      }

      @include it("sm\:inset-24") {
        @include assert {
          @include output {
            @include sm\:inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 6rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-24") {
        @include assert {
          @include output {
            @include sm\:inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-24") {
        @include assert {
          @include output {
            @include sm\:inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it("sm\:start-24") {
        @include assert {
          @include output {
            @include sm\:start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it("sm\:end-24") {
        @include assert {
          @include output {
            @include sm\:end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it("sm\:top-24") {
        @include assert {
          @include output {
            @include sm\:top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 6rem;
            }
          }
        }
      }

      @include it("sm\:right-24") {
        @include assert {
          @include output {
            @include sm\:right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 6rem;
            }
          }
        }
      }

      @include it("sm\:bottom-24") {
        @include assert {
          @include output {
            @include sm\:bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it("sm\:left-24") {
        @include assert {
          @include output {
            @include sm\:left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 6rem;
            }
          }
        }
      }

      @include it("sm\:inset-28") {
        @include assert {
          @include output {
            @include sm\:inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 7rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-28") {
        @include assert {
          @include output {
            @include sm\:inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-28") {
        @include assert {
          @include output {
            @include sm\:inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it("sm\:start-28") {
        @include assert {
          @include output {
            @include sm\:start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it("sm\:end-28") {
        @include assert {
          @include output {
            @include sm\:end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it("sm\:top-28") {
        @include assert {
          @include output {
            @include sm\:top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 7rem;
            }
          }
        }
      }

      @include it("sm\:right-28") {
        @include assert {
          @include output {
            @include sm\:right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 7rem;
            }
          }
        }
      }

      @include it("sm\:bottom-28") {
        @include assert {
          @include output {
            @include sm\:bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it("sm\:left-28") {
        @include assert {
          @include output {
            @include sm\:left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 7rem;
            }
          }
        }
      }

      @include it("sm\:inset-32") {
        @include assert {
          @include output {
            @include sm\:inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 8rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-32") {
        @include assert {
          @include output {
            @include sm\:inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-32") {
        @include assert {
          @include output {
            @include sm\:inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it("sm\:start-32") {
        @include assert {
          @include output {
            @include sm\:start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it("sm\:end-32") {
        @include assert {
          @include output {
            @include sm\:end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it("sm\:top-32") {
        @include assert {
          @include output {
            @include sm\:top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 8rem;
            }
          }
        }
      }

      @include it("sm\:right-32") {
        @include assert {
          @include output {
            @include sm\:right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 8rem;
            }
          }
        }
      }

      @include it("sm\:bottom-32") {
        @include assert {
          @include output {
            @include sm\:bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it("sm\:left-32") {
        @include assert {
          @include output {
            @include sm\:left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 8rem;
            }
          }
        }
      }

      @include it("sm\:inset-36") {
        @include assert {
          @include output {
            @include sm\:inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 9rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-36") {
        @include assert {
          @include output {
            @include sm\:inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-36") {
        @include assert {
          @include output {
            @include sm\:inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it("sm\:start-36") {
        @include assert {
          @include output {
            @include sm\:start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it("sm\:end-36") {
        @include assert {
          @include output {
            @include sm\:end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it("sm\:top-36") {
        @include assert {
          @include output {
            @include sm\:top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 9rem;
            }
          }
        }
      }

      @include it("sm\:right-36") {
        @include assert {
          @include output {
            @include sm\:right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 9rem;
            }
          }
        }
      }

      @include it("sm\:bottom-36") {
        @include assert {
          @include output {
            @include sm\:bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it("sm\:left-36") {
        @include assert {
          @include output {
            @include sm\:left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 9rem;
            }
          }
        }
      }

      @include it("sm\:inset-40") {
        @include assert {
          @include output {
            @include sm\:inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 10rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-40") {
        @include assert {
          @include output {
            @include sm\:inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-40") {
        @include assert {
          @include output {
            @include sm\:inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it("sm\:start-40") {
        @include assert {
          @include output {
            @include sm\:start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it("sm\:end-40") {
        @include assert {
          @include output {
            @include sm\:end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it("sm\:top-40") {
        @include assert {
          @include output {
            @include sm\:top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 10rem;
            }
          }
        }
      }

      @include it("sm\:right-40") {
        @include assert {
          @include output {
            @include sm\:right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 10rem;
            }
          }
        }
      }

      @include it("sm\:bottom-40") {
        @include assert {
          @include output {
            @include sm\:bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it("sm\:left-40") {
        @include assert {
          @include output {
            @include sm\:left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 10rem;
            }
          }
        }
      }

      @include it("sm\:inset-44") {
        @include assert {
          @include output {
            @include sm\:inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 11rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-44") {
        @include assert {
          @include output {
            @include sm\:inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-44") {
        @include assert {
          @include output {
            @include sm\:inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it("sm\:start-44") {
        @include assert {
          @include output {
            @include sm\:start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it("sm\:end-44") {
        @include assert {
          @include output {
            @include sm\:end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it("sm\:top-44") {
        @include assert {
          @include output {
            @include sm\:top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 11rem;
            }
          }
        }
      }

      @include it("sm\:right-44") {
        @include assert {
          @include output {
            @include sm\:right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 11rem;
            }
          }
        }
      }

      @include it("sm\:bottom-44") {
        @include assert {
          @include output {
            @include sm\:bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it("sm\:left-44") {
        @include assert {
          @include output {
            @include sm\:left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 11rem;
            }
          }
        }
      }

      @include it("sm\:inset-48") {
        @include assert {
          @include output {
            @include sm\:inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 12rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-48") {
        @include assert {
          @include output {
            @include sm\:inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-48") {
        @include assert {
          @include output {
            @include sm\:inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it("sm\:start-48") {
        @include assert {
          @include output {
            @include sm\:start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it("sm\:end-48") {
        @include assert {
          @include output {
            @include sm\:end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it("sm\:top-48") {
        @include assert {
          @include output {
            @include sm\:top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 12rem;
            }
          }
        }
      }

      @include it("sm\:right-48") {
        @include assert {
          @include output {
            @include sm\:right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 12rem;
            }
          }
        }
      }

      @include it("sm\:bottom-48") {
        @include assert {
          @include output {
            @include sm\:bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it("sm\:left-48") {
        @include assert {
          @include output {
            @include sm\:left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 12rem;
            }
          }
        }
      }

      @include it("sm\:inset-52") {
        @include assert {
          @include output {
            @include sm\:inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 13rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-52") {
        @include assert {
          @include output {
            @include sm\:inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-52") {
        @include assert {
          @include output {
            @include sm\:inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it("sm\:start-52") {
        @include assert {
          @include output {
            @include sm\:start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it("sm\:end-52") {
        @include assert {
          @include output {
            @include sm\:end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it("sm\:top-52") {
        @include assert {
          @include output {
            @include sm\:top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 13rem;
            }
          }
        }
      }

      @include it("sm\:right-52") {
        @include assert {
          @include output {
            @include sm\:right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 13rem;
            }
          }
        }
      }

      @include it("sm\:bottom-52") {
        @include assert {
          @include output {
            @include sm\:bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it("sm\:left-52") {
        @include assert {
          @include output {
            @include sm\:left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 13rem;
            }
          }
        }
      }

      @include it("sm\:inset-56") {
        @include assert {
          @include output {
            @include sm\:inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 14rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-56") {
        @include assert {
          @include output {
            @include sm\:inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-56") {
        @include assert {
          @include output {
            @include sm\:inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it("sm\:start-56") {
        @include assert {
          @include output {
            @include sm\:start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it("sm\:end-56") {
        @include assert {
          @include output {
            @include sm\:end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it("sm\:top-56") {
        @include assert {
          @include output {
            @include sm\:top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 14rem;
            }
          }
        }
      }

      @include it("sm\:right-56") {
        @include assert {
          @include output {
            @include sm\:right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 14rem;
            }
          }
        }
      }

      @include it("sm\:bottom-56") {
        @include assert {
          @include output {
            @include sm\:bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it("sm\:left-56") {
        @include assert {
          @include output {
            @include sm\:left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 14rem;
            }
          }
        }
      }

      @include it("sm\:inset-60") {
        @include assert {
          @include output {
            @include sm\:inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 15rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-60") {
        @include assert {
          @include output {
            @include sm\:inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-60") {
        @include assert {
          @include output {
            @include sm\:inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it("sm\:start-60") {
        @include assert {
          @include output {
            @include sm\:start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it("sm\:end-60") {
        @include assert {
          @include output {
            @include sm\:end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it("sm\:top-60") {
        @include assert {
          @include output {
            @include sm\:top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 15rem;
            }
          }
        }
      }

      @include it("sm\:right-60") {
        @include assert {
          @include output {
            @include sm\:right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 15rem;
            }
          }
        }
      }

      @include it("sm\:bottom-60") {
        @include assert {
          @include output {
            @include sm\:bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it("sm\:left-60") {
        @include assert {
          @include output {
            @include sm\:left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 15rem;
            }
          }
        }
      }

      @include it("sm\:inset-64") {
        @include assert {
          @include output {
            @include sm\:inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 16rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-64") {
        @include assert {
          @include output {
            @include sm\:inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-64") {
        @include assert {
          @include output {
            @include sm\:inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it("sm\:start-64") {
        @include assert {
          @include output {
            @include sm\:start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it("sm\:end-64") {
        @include assert {
          @include output {
            @include sm\:end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it("sm\:top-64") {
        @include assert {
          @include output {
            @include sm\:top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 16rem;
            }
          }
        }
      }

      @include it("sm\:right-64") {
        @include assert {
          @include output {
            @include sm\:right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 16rem;
            }
          }
        }
      }

      @include it("sm\:bottom-64") {
        @include assert {
          @include output {
            @include sm\:bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it("sm\:left-64") {
        @include assert {
          @include output {
            @include sm\:left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 16rem;
            }
          }
        }
      }

      @include it("sm\:inset-72") {
        @include assert {
          @include output {
            @include sm\:inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 18rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-72") {
        @include assert {
          @include output {
            @include sm\:inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-72") {
        @include assert {
          @include output {
            @include sm\:inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it("sm\:start-72") {
        @include assert {
          @include output {
            @include sm\:start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it("sm\:end-72") {
        @include assert {
          @include output {
            @include sm\:end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it("sm\:top-72") {
        @include assert {
          @include output {
            @include sm\:top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 18rem;
            }
          }
        }
      }

      @include it("sm\:right-72") {
        @include assert {
          @include output {
            @include sm\:right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 18rem;
            }
          }
        }
      }

      @include it("sm\:bottom-72") {
        @include assert {
          @include output {
            @include sm\:bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it("sm\:left-72") {
        @include assert {
          @include output {
            @include sm\:left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 18rem;
            }
          }
        }
      }

      @include it("sm\:inset-80") {
        @include assert {
          @include output {
            @include sm\:inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 20rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-80") {
        @include assert {
          @include output {
            @include sm\:inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-80") {
        @include assert {
          @include output {
            @include sm\:inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it("sm\:start-80") {
        @include assert {
          @include output {
            @include sm\:start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it("sm\:end-80") {
        @include assert {
          @include output {
            @include sm\:end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it("sm\:top-80") {
        @include assert {
          @include output {
            @include sm\:top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 20rem;
            }
          }
        }
      }

      @include it("sm\:right-80") {
        @include assert {
          @include output {
            @include sm\:right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 20rem;
            }
          }
        }
      }

      @include it("sm\:bottom-80") {
        @include assert {
          @include output {
            @include sm\:bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it("sm\:left-80") {
        @include assert {
          @include output {
            @include sm\:left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 20rem;
            }
          }
        }
      }

      @include it("sm\:inset-96") {
        @include assert {
          @include output {
            @include sm\:inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 24rem;
            }
          }
        }
      }

      @include it("sm\:inset-x-96") {
        @include assert {
          @include output {
            @include sm\:inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it("sm\:inset-y-96") {
        @include assert {
          @include output {
            @include sm\:inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it("sm\:start-96") {
        @include assert {
          @include output {
            @include sm\:start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it("sm\:end-96") {
        @include assert {
          @include output {
            @include sm\:end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it("sm\:top-96") {
        @include assert {
          @include output {
            @include sm\:top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 24rem;
            }
          }
        }
      }

      @include it("sm\:right-96") {
        @include assert {
          @include output {
            @include sm\:right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 24rem;
            }
          }
        }
      }

      @include it("sm\:bottom-96") {
        @include assert {
          @include output {
            @include sm\:bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it("sm\:left-96") {
        @include assert {
          @include output {
            @include sm\:left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 24rem;
            }
          }
        }
      }

      @include it("sm\:inset-auto") {
        @include assert {
          @include output {
            @include sm\:inset-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: auto;
            }
          }
        }
      }

      @include it("sm\:inset-1\/2") {
        @include assert {
          @include output {
            @include sm\:inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 50%;
            }
          }
        }
      }

      @include it("sm\:inset-1\/3") {
        @include assert {
          @include output {
            @include sm\:inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:inset-2\/3") {
        @include assert {
          @include output {
            @include sm\:inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:inset-1\/4") {
        @include assert {
          @include output {
            @include sm\:inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 25%;
            }
          }
        }
      }

      @include it("sm\:inset-2\/4") {
        @include assert {
          @include output {
            @include sm\:inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 50%;
            }
          }
        }
      }

      @include it("sm\:inset-3\/4") {
        @include assert {
          @include output {
            @include sm\:inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 75%;
            }
          }
        }
      }

      @include it("sm\:inset-full") {
        @include assert {
          @include output {
            @include sm\:inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 100%;
            }
          }
        }
      }

      @include it("sm\:inset-x-auto") {
        @include assert {
          @include output {
            @include sm\:inset-x-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it("sm\:inset-x-1\/2") {
        @include assert {
          @include output {
            @include sm\:inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("sm\:inset-x-1\/3") {
        @include assert {
          @include output {
            @include sm\:inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:inset-x-2\/3") {
        @include assert {
          @include output {
            @include sm\:inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:inset-x-1\/4") {
        @include assert {
          @include output {
            @include sm\:inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it("sm\:inset-x-2\/4") {
        @include assert {
          @include output {
            @include sm\:inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("sm\:inset-x-3\/4") {
        @include assert {
          @include output {
            @include sm\:inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it("sm\:inset-x-full") {
        @include assert {
          @include output {
            @include sm\:inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it("sm\:inset-y-auto") {
        @include assert {
          @include output {
            @include sm\:inset-y-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it("sm\:inset-y-1\/2") {
        @include assert {
          @include output {
            @include sm\:inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("sm\:inset-y-1\/3") {
        @include assert {
          @include output {
            @include sm\:inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:inset-y-2\/3") {
        @include assert {
          @include output {
            @include sm\:inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:inset-y-1\/4") {
        @include assert {
          @include output {
            @include sm\:inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it("sm\:inset-y-2\/4") {
        @include assert {
          @include output {
            @include sm\:inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("sm\:inset-y-3\/4") {
        @include assert {
          @include output {
            @include sm\:inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it("sm\:inset-y-full") {
        @include assert {
          @include output {
            @include sm\:inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it("sm\:start-auto") {
        @include assert {
          @include output {
            @include sm\:start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it("sm\:start-1\/2") {
        @include assert {
          @include output {
            @include sm\:start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("sm\:start-1\/3") {
        @include assert {
          @include output {
            @include sm\:start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:start-2\/3") {
        @include assert {
          @include output {
            @include sm\:start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:start-1\/4") {
        @include assert {
          @include output {
            @include sm\:start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it("sm\:start-2\/4") {
        @include assert {
          @include output {
            @include sm\:start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("sm\:start-3\/4") {
        @include assert {
          @include output {
            @include sm\:start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it("sm\:start-full") {
        @include assert {
          @include output {
            @include sm\:start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it("sm\:end-auto") {
        @include assert {
          @include output {
            @include sm\:end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it("sm\:end-1\/2") {
        @include assert {
          @include output {
            @include sm\:end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("sm\:end-1\/3") {
        @include assert {
          @include output {
            @include sm\:end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:end-2\/3") {
        @include assert {
          @include output {
            @include sm\:end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:end-1\/4") {
        @include assert {
          @include output {
            @include sm\:end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it("sm\:end-2\/4") {
        @include assert {
          @include output {
            @include sm\:end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("sm\:end-3\/4") {
        @include assert {
          @include output {
            @include sm\:end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it("sm\:end-full") {
        @include assert {
          @include output {
            @include sm\:end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it("sm\:top-auto") {
        @include assert {
          @include output {
            @include sm\:top-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: auto;
            }
          }
        }
      }

      @include it("sm\:top-1\/2") {
        @include assert {
          @include output {
            @include sm\:top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 50%;
            }
          }
        }
      }

      @include it("sm\:top-1\/3") {
        @include assert {
          @include output {
            @include sm\:top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:top-2\/3") {
        @include assert {
          @include output {
            @include sm\:top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:top-1\/4") {
        @include assert {
          @include output {
            @include sm\:top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 25%;
            }
          }
        }
      }

      @include it("sm\:top-2\/4") {
        @include assert {
          @include output {
            @include sm\:top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 50%;
            }
          }
        }
      }

      @include it("sm\:top-3\/4") {
        @include assert {
          @include output {
            @include sm\:top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 75%;
            }
          }
        }
      }

      @include it("sm\:top-full") {
        @include assert {
          @include output {
            @include sm\:top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 100%;
            }
          }
        }
      }

      @include it("sm\:right-auto") {
        @include assert {
          @include output {
            @include sm\:right-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: auto;
            }
          }
        }
      }

      @include it("sm\:right-1\/2") {
        @include assert {
          @include output {
            @include sm\:right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 50%;
            }
          }
        }
      }

      @include it("sm\:right-1\/3") {
        @include assert {
          @include output {
            @include sm\:right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:right-2\/3") {
        @include assert {
          @include output {
            @include sm\:right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:right-1\/4") {
        @include assert {
          @include output {
            @include sm\:right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 25%;
            }
          }
        }
      }

      @include it("sm\:right-2\/4") {
        @include assert {
          @include output {
            @include sm\:right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 50%;
            }
          }
        }
      }

      @include it("sm\:right-3\/4") {
        @include assert {
          @include output {
            @include sm\:right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 75%;
            }
          }
        }
      }

      @include it("sm\:right-full") {
        @include assert {
          @include output {
            @include sm\:right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 100%;
            }
          }
        }
      }

      @include it("sm\:bottom-auto") {
        @include assert {
          @include output {
            @include sm\:bottom-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: auto;
            }
          }
        }
      }

      @include it("sm\:bottom-1\/2") {
        @include assert {
          @include output {
            @include sm\:bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("sm\:bottom-1\/3") {
        @include assert {
          @include output {
            @include sm\:bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:bottom-2\/3") {
        @include assert {
          @include output {
            @include sm\:bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:bottom-1\/4") {
        @include assert {
          @include output {
            @include sm\:bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 25%;
            }
          }
        }
      }

      @include it("sm\:bottom-2\/4") {
        @include assert {
          @include output {
            @include sm\:bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("sm\:bottom-3\/4") {
        @include assert {
          @include output {
            @include sm\:bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 75%;
            }
          }
        }
      }

      @include it("sm\:bottom-full") {
        @include assert {
          @include output {
            @include sm\:bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 100%;
            }
          }
        }
      }

      @include it("sm\:left-auto") {
        @include assert {
          @include output {
            @include sm\:left-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: auto;
            }
          }
        }
      }

      @include it("sm\:left-1\/2") {
        @include assert {
          @include output {
            @include sm\:left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 50%;
            }
          }
        }
      }

      @include it("sm\:left-1\/3") {
        @include assert {
          @include output {
            @include sm\:left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it("sm\:left-2\/3") {
        @include assert {
          @include output {
            @include sm\:left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it("sm\:left-1\/4") {
        @include assert {
          @include output {
            @include sm\:left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 25%;
            }
          }
        }
      }

      @include it("sm\:left-2\/4") {
        @include assert {
          @include output {
            @include sm\:left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 50%;
            }
          }
        }
      }

      @include it("sm\:left-3\/4") {
        @include assert {
          @include output {
            @include sm\:left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 75%;
            }
          }
        }
      }

      @include it("sm\:left-full") {
        @include assert {
          @include output {
            @include sm\:left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 100%;
            }
          }
        }
      }

      @include it("sm\:-inset-0") {
        @include assert {
          @include output {
            @include sm\:-inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 0px;
            }
          }
        }
      }

      @include it("sm\:-inset-x-0") {
        @include assert {
          @include output {
            @include sm\:-inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("sm\:-inset-y-0") {
        @include assert {
          @include output {
            @include sm\:-inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:-start-0") {
        @include assert {
          @include output {
            @include sm\:-start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("sm\:-end-0") {
        @include assert {
          @include output {
            @include sm\:-end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("sm\:-top-0") {
        @include assert {
          @include output {
            @include sm\:-top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 0px;
            }
          }
        }
      }

      @include it("sm\:-right-0") {
        @include assert {
          @include output {
            @include sm\:-right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 0px;
            }
          }
        }
      }

      @include it("sm\:-bottom-0") {
        @include assert {
          @include output {
            @include sm\:-bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("sm\:-left-0") {
        @include assert {
          @include output {
            @include sm\:-left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 0px;
            }
          }
        }
      }

      @include it("sm\:-inset-px") {
        @include assert {
          @include output {
            @include sm\:-inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -1px;
            }
          }
        }
      }

      @include it("sm\:-inset-x-px") {
        @include assert {
          @include output {
            @include sm\:-inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it("sm\:-inset-y-px") {
        @include assert {
          @include output {
            @include sm\:-inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it("sm\:-start-px") {
        @include assert {
          @include output {
            @include sm\:-start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it("sm\:-end-px") {
        @include assert {
          @include output {
            @include sm\:-end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it("sm\:-top-px") {
        @include assert {
          @include output {
            @include sm\:-top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1px;
            }
          }
        }
      }

      @include it("sm\:-right-px") {
        @include assert {
          @include output {
            @include sm\:-right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -1px;
            }
          }
        }
      }

      @include it("sm\:-bottom-px") {
        @include assert {
          @include output {
            @include sm\:-bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -1px;
            }
          }
        }
      }

      @include it("sm\:-left-px") {
        @include assert {
          @include output {
            @include sm\:-left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1px;
            }
          }
        }
      }

      @include it("sm\:-inset-0\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-0\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-0\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-start-0\.5") {
        @include assert {
          @include output {
            @include sm\:-start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-end-0\.5") {
        @include assert {
          @include output {
            @include sm\:-end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-top-0\.5") {
        @include assert {
          @include output {
            @include sm\:-top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-right-0\.5") {
        @include assert {
          @include output {
            @include sm\:-right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-0\.5") {
        @include assert {
          @include output {
            @include sm\:-bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-left-0\.5") {
        @include assert {
          @include output {
            @include sm\:-left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it("sm\:-inset-1") {
        @include assert {
          @include output {
            @include sm\:-inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-1") {
        @include assert {
          @include output {
            @include sm\:-inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-1") {
        @include assert {
          @include output {
            @include sm\:-inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-start-1") {
        @include assert {
          @include output {
            @include sm\:-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-end-1") {
        @include assert {
          @include output {
            @include sm\:-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-top-1") {
        @include assert {
          @include output {
            @include sm\:-top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-right-1") {
        @include assert {
          @include output {
            @include sm\:-right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-1") {
        @include assert {
          @include output {
            @include sm\:-bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-left-1") {
        @include assert {
          @include output {
            @include sm\:-left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-1\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-1\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-1\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-start-1\.5") {
        @include assert {
          @include output {
            @include sm\:-start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-end-1\.5") {
        @include assert {
          @include output {
            @include sm\:-end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-top-1\.5") {
        @include assert {
          @include output {
            @include sm\:-top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-right-1\.5") {
        @include assert {
          @include output {
            @include sm\:-right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-1\.5") {
        @include assert {
          @include output {
            @include sm\:-bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-left-1\.5") {
        @include assert {
          @include output {
            @include sm\:-left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it("sm\:-inset-2") {
        @include assert {
          @include output {
            @include sm\:-inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-2") {
        @include assert {
          @include output {
            @include sm\:-inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-2") {
        @include assert {
          @include output {
            @include sm\:-inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-start-2") {
        @include assert {
          @include output {
            @include sm\:-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-end-2") {
        @include assert {
          @include output {
            @include sm\:-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-top-2") {
        @include assert {
          @include output {
            @include sm\:-top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-right-2") {
        @include assert {
          @include output {
            @include sm\:-right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-2") {
        @include assert {
          @include output {
            @include sm\:-bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-left-2") {
        @include assert {
          @include output {
            @include sm\:-left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-2\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-2\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-2\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-start-2\.5") {
        @include assert {
          @include output {
            @include sm\:-start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-end-2\.5") {
        @include assert {
          @include output {
            @include sm\:-end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-top-2\.5") {
        @include assert {
          @include output {
            @include sm\:-top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-right-2\.5") {
        @include assert {
          @include output {
            @include sm\:-right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-2\.5") {
        @include assert {
          @include output {
            @include sm\:-bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-left-2\.5") {
        @include assert {
          @include output {
            @include sm\:-left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it("sm\:-inset-3") {
        @include assert {
          @include output {
            @include sm\:-inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-3") {
        @include assert {
          @include output {
            @include sm\:-inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-3") {
        @include assert {
          @include output {
            @include sm\:-inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-start-3") {
        @include assert {
          @include output {
            @include sm\:-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-end-3") {
        @include assert {
          @include output {
            @include sm\:-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-top-3") {
        @include assert {
          @include output {
            @include sm\:-top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-right-3") {
        @include assert {
          @include output {
            @include sm\:-right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-3") {
        @include assert {
          @include output {
            @include sm\:-bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-left-3") {
        @include assert {
          @include output {
            @include sm\:-left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-3\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-3\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-3\.5") {
        @include assert {
          @include output {
            @include sm\:-inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-start-3\.5") {
        @include assert {
          @include output {
            @include sm\:-start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-end-3\.5") {
        @include assert {
          @include output {
            @include sm\:-end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-top-3\.5") {
        @include assert {
          @include output {
            @include sm\:-top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-right-3\.5") {
        @include assert {
          @include output {
            @include sm\:-right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-3\.5") {
        @include assert {
          @include output {
            @include sm\:-bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-left-3\.5") {
        @include assert {
          @include output {
            @include sm\:-left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it("sm\:-inset-4") {
        @include assert {
          @include output {
            @include sm\:-inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -1rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-4") {
        @include assert {
          @include output {
            @include sm\:-inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-4") {
        @include assert {
          @include output {
            @include sm\:-inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it("sm\:-start-4") {
        @include assert {
          @include output {
            @include sm\:-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it("sm\:-end-4") {
        @include assert {
          @include output {
            @include sm\:-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it("sm\:-top-4") {
        @include assert {
          @include output {
            @include sm\:-top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1rem;
            }
          }
        }
      }

      @include it("sm\:-right-4") {
        @include assert {
          @include output {
            @include sm\:-right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -1rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-4") {
        @include assert {
          @include output {
            @include sm\:-bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it("sm\:-left-4") {
        @include assert {
          @include output {
            @include sm\:-left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1rem;
            }
          }
        }
      }

      @include it("sm\:-inset-5") {
        @include assert {
          @include output {
            @include sm\:-inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-5") {
        @include assert {
          @include output {
            @include sm\:-inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-5") {
        @include assert {
          @include output {
            @include sm\:-inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-start-5") {
        @include assert {
          @include output {
            @include sm\:-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-end-5") {
        @include assert {
          @include output {
            @include sm\:-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-top-5") {
        @include assert {
          @include output {
            @include sm\:-top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-right-5") {
        @include assert {
          @include output {
            @include sm\:-right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-5") {
        @include assert {
          @include output {
            @include sm\:-bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-left-5") {
        @include assert {
          @include output {
            @include sm\:-left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-6") {
        @include assert {
          @include output {
            @include sm\:-inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-6") {
        @include assert {
          @include output {
            @include sm\:-inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-6") {
        @include assert {
          @include output {
            @include sm\:-inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-start-6") {
        @include assert {
          @include output {
            @include sm\:-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-end-6") {
        @include assert {
          @include output {
            @include sm\:-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-top-6") {
        @include assert {
          @include output {
            @include sm\:-top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-right-6") {
        @include assert {
          @include output {
            @include sm\:-right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-6") {
        @include assert {
          @include output {
            @include sm\:-bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-left-6") {
        @include assert {
          @include output {
            @include sm\:-left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-7") {
        @include assert {
          @include output {
            @include sm\:-inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-7") {
        @include assert {
          @include output {
            @include sm\:-inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-7") {
        @include assert {
          @include output {
            @include sm\:-inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-start-7") {
        @include assert {
          @include output {
            @include sm\:-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-end-7") {
        @include assert {
          @include output {
            @include sm\:-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-top-7") {
        @include assert {
          @include output {
            @include sm\:-top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-right-7") {
        @include assert {
          @include output {
            @include sm\:-right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-7") {
        @include assert {
          @include output {
            @include sm\:-bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-left-7") {
        @include assert {
          @include output {
            @include sm\:-left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-8") {
        @include assert {
          @include output {
            @include sm\:-inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -2rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-8") {
        @include assert {
          @include output {
            @include sm\:-inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-8") {
        @include assert {
          @include output {
            @include sm\:-inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it("sm\:-start-8") {
        @include assert {
          @include output {
            @include sm\:-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it("sm\:-end-8") {
        @include assert {
          @include output {
            @include sm\:-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it("sm\:-top-8") {
        @include assert {
          @include output {
            @include sm\:-top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2rem;
            }
          }
        }
      }

      @include it("sm\:-right-8") {
        @include assert {
          @include output {
            @include sm\:-right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -2rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-8") {
        @include assert {
          @include output {
            @include sm\:-bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it("sm\:-left-8") {
        @include assert {
          @include output {
            @include sm\:-left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2rem;
            }
          }
        }
      }

      @include it("sm\:-inset-9") {
        @include assert {
          @include output {
            @include sm\:-inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-9") {
        @include assert {
          @include output {
            @include sm\:-inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-9") {
        @include assert {
          @include output {
            @include sm\:-inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-start-9") {
        @include assert {
          @include output {
            @include sm\:-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-end-9") {
        @include assert {
          @include output {
            @include sm\:-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-top-9") {
        @include assert {
          @include output {
            @include sm\:-top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-right-9") {
        @include assert {
          @include output {
            @include sm\:-right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-9") {
        @include assert {
          @include output {
            @include sm\:-bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-left-9") {
        @include assert {
          @include output {
            @include sm\:-left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it("sm\:-inset-10") {
        @include assert {
          @include output {
            @include sm\:-inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-10") {
        @include assert {
          @include output {
            @include sm\:-inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-10") {
        @include assert {
          @include output {
            @include sm\:-inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-start-10") {
        @include assert {
          @include output {
            @include sm\:-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-end-10") {
        @include assert {
          @include output {
            @include sm\:-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-top-10") {
        @include assert {
          @include output {
            @include sm\:-top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-right-10") {
        @include assert {
          @include output {
            @include sm\:-right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-10") {
        @include assert {
          @include output {
            @include sm\:-bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-left-10") {
        @include assert {
          @include output {
            @include sm\:-left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-11") {
        @include assert {
          @include output {
            @include sm\:-inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-11") {
        @include assert {
          @include output {
            @include sm\:-inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-11") {
        @include assert {
          @include output {
            @include sm\:-inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-start-11") {
        @include assert {
          @include output {
            @include sm\:-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-end-11") {
        @include assert {
          @include output {
            @include sm\:-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-top-11") {
        @include assert {
          @include output {
            @include sm\:-top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-right-11") {
        @include assert {
          @include output {
            @include sm\:-right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-11") {
        @include assert {
          @include output {
            @include sm\:-bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-left-11") {
        @include assert {
          @include output {
            @include sm\:-left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it("sm\:-inset-12") {
        @include assert {
          @include output {
            @include sm\:-inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -3rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-12") {
        @include assert {
          @include output {
            @include sm\:-inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-12") {
        @include assert {
          @include output {
            @include sm\:-inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it("sm\:-start-12") {
        @include assert {
          @include output {
            @include sm\:-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it("sm\:-end-12") {
        @include assert {
          @include output {
            @include sm\:-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it("sm\:-top-12") {
        @include assert {
          @include output {
            @include sm\:-top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -3rem;
            }
          }
        }
      }

      @include it("sm\:-right-12") {
        @include assert {
          @include output {
            @include sm\:-right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -3rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-12") {
        @include assert {
          @include output {
            @include sm\:-bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it("sm\:-left-12") {
        @include assert {
          @include output {
            @include sm\:-left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -3rem;
            }
          }
        }
      }

      @include it("sm\:-inset-14") {
        @include assert {
          @include output {
            @include sm\:-inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-14") {
        @include assert {
          @include output {
            @include sm\:-inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-14") {
        @include assert {
          @include output {
            @include sm\:-inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-start-14") {
        @include assert {
          @include output {
            @include sm\:-start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-end-14") {
        @include assert {
          @include output {
            @include sm\:-end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-top-14") {
        @include assert {
          @include output {
            @include sm\:-top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-right-14") {
        @include assert {
          @include output {
            @include sm\:-right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-14") {
        @include assert {
          @include output {
            @include sm\:-bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-left-14") {
        @include assert {
          @include output {
            @include sm\:-left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-16") {
        @include assert {
          @include output {
            @include sm\:-inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -4rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-16") {
        @include assert {
          @include output {
            @include sm\:-inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-16") {
        @include assert {
          @include output {
            @include sm\:-inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it("sm\:-start-16") {
        @include assert {
          @include output {
            @include sm\:-start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it("sm\:-end-16") {
        @include assert {
          @include output {
            @include sm\:-end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it("sm\:-top-16") {
        @include assert {
          @include output {
            @include sm\:-top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -4rem;
            }
          }
        }
      }

      @include it("sm\:-right-16") {
        @include assert {
          @include output {
            @include sm\:-right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -4rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-16") {
        @include assert {
          @include output {
            @include sm\:-bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it("sm\:-left-16") {
        @include assert {
          @include output {
            @include sm\:-left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -4rem;
            }
          }
        }
      }

      @include it("sm\:-inset-20") {
        @include assert {
          @include output {
            @include sm\:-inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-20") {
        @include assert {
          @include output {
            @include sm\:-inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-20") {
        @include assert {
          @include output {
            @include sm\:-inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it("sm\:-start-20") {
        @include assert {
          @include output {
            @include sm\:-start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it("sm\:-end-20") {
        @include assert {
          @include output {
            @include sm\:-end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it("sm\:-top-20") {
        @include assert {
          @include output {
            @include sm\:-top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -5rem;
            }
          }
        }
      }

      @include it("sm\:-right-20") {
        @include assert {
          @include output {
            @include sm\:-right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -5rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-20") {
        @include assert {
          @include output {
            @include sm\:-bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it("sm\:-left-20") {
        @include assert {
          @include output {
            @include sm\:-left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -5rem;
            }
          }
        }
      }

      @include it("sm\:-inset-24") {
        @include assert {
          @include output {
            @include sm\:-inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -6rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-24") {
        @include assert {
          @include output {
            @include sm\:-inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-24") {
        @include assert {
          @include output {
            @include sm\:-inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it("sm\:-start-24") {
        @include assert {
          @include output {
            @include sm\:-start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it("sm\:-end-24") {
        @include assert {
          @include output {
            @include sm\:-end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it("sm\:-top-24") {
        @include assert {
          @include output {
            @include sm\:-top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -6rem;
            }
          }
        }
      }

      @include it("sm\:-right-24") {
        @include assert {
          @include output {
            @include sm\:-right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -6rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-24") {
        @include assert {
          @include output {
            @include sm\:-bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it("sm\:-left-24") {
        @include assert {
          @include output {
            @include sm\:-left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -6rem;
            }
          }
        }
      }

      @include it("sm\:-inset-28") {
        @include assert {
          @include output {
            @include sm\:-inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -7rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-28") {
        @include assert {
          @include output {
            @include sm\:-inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-28") {
        @include assert {
          @include output {
            @include sm\:-inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it("sm\:-start-28") {
        @include assert {
          @include output {
            @include sm\:-start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it("sm\:-end-28") {
        @include assert {
          @include output {
            @include sm\:-end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it("sm\:-top-28") {
        @include assert {
          @include output {
            @include sm\:-top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -7rem;
            }
          }
        }
      }

      @include it("sm\:-right-28") {
        @include assert {
          @include output {
            @include sm\:-right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -7rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-28") {
        @include assert {
          @include output {
            @include sm\:-bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it("sm\:-left-28") {
        @include assert {
          @include output {
            @include sm\:-left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -7rem;
            }
          }
        }
      }

      @include it("sm\:-inset-32") {
        @include assert {
          @include output {
            @include sm\:-inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -8rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-32") {
        @include assert {
          @include output {
            @include sm\:-inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-32") {
        @include assert {
          @include output {
            @include sm\:-inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it("sm\:-start-32") {
        @include assert {
          @include output {
            @include sm\:-start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it("sm\:-end-32") {
        @include assert {
          @include output {
            @include sm\:-end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it("sm\:-top-32") {
        @include assert {
          @include output {
            @include sm\:-top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -8rem;
            }
          }
        }
      }

      @include it("sm\:-right-32") {
        @include assert {
          @include output {
            @include sm\:-right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -8rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-32") {
        @include assert {
          @include output {
            @include sm\:-bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it("sm\:-left-32") {
        @include assert {
          @include output {
            @include sm\:-left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -8rem;
            }
          }
        }
      }

      @include it("sm\:-inset-36") {
        @include assert {
          @include output {
            @include sm\:-inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -9rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-36") {
        @include assert {
          @include output {
            @include sm\:-inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-36") {
        @include assert {
          @include output {
            @include sm\:-inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it("sm\:-start-36") {
        @include assert {
          @include output {
            @include sm\:-start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it("sm\:-end-36") {
        @include assert {
          @include output {
            @include sm\:-end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it("sm\:-top-36") {
        @include assert {
          @include output {
            @include sm\:-top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -9rem;
            }
          }
        }
      }

      @include it("sm\:-right-36") {
        @include assert {
          @include output {
            @include sm\:-right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -9rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-36") {
        @include assert {
          @include output {
            @include sm\:-bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it("sm\:-left-36") {
        @include assert {
          @include output {
            @include sm\:-left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -9rem;
            }
          }
        }
      }

      @include it("sm\:-inset-40") {
        @include assert {
          @include output {
            @include sm\:-inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -10rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-40") {
        @include assert {
          @include output {
            @include sm\:-inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-40") {
        @include assert {
          @include output {
            @include sm\:-inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it("sm\:-start-40") {
        @include assert {
          @include output {
            @include sm\:-start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it("sm\:-end-40") {
        @include assert {
          @include output {
            @include sm\:-end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it("sm\:-top-40") {
        @include assert {
          @include output {
            @include sm\:-top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -10rem;
            }
          }
        }
      }

      @include it("sm\:-right-40") {
        @include assert {
          @include output {
            @include sm\:-right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -10rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-40") {
        @include assert {
          @include output {
            @include sm\:-bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it("sm\:-left-40") {
        @include assert {
          @include output {
            @include sm\:-left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -10rem;
            }
          }
        }
      }

      @include it("sm\:-inset-44") {
        @include assert {
          @include output {
            @include sm\:-inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -11rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-44") {
        @include assert {
          @include output {
            @include sm\:-inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-44") {
        @include assert {
          @include output {
            @include sm\:-inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it("sm\:-start-44") {
        @include assert {
          @include output {
            @include sm\:-start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it("sm\:-end-44") {
        @include assert {
          @include output {
            @include sm\:-end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it("sm\:-top-44") {
        @include assert {
          @include output {
            @include sm\:-top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -11rem;
            }
          }
        }
      }

      @include it("sm\:-right-44") {
        @include assert {
          @include output {
            @include sm\:-right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -11rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-44") {
        @include assert {
          @include output {
            @include sm\:-bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it("sm\:-left-44") {
        @include assert {
          @include output {
            @include sm\:-left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -11rem;
            }
          }
        }
      }

      @include it("sm\:-inset-48") {
        @include assert {
          @include output {
            @include sm\:-inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -12rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-48") {
        @include assert {
          @include output {
            @include sm\:-inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-48") {
        @include assert {
          @include output {
            @include sm\:-inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it("sm\:-start-48") {
        @include assert {
          @include output {
            @include sm\:-start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it("sm\:-end-48") {
        @include assert {
          @include output {
            @include sm\:-end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it("sm\:-top-48") {
        @include assert {
          @include output {
            @include sm\:-top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -12rem;
            }
          }
        }
      }

      @include it("sm\:-right-48") {
        @include assert {
          @include output {
            @include sm\:-right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -12rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-48") {
        @include assert {
          @include output {
            @include sm\:-bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it("sm\:-left-48") {
        @include assert {
          @include output {
            @include sm\:-left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -12rem;
            }
          }
        }
      }

      @include it("sm\:-inset-52") {
        @include assert {
          @include output {
            @include sm\:-inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -13rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-52") {
        @include assert {
          @include output {
            @include sm\:-inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-52") {
        @include assert {
          @include output {
            @include sm\:-inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it("sm\:-start-52") {
        @include assert {
          @include output {
            @include sm\:-start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it("sm\:-end-52") {
        @include assert {
          @include output {
            @include sm\:-end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it("sm\:-top-52") {
        @include assert {
          @include output {
            @include sm\:-top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -13rem;
            }
          }
        }
      }

      @include it("sm\:-right-52") {
        @include assert {
          @include output {
            @include sm\:-right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -13rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-52") {
        @include assert {
          @include output {
            @include sm\:-bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it("sm\:-left-52") {
        @include assert {
          @include output {
            @include sm\:-left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -13rem;
            }
          }
        }
      }

      @include it("sm\:-inset-56") {
        @include assert {
          @include output {
            @include sm\:-inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -14rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-56") {
        @include assert {
          @include output {
            @include sm\:-inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-56") {
        @include assert {
          @include output {
            @include sm\:-inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it("sm\:-start-56") {
        @include assert {
          @include output {
            @include sm\:-start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it("sm\:-end-56") {
        @include assert {
          @include output {
            @include sm\:-end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it("sm\:-top-56") {
        @include assert {
          @include output {
            @include sm\:-top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -14rem;
            }
          }
        }
      }

      @include it("sm\:-right-56") {
        @include assert {
          @include output {
            @include sm\:-right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -14rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-56") {
        @include assert {
          @include output {
            @include sm\:-bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it("sm\:-left-56") {
        @include assert {
          @include output {
            @include sm\:-left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -14rem;
            }
          }
        }
      }

      @include it("sm\:-inset-60") {
        @include assert {
          @include output {
            @include sm\:-inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -15rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-60") {
        @include assert {
          @include output {
            @include sm\:-inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-60") {
        @include assert {
          @include output {
            @include sm\:-inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it("sm\:-start-60") {
        @include assert {
          @include output {
            @include sm\:-start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it("sm\:-end-60") {
        @include assert {
          @include output {
            @include sm\:-end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it("sm\:-top-60") {
        @include assert {
          @include output {
            @include sm\:-top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -15rem;
            }
          }
        }
      }

      @include it("sm\:-right-60") {
        @include assert {
          @include output {
            @include sm\:-right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -15rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-60") {
        @include assert {
          @include output {
            @include sm\:-bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it("sm\:-left-60") {
        @include assert {
          @include output {
            @include sm\:-left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -15rem;
            }
          }
        }
      }

      @include it("sm\:-inset-64") {
        @include assert {
          @include output {
            @include sm\:-inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -16rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-64") {
        @include assert {
          @include output {
            @include sm\:-inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-64") {
        @include assert {
          @include output {
            @include sm\:-inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it("sm\:-start-64") {
        @include assert {
          @include output {
            @include sm\:-start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it("sm\:-end-64") {
        @include assert {
          @include output {
            @include sm\:-end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it("sm\:-top-64") {
        @include assert {
          @include output {
            @include sm\:-top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -16rem;
            }
          }
        }
      }

      @include it("sm\:-right-64") {
        @include assert {
          @include output {
            @include sm\:-right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -16rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-64") {
        @include assert {
          @include output {
            @include sm\:-bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it("sm\:-left-64") {
        @include assert {
          @include output {
            @include sm\:-left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -16rem;
            }
          }
        }
      }

      @include it("sm\:-inset-72") {
        @include assert {
          @include output {
            @include sm\:-inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -18rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-72") {
        @include assert {
          @include output {
            @include sm\:-inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-72") {
        @include assert {
          @include output {
            @include sm\:-inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it("sm\:-start-72") {
        @include assert {
          @include output {
            @include sm\:-start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it("sm\:-end-72") {
        @include assert {
          @include output {
            @include sm\:-end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it("sm\:-top-72") {
        @include assert {
          @include output {
            @include sm\:-top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -18rem;
            }
          }
        }
      }

      @include it("sm\:-right-72") {
        @include assert {
          @include output {
            @include sm\:-right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -18rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-72") {
        @include assert {
          @include output {
            @include sm\:-bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it("sm\:-left-72") {
        @include assert {
          @include output {
            @include sm\:-left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -18rem;
            }
          }
        }
      }

      @include it("sm\:-inset-80") {
        @include assert {
          @include output {
            @include sm\:-inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -20rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-80") {
        @include assert {
          @include output {
            @include sm\:-inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-80") {
        @include assert {
          @include output {
            @include sm\:-inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it("sm\:-start-80") {
        @include assert {
          @include output {
            @include sm\:-start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it("sm\:-end-80") {
        @include assert {
          @include output {
            @include sm\:-end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it("sm\:-top-80") {
        @include assert {
          @include output {
            @include sm\:-top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -20rem;
            }
          }
        }
      }

      @include it("sm\:-right-80") {
        @include assert {
          @include output {
            @include sm\:-right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -20rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-80") {
        @include assert {
          @include output {
            @include sm\:-bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it("sm\:-left-80") {
        @include assert {
          @include output {
            @include sm\:-left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -20rem;
            }
          }
        }
      }

      @include it("sm\:-inset-96") {
        @include assert {
          @include output {
            @include sm\:-inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -24rem;
            }
          }
        }
      }

      @include it("sm\:-inset-x-96") {
        @include assert {
          @include output {
            @include sm\:-inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it("sm\:-inset-y-96") {
        @include assert {
          @include output {
            @include sm\:-inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it("sm\:-start-96") {
        @include assert {
          @include output {
            @include sm\:-start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it("sm\:-end-96") {
        @include assert {
          @include output {
            @include sm\:-end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it("sm\:-top-96") {
        @include assert {
          @include output {
            @include sm\:-top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -24rem;
            }
          }
        }
      }

      @include it("sm\:-right-96") {
        @include assert {
          @include output {
            @include sm\:-right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -24rem;
            }
          }
        }
      }

      @include it("sm\:-bottom-96") {
        @include assert {
          @include output {
            @include sm\:-bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it("sm\:-left-96") {
        @include assert {
          @include output {
            @include sm\:-left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -24rem;
            }
          }
        }
      }

      @include it("sm\:-inset-1\/2") {
        @include assert {
          @include output {
            @include sm\:-inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -50%;
            }
          }
        }
      }

      @include it("sm\:-inset-1\/3") {
        @include assert {
          @include output {
            @include sm\:-inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-inset-2\/3") {
        @include assert {
          @include output {
            @include sm\:-inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-inset-1\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -25%;
            }
          }
        }
      }

      @include it("sm\:-inset-2\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -50%;
            }
          }
        }
      }

      @include it("sm\:-inset-3\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -75%;
            }
          }
        }
      }

      @include it("sm\:-inset-full") {
        @include assert {
          @include output {
            @include sm\:-inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -100%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-1\/2") {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-1\/3") {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-2\/3") {
        @include assert {
          @include output {
            @include sm\:-inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-1\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-2\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-3\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it("sm\:-inset-x-full") {
        @include assert {
          @include output {
            @include sm\:-inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-1\/2") {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-1\/3") {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-2\/3") {
        @include assert {
          @include output {
            @include sm\:-inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-1\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-2\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-3\/4") {
        @include assert {
          @include output {
            @include sm\:-inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it("sm\:-inset-y-full") {
        @include assert {
          @include output {
            @include sm\:-inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it("sm\:-start-1\/2") {
        @include assert {
          @include output {
            @include sm\:-start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("sm\:-start-1\/3") {
        @include assert {
          @include output {
            @include sm\:-start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-start-2\/3") {
        @include assert {
          @include output {
            @include sm\:-start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-start-1\/4") {
        @include assert {
          @include output {
            @include sm\:-start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it("sm\:-start-2\/4") {
        @include assert {
          @include output {
            @include sm\:-start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("sm\:-start-3\/4") {
        @include assert {
          @include output {
            @include sm\:-start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it("sm\:-start-full") {
        @include assert {
          @include output {
            @include sm\:-start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it("sm\:-end-1\/2") {
        @include assert {
          @include output {
            @include sm\:-end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("sm\:-end-1\/3") {
        @include assert {
          @include output {
            @include sm\:-end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-end-2\/3") {
        @include assert {
          @include output {
            @include sm\:-end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-end-1\/4") {
        @include assert {
          @include output {
            @include sm\:-end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it("sm\:-end-2\/4") {
        @include assert {
          @include output {
            @include sm\:-end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("sm\:-end-3\/4") {
        @include assert {
          @include output {
            @include sm\:-end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it("sm\:-end-full") {
        @include assert {
          @include output {
            @include sm\:-end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it("sm\:-top-1\/2") {
        @include assert {
          @include output {
            @include sm\:-top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -50%;
            }
          }
        }
      }

      @include it("sm\:-top-1\/3") {
        @include assert {
          @include output {
            @include sm\:-top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-top-2\/3") {
        @include assert {
          @include output {
            @include sm\:-top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-top-1\/4") {
        @include assert {
          @include output {
            @include sm\:-top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -25%;
            }
          }
        }
      }

      @include it("sm\:-top-2\/4") {
        @include assert {
          @include output {
            @include sm\:-top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -50%;
            }
          }
        }
      }

      @include it("sm\:-top-3\/4") {
        @include assert {
          @include output {
            @include sm\:-top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -75%;
            }
          }
        }
      }

      @include it("sm\:-top-full") {
        @include assert {
          @include output {
            @include sm\:-top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -100%;
            }
          }
        }
      }

      @include it("sm\:-right-1\/2") {
        @include assert {
          @include output {
            @include sm\:-right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -50%;
            }
          }
        }
      }

      @include it("sm\:-right-1\/3") {
        @include assert {
          @include output {
            @include sm\:-right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-right-2\/3") {
        @include assert {
          @include output {
            @include sm\:-right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-right-1\/4") {
        @include assert {
          @include output {
            @include sm\:-right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -25%;
            }
          }
        }
      }

      @include it("sm\:-right-2\/4") {
        @include assert {
          @include output {
            @include sm\:-right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -50%;
            }
          }
        }
      }

      @include it("sm\:-right-3\/4") {
        @include assert {
          @include output {
            @include sm\:-right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -75%;
            }
          }
        }
      }

      @include it("sm\:-right-full") {
        @include assert {
          @include output {
            @include sm\:-right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -100%;
            }
          }
        }
      }

      @include it("sm\:-bottom-1\/2") {
        @include assert {
          @include output {
            @include sm\:-bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("sm\:-bottom-1\/3") {
        @include assert {
          @include output {
            @include sm\:-bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-bottom-2\/3") {
        @include assert {
          @include output {
            @include sm\:-bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-bottom-1\/4") {
        @include assert {
          @include output {
            @include sm\:-bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -25%;
            }
          }
        }
      }

      @include it("sm\:-bottom-2\/4") {
        @include assert {
          @include output {
            @include sm\:-bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("sm\:-bottom-3\/4") {
        @include assert {
          @include output {
            @include sm\:-bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -75%;
            }
          }
        }
      }

      @include it("sm\:-bottom-full") {
        @include assert {
          @include output {
            @include sm\:-bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -100%;
            }
          }
        }
      }

      @include it("sm\:-left-1\/2") {
        @include assert {
          @include output {
            @include sm\:-left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -50%;
            }
          }
        }
      }

      @include it("sm\:-left-1\/3") {
        @include assert {
          @include output {
            @include sm\:-left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it("sm\:-left-2\/3") {
        @include assert {
          @include output {
            @include sm\:-left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it("sm\:-left-1\/4") {
        @include assert {
          @include output {
            @include sm\:-left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -25%;
            }
          }
        }
      }

      @include it("sm\:-left-2\/4") {
        @include assert {
          @include output {
            @include sm\:-left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -50%;
            }
          }
        }
      }

      @include it("sm\:-left-3\/4") {
        @include assert {
          @include output {
            @include sm\:-left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -75%;
            }
          }
        }
      }

      @include it("sm\:-left-full") {
        @include assert {
          @include output {
            @include sm\:-left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -100%;
            }
          }
        }
      }

      @include it("md\:inset-0") {
        @include assert {
          @include output {
            @include md\:inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0px;
            }
          }
        }
      }

      @include it("md\:inset-x-0") {
        @include assert {
          @include output {
            @include md\:inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("md\:inset-y-0") {
        @include assert {
          @include output {
            @include md\:inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("md\:start-0") {
        @include assert {
          @include output {
            @include md\:start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("md\:end-0") {
        @include assert {
          @include output {
            @include md\:end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("md\:top-0") {
        @include assert {
          @include output {
            @include md\:top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0px;
            }
          }
        }
      }

      @include it("md\:right-0") {
        @include assert {
          @include output {
            @include md\:right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0px;
            }
          }
        }
      }

      @include it("md\:bottom-0") {
        @include assert {
          @include output {
            @include md\:bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("md\:left-0") {
        @include assert {
          @include output {
            @include md\:left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0px;
            }
          }
        }
      }

      @include it("md\:inset-px") {
        @include assert {
          @include output {
            @include md\:inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 1px;
            }
          }
        }
      }

      @include it("md\:inset-x-px") {
        @include assert {
          @include output {
            @include md\:inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it("md\:inset-y-px") {
        @include assert {
          @include output {
            @include md\:inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it("md\:start-px") {
        @include assert {
          @include output {
            @include md\:start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it("md\:end-px") {
        @include assert {
          @include output {
            @include md\:end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it("md\:top-px") {
        @include assert {
          @include output {
            @include md\:top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1px;
            }
          }
        }
      }

      @include it("md\:right-px") {
        @include assert {
          @include output {
            @include md\:right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 1px;
            }
          }
        }
      }

      @include it("md\:bottom-px") {
        @include assert {
          @include output {
            @include md\:bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 1px;
            }
          }
        }
      }

      @include it("md\:left-px") {
        @include assert {
          @include output {
            @include md\:left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1px;
            }
          }
        }
      }

      @include it("md\:inset-0\.5") {
        @include assert {
          @include output {
            @include md\:inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it("md\:inset-x-0\.5") {
        @include assert {
          @include output {
            @include md\:inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it("md\:inset-y-0\.5") {
        @include assert {
          @include output {
            @include md\:inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("md\:start-0\.5") {
        @include assert {
          @include output {
            @include md\:start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("md\:end-0\.5") {
        @include assert {
          @include output {
            @include md\:end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("md\:top-0\.5") {
        @include assert {
          @include output {
            @include md\:top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it("md\:right-0\.5") {
        @include assert {
          @include output {
            @include md\:right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it("md\:bottom-0\.5") {
        @include assert {
          @include output {
            @include md\:bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("md\:left-0\.5") {
        @include assert {
          @include output {
            @include md\:left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it("md\:inset-1") {
        @include assert {
          @include output {
            @include md\:inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it("md\:inset-x-1") {
        @include assert {
          @include output {
            @include md\:inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it("md\:inset-y-1") {
        @include assert {
          @include output {
            @include md\:inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("md\:start-1") {
        @include assert {
          @include output {
            @include md\:start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("md\:end-1") {
        @include assert {
          @include output {
            @include md\:end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("md\:top-1") {
        @include assert {
          @include output {
            @include md\:top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it("md\:right-1") {
        @include assert {
          @include output {
            @include md\:right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it("md\:bottom-1") {
        @include assert {
          @include output {
            @include md\:bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("md\:left-1") {
        @include assert {
          @include output {
            @include md\:left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it("md\:inset-1\.5") {
        @include assert {
          @include output {
            @include md\:inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it("md\:inset-x-1\.5") {
        @include assert {
          @include output {
            @include md\:inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it("md\:inset-y-1\.5") {
        @include assert {
          @include output {
            @include md\:inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("md\:start-1\.5") {
        @include assert {
          @include output {
            @include md\:start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("md\:end-1\.5") {
        @include assert {
          @include output {
            @include md\:end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("md\:top-1\.5") {
        @include assert {
          @include output {
            @include md\:top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it("md\:right-1\.5") {
        @include assert {
          @include output {
            @include md\:right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it("md\:bottom-1\.5") {
        @include assert {
          @include output {
            @include md\:bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("md\:left-1\.5") {
        @include assert {
          @include output {
            @include md\:left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it("md\:inset-2") {
        @include assert {
          @include output {
            @include md\:inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it("md\:inset-x-2") {
        @include assert {
          @include output {
            @include md\:inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it("md\:inset-y-2") {
        @include assert {
          @include output {
            @include md\:inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("md\:start-2") {
        @include assert {
          @include output {
            @include md\:start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("md\:end-2") {
        @include assert {
          @include output {
            @include md\:end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("md\:top-2") {
        @include assert {
          @include output {
            @include md\:top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it("md\:right-2") {
        @include assert {
          @include output {
            @include md\:right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it("md\:bottom-2") {
        @include assert {
          @include output {
            @include md\:bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("md\:left-2") {
        @include assert {
          @include output {
            @include md\:left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it("md\:inset-2\.5") {
        @include assert {
          @include output {
            @include md\:inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it("md\:inset-x-2\.5") {
        @include assert {
          @include output {
            @include md\:inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it("md\:inset-y-2\.5") {
        @include assert {
          @include output {
            @include md\:inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("md\:start-2\.5") {
        @include assert {
          @include output {
            @include md\:start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("md\:end-2\.5") {
        @include assert {
          @include output {
            @include md\:end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("md\:top-2\.5") {
        @include assert {
          @include output {
            @include md\:top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it("md\:right-2\.5") {
        @include assert {
          @include output {
            @include md\:right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it("md\:bottom-2\.5") {
        @include assert {
          @include output {
            @include md\:bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("md\:left-2\.5") {
        @include assert {
          @include output {
            @include md\:left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it("md\:inset-3") {
        @include assert {
          @include output {
            @include md\:inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it("md\:inset-x-3") {
        @include assert {
          @include output {
            @include md\:inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it("md\:inset-y-3") {
        @include assert {
          @include output {
            @include md\:inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("md\:start-3") {
        @include assert {
          @include output {
            @include md\:start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("md\:end-3") {
        @include assert {
          @include output {
            @include md\:end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("md\:top-3") {
        @include assert {
          @include output {
            @include md\:top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it("md\:right-3") {
        @include assert {
          @include output {
            @include md\:right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it("md\:bottom-3") {
        @include assert {
          @include output {
            @include md\:bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("md\:left-3") {
        @include assert {
          @include output {
            @include md\:left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it("md\:inset-3\.5") {
        @include assert {
          @include output {
            @include md\:inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it("md\:inset-x-3\.5") {
        @include assert {
          @include output {
            @include md\:inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it("md\:inset-y-3\.5") {
        @include assert {
          @include output {
            @include md\:inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("md\:start-3\.5") {
        @include assert {
          @include output {
            @include md\:start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("md\:end-3\.5") {
        @include assert {
          @include output {
            @include md\:end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("md\:top-3\.5") {
        @include assert {
          @include output {
            @include md\:top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it("md\:right-3\.5") {
        @include assert {
          @include output {
            @include md\:right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it("md\:bottom-3\.5") {
        @include assert {
          @include output {
            @include md\:bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("md\:left-3\.5") {
        @include assert {
          @include output {
            @include md\:left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it("md\:inset-4") {
        @include assert {
          @include output {
            @include md\:inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 1rem;
            }
          }
        }
      }

      @include it("md\:inset-x-4") {
        @include assert {
          @include output {
            @include md\:inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it("md\:inset-y-4") {
        @include assert {
          @include output {
            @include md\:inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it("md\:start-4") {
        @include assert {
          @include output {
            @include md\:start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it("md\:end-4") {
        @include assert {
          @include output {
            @include md\:end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it("md\:top-4") {
        @include assert {
          @include output {
            @include md\:top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1rem;
            }
          }
        }
      }

      @include it("md\:right-4") {
        @include assert {
          @include output {
            @include md\:right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 1rem;
            }
          }
        }
      }

      @include it("md\:bottom-4") {
        @include assert {
          @include output {
            @include md\:bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it("md\:left-4") {
        @include assert {
          @include output {
            @include md\:left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1rem;
            }
          }
        }
      }

      @include it("md\:inset-5") {
        @include assert {
          @include output {
            @include md\:inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it("md\:inset-x-5") {
        @include assert {
          @include output {
            @include md\:inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it("md\:inset-y-5") {
        @include assert {
          @include output {
            @include md\:inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("md\:start-5") {
        @include assert {
          @include output {
            @include md\:start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("md\:end-5") {
        @include assert {
          @include output {
            @include md\:end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("md\:top-5") {
        @include assert {
          @include output {
            @include md\:top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it("md\:right-5") {
        @include assert {
          @include output {
            @include md\:right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it("md\:bottom-5") {
        @include assert {
          @include output {
            @include md\:bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("md\:left-5") {
        @include assert {
          @include output {
            @include md\:left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it("md\:inset-6") {
        @include assert {
          @include output {
            @include md\:inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it("md\:inset-x-6") {
        @include assert {
          @include output {
            @include md\:inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it("md\:inset-y-6") {
        @include assert {
          @include output {
            @include md\:inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("md\:start-6") {
        @include assert {
          @include output {
            @include md\:start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("md\:end-6") {
        @include assert {
          @include output {
            @include md\:end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("md\:top-6") {
        @include assert {
          @include output {
            @include md\:top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it("md\:right-6") {
        @include assert {
          @include output {
            @include md\:right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it("md\:bottom-6") {
        @include assert {
          @include output {
            @include md\:bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("md\:left-6") {
        @include assert {
          @include output {
            @include md\:left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it("md\:inset-7") {
        @include assert {
          @include output {
            @include md\:inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it("md\:inset-x-7") {
        @include assert {
          @include output {
            @include md\:inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it("md\:inset-y-7") {
        @include assert {
          @include output {
            @include md\:inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("md\:start-7") {
        @include assert {
          @include output {
            @include md\:start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("md\:end-7") {
        @include assert {
          @include output {
            @include md\:end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("md\:top-7") {
        @include assert {
          @include output {
            @include md\:top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it("md\:right-7") {
        @include assert {
          @include output {
            @include md\:right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it("md\:bottom-7") {
        @include assert {
          @include output {
            @include md\:bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("md\:left-7") {
        @include assert {
          @include output {
            @include md\:left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it("md\:inset-8") {
        @include assert {
          @include output {
            @include md\:inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 2rem;
            }
          }
        }
      }

      @include it("md\:inset-x-8") {
        @include assert {
          @include output {
            @include md\:inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it("md\:inset-y-8") {
        @include assert {
          @include output {
            @include md\:inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it("md\:start-8") {
        @include assert {
          @include output {
            @include md\:start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it("md\:end-8") {
        @include assert {
          @include output {
            @include md\:end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it("md\:top-8") {
        @include assert {
          @include output {
            @include md\:top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2rem;
            }
          }
        }
      }

      @include it("md\:right-8") {
        @include assert {
          @include output {
            @include md\:right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 2rem;
            }
          }
        }
      }

      @include it("md\:bottom-8") {
        @include assert {
          @include output {
            @include md\:bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it("md\:left-8") {
        @include assert {
          @include output {
            @include md\:left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2rem;
            }
          }
        }
      }

      @include it("md\:inset-9") {
        @include assert {
          @include output {
            @include md\:inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it("md\:inset-x-9") {
        @include assert {
          @include output {
            @include md\:inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it("md\:inset-y-9") {
        @include assert {
          @include output {
            @include md\:inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("md\:start-9") {
        @include assert {
          @include output {
            @include md\:start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("md\:end-9") {
        @include assert {
          @include output {
            @include md\:end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("md\:top-9") {
        @include assert {
          @include output {
            @include md\:top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it("md\:right-9") {
        @include assert {
          @include output {
            @include md\:right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it("md\:bottom-9") {
        @include assert {
          @include output {
            @include md\:bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("md\:left-9") {
        @include assert {
          @include output {
            @include md\:left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it("md\:inset-10") {
        @include assert {
          @include output {
            @include md\:inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it("md\:inset-x-10") {
        @include assert {
          @include output {
            @include md\:inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it("md\:inset-y-10") {
        @include assert {
          @include output {
            @include md\:inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("md\:start-10") {
        @include assert {
          @include output {
            @include md\:start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("md\:end-10") {
        @include assert {
          @include output {
            @include md\:end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("md\:top-10") {
        @include assert {
          @include output {
            @include md\:top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it("md\:right-10") {
        @include assert {
          @include output {
            @include md\:right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it("md\:bottom-10") {
        @include assert {
          @include output {
            @include md\:bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("md\:left-10") {
        @include assert {
          @include output {
            @include md\:left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it("md\:inset-11") {
        @include assert {
          @include output {
            @include md\:inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it("md\:inset-x-11") {
        @include assert {
          @include output {
            @include md\:inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it("md\:inset-y-11") {
        @include assert {
          @include output {
            @include md\:inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("md\:start-11") {
        @include assert {
          @include output {
            @include md\:start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("md\:end-11") {
        @include assert {
          @include output {
            @include md\:end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("md\:top-11") {
        @include assert {
          @include output {
            @include md\:top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it("md\:right-11") {
        @include assert {
          @include output {
            @include md\:right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it("md\:bottom-11") {
        @include assert {
          @include output {
            @include md\:bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("md\:left-11") {
        @include assert {
          @include output {
            @include md\:left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it("md\:inset-12") {
        @include assert {
          @include output {
            @include md\:inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 3rem;
            }
          }
        }
      }

      @include it("md\:inset-x-12") {
        @include assert {
          @include output {
            @include md\:inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it("md\:inset-y-12") {
        @include assert {
          @include output {
            @include md\:inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it("md\:start-12") {
        @include assert {
          @include output {
            @include md\:start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it("md\:end-12") {
        @include assert {
          @include output {
            @include md\:end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it("md\:top-12") {
        @include assert {
          @include output {
            @include md\:top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 3rem;
            }
          }
        }
      }

      @include it("md\:right-12") {
        @include assert {
          @include output {
            @include md\:right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 3rem;
            }
          }
        }
      }

      @include it("md\:bottom-12") {
        @include assert {
          @include output {
            @include md\:bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it("md\:left-12") {
        @include assert {
          @include output {
            @include md\:left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 3rem;
            }
          }
        }
      }

      @include it("md\:inset-14") {
        @include assert {
          @include output {
            @include md\:inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it("md\:inset-x-14") {
        @include assert {
          @include output {
            @include md\:inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it("md\:inset-y-14") {
        @include assert {
          @include output {
            @include md\:inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("md\:start-14") {
        @include assert {
          @include output {
            @include md\:start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("md\:end-14") {
        @include assert {
          @include output {
            @include md\:end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("md\:top-14") {
        @include assert {
          @include output {
            @include md\:top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it("md\:right-14") {
        @include assert {
          @include output {
            @include md\:right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it("md\:bottom-14") {
        @include assert {
          @include output {
            @include md\:bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("md\:left-14") {
        @include assert {
          @include output {
            @include md\:left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it("md\:inset-16") {
        @include assert {
          @include output {
            @include md\:inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 4rem;
            }
          }
        }
      }

      @include it("md\:inset-x-16") {
        @include assert {
          @include output {
            @include md\:inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it("md\:inset-y-16") {
        @include assert {
          @include output {
            @include md\:inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it("md\:start-16") {
        @include assert {
          @include output {
            @include md\:start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it("md\:end-16") {
        @include assert {
          @include output {
            @include md\:end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it("md\:top-16") {
        @include assert {
          @include output {
            @include md\:top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 4rem;
            }
          }
        }
      }

      @include it("md\:right-16") {
        @include assert {
          @include output {
            @include md\:right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 4rem;
            }
          }
        }
      }

      @include it("md\:bottom-16") {
        @include assert {
          @include output {
            @include md\:bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it("md\:left-16") {
        @include assert {
          @include output {
            @include md\:left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 4rem;
            }
          }
        }
      }

      @include it("md\:inset-20") {
        @include assert {
          @include output {
            @include md\:inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 5rem;
            }
          }
        }
      }

      @include it("md\:inset-x-20") {
        @include assert {
          @include output {
            @include md\:inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it("md\:inset-y-20") {
        @include assert {
          @include output {
            @include md\:inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it("md\:start-20") {
        @include assert {
          @include output {
            @include md\:start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it("md\:end-20") {
        @include assert {
          @include output {
            @include md\:end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it("md\:top-20") {
        @include assert {
          @include output {
            @include md\:top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 5rem;
            }
          }
        }
      }

      @include it("md\:right-20") {
        @include assert {
          @include output {
            @include md\:right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 5rem;
            }
          }
        }
      }

      @include it("md\:bottom-20") {
        @include assert {
          @include output {
            @include md\:bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it("md\:left-20") {
        @include assert {
          @include output {
            @include md\:left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 5rem;
            }
          }
        }
      }

      @include it("md\:inset-24") {
        @include assert {
          @include output {
            @include md\:inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 6rem;
            }
          }
        }
      }

      @include it("md\:inset-x-24") {
        @include assert {
          @include output {
            @include md\:inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it("md\:inset-y-24") {
        @include assert {
          @include output {
            @include md\:inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it("md\:start-24") {
        @include assert {
          @include output {
            @include md\:start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it("md\:end-24") {
        @include assert {
          @include output {
            @include md\:end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it("md\:top-24") {
        @include assert {
          @include output {
            @include md\:top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 6rem;
            }
          }
        }
      }

      @include it("md\:right-24") {
        @include assert {
          @include output {
            @include md\:right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 6rem;
            }
          }
        }
      }

      @include it("md\:bottom-24") {
        @include assert {
          @include output {
            @include md\:bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it("md\:left-24") {
        @include assert {
          @include output {
            @include md\:left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 6rem;
            }
          }
        }
      }

      @include it("md\:inset-28") {
        @include assert {
          @include output {
            @include md\:inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 7rem;
            }
          }
        }
      }

      @include it("md\:inset-x-28") {
        @include assert {
          @include output {
            @include md\:inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it("md\:inset-y-28") {
        @include assert {
          @include output {
            @include md\:inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it("md\:start-28") {
        @include assert {
          @include output {
            @include md\:start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it("md\:end-28") {
        @include assert {
          @include output {
            @include md\:end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it("md\:top-28") {
        @include assert {
          @include output {
            @include md\:top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 7rem;
            }
          }
        }
      }

      @include it("md\:right-28") {
        @include assert {
          @include output {
            @include md\:right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 7rem;
            }
          }
        }
      }

      @include it("md\:bottom-28") {
        @include assert {
          @include output {
            @include md\:bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it("md\:left-28") {
        @include assert {
          @include output {
            @include md\:left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 7rem;
            }
          }
        }
      }

      @include it("md\:inset-32") {
        @include assert {
          @include output {
            @include md\:inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 8rem;
            }
          }
        }
      }

      @include it("md\:inset-x-32") {
        @include assert {
          @include output {
            @include md\:inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it("md\:inset-y-32") {
        @include assert {
          @include output {
            @include md\:inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it("md\:start-32") {
        @include assert {
          @include output {
            @include md\:start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it("md\:end-32") {
        @include assert {
          @include output {
            @include md\:end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it("md\:top-32") {
        @include assert {
          @include output {
            @include md\:top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 8rem;
            }
          }
        }
      }

      @include it("md\:right-32") {
        @include assert {
          @include output {
            @include md\:right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 8rem;
            }
          }
        }
      }

      @include it("md\:bottom-32") {
        @include assert {
          @include output {
            @include md\:bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it("md\:left-32") {
        @include assert {
          @include output {
            @include md\:left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 8rem;
            }
          }
        }
      }

      @include it("md\:inset-36") {
        @include assert {
          @include output {
            @include md\:inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 9rem;
            }
          }
        }
      }

      @include it("md\:inset-x-36") {
        @include assert {
          @include output {
            @include md\:inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it("md\:inset-y-36") {
        @include assert {
          @include output {
            @include md\:inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it("md\:start-36") {
        @include assert {
          @include output {
            @include md\:start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it("md\:end-36") {
        @include assert {
          @include output {
            @include md\:end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it("md\:top-36") {
        @include assert {
          @include output {
            @include md\:top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 9rem;
            }
          }
        }
      }

      @include it("md\:right-36") {
        @include assert {
          @include output {
            @include md\:right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 9rem;
            }
          }
        }
      }

      @include it("md\:bottom-36") {
        @include assert {
          @include output {
            @include md\:bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it("md\:left-36") {
        @include assert {
          @include output {
            @include md\:left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 9rem;
            }
          }
        }
      }

      @include it("md\:inset-40") {
        @include assert {
          @include output {
            @include md\:inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 10rem;
            }
          }
        }
      }

      @include it("md\:inset-x-40") {
        @include assert {
          @include output {
            @include md\:inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it("md\:inset-y-40") {
        @include assert {
          @include output {
            @include md\:inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it("md\:start-40") {
        @include assert {
          @include output {
            @include md\:start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it("md\:end-40") {
        @include assert {
          @include output {
            @include md\:end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it("md\:top-40") {
        @include assert {
          @include output {
            @include md\:top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 10rem;
            }
          }
        }
      }

      @include it("md\:right-40") {
        @include assert {
          @include output {
            @include md\:right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 10rem;
            }
          }
        }
      }

      @include it("md\:bottom-40") {
        @include assert {
          @include output {
            @include md\:bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it("md\:left-40") {
        @include assert {
          @include output {
            @include md\:left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 10rem;
            }
          }
        }
      }

      @include it("md\:inset-44") {
        @include assert {
          @include output {
            @include md\:inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 11rem;
            }
          }
        }
      }

      @include it("md\:inset-x-44") {
        @include assert {
          @include output {
            @include md\:inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it("md\:inset-y-44") {
        @include assert {
          @include output {
            @include md\:inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it("md\:start-44") {
        @include assert {
          @include output {
            @include md\:start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it("md\:end-44") {
        @include assert {
          @include output {
            @include md\:end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it("md\:top-44") {
        @include assert {
          @include output {
            @include md\:top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 11rem;
            }
          }
        }
      }

      @include it("md\:right-44") {
        @include assert {
          @include output {
            @include md\:right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 11rem;
            }
          }
        }
      }

      @include it("md\:bottom-44") {
        @include assert {
          @include output {
            @include md\:bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it("md\:left-44") {
        @include assert {
          @include output {
            @include md\:left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 11rem;
            }
          }
        }
      }

      @include it("md\:inset-48") {
        @include assert {
          @include output {
            @include md\:inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 12rem;
            }
          }
        }
      }

      @include it("md\:inset-x-48") {
        @include assert {
          @include output {
            @include md\:inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it("md\:inset-y-48") {
        @include assert {
          @include output {
            @include md\:inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it("md\:start-48") {
        @include assert {
          @include output {
            @include md\:start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it("md\:end-48") {
        @include assert {
          @include output {
            @include md\:end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it("md\:top-48") {
        @include assert {
          @include output {
            @include md\:top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 12rem;
            }
          }
        }
      }

      @include it("md\:right-48") {
        @include assert {
          @include output {
            @include md\:right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 12rem;
            }
          }
        }
      }

      @include it("md\:bottom-48") {
        @include assert {
          @include output {
            @include md\:bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it("md\:left-48") {
        @include assert {
          @include output {
            @include md\:left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 12rem;
            }
          }
        }
      }

      @include it("md\:inset-52") {
        @include assert {
          @include output {
            @include md\:inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 13rem;
            }
          }
        }
      }

      @include it("md\:inset-x-52") {
        @include assert {
          @include output {
            @include md\:inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it("md\:inset-y-52") {
        @include assert {
          @include output {
            @include md\:inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it("md\:start-52") {
        @include assert {
          @include output {
            @include md\:start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it("md\:end-52") {
        @include assert {
          @include output {
            @include md\:end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it("md\:top-52") {
        @include assert {
          @include output {
            @include md\:top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 13rem;
            }
          }
        }
      }

      @include it("md\:right-52") {
        @include assert {
          @include output {
            @include md\:right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 13rem;
            }
          }
        }
      }

      @include it("md\:bottom-52") {
        @include assert {
          @include output {
            @include md\:bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it("md\:left-52") {
        @include assert {
          @include output {
            @include md\:left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 13rem;
            }
          }
        }
      }

      @include it("md\:inset-56") {
        @include assert {
          @include output {
            @include md\:inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 14rem;
            }
          }
        }
      }

      @include it("md\:inset-x-56") {
        @include assert {
          @include output {
            @include md\:inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it("md\:inset-y-56") {
        @include assert {
          @include output {
            @include md\:inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it("md\:start-56") {
        @include assert {
          @include output {
            @include md\:start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it("md\:end-56") {
        @include assert {
          @include output {
            @include md\:end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it("md\:top-56") {
        @include assert {
          @include output {
            @include md\:top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 14rem;
            }
          }
        }
      }

      @include it("md\:right-56") {
        @include assert {
          @include output {
            @include md\:right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 14rem;
            }
          }
        }
      }

      @include it("md\:bottom-56") {
        @include assert {
          @include output {
            @include md\:bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it("md\:left-56") {
        @include assert {
          @include output {
            @include md\:left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 14rem;
            }
          }
        }
      }

      @include it("md\:inset-60") {
        @include assert {
          @include output {
            @include md\:inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 15rem;
            }
          }
        }
      }

      @include it("md\:inset-x-60") {
        @include assert {
          @include output {
            @include md\:inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it("md\:inset-y-60") {
        @include assert {
          @include output {
            @include md\:inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it("md\:start-60") {
        @include assert {
          @include output {
            @include md\:start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it("md\:end-60") {
        @include assert {
          @include output {
            @include md\:end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it("md\:top-60") {
        @include assert {
          @include output {
            @include md\:top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 15rem;
            }
          }
        }
      }

      @include it("md\:right-60") {
        @include assert {
          @include output {
            @include md\:right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 15rem;
            }
          }
        }
      }

      @include it("md\:bottom-60") {
        @include assert {
          @include output {
            @include md\:bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it("md\:left-60") {
        @include assert {
          @include output {
            @include md\:left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 15rem;
            }
          }
        }
      }

      @include it("md\:inset-64") {
        @include assert {
          @include output {
            @include md\:inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 16rem;
            }
          }
        }
      }

      @include it("md\:inset-x-64") {
        @include assert {
          @include output {
            @include md\:inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it("md\:inset-y-64") {
        @include assert {
          @include output {
            @include md\:inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it("md\:start-64") {
        @include assert {
          @include output {
            @include md\:start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it("md\:end-64") {
        @include assert {
          @include output {
            @include md\:end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it("md\:top-64") {
        @include assert {
          @include output {
            @include md\:top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 16rem;
            }
          }
        }
      }

      @include it("md\:right-64") {
        @include assert {
          @include output {
            @include md\:right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 16rem;
            }
          }
        }
      }

      @include it("md\:bottom-64") {
        @include assert {
          @include output {
            @include md\:bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it("md\:left-64") {
        @include assert {
          @include output {
            @include md\:left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 16rem;
            }
          }
        }
      }

      @include it("md\:inset-72") {
        @include assert {
          @include output {
            @include md\:inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 18rem;
            }
          }
        }
      }

      @include it("md\:inset-x-72") {
        @include assert {
          @include output {
            @include md\:inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it("md\:inset-y-72") {
        @include assert {
          @include output {
            @include md\:inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it("md\:start-72") {
        @include assert {
          @include output {
            @include md\:start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it("md\:end-72") {
        @include assert {
          @include output {
            @include md\:end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it("md\:top-72") {
        @include assert {
          @include output {
            @include md\:top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 18rem;
            }
          }
        }
      }

      @include it("md\:right-72") {
        @include assert {
          @include output {
            @include md\:right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 18rem;
            }
          }
        }
      }

      @include it("md\:bottom-72") {
        @include assert {
          @include output {
            @include md\:bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it("md\:left-72") {
        @include assert {
          @include output {
            @include md\:left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 18rem;
            }
          }
        }
      }

      @include it("md\:inset-80") {
        @include assert {
          @include output {
            @include md\:inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 20rem;
            }
          }
        }
      }

      @include it("md\:inset-x-80") {
        @include assert {
          @include output {
            @include md\:inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it("md\:inset-y-80") {
        @include assert {
          @include output {
            @include md\:inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it("md\:start-80") {
        @include assert {
          @include output {
            @include md\:start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it("md\:end-80") {
        @include assert {
          @include output {
            @include md\:end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it("md\:top-80") {
        @include assert {
          @include output {
            @include md\:top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 20rem;
            }
          }
        }
      }

      @include it("md\:right-80") {
        @include assert {
          @include output {
            @include md\:right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 20rem;
            }
          }
        }
      }

      @include it("md\:bottom-80") {
        @include assert {
          @include output {
            @include md\:bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it("md\:left-80") {
        @include assert {
          @include output {
            @include md\:left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 20rem;
            }
          }
        }
      }

      @include it("md\:inset-96") {
        @include assert {
          @include output {
            @include md\:inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 24rem;
            }
          }
        }
      }

      @include it("md\:inset-x-96") {
        @include assert {
          @include output {
            @include md\:inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it("md\:inset-y-96") {
        @include assert {
          @include output {
            @include md\:inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it("md\:start-96") {
        @include assert {
          @include output {
            @include md\:start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it("md\:end-96") {
        @include assert {
          @include output {
            @include md\:end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it("md\:top-96") {
        @include assert {
          @include output {
            @include md\:top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 24rem;
            }
          }
        }
      }

      @include it("md\:right-96") {
        @include assert {
          @include output {
            @include md\:right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 24rem;
            }
          }
        }
      }

      @include it("md\:bottom-96") {
        @include assert {
          @include output {
            @include md\:bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it("md\:left-96") {
        @include assert {
          @include output {
            @include md\:left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 24rem;
            }
          }
        }
      }

      @include it("md\:inset-auto") {
        @include assert {
          @include output {
            @include md\:inset-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: auto;
            }
          }
        }
      }

      @include it("md\:inset-1\/2") {
        @include assert {
          @include output {
            @include md\:inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 50%;
            }
          }
        }
      }

      @include it("md\:inset-1\/3") {
        @include assert {
          @include output {
            @include md\:inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it("md\:inset-2\/3") {
        @include assert {
          @include output {
            @include md\:inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it("md\:inset-1\/4") {
        @include assert {
          @include output {
            @include md\:inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 25%;
            }
          }
        }
      }

      @include it("md\:inset-2\/4") {
        @include assert {
          @include output {
            @include md\:inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 50%;
            }
          }
        }
      }

      @include it("md\:inset-3\/4") {
        @include assert {
          @include output {
            @include md\:inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 75%;
            }
          }
        }
      }

      @include it("md\:inset-full") {
        @include assert {
          @include output {
            @include md\:inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 100%;
            }
          }
        }
      }

      @include it("md\:inset-x-auto") {
        @include assert {
          @include output {
            @include md\:inset-x-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it("md\:inset-x-1\/2") {
        @include assert {
          @include output {
            @include md\:inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("md\:inset-x-1\/3") {
        @include assert {
          @include output {
            @include md\:inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it("md\:inset-x-2\/3") {
        @include assert {
          @include output {
            @include md\:inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it("md\:inset-x-1\/4") {
        @include assert {
          @include output {
            @include md\:inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it("md\:inset-x-2\/4") {
        @include assert {
          @include output {
            @include md\:inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("md\:inset-x-3\/4") {
        @include assert {
          @include output {
            @include md\:inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it("md\:inset-x-full") {
        @include assert {
          @include output {
            @include md\:inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it("md\:inset-y-auto") {
        @include assert {
          @include output {
            @include md\:inset-y-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it("md\:inset-y-1\/2") {
        @include assert {
          @include output {
            @include md\:inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("md\:inset-y-1\/3") {
        @include assert {
          @include output {
            @include md\:inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("md\:inset-y-2\/3") {
        @include assert {
          @include output {
            @include md\:inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("md\:inset-y-1\/4") {
        @include assert {
          @include output {
            @include md\:inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it("md\:inset-y-2\/4") {
        @include assert {
          @include output {
            @include md\:inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("md\:inset-y-3\/4") {
        @include assert {
          @include output {
            @include md\:inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it("md\:inset-y-full") {
        @include assert {
          @include output {
            @include md\:inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it("md\:start-auto") {
        @include assert {
          @include output {
            @include md\:start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it("md\:start-1\/2") {
        @include assert {
          @include output {
            @include md\:start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("md\:start-1\/3") {
        @include assert {
          @include output {
            @include md\:start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it("md\:start-2\/3") {
        @include assert {
          @include output {
            @include md\:start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it("md\:start-1\/4") {
        @include assert {
          @include output {
            @include md\:start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it("md\:start-2\/4") {
        @include assert {
          @include output {
            @include md\:start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("md\:start-3\/4") {
        @include assert {
          @include output {
            @include md\:start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it("md\:start-full") {
        @include assert {
          @include output {
            @include md\:start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it("md\:end-auto") {
        @include assert {
          @include output {
            @include md\:end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it("md\:end-1\/2") {
        @include assert {
          @include output {
            @include md\:end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("md\:end-1\/3") {
        @include assert {
          @include output {
            @include md\:end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it("md\:end-2\/3") {
        @include assert {
          @include output {
            @include md\:end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it("md\:end-1\/4") {
        @include assert {
          @include output {
            @include md\:end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it("md\:end-2\/4") {
        @include assert {
          @include output {
            @include md\:end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("md\:end-3\/4") {
        @include assert {
          @include output {
            @include md\:end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it("md\:end-full") {
        @include assert {
          @include output {
            @include md\:end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it("md\:top-auto") {
        @include assert {
          @include output {
            @include md\:top-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: auto;
            }
          }
        }
      }

      @include it("md\:top-1\/2") {
        @include assert {
          @include output {
            @include md\:top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 50%;
            }
          }
        }
      }

      @include it("md\:top-1\/3") {
        @include assert {
          @include output {
            @include md\:top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it("md\:top-2\/3") {
        @include assert {
          @include output {
            @include md\:top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it("md\:top-1\/4") {
        @include assert {
          @include output {
            @include md\:top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 25%;
            }
          }
        }
      }

      @include it("md\:top-2\/4") {
        @include assert {
          @include output {
            @include md\:top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 50%;
            }
          }
        }
      }

      @include it("md\:top-3\/4") {
        @include assert {
          @include output {
            @include md\:top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 75%;
            }
          }
        }
      }

      @include it("md\:top-full") {
        @include assert {
          @include output {
            @include md\:top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 100%;
            }
          }
        }
      }

      @include it("md\:right-auto") {
        @include assert {
          @include output {
            @include md\:right-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: auto;
            }
          }
        }
      }

      @include it("md\:right-1\/2") {
        @include assert {
          @include output {
            @include md\:right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 50%;
            }
          }
        }
      }

      @include it("md\:right-1\/3") {
        @include assert {
          @include output {
            @include md\:right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it("md\:right-2\/3") {
        @include assert {
          @include output {
            @include md\:right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it("md\:right-1\/4") {
        @include assert {
          @include output {
            @include md\:right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 25%;
            }
          }
        }
      }

      @include it("md\:right-2\/4") {
        @include assert {
          @include output {
            @include md\:right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 50%;
            }
          }
        }
      }

      @include it("md\:right-3\/4") {
        @include assert {
          @include output {
            @include md\:right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 75%;
            }
          }
        }
      }

      @include it("md\:right-full") {
        @include assert {
          @include output {
            @include md\:right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 100%;
            }
          }
        }
      }

      @include it("md\:bottom-auto") {
        @include assert {
          @include output {
            @include md\:bottom-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: auto;
            }
          }
        }
      }

      @include it("md\:bottom-1\/2") {
        @include assert {
          @include output {
            @include md\:bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("md\:bottom-1\/3") {
        @include assert {
          @include output {
            @include md\:bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("md\:bottom-2\/3") {
        @include assert {
          @include output {
            @include md\:bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("md\:bottom-1\/4") {
        @include assert {
          @include output {
            @include md\:bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 25%;
            }
          }
        }
      }

      @include it("md\:bottom-2\/4") {
        @include assert {
          @include output {
            @include md\:bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("md\:bottom-3\/4") {
        @include assert {
          @include output {
            @include md\:bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 75%;
            }
          }
        }
      }

      @include it("md\:bottom-full") {
        @include assert {
          @include output {
            @include md\:bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 100%;
            }
          }
        }
      }

      @include it("md\:left-auto") {
        @include assert {
          @include output {
            @include md\:left-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: auto;
            }
          }
        }
      }

      @include it("md\:left-1\/2") {
        @include assert {
          @include output {
            @include md\:left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 50%;
            }
          }
        }
      }

      @include it("md\:left-1\/3") {
        @include assert {
          @include output {
            @include md\:left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it("md\:left-2\/3") {
        @include assert {
          @include output {
            @include md\:left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it("md\:left-1\/4") {
        @include assert {
          @include output {
            @include md\:left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 25%;
            }
          }
        }
      }

      @include it("md\:left-2\/4") {
        @include assert {
          @include output {
            @include md\:left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 50%;
            }
          }
        }
      }

      @include it("md\:left-3\/4") {
        @include assert {
          @include output {
            @include md\:left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 75%;
            }
          }
        }
      }

      @include it("md\:left-full") {
        @include assert {
          @include output {
            @include md\:left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 100%;
            }
          }
        }
      }

      @include it("md\:-inset-0") {
        @include assert {
          @include output {
            @include md\:-inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 0px;
            }
          }
        }
      }

      @include it("md\:-inset-x-0") {
        @include assert {
          @include output {
            @include md\:-inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("md\:-inset-y-0") {
        @include assert {
          @include output {
            @include md\:-inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("md\:-start-0") {
        @include assert {
          @include output {
            @include md\:-start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("md\:-end-0") {
        @include assert {
          @include output {
            @include md\:-end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("md\:-top-0") {
        @include assert {
          @include output {
            @include md\:-top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 0px;
            }
          }
        }
      }

      @include it("md\:-right-0") {
        @include assert {
          @include output {
            @include md\:-right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 0px;
            }
          }
        }
      }

      @include it("md\:-bottom-0") {
        @include assert {
          @include output {
            @include md\:-bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("md\:-left-0") {
        @include assert {
          @include output {
            @include md\:-left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 0px;
            }
          }
        }
      }

      @include it("md\:-inset-px") {
        @include assert {
          @include output {
            @include md\:-inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -1px;
            }
          }
        }
      }

      @include it("md\:-inset-x-px") {
        @include assert {
          @include output {
            @include md\:-inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it("md\:-inset-y-px") {
        @include assert {
          @include output {
            @include md\:-inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it("md\:-start-px") {
        @include assert {
          @include output {
            @include md\:-start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it("md\:-end-px") {
        @include assert {
          @include output {
            @include md\:-end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it("md\:-top-px") {
        @include assert {
          @include output {
            @include md\:-top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1px;
            }
          }
        }
      }

      @include it("md\:-right-px") {
        @include assert {
          @include output {
            @include md\:-right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -1px;
            }
          }
        }
      }

      @include it("md\:-bottom-px") {
        @include assert {
          @include output {
            @include md\:-bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -1px;
            }
          }
        }
      }

      @include it("md\:-left-px") {
        @include assert {
          @include output {
            @include md\:-left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1px;
            }
          }
        }
      }

      @include it("md\:-inset-0\.5") {
        @include assert {
          @include output {
            @include md\:-inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-0\.5") {
        @include assert {
          @include output {
            @include md\:-inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-0\.5") {
        @include assert {
          @include output {
            @include md\:-inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-start-0\.5") {
        @include assert {
          @include output {
            @include md\:-start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-end-0\.5") {
        @include assert {
          @include output {
            @include md\:-end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-top-0\.5") {
        @include assert {
          @include output {
            @include md\:-top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-right-0\.5") {
        @include assert {
          @include output {
            @include md\:-right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-bottom-0\.5") {
        @include assert {
          @include output {
            @include md\:-bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-left-0\.5") {
        @include assert {
          @include output {
            @include md\:-left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it("md\:-inset-1") {
        @include assert {
          @include output {
            @include md\:-inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-1") {
        @include assert {
          @include output {
            @include md\:-inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-1") {
        @include assert {
          @include output {
            @include md\:-inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-start-1") {
        @include assert {
          @include output {
            @include md\:-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-end-1") {
        @include assert {
          @include output {
            @include md\:-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-top-1") {
        @include assert {
          @include output {
            @include md\:-top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-right-1") {
        @include assert {
          @include output {
            @include md\:-right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-bottom-1") {
        @include assert {
          @include output {
            @include md\:-bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-left-1") {
        @include assert {
          @include output {
            @include md\:-left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-1\.5") {
        @include assert {
          @include output {
            @include md\:-inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-1\.5") {
        @include assert {
          @include output {
            @include md\:-inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-1\.5") {
        @include assert {
          @include output {
            @include md\:-inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-start-1\.5") {
        @include assert {
          @include output {
            @include md\:-start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-end-1\.5") {
        @include assert {
          @include output {
            @include md\:-end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-top-1\.5") {
        @include assert {
          @include output {
            @include md\:-top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-right-1\.5") {
        @include assert {
          @include output {
            @include md\:-right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-bottom-1\.5") {
        @include assert {
          @include output {
            @include md\:-bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-left-1\.5") {
        @include assert {
          @include output {
            @include md\:-left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it("md\:-inset-2") {
        @include assert {
          @include output {
            @include md\:-inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-2") {
        @include assert {
          @include output {
            @include md\:-inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-2") {
        @include assert {
          @include output {
            @include md\:-inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-start-2") {
        @include assert {
          @include output {
            @include md\:-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-end-2") {
        @include assert {
          @include output {
            @include md\:-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-top-2") {
        @include assert {
          @include output {
            @include md\:-top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-right-2") {
        @include assert {
          @include output {
            @include md\:-right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-bottom-2") {
        @include assert {
          @include output {
            @include md\:-bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-left-2") {
        @include assert {
          @include output {
            @include md\:-left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-2\.5") {
        @include assert {
          @include output {
            @include md\:-inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-2\.5") {
        @include assert {
          @include output {
            @include md\:-inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-2\.5") {
        @include assert {
          @include output {
            @include md\:-inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-start-2\.5") {
        @include assert {
          @include output {
            @include md\:-start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-end-2\.5") {
        @include assert {
          @include output {
            @include md\:-end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-top-2\.5") {
        @include assert {
          @include output {
            @include md\:-top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-right-2\.5") {
        @include assert {
          @include output {
            @include md\:-right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-bottom-2\.5") {
        @include assert {
          @include output {
            @include md\:-bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-left-2\.5") {
        @include assert {
          @include output {
            @include md\:-left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it("md\:-inset-3") {
        @include assert {
          @include output {
            @include md\:-inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-3") {
        @include assert {
          @include output {
            @include md\:-inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-3") {
        @include assert {
          @include output {
            @include md\:-inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-start-3") {
        @include assert {
          @include output {
            @include md\:-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-end-3") {
        @include assert {
          @include output {
            @include md\:-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-top-3") {
        @include assert {
          @include output {
            @include md\:-top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-right-3") {
        @include assert {
          @include output {
            @include md\:-right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-bottom-3") {
        @include assert {
          @include output {
            @include md\:-bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-left-3") {
        @include assert {
          @include output {
            @include md\:-left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-3\.5") {
        @include assert {
          @include output {
            @include md\:-inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-3\.5") {
        @include assert {
          @include output {
            @include md\:-inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-3\.5") {
        @include assert {
          @include output {
            @include md\:-inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-start-3\.5") {
        @include assert {
          @include output {
            @include md\:-start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-end-3\.5") {
        @include assert {
          @include output {
            @include md\:-end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-top-3\.5") {
        @include assert {
          @include output {
            @include md\:-top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-right-3\.5") {
        @include assert {
          @include output {
            @include md\:-right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-bottom-3\.5") {
        @include assert {
          @include output {
            @include md\:-bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-left-3\.5") {
        @include assert {
          @include output {
            @include md\:-left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it("md\:-inset-4") {
        @include assert {
          @include output {
            @include md\:-inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -1rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-4") {
        @include assert {
          @include output {
            @include md\:-inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-4") {
        @include assert {
          @include output {
            @include md\:-inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it("md\:-start-4") {
        @include assert {
          @include output {
            @include md\:-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it("md\:-end-4") {
        @include assert {
          @include output {
            @include md\:-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it("md\:-top-4") {
        @include assert {
          @include output {
            @include md\:-top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1rem;
            }
          }
        }
      }

      @include it("md\:-right-4") {
        @include assert {
          @include output {
            @include md\:-right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -1rem;
            }
          }
        }
      }

      @include it("md\:-bottom-4") {
        @include assert {
          @include output {
            @include md\:-bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it("md\:-left-4") {
        @include assert {
          @include output {
            @include md\:-left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1rem;
            }
          }
        }
      }

      @include it("md\:-inset-5") {
        @include assert {
          @include output {
            @include md\:-inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-5") {
        @include assert {
          @include output {
            @include md\:-inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-5") {
        @include assert {
          @include output {
            @include md\:-inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-start-5") {
        @include assert {
          @include output {
            @include md\:-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-end-5") {
        @include assert {
          @include output {
            @include md\:-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-top-5") {
        @include assert {
          @include output {
            @include md\:-top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-right-5") {
        @include assert {
          @include output {
            @include md\:-right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-bottom-5") {
        @include assert {
          @include output {
            @include md\:-bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-left-5") {
        @include assert {
          @include output {
            @include md\:-left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-6") {
        @include assert {
          @include output {
            @include md\:-inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-6") {
        @include assert {
          @include output {
            @include md\:-inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-6") {
        @include assert {
          @include output {
            @include md\:-inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-start-6") {
        @include assert {
          @include output {
            @include md\:-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-end-6") {
        @include assert {
          @include output {
            @include md\:-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-top-6") {
        @include assert {
          @include output {
            @include md\:-top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-right-6") {
        @include assert {
          @include output {
            @include md\:-right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-bottom-6") {
        @include assert {
          @include output {
            @include md\:-bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-left-6") {
        @include assert {
          @include output {
            @include md\:-left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-7") {
        @include assert {
          @include output {
            @include md\:-inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-7") {
        @include assert {
          @include output {
            @include md\:-inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-7") {
        @include assert {
          @include output {
            @include md\:-inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-start-7") {
        @include assert {
          @include output {
            @include md\:-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-end-7") {
        @include assert {
          @include output {
            @include md\:-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-top-7") {
        @include assert {
          @include output {
            @include md\:-top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-right-7") {
        @include assert {
          @include output {
            @include md\:-right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-bottom-7") {
        @include assert {
          @include output {
            @include md\:-bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-left-7") {
        @include assert {
          @include output {
            @include md\:-left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-8") {
        @include assert {
          @include output {
            @include md\:-inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -2rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-8") {
        @include assert {
          @include output {
            @include md\:-inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-8") {
        @include assert {
          @include output {
            @include md\:-inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it("md\:-start-8") {
        @include assert {
          @include output {
            @include md\:-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it("md\:-end-8") {
        @include assert {
          @include output {
            @include md\:-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it("md\:-top-8") {
        @include assert {
          @include output {
            @include md\:-top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2rem;
            }
          }
        }
      }

      @include it("md\:-right-8") {
        @include assert {
          @include output {
            @include md\:-right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -2rem;
            }
          }
        }
      }

      @include it("md\:-bottom-8") {
        @include assert {
          @include output {
            @include md\:-bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it("md\:-left-8") {
        @include assert {
          @include output {
            @include md\:-left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2rem;
            }
          }
        }
      }

      @include it("md\:-inset-9") {
        @include assert {
          @include output {
            @include md\:-inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-9") {
        @include assert {
          @include output {
            @include md\:-inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-9") {
        @include assert {
          @include output {
            @include md\:-inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-start-9") {
        @include assert {
          @include output {
            @include md\:-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-end-9") {
        @include assert {
          @include output {
            @include md\:-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-top-9") {
        @include assert {
          @include output {
            @include md\:-top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-right-9") {
        @include assert {
          @include output {
            @include md\:-right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-bottom-9") {
        @include assert {
          @include output {
            @include md\:-bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-left-9") {
        @include assert {
          @include output {
            @include md\:-left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it("md\:-inset-10") {
        @include assert {
          @include output {
            @include md\:-inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-10") {
        @include assert {
          @include output {
            @include md\:-inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-10") {
        @include assert {
          @include output {
            @include md\:-inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-start-10") {
        @include assert {
          @include output {
            @include md\:-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-end-10") {
        @include assert {
          @include output {
            @include md\:-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-top-10") {
        @include assert {
          @include output {
            @include md\:-top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-right-10") {
        @include assert {
          @include output {
            @include md\:-right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-bottom-10") {
        @include assert {
          @include output {
            @include md\:-bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-left-10") {
        @include assert {
          @include output {
            @include md\:-left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-11") {
        @include assert {
          @include output {
            @include md\:-inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-11") {
        @include assert {
          @include output {
            @include md\:-inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-11") {
        @include assert {
          @include output {
            @include md\:-inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-start-11") {
        @include assert {
          @include output {
            @include md\:-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-end-11") {
        @include assert {
          @include output {
            @include md\:-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-top-11") {
        @include assert {
          @include output {
            @include md\:-top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-right-11") {
        @include assert {
          @include output {
            @include md\:-right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-bottom-11") {
        @include assert {
          @include output {
            @include md\:-bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-left-11") {
        @include assert {
          @include output {
            @include md\:-left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it("md\:-inset-12") {
        @include assert {
          @include output {
            @include md\:-inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -3rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-12") {
        @include assert {
          @include output {
            @include md\:-inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-12") {
        @include assert {
          @include output {
            @include md\:-inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it("md\:-start-12") {
        @include assert {
          @include output {
            @include md\:-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it("md\:-end-12") {
        @include assert {
          @include output {
            @include md\:-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it("md\:-top-12") {
        @include assert {
          @include output {
            @include md\:-top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -3rem;
            }
          }
        }
      }

      @include it("md\:-right-12") {
        @include assert {
          @include output {
            @include md\:-right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -3rem;
            }
          }
        }
      }

      @include it("md\:-bottom-12") {
        @include assert {
          @include output {
            @include md\:-bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it("md\:-left-12") {
        @include assert {
          @include output {
            @include md\:-left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -3rem;
            }
          }
        }
      }

      @include it("md\:-inset-14") {
        @include assert {
          @include output {
            @include md\:-inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-14") {
        @include assert {
          @include output {
            @include md\:-inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-14") {
        @include assert {
          @include output {
            @include md\:-inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-start-14") {
        @include assert {
          @include output {
            @include md\:-start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-end-14") {
        @include assert {
          @include output {
            @include md\:-end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-top-14") {
        @include assert {
          @include output {
            @include md\:-top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-right-14") {
        @include assert {
          @include output {
            @include md\:-right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-bottom-14") {
        @include assert {
          @include output {
            @include md\:-bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-left-14") {
        @include assert {
          @include output {
            @include md\:-left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it("md\:-inset-16") {
        @include assert {
          @include output {
            @include md\:-inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -4rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-16") {
        @include assert {
          @include output {
            @include md\:-inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-16") {
        @include assert {
          @include output {
            @include md\:-inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it("md\:-start-16") {
        @include assert {
          @include output {
            @include md\:-start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it("md\:-end-16") {
        @include assert {
          @include output {
            @include md\:-end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it("md\:-top-16") {
        @include assert {
          @include output {
            @include md\:-top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -4rem;
            }
          }
        }
      }

      @include it("md\:-right-16") {
        @include assert {
          @include output {
            @include md\:-right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -4rem;
            }
          }
        }
      }

      @include it("md\:-bottom-16") {
        @include assert {
          @include output {
            @include md\:-bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it("md\:-left-16") {
        @include assert {
          @include output {
            @include md\:-left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -4rem;
            }
          }
        }
      }

      @include it("md\:-inset-20") {
        @include assert {
          @include output {
            @include md\:-inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -5rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-20") {
        @include assert {
          @include output {
            @include md\:-inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-20") {
        @include assert {
          @include output {
            @include md\:-inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it("md\:-start-20") {
        @include assert {
          @include output {
            @include md\:-start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it("md\:-end-20") {
        @include assert {
          @include output {
            @include md\:-end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it("md\:-top-20") {
        @include assert {
          @include output {
            @include md\:-top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -5rem;
            }
          }
        }
      }

      @include it("md\:-right-20") {
        @include assert {
          @include output {
            @include md\:-right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -5rem;
            }
          }
        }
      }

      @include it("md\:-bottom-20") {
        @include assert {
          @include output {
            @include md\:-bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it("md\:-left-20") {
        @include assert {
          @include output {
            @include md\:-left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -5rem;
            }
          }
        }
      }

      @include it("md\:-inset-24") {
        @include assert {
          @include output {
            @include md\:-inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -6rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-24") {
        @include assert {
          @include output {
            @include md\:-inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-24") {
        @include assert {
          @include output {
            @include md\:-inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it("md\:-start-24") {
        @include assert {
          @include output {
            @include md\:-start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it("md\:-end-24") {
        @include assert {
          @include output {
            @include md\:-end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it("md\:-top-24") {
        @include assert {
          @include output {
            @include md\:-top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -6rem;
            }
          }
        }
      }

      @include it("md\:-right-24") {
        @include assert {
          @include output {
            @include md\:-right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -6rem;
            }
          }
        }
      }

      @include it("md\:-bottom-24") {
        @include assert {
          @include output {
            @include md\:-bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it("md\:-left-24") {
        @include assert {
          @include output {
            @include md\:-left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -6rem;
            }
          }
        }
      }

      @include it("md\:-inset-28") {
        @include assert {
          @include output {
            @include md\:-inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -7rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-28") {
        @include assert {
          @include output {
            @include md\:-inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-28") {
        @include assert {
          @include output {
            @include md\:-inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it("md\:-start-28") {
        @include assert {
          @include output {
            @include md\:-start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it("md\:-end-28") {
        @include assert {
          @include output {
            @include md\:-end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it("md\:-top-28") {
        @include assert {
          @include output {
            @include md\:-top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -7rem;
            }
          }
        }
      }

      @include it("md\:-right-28") {
        @include assert {
          @include output {
            @include md\:-right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -7rem;
            }
          }
        }
      }

      @include it("md\:-bottom-28") {
        @include assert {
          @include output {
            @include md\:-bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it("md\:-left-28") {
        @include assert {
          @include output {
            @include md\:-left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -7rem;
            }
          }
        }
      }

      @include it("md\:-inset-32") {
        @include assert {
          @include output {
            @include md\:-inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -8rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-32") {
        @include assert {
          @include output {
            @include md\:-inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-32") {
        @include assert {
          @include output {
            @include md\:-inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it("md\:-start-32") {
        @include assert {
          @include output {
            @include md\:-start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it("md\:-end-32") {
        @include assert {
          @include output {
            @include md\:-end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it("md\:-top-32") {
        @include assert {
          @include output {
            @include md\:-top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -8rem;
            }
          }
        }
      }

      @include it("md\:-right-32") {
        @include assert {
          @include output {
            @include md\:-right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -8rem;
            }
          }
        }
      }

      @include it("md\:-bottom-32") {
        @include assert {
          @include output {
            @include md\:-bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it("md\:-left-32") {
        @include assert {
          @include output {
            @include md\:-left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -8rem;
            }
          }
        }
      }

      @include it("md\:-inset-36") {
        @include assert {
          @include output {
            @include md\:-inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -9rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-36") {
        @include assert {
          @include output {
            @include md\:-inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-36") {
        @include assert {
          @include output {
            @include md\:-inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it("md\:-start-36") {
        @include assert {
          @include output {
            @include md\:-start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it("md\:-end-36") {
        @include assert {
          @include output {
            @include md\:-end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it("md\:-top-36") {
        @include assert {
          @include output {
            @include md\:-top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -9rem;
            }
          }
        }
      }

      @include it("md\:-right-36") {
        @include assert {
          @include output {
            @include md\:-right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -9rem;
            }
          }
        }
      }

      @include it("md\:-bottom-36") {
        @include assert {
          @include output {
            @include md\:-bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it("md\:-left-36") {
        @include assert {
          @include output {
            @include md\:-left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -9rem;
            }
          }
        }
      }

      @include it("md\:-inset-40") {
        @include assert {
          @include output {
            @include md\:-inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -10rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-40") {
        @include assert {
          @include output {
            @include md\:-inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-40") {
        @include assert {
          @include output {
            @include md\:-inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it("md\:-start-40") {
        @include assert {
          @include output {
            @include md\:-start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it("md\:-end-40") {
        @include assert {
          @include output {
            @include md\:-end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it("md\:-top-40") {
        @include assert {
          @include output {
            @include md\:-top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -10rem;
            }
          }
        }
      }

      @include it("md\:-right-40") {
        @include assert {
          @include output {
            @include md\:-right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -10rem;
            }
          }
        }
      }

      @include it("md\:-bottom-40") {
        @include assert {
          @include output {
            @include md\:-bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it("md\:-left-40") {
        @include assert {
          @include output {
            @include md\:-left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -10rem;
            }
          }
        }
      }

      @include it("md\:-inset-44") {
        @include assert {
          @include output {
            @include md\:-inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -11rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-44") {
        @include assert {
          @include output {
            @include md\:-inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-44") {
        @include assert {
          @include output {
            @include md\:-inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it("md\:-start-44") {
        @include assert {
          @include output {
            @include md\:-start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it("md\:-end-44") {
        @include assert {
          @include output {
            @include md\:-end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it("md\:-top-44") {
        @include assert {
          @include output {
            @include md\:-top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -11rem;
            }
          }
        }
      }

      @include it("md\:-right-44") {
        @include assert {
          @include output {
            @include md\:-right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -11rem;
            }
          }
        }
      }

      @include it("md\:-bottom-44") {
        @include assert {
          @include output {
            @include md\:-bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it("md\:-left-44") {
        @include assert {
          @include output {
            @include md\:-left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -11rem;
            }
          }
        }
      }

      @include it("md\:-inset-48") {
        @include assert {
          @include output {
            @include md\:-inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -12rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-48") {
        @include assert {
          @include output {
            @include md\:-inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-48") {
        @include assert {
          @include output {
            @include md\:-inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it("md\:-start-48") {
        @include assert {
          @include output {
            @include md\:-start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it("md\:-end-48") {
        @include assert {
          @include output {
            @include md\:-end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it("md\:-top-48") {
        @include assert {
          @include output {
            @include md\:-top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -12rem;
            }
          }
        }
      }

      @include it("md\:-right-48") {
        @include assert {
          @include output {
            @include md\:-right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -12rem;
            }
          }
        }
      }

      @include it("md\:-bottom-48") {
        @include assert {
          @include output {
            @include md\:-bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it("md\:-left-48") {
        @include assert {
          @include output {
            @include md\:-left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -12rem;
            }
          }
        }
      }

      @include it("md\:-inset-52") {
        @include assert {
          @include output {
            @include md\:-inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -13rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-52") {
        @include assert {
          @include output {
            @include md\:-inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-52") {
        @include assert {
          @include output {
            @include md\:-inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it("md\:-start-52") {
        @include assert {
          @include output {
            @include md\:-start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it("md\:-end-52") {
        @include assert {
          @include output {
            @include md\:-end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it("md\:-top-52") {
        @include assert {
          @include output {
            @include md\:-top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -13rem;
            }
          }
        }
      }

      @include it("md\:-right-52") {
        @include assert {
          @include output {
            @include md\:-right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -13rem;
            }
          }
        }
      }

      @include it("md\:-bottom-52") {
        @include assert {
          @include output {
            @include md\:-bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it("md\:-left-52") {
        @include assert {
          @include output {
            @include md\:-left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -13rem;
            }
          }
        }
      }

      @include it("md\:-inset-56") {
        @include assert {
          @include output {
            @include md\:-inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -14rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-56") {
        @include assert {
          @include output {
            @include md\:-inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-56") {
        @include assert {
          @include output {
            @include md\:-inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it("md\:-start-56") {
        @include assert {
          @include output {
            @include md\:-start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it("md\:-end-56") {
        @include assert {
          @include output {
            @include md\:-end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it("md\:-top-56") {
        @include assert {
          @include output {
            @include md\:-top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -14rem;
            }
          }
        }
      }

      @include it("md\:-right-56") {
        @include assert {
          @include output {
            @include md\:-right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -14rem;
            }
          }
        }
      }

      @include it("md\:-bottom-56") {
        @include assert {
          @include output {
            @include md\:-bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it("md\:-left-56") {
        @include assert {
          @include output {
            @include md\:-left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -14rem;
            }
          }
        }
      }

      @include it("md\:-inset-60") {
        @include assert {
          @include output {
            @include md\:-inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -15rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-60") {
        @include assert {
          @include output {
            @include md\:-inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-60") {
        @include assert {
          @include output {
            @include md\:-inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it("md\:-start-60") {
        @include assert {
          @include output {
            @include md\:-start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it("md\:-end-60") {
        @include assert {
          @include output {
            @include md\:-end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it("md\:-top-60") {
        @include assert {
          @include output {
            @include md\:-top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -15rem;
            }
          }
        }
      }

      @include it("md\:-right-60") {
        @include assert {
          @include output {
            @include md\:-right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -15rem;
            }
          }
        }
      }

      @include it("md\:-bottom-60") {
        @include assert {
          @include output {
            @include md\:-bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it("md\:-left-60") {
        @include assert {
          @include output {
            @include md\:-left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -15rem;
            }
          }
        }
      }

      @include it("md\:-inset-64") {
        @include assert {
          @include output {
            @include md\:-inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -16rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-64") {
        @include assert {
          @include output {
            @include md\:-inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-64") {
        @include assert {
          @include output {
            @include md\:-inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it("md\:-start-64") {
        @include assert {
          @include output {
            @include md\:-start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it("md\:-end-64") {
        @include assert {
          @include output {
            @include md\:-end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it("md\:-top-64") {
        @include assert {
          @include output {
            @include md\:-top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -16rem;
            }
          }
        }
      }

      @include it("md\:-right-64") {
        @include assert {
          @include output {
            @include md\:-right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -16rem;
            }
          }
        }
      }

      @include it("md\:-bottom-64") {
        @include assert {
          @include output {
            @include md\:-bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it("md\:-left-64") {
        @include assert {
          @include output {
            @include md\:-left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -16rem;
            }
          }
        }
      }

      @include it("md\:-inset-72") {
        @include assert {
          @include output {
            @include md\:-inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -18rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-72") {
        @include assert {
          @include output {
            @include md\:-inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-72") {
        @include assert {
          @include output {
            @include md\:-inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it("md\:-start-72") {
        @include assert {
          @include output {
            @include md\:-start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it("md\:-end-72") {
        @include assert {
          @include output {
            @include md\:-end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it("md\:-top-72") {
        @include assert {
          @include output {
            @include md\:-top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -18rem;
            }
          }
        }
      }

      @include it("md\:-right-72") {
        @include assert {
          @include output {
            @include md\:-right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -18rem;
            }
          }
        }
      }

      @include it("md\:-bottom-72") {
        @include assert {
          @include output {
            @include md\:-bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it("md\:-left-72") {
        @include assert {
          @include output {
            @include md\:-left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -18rem;
            }
          }
        }
      }

      @include it("md\:-inset-80") {
        @include assert {
          @include output {
            @include md\:-inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -20rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-80") {
        @include assert {
          @include output {
            @include md\:-inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-80") {
        @include assert {
          @include output {
            @include md\:-inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it("md\:-start-80") {
        @include assert {
          @include output {
            @include md\:-start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it("md\:-end-80") {
        @include assert {
          @include output {
            @include md\:-end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it("md\:-top-80") {
        @include assert {
          @include output {
            @include md\:-top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -20rem;
            }
          }
        }
      }

      @include it("md\:-right-80") {
        @include assert {
          @include output {
            @include md\:-right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -20rem;
            }
          }
        }
      }

      @include it("md\:-bottom-80") {
        @include assert {
          @include output {
            @include md\:-bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it("md\:-left-80") {
        @include assert {
          @include output {
            @include md\:-left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -20rem;
            }
          }
        }
      }

      @include it("md\:-inset-96") {
        @include assert {
          @include output {
            @include md\:-inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -24rem;
            }
          }
        }
      }

      @include it("md\:-inset-x-96") {
        @include assert {
          @include output {
            @include md\:-inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it("md\:-inset-y-96") {
        @include assert {
          @include output {
            @include md\:-inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it("md\:-start-96") {
        @include assert {
          @include output {
            @include md\:-start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it("md\:-end-96") {
        @include assert {
          @include output {
            @include md\:-end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it("md\:-top-96") {
        @include assert {
          @include output {
            @include md\:-top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -24rem;
            }
          }
        }
      }

      @include it("md\:-right-96") {
        @include assert {
          @include output {
            @include md\:-right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -24rem;
            }
          }
        }
      }

      @include it("md\:-bottom-96") {
        @include assert {
          @include output {
            @include md\:-bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it("md\:-left-96") {
        @include assert {
          @include output {
            @include md\:-left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -24rem;
            }
          }
        }
      }

      @include it("md\:-inset-1\/2") {
        @include assert {
          @include output {
            @include md\:-inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -50%;
            }
          }
        }
      }

      @include it("md\:-inset-1\/3") {
        @include assert {
          @include output {
            @include md\:-inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-inset-2\/3") {
        @include assert {
          @include output {
            @include md\:-inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-inset-1\/4") {
        @include assert {
          @include output {
            @include md\:-inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -25%;
            }
          }
        }
      }

      @include it("md\:-inset-2\/4") {
        @include assert {
          @include output {
            @include md\:-inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -50%;
            }
          }
        }
      }

      @include it("md\:-inset-3\/4") {
        @include assert {
          @include output {
            @include md\:-inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -75%;
            }
          }
        }
      }

      @include it("md\:-inset-full") {
        @include assert {
          @include output {
            @include md\:-inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -100%;
            }
          }
        }
      }

      @include it("md\:-inset-x-1\/2") {
        @include assert {
          @include output {
            @include md\:-inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("md\:-inset-x-1\/3") {
        @include assert {
          @include output {
            @include md\:-inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-inset-x-2\/3") {
        @include assert {
          @include output {
            @include md\:-inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-inset-x-1\/4") {
        @include assert {
          @include output {
            @include md\:-inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it("md\:-inset-x-2\/4") {
        @include assert {
          @include output {
            @include md\:-inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("md\:-inset-x-3\/4") {
        @include assert {
          @include output {
            @include md\:-inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it("md\:-inset-x-full") {
        @include assert {
          @include output {
            @include md\:-inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it("md\:-inset-y-1\/2") {
        @include assert {
          @include output {
            @include md\:-inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("md\:-inset-y-1\/3") {
        @include assert {
          @include output {
            @include md\:-inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-inset-y-2\/3") {
        @include assert {
          @include output {
            @include md\:-inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-inset-y-1\/4") {
        @include assert {
          @include output {
            @include md\:-inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it("md\:-inset-y-2\/4") {
        @include assert {
          @include output {
            @include md\:-inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("md\:-inset-y-3\/4") {
        @include assert {
          @include output {
            @include md\:-inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it("md\:-inset-y-full") {
        @include assert {
          @include output {
            @include md\:-inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it("md\:-start-1\/2") {
        @include assert {
          @include output {
            @include md\:-start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("md\:-start-1\/3") {
        @include assert {
          @include output {
            @include md\:-start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-start-2\/3") {
        @include assert {
          @include output {
            @include md\:-start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-start-1\/4") {
        @include assert {
          @include output {
            @include md\:-start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it("md\:-start-2\/4") {
        @include assert {
          @include output {
            @include md\:-start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("md\:-start-3\/4") {
        @include assert {
          @include output {
            @include md\:-start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it("md\:-start-full") {
        @include assert {
          @include output {
            @include md\:-start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it("md\:-end-1\/2") {
        @include assert {
          @include output {
            @include md\:-end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("md\:-end-1\/3") {
        @include assert {
          @include output {
            @include md\:-end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-end-2\/3") {
        @include assert {
          @include output {
            @include md\:-end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-end-1\/4") {
        @include assert {
          @include output {
            @include md\:-end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it("md\:-end-2\/4") {
        @include assert {
          @include output {
            @include md\:-end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("md\:-end-3\/4") {
        @include assert {
          @include output {
            @include md\:-end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it("md\:-end-full") {
        @include assert {
          @include output {
            @include md\:-end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it("md\:-top-1\/2") {
        @include assert {
          @include output {
            @include md\:-top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -50%;
            }
          }
        }
      }

      @include it("md\:-top-1\/3") {
        @include assert {
          @include output {
            @include md\:-top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-top-2\/3") {
        @include assert {
          @include output {
            @include md\:-top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-top-1\/4") {
        @include assert {
          @include output {
            @include md\:-top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -25%;
            }
          }
        }
      }

      @include it("md\:-top-2\/4") {
        @include assert {
          @include output {
            @include md\:-top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -50%;
            }
          }
        }
      }

      @include it("md\:-top-3\/4") {
        @include assert {
          @include output {
            @include md\:-top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -75%;
            }
          }
        }
      }

      @include it("md\:-top-full") {
        @include assert {
          @include output {
            @include md\:-top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -100%;
            }
          }
        }
      }

      @include it("md\:-right-1\/2") {
        @include assert {
          @include output {
            @include md\:-right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -50%;
            }
          }
        }
      }

      @include it("md\:-right-1\/3") {
        @include assert {
          @include output {
            @include md\:-right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-right-2\/3") {
        @include assert {
          @include output {
            @include md\:-right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-right-1\/4") {
        @include assert {
          @include output {
            @include md\:-right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -25%;
            }
          }
        }
      }

      @include it("md\:-right-2\/4") {
        @include assert {
          @include output {
            @include md\:-right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -50%;
            }
          }
        }
      }

      @include it("md\:-right-3\/4") {
        @include assert {
          @include output {
            @include md\:-right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -75%;
            }
          }
        }
      }

      @include it("md\:-right-full") {
        @include assert {
          @include output {
            @include md\:-right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -100%;
            }
          }
        }
      }

      @include it("md\:-bottom-1\/2") {
        @include assert {
          @include output {
            @include md\:-bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("md\:-bottom-1\/3") {
        @include assert {
          @include output {
            @include md\:-bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-bottom-2\/3") {
        @include assert {
          @include output {
            @include md\:-bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-bottom-1\/4") {
        @include assert {
          @include output {
            @include md\:-bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -25%;
            }
          }
        }
      }

      @include it("md\:-bottom-2\/4") {
        @include assert {
          @include output {
            @include md\:-bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("md\:-bottom-3\/4") {
        @include assert {
          @include output {
            @include md\:-bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -75%;
            }
          }
        }
      }

      @include it("md\:-bottom-full") {
        @include assert {
          @include output {
            @include md\:-bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -100%;
            }
          }
        }
      }

      @include it("md\:-left-1\/2") {
        @include assert {
          @include output {
            @include md\:-left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -50%;
            }
          }
        }
      }

      @include it("md\:-left-1\/3") {
        @include assert {
          @include output {
            @include md\:-left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it("md\:-left-2\/3") {
        @include assert {
          @include output {
            @include md\:-left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it("md\:-left-1\/4") {
        @include assert {
          @include output {
            @include md\:-left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -25%;
            }
          }
        }
      }

      @include it("md\:-left-2\/4") {
        @include assert {
          @include output {
            @include md\:-left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -50%;
            }
          }
        }
      }

      @include it("md\:-left-3\/4") {
        @include assert {
          @include output {
            @include md\:-left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -75%;
            }
          }
        }
      }

      @include it("md\:-left-full") {
        @include assert {
          @include output {
            @include md\:-left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -100%;
            }
          }
        }
      }

      @include it("lg\:inset-0") {
        @include assert {
          @include output {
            @include lg\:inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0px;
            }
          }
        }
      }

      @include it("lg\:inset-x-0") {
        @include assert {
          @include output {
            @include lg\:inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("lg\:inset-y-0") {
        @include assert {
          @include output {
            @include lg\:inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:start-0") {
        @include assert {
          @include output {
            @include lg\:start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("lg\:end-0") {
        @include assert {
          @include output {
            @include lg\:end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("lg\:top-0") {
        @include assert {
          @include output {
            @include lg\:top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0px;
            }
          }
        }
      }

      @include it("lg\:right-0") {
        @include assert {
          @include output {
            @include lg\:right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0px;
            }
          }
        }
      }

      @include it("lg\:bottom-0") {
        @include assert {
          @include output {
            @include lg\:bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:left-0") {
        @include assert {
          @include output {
            @include lg\:left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0px;
            }
          }
        }
      }

      @include it("lg\:inset-px") {
        @include assert {
          @include output {
            @include lg\:inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 1px;
            }
          }
        }
      }

      @include it("lg\:inset-x-px") {
        @include assert {
          @include output {
            @include lg\:inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it("lg\:inset-y-px") {
        @include assert {
          @include output {
            @include lg\:inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it("lg\:start-px") {
        @include assert {
          @include output {
            @include lg\:start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it("lg\:end-px") {
        @include assert {
          @include output {
            @include lg\:end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it("lg\:top-px") {
        @include assert {
          @include output {
            @include lg\:top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1px;
            }
          }
        }
      }

      @include it("lg\:right-px") {
        @include assert {
          @include output {
            @include lg\:right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 1px;
            }
          }
        }
      }

      @include it("lg\:bottom-px") {
        @include assert {
          @include output {
            @include lg\:bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 1px;
            }
          }
        }
      }

      @include it("lg\:left-px") {
        @include assert {
          @include output {
            @include lg\:left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1px;
            }
          }
        }
      }

      @include it("lg\:inset-0\.5") {
        @include assert {
          @include output {
            @include lg\:inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-0\.5") {
        @include assert {
          @include output {
            @include lg\:inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-0\.5") {
        @include assert {
          @include output {
            @include lg\:inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:start-0\.5") {
        @include assert {
          @include output {
            @include lg\:start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:end-0\.5") {
        @include assert {
          @include output {
            @include lg\:end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:top-0\.5") {
        @include assert {
          @include output {
            @include lg\:top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:right-0\.5") {
        @include assert {
          @include output {
            @include lg\:right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:bottom-0\.5") {
        @include assert {
          @include output {
            @include lg\:bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:left-0\.5") {
        @include assert {
          @include output {
            @include lg\:left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it("lg\:inset-1") {
        @include assert {
          @include output {
            @include lg\:inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-1") {
        @include assert {
          @include output {
            @include lg\:inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-1") {
        @include assert {
          @include output {
            @include lg\:inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:start-1") {
        @include assert {
          @include output {
            @include lg\:start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:end-1") {
        @include assert {
          @include output {
            @include lg\:end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:top-1") {
        @include assert {
          @include output {
            @include lg\:top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:right-1") {
        @include assert {
          @include output {
            @include lg\:right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:bottom-1") {
        @include assert {
          @include output {
            @include lg\:bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:left-1") {
        @include assert {
          @include output {
            @include lg\:left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-1\.5") {
        @include assert {
          @include output {
            @include lg\:inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-1\.5") {
        @include assert {
          @include output {
            @include lg\:inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-1\.5") {
        @include assert {
          @include output {
            @include lg\:inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:start-1\.5") {
        @include assert {
          @include output {
            @include lg\:start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:end-1\.5") {
        @include assert {
          @include output {
            @include lg\:end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:top-1\.5") {
        @include assert {
          @include output {
            @include lg\:top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:right-1\.5") {
        @include assert {
          @include output {
            @include lg\:right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:bottom-1\.5") {
        @include assert {
          @include output {
            @include lg\:bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:left-1\.5") {
        @include assert {
          @include output {
            @include lg\:left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it("lg\:inset-2") {
        @include assert {
          @include output {
            @include lg\:inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-2") {
        @include assert {
          @include output {
            @include lg\:inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-2") {
        @include assert {
          @include output {
            @include lg\:inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:start-2") {
        @include assert {
          @include output {
            @include lg\:start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:end-2") {
        @include assert {
          @include output {
            @include lg\:end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:top-2") {
        @include assert {
          @include output {
            @include lg\:top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:right-2") {
        @include assert {
          @include output {
            @include lg\:right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:bottom-2") {
        @include assert {
          @include output {
            @include lg\:bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:left-2") {
        @include assert {
          @include output {
            @include lg\:left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-2\.5") {
        @include assert {
          @include output {
            @include lg\:inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-2\.5") {
        @include assert {
          @include output {
            @include lg\:inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-2\.5") {
        @include assert {
          @include output {
            @include lg\:inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:start-2\.5") {
        @include assert {
          @include output {
            @include lg\:start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:end-2\.5") {
        @include assert {
          @include output {
            @include lg\:end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:top-2\.5") {
        @include assert {
          @include output {
            @include lg\:top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:right-2\.5") {
        @include assert {
          @include output {
            @include lg\:right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:bottom-2\.5") {
        @include assert {
          @include output {
            @include lg\:bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:left-2\.5") {
        @include assert {
          @include output {
            @include lg\:left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it("lg\:inset-3") {
        @include assert {
          @include output {
            @include lg\:inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-3") {
        @include assert {
          @include output {
            @include lg\:inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-3") {
        @include assert {
          @include output {
            @include lg\:inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:start-3") {
        @include assert {
          @include output {
            @include lg\:start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:end-3") {
        @include assert {
          @include output {
            @include lg\:end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:top-3") {
        @include assert {
          @include output {
            @include lg\:top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:right-3") {
        @include assert {
          @include output {
            @include lg\:right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:bottom-3") {
        @include assert {
          @include output {
            @include lg\:bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:left-3") {
        @include assert {
          @include output {
            @include lg\:left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-3\.5") {
        @include assert {
          @include output {
            @include lg\:inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-3\.5") {
        @include assert {
          @include output {
            @include lg\:inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-3\.5") {
        @include assert {
          @include output {
            @include lg\:inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:start-3\.5") {
        @include assert {
          @include output {
            @include lg\:start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:end-3\.5") {
        @include assert {
          @include output {
            @include lg\:end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:top-3\.5") {
        @include assert {
          @include output {
            @include lg\:top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:right-3\.5") {
        @include assert {
          @include output {
            @include lg\:right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:bottom-3\.5") {
        @include assert {
          @include output {
            @include lg\:bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:left-3\.5") {
        @include assert {
          @include output {
            @include lg\:left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it("lg\:inset-4") {
        @include assert {
          @include output {
            @include lg\:inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 1rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-4") {
        @include assert {
          @include output {
            @include lg\:inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-4") {
        @include assert {
          @include output {
            @include lg\:inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it("lg\:start-4") {
        @include assert {
          @include output {
            @include lg\:start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it("lg\:end-4") {
        @include assert {
          @include output {
            @include lg\:end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it("lg\:top-4") {
        @include assert {
          @include output {
            @include lg\:top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1rem;
            }
          }
        }
      }

      @include it("lg\:right-4") {
        @include assert {
          @include output {
            @include lg\:right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 1rem;
            }
          }
        }
      }

      @include it("lg\:bottom-4") {
        @include assert {
          @include output {
            @include lg\:bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it("lg\:left-4") {
        @include assert {
          @include output {
            @include lg\:left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1rem;
            }
          }
        }
      }

      @include it("lg\:inset-5") {
        @include assert {
          @include output {
            @include lg\:inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-5") {
        @include assert {
          @include output {
            @include lg\:inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-5") {
        @include assert {
          @include output {
            @include lg\:inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:start-5") {
        @include assert {
          @include output {
            @include lg\:start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:end-5") {
        @include assert {
          @include output {
            @include lg\:end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:top-5") {
        @include assert {
          @include output {
            @include lg\:top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:right-5") {
        @include assert {
          @include output {
            @include lg\:right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:bottom-5") {
        @include assert {
          @include output {
            @include lg\:bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:left-5") {
        @include assert {
          @include output {
            @include lg\:left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-6") {
        @include assert {
          @include output {
            @include lg\:inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-6") {
        @include assert {
          @include output {
            @include lg\:inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-6") {
        @include assert {
          @include output {
            @include lg\:inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:start-6") {
        @include assert {
          @include output {
            @include lg\:start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:end-6") {
        @include assert {
          @include output {
            @include lg\:end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:top-6") {
        @include assert {
          @include output {
            @include lg\:top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:right-6") {
        @include assert {
          @include output {
            @include lg\:right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:bottom-6") {
        @include assert {
          @include output {
            @include lg\:bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:left-6") {
        @include assert {
          @include output {
            @include lg\:left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-7") {
        @include assert {
          @include output {
            @include lg\:inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-7") {
        @include assert {
          @include output {
            @include lg\:inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-7") {
        @include assert {
          @include output {
            @include lg\:inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:start-7") {
        @include assert {
          @include output {
            @include lg\:start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:end-7") {
        @include assert {
          @include output {
            @include lg\:end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:top-7") {
        @include assert {
          @include output {
            @include lg\:top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:right-7") {
        @include assert {
          @include output {
            @include lg\:right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:bottom-7") {
        @include assert {
          @include output {
            @include lg\:bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:left-7") {
        @include assert {
          @include output {
            @include lg\:left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-8") {
        @include assert {
          @include output {
            @include lg\:inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 2rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-8") {
        @include assert {
          @include output {
            @include lg\:inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-8") {
        @include assert {
          @include output {
            @include lg\:inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it("lg\:start-8") {
        @include assert {
          @include output {
            @include lg\:start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it("lg\:end-8") {
        @include assert {
          @include output {
            @include lg\:end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it("lg\:top-8") {
        @include assert {
          @include output {
            @include lg\:top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2rem;
            }
          }
        }
      }

      @include it("lg\:right-8") {
        @include assert {
          @include output {
            @include lg\:right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 2rem;
            }
          }
        }
      }

      @include it("lg\:bottom-8") {
        @include assert {
          @include output {
            @include lg\:bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it("lg\:left-8") {
        @include assert {
          @include output {
            @include lg\:left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2rem;
            }
          }
        }
      }

      @include it("lg\:inset-9") {
        @include assert {
          @include output {
            @include lg\:inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-9") {
        @include assert {
          @include output {
            @include lg\:inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-9") {
        @include assert {
          @include output {
            @include lg\:inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:start-9") {
        @include assert {
          @include output {
            @include lg\:start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:end-9") {
        @include assert {
          @include output {
            @include lg\:end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:top-9") {
        @include assert {
          @include output {
            @include lg\:top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:right-9") {
        @include assert {
          @include output {
            @include lg\:right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:bottom-9") {
        @include assert {
          @include output {
            @include lg\:bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:left-9") {
        @include assert {
          @include output {
            @include lg\:left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it("lg\:inset-10") {
        @include assert {
          @include output {
            @include lg\:inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-10") {
        @include assert {
          @include output {
            @include lg\:inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-10") {
        @include assert {
          @include output {
            @include lg\:inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:start-10") {
        @include assert {
          @include output {
            @include lg\:start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:end-10") {
        @include assert {
          @include output {
            @include lg\:end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:top-10") {
        @include assert {
          @include output {
            @include lg\:top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:right-10") {
        @include assert {
          @include output {
            @include lg\:right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:bottom-10") {
        @include assert {
          @include output {
            @include lg\:bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:left-10") {
        @include assert {
          @include output {
            @include lg\:left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-11") {
        @include assert {
          @include output {
            @include lg\:inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-11") {
        @include assert {
          @include output {
            @include lg\:inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-11") {
        @include assert {
          @include output {
            @include lg\:inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:start-11") {
        @include assert {
          @include output {
            @include lg\:start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:end-11") {
        @include assert {
          @include output {
            @include lg\:end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:top-11") {
        @include assert {
          @include output {
            @include lg\:top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:right-11") {
        @include assert {
          @include output {
            @include lg\:right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:bottom-11") {
        @include assert {
          @include output {
            @include lg\:bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:left-11") {
        @include assert {
          @include output {
            @include lg\:left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it("lg\:inset-12") {
        @include assert {
          @include output {
            @include lg\:inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 3rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-12") {
        @include assert {
          @include output {
            @include lg\:inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-12") {
        @include assert {
          @include output {
            @include lg\:inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it("lg\:start-12") {
        @include assert {
          @include output {
            @include lg\:start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it("lg\:end-12") {
        @include assert {
          @include output {
            @include lg\:end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it("lg\:top-12") {
        @include assert {
          @include output {
            @include lg\:top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 3rem;
            }
          }
        }
      }

      @include it("lg\:right-12") {
        @include assert {
          @include output {
            @include lg\:right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 3rem;
            }
          }
        }
      }

      @include it("lg\:bottom-12") {
        @include assert {
          @include output {
            @include lg\:bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it("lg\:left-12") {
        @include assert {
          @include output {
            @include lg\:left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 3rem;
            }
          }
        }
      }

      @include it("lg\:inset-14") {
        @include assert {
          @include output {
            @include lg\:inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-14") {
        @include assert {
          @include output {
            @include lg\:inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-14") {
        @include assert {
          @include output {
            @include lg\:inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:start-14") {
        @include assert {
          @include output {
            @include lg\:start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:end-14") {
        @include assert {
          @include output {
            @include lg\:end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:top-14") {
        @include assert {
          @include output {
            @include lg\:top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:right-14") {
        @include assert {
          @include output {
            @include lg\:right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:bottom-14") {
        @include assert {
          @include output {
            @include lg\:bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:left-14") {
        @include assert {
          @include output {
            @include lg\:left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it("lg\:inset-16") {
        @include assert {
          @include output {
            @include lg\:inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 4rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-16") {
        @include assert {
          @include output {
            @include lg\:inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-16") {
        @include assert {
          @include output {
            @include lg\:inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it("lg\:start-16") {
        @include assert {
          @include output {
            @include lg\:start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it("lg\:end-16") {
        @include assert {
          @include output {
            @include lg\:end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it("lg\:top-16") {
        @include assert {
          @include output {
            @include lg\:top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 4rem;
            }
          }
        }
      }

      @include it("lg\:right-16") {
        @include assert {
          @include output {
            @include lg\:right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 4rem;
            }
          }
        }
      }

      @include it("lg\:bottom-16") {
        @include assert {
          @include output {
            @include lg\:bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it("lg\:left-16") {
        @include assert {
          @include output {
            @include lg\:left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 4rem;
            }
          }
        }
      }

      @include it("lg\:inset-20") {
        @include assert {
          @include output {
            @include lg\:inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 5rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-20") {
        @include assert {
          @include output {
            @include lg\:inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-20") {
        @include assert {
          @include output {
            @include lg\:inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it("lg\:start-20") {
        @include assert {
          @include output {
            @include lg\:start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it("lg\:end-20") {
        @include assert {
          @include output {
            @include lg\:end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it("lg\:top-20") {
        @include assert {
          @include output {
            @include lg\:top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 5rem;
            }
          }
        }
      }

      @include it("lg\:right-20") {
        @include assert {
          @include output {
            @include lg\:right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 5rem;
            }
          }
        }
      }

      @include it("lg\:bottom-20") {
        @include assert {
          @include output {
            @include lg\:bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it("lg\:left-20") {
        @include assert {
          @include output {
            @include lg\:left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 5rem;
            }
          }
        }
      }

      @include it("lg\:inset-24") {
        @include assert {
          @include output {
            @include lg\:inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 6rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-24") {
        @include assert {
          @include output {
            @include lg\:inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-24") {
        @include assert {
          @include output {
            @include lg\:inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it("lg\:start-24") {
        @include assert {
          @include output {
            @include lg\:start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it("lg\:end-24") {
        @include assert {
          @include output {
            @include lg\:end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it("lg\:top-24") {
        @include assert {
          @include output {
            @include lg\:top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 6rem;
            }
          }
        }
      }

      @include it("lg\:right-24") {
        @include assert {
          @include output {
            @include lg\:right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 6rem;
            }
          }
        }
      }

      @include it("lg\:bottom-24") {
        @include assert {
          @include output {
            @include lg\:bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it("lg\:left-24") {
        @include assert {
          @include output {
            @include lg\:left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 6rem;
            }
          }
        }
      }

      @include it("lg\:inset-28") {
        @include assert {
          @include output {
            @include lg\:inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 7rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-28") {
        @include assert {
          @include output {
            @include lg\:inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-28") {
        @include assert {
          @include output {
            @include lg\:inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it("lg\:start-28") {
        @include assert {
          @include output {
            @include lg\:start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it("lg\:end-28") {
        @include assert {
          @include output {
            @include lg\:end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it("lg\:top-28") {
        @include assert {
          @include output {
            @include lg\:top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 7rem;
            }
          }
        }
      }

      @include it("lg\:right-28") {
        @include assert {
          @include output {
            @include lg\:right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 7rem;
            }
          }
        }
      }

      @include it("lg\:bottom-28") {
        @include assert {
          @include output {
            @include lg\:bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it("lg\:left-28") {
        @include assert {
          @include output {
            @include lg\:left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 7rem;
            }
          }
        }
      }

      @include it("lg\:inset-32") {
        @include assert {
          @include output {
            @include lg\:inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 8rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-32") {
        @include assert {
          @include output {
            @include lg\:inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-32") {
        @include assert {
          @include output {
            @include lg\:inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it("lg\:start-32") {
        @include assert {
          @include output {
            @include lg\:start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it("lg\:end-32") {
        @include assert {
          @include output {
            @include lg\:end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it("lg\:top-32") {
        @include assert {
          @include output {
            @include lg\:top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 8rem;
            }
          }
        }
      }

      @include it("lg\:right-32") {
        @include assert {
          @include output {
            @include lg\:right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 8rem;
            }
          }
        }
      }

      @include it("lg\:bottom-32") {
        @include assert {
          @include output {
            @include lg\:bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it("lg\:left-32") {
        @include assert {
          @include output {
            @include lg\:left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 8rem;
            }
          }
        }
      }

      @include it("lg\:inset-36") {
        @include assert {
          @include output {
            @include lg\:inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 9rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-36") {
        @include assert {
          @include output {
            @include lg\:inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-36") {
        @include assert {
          @include output {
            @include lg\:inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it("lg\:start-36") {
        @include assert {
          @include output {
            @include lg\:start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it("lg\:end-36") {
        @include assert {
          @include output {
            @include lg\:end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it("lg\:top-36") {
        @include assert {
          @include output {
            @include lg\:top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 9rem;
            }
          }
        }
      }

      @include it("lg\:right-36") {
        @include assert {
          @include output {
            @include lg\:right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 9rem;
            }
          }
        }
      }

      @include it("lg\:bottom-36") {
        @include assert {
          @include output {
            @include lg\:bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it("lg\:left-36") {
        @include assert {
          @include output {
            @include lg\:left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 9rem;
            }
          }
        }
      }

      @include it("lg\:inset-40") {
        @include assert {
          @include output {
            @include lg\:inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 10rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-40") {
        @include assert {
          @include output {
            @include lg\:inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-40") {
        @include assert {
          @include output {
            @include lg\:inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it("lg\:start-40") {
        @include assert {
          @include output {
            @include lg\:start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it("lg\:end-40") {
        @include assert {
          @include output {
            @include lg\:end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it("lg\:top-40") {
        @include assert {
          @include output {
            @include lg\:top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 10rem;
            }
          }
        }
      }

      @include it("lg\:right-40") {
        @include assert {
          @include output {
            @include lg\:right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 10rem;
            }
          }
        }
      }

      @include it("lg\:bottom-40") {
        @include assert {
          @include output {
            @include lg\:bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it("lg\:left-40") {
        @include assert {
          @include output {
            @include lg\:left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 10rem;
            }
          }
        }
      }

      @include it("lg\:inset-44") {
        @include assert {
          @include output {
            @include lg\:inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 11rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-44") {
        @include assert {
          @include output {
            @include lg\:inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-44") {
        @include assert {
          @include output {
            @include lg\:inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it("lg\:start-44") {
        @include assert {
          @include output {
            @include lg\:start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it("lg\:end-44") {
        @include assert {
          @include output {
            @include lg\:end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it("lg\:top-44") {
        @include assert {
          @include output {
            @include lg\:top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 11rem;
            }
          }
        }
      }

      @include it("lg\:right-44") {
        @include assert {
          @include output {
            @include lg\:right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 11rem;
            }
          }
        }
      }

      @include it("lg\:bottom-44") {
        @include assert {
          @include output {
            @include lg\:bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it("lg\:left-44") {
        @include assert {
          @include output {
            @include lg\:left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 11rem;
            }
          }
        }
      }

      @include it("lg\:inset-48") {
        @include assert {
          @include output {
            @include lg\:inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 12rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-48") {
        @include assert {
          @include output {
            @include lg\:inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-48") {
        @include assert {
          @include output {
            @include lg\:inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it("lg\:start-48") {
        @include assert {
          @include output {
            @include lg\:start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it("lg\:end-48") {
        @include assert {
          @include output {
            @include lg\:end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it("lg\:top-48") {
        @include assert {
          @include output {
            @include lg\:top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 12rem;
            }
          }
        }
      }

      @include it("lg\:right-48") {
        @include assert {
          @include output {
            @include lg\:right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 12rem;
            }
          }
        }
      }

      @include it("lg\:bottom-48") {
        @include assert {
          @include output {
            @include lg\:bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it("lg\:left-48") {
        @include assert {
          @include output {
            @include lg\:left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 12rem;
            }
          }
        }
      }

      @include it("lg\:inset-52") {
        @include assert {
          @include output {
            @include lg\:inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 13rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-52") {
        @include assert {
          @include output {
            @include lg\:inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-52") {
        @include assert {
          @include output {
            @include lg\:inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it("lg\:start-52") {
        @include assert {
          @include output {
            @include lg\:start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it("lg\:end-52") {
        @include assert {
          @include output {
            @include lg\:end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it("lg\:top-52") {
        @include assert {
          @include output {
            @include lg\:top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 13rem;
            }
          }
        }
      }

      @include it("lg\:right-52") {
        @include assert {
          @include output {
            @include lg\:right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 13rem;
            }
          }
        }
      }

      @include it("lg\:bottom-52") {
        @include assert {
          @include output {
            @include lg\:bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it("lg\:left-52") {
        @include assert {
          @include output {
            @include lg\:left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 13rem;
            }
          }
        }
      }

      @include it("lg\:inset-56") {
        @include assert {
          @include output {
            @include lg\:inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 14rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-56") {
        @include assert {
          @include output {
            @include lg\:inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-56") {
        @include assert {
          @include output {
            @include lg\:inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it("lg\:start-56") {
        @include assert {
          @include output {
            @include lg\:start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it("lg\:end-56") {
        @include assert {
          @include output {
            @include lg\:end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it("lg\:top-56") {
        @include assert {
          @include output {
            @include lg\:top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 14rem;
            }
          }
        }
      }

      @include it("lg\:right-56") {
        @include assert {
          @include output {
            @include lg\:right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 14rem;
            }
          }
        }
      }

      @include it("lg\:bottom-56") {
        @include assert {
          @include output {
            @include lg\:bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it("lg\:left-56") {
        @include assert {
          @include output {
            @include lg\:left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 14rem;
            }
          }
        }
      }

      @include it("lg\:inset-60") {
        @include assert {
          @include output {
            @include lg\:inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 15rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-60") {
        @include assert {
          @include output {
            @include lg\:inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-60") {
        @include assert {
          @include output {
            @include lg\:inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it("lg\:start-60") {
        @include assert {
          @include output {
            @include lg\:start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it("lg\:end-60") {
        @include assert {
          @include output {
            @include lg\:end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it("lg\:top-60") {
        @include assert {
          @include output {
            @include lg\:top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 15rem;
            }
          }
        }
      }

      @include it("lg\:right-60") {
        @include assert {
          @include output {
            @include lg\:right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 15rem;
            }
          }
        }
      }

      @include it("lg\:bottom-60") {
        @include assert {
          @include output {
            @include lg\:bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it("lg\:left-60") {
        @include assert {
          @include output {
            @include lg\:left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 15rem;
            }
          }
        }
      }

      @include it("lg\:inset-64") {
        @include assert {
          @include output {
            @include lg\:inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 16rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-64") {
        @include assert {
          @include output {
            @include lg\:inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-64") {
        @include assert {
          @include output {
            @include lg\:inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it("lg\:start-64") {
        @include assert {
          @include output {
            @include lg\:start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it("lg\:end-64") {
        @include assert {
          @include output {
            @include lg\:end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it("lg\:top-64") {
        @include assert {
          @include output {
            @include lg\:top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 16rem;
            }
          }
        }
      }

      @include it("lg\:right-64") {
        @include assert {
          @include output {
            @include lg\:right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 16rem;
            }
          }
        }
      }

      @include it("lg\:bottom-64") {
        @include assert {
          @include output {
            @include lg\:bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it("lg\:left-64") {
        @include assert {
          @include output {
            @include lg\:left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 16rem;
            }
          }
        }
      }

      @include it("lg\:inset-72") {
        @include assert {
          @include output {
            @include lg\:inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 18rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-72") {
        @include assert {
          @include output {
            @include lg\:inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-72") {
        @include assert {
          @include output {
            @include lg\:inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it("lg\:start-72") {
        @include assert {
          @include output {
            @include lg\:start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it("lg\:end-72") {
        @include assert {
          @include output {
            @include lg\:end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it("lg\:top-72") {
        @include assert {
          @include output {
            @include lg\:top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 18rem;
            }
          }
        }
      }

      @include it("lg\:right-72") {
        @include assert {
          @include output {
            @include lg\:right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 18rem;
            }
          }
        }
      }

      @include it("lg\:bottom-72") {
        @include assert {
          @include output {
            @include lg\:bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it("lg\:left-72") {
        @include assert {
          @include output {
            @include lg\:left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 18rem;
            }
          }
        }
      }

      @include it("lg\:inset-80") {
        @include assert {
          @include output {
            @include lg\:inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 20rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-80") {
        @include assert {
          @include output {
            @include lg\:inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-80") {
        @include assert {
          @include output {
            @include lg\:inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it("lg\:start-80") {
        @include assert {
          @include output {
            @include lg\:start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it("lg\:end-80") {
        @include assert {
          @include output {
            @include lg\:end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it("lg\:top-80") {
        @include assert {
          @include output {
            @include lg\:top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 20rem;
            }
          }
        }
      }

      @include it("lg\:right-80") {
        @include assert {
          @include output {
            @include lg\:right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 20rem;
            }
          }
        }
      }

      @include it("lg\:bottom-80") {
        @include assert {
          @include output {
            @include lg\:bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it("lg\:left-80") {
        @include assert {
          @include output {
            @include lg\:left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 20rem;
            }
          }
        }
      }

      @include it("lg\:inset-96") {
        @include assert {
          @include output {
            @include lg\:inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 24rem;
            }
          }
        }
      }

      @include it("lg\:inset-x-96") {
        @include assert {
          @include output {
            @include lg\:inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it("lg\:inset-y-96") {
        @include assert {
          @include output {
            @include lg\:inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it("lg\:start-96") {
        @include assert {
          @include output {
            @include lg\:start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it("lg\:end-96") {
        @include assert {
          @include output {
            @include lg\:end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it("lg\:top-96") {
        @include assert {
          @include output {
            @include lg\:top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 24rem;
            }
          }
        }
      }

      @include it("lg\:right-96") {
        @include assert {
          @include output {
            @include lg\:right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 24rem;
            }
          }
        }
      }

      @include it("lg\:bottom-96") {
        @include assert {
          @include output {
            @include lg\:bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it("lg\:left-96") {
        @include assert {
          @include output {
            @include lg\:left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 24rem;
            }
          }
        }
      }

      @include it("lg\:inset-auto") {
        @include assert {
          @include output {
            @include lg\:inset-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: auto;
            }
          }
        }
      }

      @include it("lg\:inset-1\/2") {
        @include assert {
          @include output {
            @include lg\:inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 50%;
            }
          }
        }
      }

      @include it("lg\:inset-1\/3") {
        @include assert {
          @include output {
            @include lg\:inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:inset-2\/3") {
        @include assert {
          @include output {
            @include lg\:inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:inset-1\/4") {
        @include assert {
          @include output {
            @include lg\:inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 25%;
            }
          }
        }
      }

      @include it("lg\:inset-2\/4") {
        @include assert {
          @include output {
            @include lg\:inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 50%;
            }
          }
        }
      }

      @include it("lg\:inset-3\/4") {
        @include assert {
          @include output {
            @include lg\:inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 75%;
            }
          }
        }
      }

      @include it("lg\:inset-full") {
        @include assert {
          @include output {
            @include lg\:inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 100%;
            }
          }
        }
      }

      @include it("lg\:inset-x-auto") {
        @include assert {
          @include output {
            @include lg\:inset-x-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it("lg\:inset-x-1\/2") {
        @include assert {
          @include output {
            @include lg\:inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("lg\:inset-x-1\/3") {
        @include assert {
          @include output {
            @include lg\:inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:inset-x-2\/3") {
        @include assert {
          @include output {
            @include lg\:inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:inset-x-1\/4") {
        @include assert {
          @include output {
            @include lg\:inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it("lg\:inset-x-2\/4") {
        @include assert {
          @include output {
            @include lg\:inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("lg\:inset-x-3\/4") {
        @include assert {
          @include output {
            @include lg\:inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it("lg\:inset-x-full") {
        @include assert {
          @include output {
            @include lg\:inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it("lg\:inset-y-auto") {
        @include assert {
          @include output {
            @include lg\:inset-y-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it("lg\:inset-y-1\/2") {
        @include assert {
          @include output {
            @include lg\:inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("lg\:inset-y-1\/3") {
        @include assert {
          @include output {
            @include lg\:inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:inset-y-2\/3") {
        @include assert {
          @include output {
            @include lg\:inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:inset-y-1\/4") {
        @include assert {
          @include output {
            @include lg\:inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it("lg\:inset-y-2\/4") {
        @include assert {
          @include output {
            @include lg\:inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("lg\:inset-y-3\/4") {
        @include assert {
          @include output {
            @include lg\:inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it("lg\:inset-y-full") {
        @include assert {
          @include output {
            @include lg\:inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it("lg\:start-auto") {
        @include assert {
          @include output {
            @include lg\:start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it("lg\:start-1\/2") {
        @include assert {
          @include output {
            @include lg\:start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("lg\:start-1\/3") {
        @include assert {
          @include output {
            @include lg\:start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:start-2\/3") {
        @include assert {
          @include output {
            @include lg\:start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:start-1\/4") {
        @include assert {
          @include output {
            @include lg\:start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it("lg\:start-2\/4") {
        @include assert {
          @include output {
            @include lg\:start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("lg\:start-3\/4") {
        @include assert {
          @include output {
            @include lg\:start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it("lg\:start-full") {
        @include assert {
          @include output {
            @include lg\:start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it("lg\:end-auto") {
        @include assert {
          @include output {
            @include lg\:end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it("lg\:end-1\/2") {
        @include assert {
          @include output {
            @include lg\:end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("lg\:end-1\/3") {
        @include assert {
          @include output {
            @include lg\:end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:end-2\/3") {
        @include assert {
          @include output {
            @include lg\:end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:end-1\/4") {
        @include assert {
          @include output {
            @include lg\:end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it("lg\:end-2\/4") {
        @include assert {
          @include output {
            @include lg\:end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("lg\:end-3\/4") {
        @include assert {
          @include output {
            @include lg\:end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it("lg\:end-full") {
        @include assert {
          @include output {
            @include lg\:end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it("lg\:top-auto") {
        @include assert {
          @include output {
            @include lg\:top-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: auto;
            }
          }
        }
      }

      @include it("lg\:top-1\/2") {
        @include assert {
          @include output {
            @include lg\:top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 50%;
            }
          }
        }
      }

      @include it("lg\:top-1\/3") {
        @include assert {
          @include output {
            @include lg\:top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:top-2\/3") {
        @include assert {
          @include output {
            @include lg\:top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:top-1\/4") {
        @include assert {
          @include output {
            @include lg\:top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 25%;
            }
          }
        }
      }

      @include it("lg\:top-2\/4") {
        @include assert {
          @include output {
            @include lg\:top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 50%;
            }
          }
        }
      }

      @include it("lg\:top-3\/4") {
        @include assert {
          @include output {
            @include lg\:top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 75%;
            }
          }
        }
      }

      @include it("lg\:top-full") {
        @include assert {
          @include output {
            @include lg\:top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 100%;
            }
          }
        }
      }

      @include it("lg\:right-auto") {
        @include assert {
          @include output {
            @include lg\:right-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: auto;
            }
          }
        }
      }

      @include it("lg\:right-1\/2") {
        @include assert {
          @include output {
            @include lg\:right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 50%;
            }
          }
        }
      }

      @include it("lg\:right-1\/3") {
        @include assert {
          @include output {
            @include lg\:right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:right-2\/3") {
        @include assert {
          @include output {
            @include lg\:right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:right-1\/4") {
        @include assert {
          @include output {
            @include lg\:right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 25%;
            }
          }
        }
      }

      @include it("lg\:right-2\/4") {
        @include assert {
          @include output {
            @include lg\:right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 50%;
            }
          }
        }
      }

      @include it("lg\:right-3\/4") {
        @include assert {
          @include output {
            @include lg\:right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 75%;
            }
          }
        }
      }

      @include it("lg\:right-full") {
        @include assert {
          @include output {
            @include lg\:right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 100%;
            }
          }
        }
      }

      @include it("lg\:bottom-auto") {
        @include assert {
          @include output {
            @include lg\:bottom-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: auto;
            }
          }
        }
      }

      @include it("lg\:bottom-1\/2") {
        @include assert {
          @include output {
            @include lg\:bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("lg\:bottom-1\/3") {
        @include assert {
          @include output {
            @include lg\:bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:bottom-2\/3") {
        @include assert {
          @include output {
            @include lg\:bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:bottom-1\/4") {
        @include assert {
          @include output {
            @include lg\:bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 25%;
            }
          }
        }
      }

      @include it("lg\:bottom-2\/4") {
        @include assert {
          @include output {
            @include lg\:bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("lg\:bottom-3\/4") {
        @include assert {
          @include output {
            @include lg\:bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 75%;
            }
          }
        }
      }

      @include it("lg\:bottom-full") {
        @include assert {
          @include output {
            @include lg\:bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 100%;
            }
          }
        }
      }

      @include it("lg\:left-auto") {
        @include assert {
          @include output {
            @include lg\:left-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: auto;
            }
          }
        }
      }

      @include it("lg\:left-1\/2") {
        @include assert {
          @include output {
            @include lg\:left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 50%;
            }
          }
        }
      }

      @include it("lg\:left-1\/3") {
        @include assert {
          @include output {
            @include lg\:left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it("lg\:left-2\/3") {
        @include assert {
          @include output {
            @include lg\:left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it("lg\:left-1\/4") {
        @include assert {
          @include output {
            @include lg\:left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 25%;
            }
          }
        }
      }

      @include it("lg\:left-2\/4") {
        @include assert {
          @include output {
            @include lg\:left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 50%;
            }
          }
        }
      }

      @include it("lg\:left-3\/4") {
        @include assert {
          @include output {
            @include lg\:left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 75%;
            }
          }
        }
      }

      @include it("lg\:left-full") {
        @include assert {
          @include output {
            @include lg\:left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 100%;
            }
          }
        }
      }

      @include it("lg\:-inset-0") {
        @include assert {
          @include output {
            @include lg\:-inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 0px;
            }
          }
        }
      }

      @include it("lg\:-inset-x-0") {
        @include assert {
          @include output {
            @include lg\:-inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("lg\:-inset-y-0") {
        @include assert {
          @include output {
            @include lg\:-inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:-start-0") {
        @include assert {
          @include output {
            @include lg\:-start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("lg\:-end-0") {
        @include assert {
          @include output {
            @include lg\:-end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("lg\:-top-0") {
        @include assert {
          @include output {
            @include lg\:-top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 0px;
            }
          }
        }
      }

      @include it("lg\:-right-0") {
        @include assert {
          @include output {
            @include lg\:-right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 0px;
            }
          }
        }
      }

      @include it("lg\:-bottom-0") {
        @include assert {
          @include output {
            @include lg\:-bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("lg\:-left-0") {
        @include assert {
          @include output {
            @include lg\:-left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 0px;
            }
          }
        }
      }

      @include it("lg\:-inset-px") {
        @include assert {
          @include output {
            @include lg\:-inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -1px;
            }
          }
        }
      }

      @include it("lg\:-inset-x-px") {
        @include assert {
          @include output {
            @include lg\:-inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it("lg\:-inset-y-px") {
        @include assert {
          @include output {
            @include lg\:-inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it("lg\:-start-px") {
        @include assert {
          @include output {
            @include lg\:-start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it("lg\:-end-px") {
        @include assert {
          @include output {
            @include lg\:-end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it("lg\:-top-px") {
        @include assert {
          @include output {
            @include lg\:-top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1px;
            }
          }
        }
      }

      @include it("lg\:-right-px") {
        @include assert {
          @include output {
            @include lg\:-right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -1px;
            }
          }
        }
      }

      @include it("lg\:-bottom-px") {
        @include assert {
          @include output {
            @include lg\:-bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -1px;
            }
          }
        }
      }

      @include it("lg\:-left-px") {
        @include assert {
          @include output {
            @include lg\:-left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1px;
            }
          }
        }
      }

      @include it("lg\:-inset-0\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-0\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-0\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-start-0\.5") {
        @include assert {
          @include output {
            @include lg\:-start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-end-0\.5") {
        @include assert {
          @include output {
            @include lg\:-end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-top-0\.5") {
        @include assert {
          @include output {
            @include lg\:-top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-right-0\.5") {
        @include assert {
          @include output {
            @include lg\:-right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-0\.5") {
        @include assert {
          @include output {
            @include lg\:-bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-left-0\.5") {
        @include assert {
          @include output {
            @include lg\:-left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it("lg\:-inset-1") {
        @include assert {
          @include output {
            @include lg\:-inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-1") {
        @include assert {
          @include output {
            @include lg\:-inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-1") {
        @include assert {
          @include output {
            @include lg\:-inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-start-1") {
        @include assert {
          @include output {
            @include lg\:-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-end-1") {
        @include assert {
          @include output {
            @include lg\:-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-top-1") {
        @include assert {
          @include output {
            @include lg\:-top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-right-1") {
        @include assert {
          @include output {
            @include lg\:-right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-1") {
        @include assert {
          @include output {
            @include lg\:-bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-left-1") {
        @include assert {
          @include output {
            @include lg\:-left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-1\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-1\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-1\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-start-1\.5") {
        @include assert {
          @include output {
            @include lg\:-start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-end-1\.5") {
        @include assert {
          @include output {
            @include lg\:-end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-top-1\.5") {
        @include assert {
          @include output {
            @include lg\:-top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-right-1\.5") {
        @include assert {
          @include output {
            @include lg\:-right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-1\.5") {
        @include assert {
          @include output {
            @include lg\:-bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-left-1\.5") {
        @include assert {
          @include output {
            @include lg\:-left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it("lg\:-inset-2") {
        @include assert {
          @include output {
            @include lg\:-inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-2") {
        @include assert {
          @include output {
            @include lg\:-inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-2") {
        @include assert {
          @include output {
            @include lg\:-inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-start-2") {
        @include assert {
          @include output {
            @include lg\:-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-end-2") {
        @include assert {
          @include output {
            @include lg\:-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-top-2") {
        @include assert {
          @include output {
            @include lg\:-top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-right-2") {
        @include assert {
          @include output {
            @include lg\:-right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-2") {
        @include assert {
          @include output {
            @include lg\:-bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-left-2") {
        @include assert {
          @include output {
            @include lg\:-left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-2\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-2\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-2\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-start-2\.5") {
        @include assert {
          @include output {
            @include lg\:-start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-end-2\.5") {
        @include assert {
          @include output {
            @include lg\:-end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-top-2\.5") {
        @include assert {
          @include output {
            @include lg\:-top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-right-2\.5") {
        @include assert {
          @include output {
            @include lg\:-right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-2\.5") {
        @include assert {
          @include output {
            @include lg\:-bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-left-2\.5") {
        @include assert {
          @include output {
            @include lg\:-left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it("lg\:-inset-3") {
        @include assert {
          @include output {
            @include lg\:-inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-3") {
        @include assert {
          @include output {
            @include lg\:-inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-3") {
        @include assert {
          @include output {
            @include lg\:-inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-start-3") {
        @include assert {
          @include output {
            @include lg\:-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-end-3") {
        @include assert {
          @include output {
            @include lg\:-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-top-3") {
        @include assert {
          @include output {
            @include lg\:-top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-right-3") {
        @include assert {
          @include output {
            @include lg\:-right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-3") {
        @include assert {
          @include output {
            @include lg\:-bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-left-3") {
        @include assert {
          @include output {
            @include lg\:-left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-3\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-3\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-3\.5") {
        @include assert {
          @include output {
            @include lg\:-inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-start-3\.5") {
        @include assert {
          @include output {
            @include lg\:-start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-end-3\.5") {
        @include assert {
          @include output {
            @include lg\:-end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-top-3\.5") {
        @include assert {
          @include output {
            @include lg\:-top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-right-3\.5") {
        @include assert {
          @include output {
            @include lg\:-right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-3\.5") {
        @include assert {
          @include output {
            @include lg\:-bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-left-3\.5") {
        @include assert {
          @include output {
            @include lg\:-left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it("lg\:-inset-4") {
        @include assert {
          @include output {
            @include lg\:-inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -1rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-4") {
        @include assert {
          @include output {
            @include lg\:-inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-4") {
        @include assert {
          @include output {
            @include lg\:-inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it("lg\:-start-4") {
        @include assert {
          @include output {
            @include lg\:-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it("lg\:-end-4") {
        @include assert {
          @include output {
            @include lg\:-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it("lg\:-top-4") {
        @include assert {
          @include output {
            @include lg\:-top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1rem;
            }
          }
        }
      }

      @include it("lg\:-right-4") {
        @include assert {
          @include output {
            @include lg\:-right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -1rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-4") {
        @include assert {
          @include output {
            @include lg\:-bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it("lg\:-left-4") {
        @include assert {
          @include output {
            @include lg\:-left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1rem;
            }
          }
        }
      }

      @include it("lg\:-inset-5") {
        @include assert {
          @include output {
            @include lg\:-inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-5") {
        @include assert {
          @include output {
            @include lg\:-inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-5") {
        @include assert {
          @include output {
            @include lg\:-inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-start-5") {
        @include assert {
          @include output {
            @include lg\:-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-end-5") {
        @include assert {
          @include output {
            @include lg\:-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-top-5") {
        @include assert {
          @include output {
            @include lg\:-top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-right-5") {
        @include assert {
          @include output {
            @include lg\:-right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-5") {
        @include assert {
          @include output {
            @include lg\:-bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-left-5") {
        @include assert {
          @include output {
            @include lg\:-left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-6") {
        @include assert {
          @include output {
            @include lg\:-inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-6") {
        @include assert {
          @include output {
            @include lg\:-inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-6") {
        @include assert {
          @include output {
            @include lg\:-inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-start-6") {
        @include assert {
          @include output {
            @include lg\:-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-end-6") {
        @include assert {
          @include output {
            @include lg\:-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-top-6") {
        @include assert {
          @include output {
            @include lg\:-top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-right-6") {
        @include assert {
          @include output {
            @include lg\:-right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-6") {
        @include assert {
          @include output {
            @include lg\:-bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-left-6") {
        @include assert {
          @include output {
            @include lg\:-left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-7") {
        @include assert {
          @include output {
            @include lg\:-inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-7") {
        @include assert {
          @include output {
            @include lg\:-inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-7") {
        @include assert {
          @include output {
            @include lg\:-inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-start-7") {
        @include assert {
          @include output {
            @include lg\:-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-end-7") {
        @include assert {
          @include output {
            @include lg\:-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-top-7") {
        @include assert {
          @include output {
            @include lg\:-top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-right-7") {
        @include assert {
          @include output {
            @include lg\:-right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-7") {
        @include assert {
          @include output {
            @include lg\:-bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-left-7") {
        @include assert {
          @include output {
            @include lg\:-left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-8") {
        @include assert {
          @include output {
            @include lg\:-inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -2rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-8") {
        @include assert {
          @include output {
            @include lg\:-inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-8") {
        @include assert {
          @include output {
            @include lg\:-inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it("lg\:-start-8") {
        @include assert {
          @include output {
            @include lg\:-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it("lg\:-end-8") {
        @include assert {
          @include output {
            @include lg\:-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it("lg\:-top-8") {
        @include assert {
          @include output {
            @include lg\:-top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2rem;
            }
          }
        }
      }

      @include it("lg\:-right-8") {
        @include assert {
          @include output {
            @include lg\:-right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -2rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-8") {
        @include assert {
          @include output {
            @include lg\:-bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it("lg\:-left-8") {
        @include assert {
          @include output {
            @include lg\:-left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2rem;
            }
          }
        }
      }

      @include it("lg\:-inset-9") {
        @include assert {
          @include output {
            @include lg\:-inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-9") {
        @include assert {
          @include output {
            @include lg\:-inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-9") {
        @include assert {
          @include output {
            @include lg\:-inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-start-9") {
        @include assert {
          @include output {
            @include lg\:-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-end-9") {
        @include assert {
          @include output {
            @include lg\:-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-top-9") {
        @include assert {
          @include output {
            @include lg\:-top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-right-9") {
        @include assert {
          @include output {
            @include lg\:-right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-9") {
        @include assert {
          @include output {
            @include lg\:-bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-left-9") {
        @include assert {
          @include output {
            @include lg\:-left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it("lg\:-inset-10") {
        @include assert {
          @include output {
            @include lg\:-inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-10") {
        @include assert {
          @include output {
            @include lg\:-inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-10") {
        @include assert {
          @include output {
            @include lg\:-inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-start-10") {
        @include assert {
          @include output {
            @include lg\:-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-end-10") {
        @include assert {
          @include output {
            @include lg\:-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-top-10") {
        @include assert {
          @include output {
            @include lg\:-top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-right-10") {
        @include assert {
          @include output {
            @include lg\:-right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-10") {
        @include assert {
          @include output {
            @include lg\:-bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-left-10") {
        @include assert {
          @include output {
            @include lg\:-left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-11") {
        @include assert {
          @include output {
            @include lg\:-inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-11") {
        @include assert {
          @include output {
            @include lg\:-inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-11") {
        @include assert {
          @include output {
            @include lg\:-inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-start-11") {
        @include assert {
          @include output {
            @include lg\:-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-end-11") {
        @include assert {
          @include output {
            @include lg\:-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-top-11") {
        @include assert {
          @include output {
            @include lg\:-top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-right-11") {
        @include assert {
          @include output {
            @include lg\:-right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-11") {
        @include assert {
          @include output {
            @include lg\:-bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-left-11") {
        @include assert {
          @include output {
            @include lg\:-left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it("lg\:-inset-12") {
        @include assert {
          @include output {
            @include lg\:-inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -3rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-12") {
        @include assert {
          @include output {
            @include lg\:-inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-12") {
        @include assert {
          @include output {
            @include lg\:-inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it("lg\:-start-12") {
        @include assert {
          @include output {
            @include lg\:-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it("lg\:-end-12") {
        @include assert {
          @include output {
            @include lg\:-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it("lg\:-top-12") {
        @include assert {
          @include output {
            @include lg\:-top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -3rem;
            }
          }
        }
      }

      @include it("lg\:-right-12") {
        @include assert {
          @include output {
            @include lg\:-right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -3rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-12") {
        @include assert {
          @include output {
            @include lg\:-bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it("lg\:-left-12") {
        @include assert {
          @include output {
            @include lg\:-left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -3rem;
            }
          }
        }
      }

      @include it("lg\:-inset-14") {
        @include assert {
          @include output {
            @include lg\:-inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-14") {
        @include assert {
          @include output {
            @include lg\:-inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-14") {
        @include assert {
          @include output {
            @include lg\:-inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-start-14") {
        @include assert {
          @include output {
            @include lg\:-start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-end-14") {
        @include assert {
          @include output {
            @include lg\:-end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-top-14") {
        @include assert {
          @include output {
            @include lg\:-top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-right-14") {
        @include assert {
          @include output {
            @include lg\:-right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-14") {
        @include assert {
          @include output {
            @include lg\:-bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-left-14") {
        @include assert {
          @include output {
            @include lg\:-left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-16") {
        @include assert {
          @include output {
            @include lg\:-inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -4rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-16") {
        @include assert {
          @include output {
            @include lg\:-inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-16") {
        @include assert {
          @include output {
            @include lg\:-inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it("lg\:-start-16") {
        @include assert {
          @include output {
            @include lg\:-start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it("lg\:-end-16") {
        @include assert {
          @include output {
            @include lg\:-end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it("lg\:-top-16") {
        @include assert {
          @include output {
            @include lg\:-top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -4rem;
            }
          }
        }
      }

      @include it("lg\:-right-16") {
        @include assert {
          @include output {
            @include lg\:-right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -4rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-16") {
        @include assert {
          @include output {
            @include lg\:-bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it("lg\:-left-16") {
        @include assert {
          @include output {
            @include lg\:-left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -4rem;
            }
          }
        }
      }

      @include it("lg\:-inset-20") {
        @include assert {
          @include output {
            @include lg\:-inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-20") {
        @include assert {
          @include output {
            @include lg\:-inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-20") {
        @include assert {
          @include output {
            @include lg\:-inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it("lg\:-start-20") {
        @include assert {
          @include output {
            @include lg\:-start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it("lg\:-end-20") {
        @include assert {
          @include output {
            @include lg\:-end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it("lg\:-top-20") {
        @include assert {
          @include output {
            @include lg\:-top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -5rem;
            }
          }
        }
      }

      @include it("lg\:-right-20") {
        @include assert {
          @include output {
            @include lg\:-right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -5rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-20") {
        @include assert {
          @include output {
            @include lg\:-bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it("lg\:-left-20") {
        @include assert {
          @include output {
            @include lg\:-left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -5rem;
            }
          }
        }
      }

      @include it("lg\:-inset-24") {
        @include assert {
          @include output {
            @include lg\:-inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -6rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-24") {
        @include assert {
          @include output {
            @include lg\:-inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-24") {
        @include assert {
          @include output {
            @include lg\:-inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it("lg\:-start-24") {
        @include assert {
          @include output {
            @include lg\:-start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it("lg\:-end-24") {
        @include assert {
          @include output {
            @include lg\:-end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it("lg\:-top-24") {
        @include assert {
          @include output {
            @include lg\:-top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -6rem;
            }
          }
        }
      }

      @include it("lg\:-right-24") {
        @include assert {
          @include output {
            @include lg\:-right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -6rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-24") {
        @include assert {
          @include output {
            @include lg\:-bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it("lg\:-left-24") {
        @include assert {
          @include output {
            @include lg\:-left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -6rem;
            }
          }
        }
      }

      @include it("lg\:-inset-28") {
        @include assert {
          @include output {
            @include lg\:-inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -7rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-28") {
        @include assert {
          @include output {
            @include lg\:-inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-28") {
        @include assert {
          @include output {
            @include lg\:-inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it("lg\:-start-28") {
        @include assert {
          @include output {
            @include lg\:-start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it("lg\:-end-28") {
        @include assert {
          @include output {
            @include lg\:-end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it("lg\:-top-28") {
        @include assert {
          @include output {
            @include lg\:-top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -7rem;
            }
          }
        }
      }

      @include it("lg\:-right-28") {
        @include assert {
          @include output {
            @include lg\:-right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -7rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-28") {
        @include assert {
          @include output {
            @include lg\:-bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it("lg\:-left-28") {
        @include assert {
          @include output {
            @include lg\:-left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -7rem;
            }
          }
        }
      }

      @include it("lg\:-inset-32") {
        @include assert {
          @include output {
            @include lg\:-inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -8rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-32") {
        @include assert {
          @include output {
            @include lg\:-inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-32") {
        @include assert {
          @include output {
            @include lg\:-inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it("lg\:-start-32") {
        @include assert {
          @include output {
            @include lg\:-start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it("lg\:-end-32") {
        @include assert {
          @include output {
            @include lg\:-end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it("lg\:-top-32") {
        @include assert {
          @include output {
            @include lg\:-top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -8rem;
            }
          }
        }
      }

      @include it("lg\:-right-32") {
        @include assert {
          @include output {
            @include lg\:-right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -8rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-32") {
        @include assert {
          @include output {
            @include lg\:-bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it("lg\:-left-32") {
        @include assert {
          @include output {
            @include lg\:-left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -8rem;
            }
          }
        }
      }

      @include it("lg\:-inset-36") {
        @include assert {
          @include output {
            @include lg\:-inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -9rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-36") {
        @include assert {
          @include output {
            @include lg\:-inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-36") {
        @include assert {
          @include output {
            @include lg\:-inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it("lg\:-start-36") {
        @include assert {
          @include output {
            @include lg\:-start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it("lg\:-end-36") {
        @include assert {
          @include output {
            @include lg\:-end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it("lg\:-top-36") {
        @include assert {
          @include output {
            @include lg\:-top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -9rem;
            }
          }
        }
      }

      @include it("lg\:-right-36") {
        @include assert {
          @include output {
            @include lg\:-right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -9rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-36") {
        @include assert {
          @include output {
            @include lg\:-bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it("lg\:-left-36") {
        @include assert {
          @include output {
            @include lg\:-left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -9rem;
            }
          }
        }
      }

      @include it("lg\:-inset-40") {
        @include assert {
          @include output {
            @include lg\:-inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -10rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-40") {
        @include assert {
          @include output {
            @include lg\:-inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-40") {
        @include assert {
          @include output {
            @include lg\:-inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it("lg\:-start-40") {
        @include assert {
          @include output {
            @include lg\:-start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it("lg\:-end-40") {
        @include assert {
          @include output {
            @include lg\:-end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it("lg\:-top-40") {
        @include assert {
          @include output {
            @include lg\:-top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -10rem;
            }
          }
        }
      }

      @include it("lg\:-right-40") {
        @include assert {
          @include output {
            @include lg\:-right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -10rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-40") {
        @include assert {
          @include output {
            @include lg\:-bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it("lg\:-left-40") {
        @include assert {
          @include output {
            @include lg\:-left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -10rem;
            }
          }
        }
      }

      @include it("lg\:-inset-44") {
        @include assert {
          @include output {
            @include lg\:-inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -11rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-44") {
        @include assert {
          @include output {
            @include lg\:-inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-44") {
        @include assert {
          @include output {
            @include lg\:-inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it("lg\:-start-44") {
        @include assert {
          @include output {
            @include lg\:-start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it("lg\:-end-44") {
        @include assert {
          @include output {
            @include lg\:-end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it("lg\:-top-44") {
        @include assert {
          @include output {
            @include lg\:-top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -11rem;
            }
          }
        }
      }

      @include it("lg\:-right-44") {
        @include assert {
          @include output {
            @include lg\:-right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -11rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-44") {
        @include assert {
          @include output {
            @include lg\:-bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it("lg\:-left-44") {
        @include assert {
          @include output {
            @include lg\:-left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -11rem;
            }
          }
        }
      }

      @include it("lg\:-inset-48") {
        @include assert {
          @include output {
            @include lg\:-inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -12rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-48") {
        @include assert {
          @include output {
            @include lg\:-inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-48") {
        @include assert {
          @include output {
            @include lg\:-inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it("lg\:-start-48") {
        @include assert {
          @include output {
            @include lg\:-start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it("lg\:-end-48") {
        @include assert {
          @include output {
            @include lg\:-end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it("lg\:-top-48") {
        @include assert {
          @include output {
            @include lg\:-top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -12rem;
            }
          }
        }
      }

      @include it("lg\:-right-48") {
        @include assert {
          @include output {
            @include lg\:-right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -12rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-48") {
        @include assert {
          @include output {
            @include lg\:-bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it("lg\:-left-48") {
        @include assert {
          @include output {
            @include lg\:-left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -12rem;
            }
          }
        }
      }

      @include it("lg\:-inset-52") {
        @include assert {
          @include output {
            @include lg\:-inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -13rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-52") {
        @include assert {
          @include output {
            @include lg\:-inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-52") {
        @include assert {
          @include output {
            @include lg\:-inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it("lg\:-start-52") {
        @include assert {
          @include output {
            @include lg\:-start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it("lg\:-end-52") {
        @include assert {
          @include output {
            @include lg\:-end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it("lg\:-top-52") {
        @include assert {
          @include output {
            @include lg\:-top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -13rem;
            }
          }
        }
      }

      @include it("lg\:-right-52") {
        @include assert {
          @include output {
            @include lg\:-right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -13rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-52") {
        @include assert {
          @include output {
            @include lg\:-bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it("lg\:-left-52") {
        @include assert {
          @include output {
            @include lg\:-left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -13rem;
            }
          }
        }
      }

      @include it("lg\:-inset-56") {
        @include assert {
          @include output {
            @include lg\:-inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -14rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-56") {
        @include assert {
          @include output {
            @include lg\:-inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-56") {
        @include assert {
          @include output {
            @include lg\:-inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it("lg\:-start-56") {
        @include assert {
          @include output {
            @include lg\:-start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it("lg\:-end-56") {
        @include assert {
          @include output {
            @include lg\:-end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it("lg\:-top-56") {
        @include assert {
          @include output {
            @include lg\:-top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -14rem;
            }
          }
        }
      }

      @include it("lg\:-right-56") {
        @include assert {
          @include output {
            @include lg\:-right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -14rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-56") {
        @include assert {
          @include output {
            @include lg\:-bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it("lg\:-left-56") {
        @include assert {
          @include output {
            @include lg\:-left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -14rem;
            }
          }
        }
      }

      @include it("lg\:-inset-60") {
        @include assert {
          @include output {
            @include lg\:-inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -15rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-60") {
        @include assert {
          @include output {
            @include lg\:-inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-60") {
        @include assert {
          @include output {
            @include lg\:-inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it("lg\:-start-60") {
        @include assert {
          @include output {
            @include lg\:-start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it("lg\:-end-60") {
        @include assert {
          @include output {
            @include lg\:-end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it("lg\:-top-60") {
        @include assert {
          @include output {
            @include lg\:-top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -15rem;
            }
          }
        }
      }

      @include it("lg\:-right-60") {
        @include assert {
          @include output {
            @include lg\:-right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -15rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-60") {
        @include assert {
          @include output {
            @include lg\:-bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it("lg\:-left-60") {
        @include assert {
          @include output {
            @include lg\:-left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -15rem;
            }
          }
        }
      }

      @include it("lg\:-inset-64") {
        @include assert {
          @include output {
            @include lg\:-inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -16rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-64") {
        @include assert {
          @include output {
            @include lg\:-inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-64") {
        @include assert {
          @include output {
            @include lg\:-inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it("lg\:-start-64") {
        @include assert {
          @include output {
            @include lg\:-start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it("lg\:-end-64") {
        @include assert {
          @include output {
            @include lg\:-end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it("lg\:-top-64") {
        @include assert {
          @include output {
            @include lg\:-top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -16rem;
            }
          }
        }
      }

      @include it("lg\:-right-64") {
        @include assert {
          @include output {
            @include lg\:-right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -16rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-64") {
        @include assert {
          @include output {
            @include lg\:-bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it("lg\:-left-64") {
        @include assert {
          @include output {
            @include lg\:-left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -16rem;
            }
          }
        }
      }

      @include it("lg\:-inset-72") {
        @include assert {
          @include output {
            @include lg\:-inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -18rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-72") {
        @include assert {
          @include output {
            @include lg\:-inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-72") {
        @include assert {
          @include output {
            @include lg\:-inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it("lg\:-start-72") {
        @include assert {
          @include output {
            @include lg\:-start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it("lg\:-end-72") {
        @include assert {
          @include output {
            @include lg\:-end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it("lg\:-top-72") {
        @include assert {
          @include output {
            @include lg\:-top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -18rem;
            }
          }
        }
      }

      @include it("lg\:-right-72") {
        @include assert {
          @include output {
            @include lg\:-right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -18rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-72") {
        @include assert {
          @include output {
            @include lg\:-bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it("lg\:-left-72") {
        @include assert {
          @include output {
            @include lg\:-left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -18rem;
            }
          }
        }
      }

      @include it("lg\:-inset-80") {
        @include assert {
          @include output {
            @include lg\:-inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -20rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-80") {
        @include assert {
          @include output {
            @include lg\:-inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-80") {
        @include assert {
          @include output {
            @include lg\:-inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it("lg\:-start-80") {
        @include assert {
          @include output {
            @include lg\:-start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it("lg\:-end-80") {
        @include assert {
          @include output {
            @include lg\:-end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it("lg\:-top-80") {
        @include assert {
          @include output {
            @include lg\:-top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -20rem;
            }
          }
        }
      }

      @include it("lg\:-right-80") {
        @include assert {
          @include output {
            @include lg\:-right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -20rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-80") {
        @include assert {
          @include output {
            @include lg\:-bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it("lg\:-left-80") {
        @include assert {
          @include output {
            @include lg\:-left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -20rem;
            }
          }
        }
      }

      @include it("lg\:-inset-96") {
        @include assert {
          @include output {
            @include lg\:-inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -24rem;
            }
          }
        }
      }

      @include it("lg\:-inset-x-96") {
        @include assert {
          @include output {
            @include lg\:-inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it("lg\:-inset-y-96") {
        @include assert {
          @include output {
            @include lg\:-inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it("lg\:-start-96") {
        @include assert {
          @include output {
            @include lg\:-start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it("lg\:-end-96") {
        @include assert {
          @include output {
            @include lg\:-end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it("lg\:-top-96") {
        @include assert {
          @include output {
            @include lg\:-top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -24rem;
            }
          }
        }
      }

      @include it("lg\:-right-96") {
        @include assert {
          @include output {
            @include lg\:-right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -24rem;
            }
          }
        }
      }

      @include it("lg\:-bottom-96") {
        @include assert {
          @include output {
            @include lg\:-bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it("lg\:-left-96") {
        @include assert {
          @include output {
            @include lg\:-left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -24rem;
            }
          }
        }
      }

      @include it("lg\:-inset-1\/2") {
        @include assert {
          @include output {
            @include lg\:-inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -50%;
            }
          }
        }
      }

      @include it("lg\:-inset-1\/3") {
        @include assert {
          @include output {
            @include lg\:-inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-inset-2\/3") {
        @include assert {
          @include output {
            @include lg\:-inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-inset-1\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -25%;
            }
          }
        }
      }

      @include it("lg\:-inset-2\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -50%;
            }
          }
        }
      }

      @include it("lg\:-inset-3\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -75%;
            }
          }
        }
      }

      @include it("lg\:-inset-full") {
        @include assert {
          @include output {
            @include lg\:-inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -100%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-1\/2") {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-1\/3") {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-2\/3") {
        @include assert {
          @include output {
            @include lg\:-inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-1\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-2\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-3\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it("lg\:-inset-x-full") {
        @include assert {
          @include output {
            @include lg\:-inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-1\/2") {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-1\/3") {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-2\/3") {
        @include assert {
          @include output {
            @include lg\:-inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-1\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-2\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-3\/4") {
        @include assert {
          @include output {
            @include lg\:-inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it("lg\:-inset-y-full") {
        @include assert {
          @include output {
            @include lg\:-inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it("lg\:-start-1\/2") {
        @include assert {
          @include output {
            @include lg\:-start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("lg\:-start-1\/3") {
        @include assert {
          @include output {
            @include lg\:-start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-start-2\/3") {
        @include assert {
          @include output {
            @include lg\:-start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-start-1\/4") {
        @include assert {
          @include output {
            @include lg\:-start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it("lg\:-start-2\/4") {
        @include assert {
          @include output {
            @include lg\:-start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("lg\:-start-3\/4") {
        @include assert {
          @include output {
            @include lg\:-start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it("lg\:-start-full") {
        @include assert {
          @include output {
            @include lg\:-start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it("lg\:-end-1\/2") {
        @include assert {
          @include output {
            @include lg\:-end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("lg\:-end-1\/3") {
        @include assert {
          @include output {
            @include lg\:-end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-end-2\/3") {
        @include assert {
          @include output {
            @include lg\:-end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-end-1\/4") {
        @include assert {
          @include output {
            @include lg\:-end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it("lg\:-end-2\/4") {
        @include assert {
          @include output {
            @include lg\:-end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("lg\:-end-3\/4") {
        @include assert {
          @include output {
            @include lg\:-end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it("lg\:-end-full") {
        @include assert {
          @include output {
            @include lg\:-end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it("lg\:-top-1\/2") {
        @include assert {
          @include output {
            @include lg\:-top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -50%;
            }
          }
        }
      }

      @include it("lg\:-top-1\/3") {
        @include assert {
          @include output {
            @include lg\:-top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-top-2\/3") {
        @include assert {
          @include output {
            @include lg\:-top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-top-1\/4") {
        @include assert {
          @include output {
            @include lg\:-top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -25%;
            }
          }
        }
      }

      @include it("lg\:-top-2\/4") {
        @include assert {
          @include output {
            @include lg\:-top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -50%;
            }
          }
        }
      }

      @include it("lg\:-top-3\/4") {
        @include assert {
          @include output {
            @include lg\:-top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -75%;
            }
          }
        }
      }

      @include it("lg\:-top-full") {
        @include assert {
          @include output {
            @include lg\:-top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -100%;
            }
          }
        }
      }

      @include it("lg\:-right-1\/2") {
        @include assert {
          @include output {
            @include lg\:-right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -50%;
            }
          }
        }
      }

      @include it("lg\:-right-1\/3") {
        @include assert {
          @include output {
            @include lg\:-right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-right-2\/3") {
        @include assert {
          @include output {
            @include lg\:-right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-right-1\/4") {
        @include assert {
          @include output {
            @include lg\:-right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -25%;
            }
          }
        }
      }

      @include it("lg\:-right-2\/4") {
        @include assert {
          @include output {
            @include lg\:-right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -50%;
            }
          }
        }
      }

      @include it("lg\:-right-3\/4") {
        @include assert {
          @include output {
            @include lg\:-right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -75%;
            }
          }
        }
      }

      @include it("lg\:-right-full") {
        @include assert {
          @include output {
            @include lg\:-right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -100%;
            }
          }
        }
      }

      @include it("lg\:-bottom-1\/2") {
        @include assert {
          @include output {
            @include lg\:-bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("lg\:-bottom-1\/3") {
        @include assert {
          @include output {
            @include lg\:-bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-bottom-2\/3") {
        @include assert {
          @include output {
            @include lg\:-bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-bottom-1\/4") {
        @include assert {
          @include output {
            @include lg\:-bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -25%;
            }
          }
        }
      }

      @include it("lg\:-bottom-2\/4") {
        @include assert {
          @include output {
            @include lg\:-bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("lg\:-bottom-3\/4") {
        @include assert {
          @include output {
            @include lg\:-bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -75%;
            }
          }
        }
      }

      @include it("lg\:-bottom-full") {
        @include assert {
          @include output {
            @include lg\:-bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -100%;
            }
          }
        }
      }

      @include it("lg\:-left-1\/2") {
        @include assert {
          @include output {
            @include lg\:-left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -50%;
            }
          }
        }
      }

      @include it("lg\:-left-1\/3") {
        @include assert {
          @include output {
            @include lg\:-left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it("lg\:-left-2\/3") {
        @include assert {
          @include output {
            @include lg\:-left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it("lg\:-left-1\/4") {
        @include assert {
          @include output {
            @include lg\:-left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -25%;
            }
          }
        }
      }

      @include it("lg\:-left-2\/4") {
        @include assert {
          @include output {
            @include lg\:-left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -50%;
            }
          }
        }
      }

      @include it("lg\:-left-3\/4") {
        @include assert {
          @include output {
            @include lg\:-left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -75%;
            }
          }
        }
      }

      @include it("lg\:-left-full") {
        @include assert {
          @include output {
            @include lg\:-left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -100%;
            }
          }
        }
      }

      @include it("xl\:inset-0") {
        @include assert {
          @include output {
            @include xl\:inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0px;
            }
          }
        }
      }

      @include it("xl\:inset-x-0") {
        @include assert {
          @include output {
            @include xl\:inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("xl\:inset-y-0") {
        @include assert {
          @include output {
            @include xl\:inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:start-0") {
        @include assert {
          @include output {
            @include xl\:start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("xl\:end-0") {
        @include assert {
          @include output {
            @include xl\:end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("xl\:top-0") {
        @include assert {
          @include output {
            @include xl\:top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0px;
            }
          }
        }
      }

      @include it("xl\:right-0") {
        @include assert {
          @include output {
            @include xl\:right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0px;
            }
          }
        }
      }

      @include it("xl\:bottom-0") {
        @include assert {
          @include output {
            @include xl\:bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:left-0") {
        @include assert {
          @include output {
            @include xl\:left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0px;
            }
          }
        }
      }

      @include it("xl\:inset-px") {
        @include assert {
          @include output {
            @include xl\:inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 1px;
            }
          }
        }
      }

      @include it("xl\:inset-x-px") {
        @include assert {
          @include output {
            @include xl\:inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it("xl\:inset-y-px") {
        @include assert {
          @include output {
            @include xl\:inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it("xl\:start-px") {
        @include assert {
          @include output {
            @include xl\:start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it("xl\:end-px") {
        @include assert {
          @include output {
            @include xl\:end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it("xl\:top-px") {
        @include assert {
          @include output {
            @include xl\:top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1px;
            }
          }
        }
      }

      @include it("xl\:right-px") {
        @include assert {
          @include output {
            @include xl\:right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 1px;
            }
          }
        }
      }

      @include it("xl\:bottom-px") {
        @include assert {
          @include output {
            @include xl\:bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 1px;
            }
          }
        }
      }

      @include it("xl\:left-px") {
        @include assert {
          @include output {
            @include xl\:left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1px;
            }
          }
        }
      }

      @include it("xl\:inset-0\.5") {
        @include assert {
          @include output {
            @include xl\:inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-0\.5") {
        @include assert {
          @include output {
            @include xl\:inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-0\.5") {
        @include assert {
          @include output {
            @include xl\:inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:start-0\.5") {
        @include assert {
          @include output {
            @include xl\:start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:end-0\.5") {
        @include assert {
          @include output {
            @include xl\:end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:top-0\.5") {
        @include assert {
          @include output {
            @include xl\:top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:right-0\.5") {
        @include assert {
          @include output {
            @include xl\:right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:bottom-0\.5") {
        @include assert {
          @include output {
            @include xl\:bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:left-0\.5") {
        @include assert {
          @include output {
            @include xl\:left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it("xl\:inset-1") {
        @include assert {
          @include output {
            @include xl\:inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-1") {
        @include assert {
          @include output {
            @include xl\:inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-1") {
        @include assert {
          @include output {
            @include xl\:inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:start-1") {
        @include assert {
          @include output {
            @include xl\:start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:end-1") {
        @include assert {
          @include output {
            @include xl\:end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:top-1") {
        @include assert {
          @include output {
            @include xl\:top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:right-1") {
        @include assert {
          @include output {
            @include xl\:right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:bottom-1") {
        @include assert {
          @include output {
            @include xl\:bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:left-1") {
        @include assert {
          @include output {
            @include xl\:left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-1\.5") {
        @include assert {
          @include output {
            @include xl\:inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-1\.5") {
        @include assert {
          @include output {
            @include xl\:inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-1\.5") {
        @include assert {
          @include output {
            @include xl\:inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:start-1\.5") {
        @include assert {
          @include output {
            @include xl\:start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:end-1\.5") {
        @include assert {
          @include output {
            @include xl\:end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:top-1\.5") {
        @include assert {
          @include output {
            @include xl\:top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:right-1\.5") {
        @include assert {
          @include output {
            @include xl\:right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:bottom-1\.5") {
        @include assert {
          @include output {
            @include xl\:bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:left-1\.5") {
        @include assert {
          @include output {
            @include xl\:left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it("xl\:inset-2") {
        @include assert {
          @include output {
            @include xl\:inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-2") {
        @include assert {
          @include output {
            @include xl\:inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-2") {
        @include assert {
          @include output {
            @include xl\:inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:start-2") {
        @include assert {
          @include output {
            @include xl\:start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:end-2") {
        @include assert {
          @include output {
            @include xl\:end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:top-2") {
        @include assert {
          @include output {
            @include xl\:top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:right-2") {
        @include assert {
          @include output {
            @include xl\:right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:bottom-2") {
        @include assert {
          @include output {
            @include xl\:bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:left-2") {
        @include assert {
          @include output {
            @include xl\:left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-2\.5") {
        @include assert {
          @include output {
            @include xl\:inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-2\.5") {
        @include assert {
          @include output {
            @include xl\:inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-2\.5") {
        @include assert {
          @include output {
            @include xl\:inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:start-2\.5") {
        @include assert {
          @include output {
            @include xl\:start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:end-2\.5") {
        @include assert {
          @include output {
            @include xl\:end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:top-2\.5") {
        @include assert {
          @include output {
            @include xl\:top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:right-2\.5") {
        @include assert {
          @include output {
            @include xl\:right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:bottom-2\.5") {
        @include assert {
          @include output {
            @include xl\:bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:left-2\.5") {
        @include assert {
          @include output {
            @include xl\:left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it("xl\:inset-3") {
        @include assert {
          @include output {
            @include xl\:inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-3") {
        @include assert {
          @include output {
            @include xl\:inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-3") {
        @include assert {
          @include output {
            @include xl\:inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:start-3") {
        @include assert {
          @include output {
            @include xl\:start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:end-3") {
        @include assert {
          @include output {
            @include xl\:end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:top-3") {
        @include assert {
          @include output {
            @include xl\:top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:right-3") {
        @include assert {
          @include output {
            @include xl\:right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:bottom-3") {
        @include assert {
          @include output {
            @include xl\:bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:left-3") {
        @include assert {
          @include output {
            @include xl\:left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-3\.5") {
        @include assert {
          @include output {
            @include xl\:inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-3\.5") {
        @include assert {
          @include output {
            @include xl\:inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-3\.5") {
        @include assert {
          @include output {
            @include xl\:inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:start-3\.5") {
        @include assert {
          @include output {
            @include xl\:start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:end-3\.5") {
        @include assert {
          @include output {
            @include xl\:end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:top-3\.5") {
        @include assert {
          @include output {
            @include xl\:top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:right-3\.5") {
        @include assert {
          @include output {
            @include xl\:right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:bottom-3\.5") {
        @include assert {
          @include output {
            @include xl\:bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:left-3\.5") {
        @include assert {
          @include output {
            @include xl\:left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it("xl\:inset-4") {
        @include assert {
          @include output {
            @include xl\:inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 1rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-4") {
        @include assert {
          @include output {
            @include xl\:inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-4") {
        @include assert {
          @include output {
            @include xl\:inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it("xl\:start-4") {
        @include assert {
          @include output {
            @include xl\:start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it("xl\:end-4") {
        @include assert {
          @include output {
            @include xl\:end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it("xl\:top-4") {
        @include assert {
          @include output {
            @include xl\:top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1rem;
            }
          }
        }
      }

      @include it("xl\:right-4") {
        @include assert {
          @include output {
            @include xl\:right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 1rem;
            }
          }
        }
      }

      @include it("xl\:bottom-4") {
        @include assert {
          @include output {
            @include xl\:bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it("xl\:left-4") {
        @include assert {
          @include output {
            @include xl\:left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1rem;
            }
          }
        }
      }

      @include it("xl\:inset-5") {
        @include assert {
          @include output {
            @include xl\:inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-5") {
        @include assert {
          @include output {
            @include xl\:inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-5") {
        @include assert {
          @include output {
            @include xl\:inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:start-5") {
        @include assert {
          @include output {
            @include xl\:start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:end-5") {
        @include assert {
          @include output {
            @include xl\:end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:top-5") {
        @include assert {
          @include output {
            @include xl\:top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:right-5") {
        @include assert {
          @include output {
            @include xl\:right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:bottom-5") {
        @include assert {
          @include output {
            @include xl\:bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:left-5") {
        @include assert {
          @include output {
            @include xl\:left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-6") {
        @include assert {
          @include output {
            @include xl\:inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-6") {
        @include assert {
          @include output {
            @include xl\:inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-6") {
        @include assert {
          @include output {
            @include xl\:inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:start-6") {
        @include assert {
          @include output {
            @include xl\:start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:end-6") {
        @include assert {
          @include output {
            @include xl\:end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:top-6") {
        @include assert {
          @include output {
            @include xl\:top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:right-6") {
        @include assert {
          @include output {
            @include xl\:right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:bottom-6") {
        @include assert {
          @include output {
            @include xl\:bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:left-6") {
        @include assert {
          @include output {
            @include xl\:left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-7") {
        @include assert {
          @include output {
            @include xl\:inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-7") {
        @include assert {
          @include output {
            @include xl\:inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-7") {
        @include assert {
          @include output {
            @include xl\:inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:start-7") {
        @include assert {
          @include output {
            @include xl\:start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:end-7") {
        @include assert {
          @include output {
            @include xl\:end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:top-7") {
        @include assert {
          @include output {
            @include xl\:top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:right-7") {
        @include assert {
          @include output {
            @include xl\:right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:bottom-7") {
        @include assert {
          @include output {
            @include xl\:bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:left-7") {
        @include assert {
          @include output {
            @include xl\:left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-8") {
        @include assert {
          @include output {
            @include xl\:inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 2rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-8") {
        @include assert {
          @include output {
            @include xl\:inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-8") {
        @include assert {
          @include output {
            @include xl\:inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it("xl\:start-8") {
        @include assert {
          @include output {
            @include xl\:start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it("xl\:end-8") {
        @include assert {
          @include output {
            @include xl\:end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it("xl\:top-8") {
        @include assert {
          @include output {
            @include xl\:top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2rem;
            }
          }
        }
      }

      @include it("xl\:right-8") {
        @include assert {
          @include output {
            @include xl\:right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 2rem;
            }
          }
        }
      }

      @include it("xl\:bottom-8") {
        @include assert {
          @include output {
            @include xl\:bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it("xl\:left-8") {
        @include assert {
          @include output {
            @include xl\:left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2rem;
            }
          }
        }
      }

      @include it("xl\:inset-9") {
        @include assert {
          @include output {
            @include xl\:inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-9") {
        @include assert {
          @include output {
            @include xl\:inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-9") {
        @include assert {
          @include output {
            @include xl\:inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:start-9") {
        @include assert {
          @include output {
            @include xl\:start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:end-9") {
        @include assert {
          @include output {
            @include xl\:end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:top-9") {
        @include assert {
          @include output {
            @include xl\:top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:right-9") {
        @include assert {
          @include output {
            @include xl\:right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:bottom-9") {
        @include assert {
          @include output {
            @include xl\:bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:left-9") {
        @include assert {
          @include output {
            @include xl\:left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it("xl\:inset-10") {
        @include assert {
          @include output {
            @include xl\:inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-10") {
        @include assert {
          @include output {
            @include xl\:inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-10") {
        @include assert {
          @include output {
            @include xl\:inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:start-10") {
        @include assert {
          @include output {
            @include xl\:start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:end-10") {
        @include assert {
          @include output {
            @include xl\:end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:top-10") {
        @include assert {
          @include output {
            @include xl\:top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:right-10") {
        @include assert {
          @include output {
            @include xl\:right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:bottom-10") {
        @include assert {
          @include output {
            @include xl\:bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:left-10") {
        @include assert {
          @include output {
            @include xl\:left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-11") {
        @include assert {
          @include output {
            @include xl\:inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-11") {
        @include assert {
          @include output {
            @include xl\:inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-11") {
        @include assert {
          @include output {
            @include xl\:inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:start-11") {
        @include assert {
          @include output {
            @include xl\:start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:end-11") {
        @include assert {
          @include output {
            @include xl\:end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:top-11") {
        @include assert {
          @include output {
            @include xl\:top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:right-11") {
        @include assert {
          @include output {
            @include xl\:right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:bottom-11") {
        @include assert {
          @include output {
            @include xl\:bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:left-11") {
        @include assert {
          @include output {
            @include xl\:left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it("xl\:inset-12") {
        @include assert {
          @include output {
            @include xl\:inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 3rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-12") {
        @include assert {
          @include output {
            @include xl\:inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-12") {
        @include assert {
          @include output {
            @include xl\:inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it("xl\:start-12") {
        @include assert {
          @include output {
            @include xl\:start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it("xl\:end-12") {
        @include assert {
          @include output {
            @include xl\:end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it("xl\:top-12") {
        @include assert {
          @include output {
            @include xl\:top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 3rem;
            }
          }
        }
      }

      @include it("xl\:right-12") {
        @include assert {
          @include output {
            @include xl\:right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 3rem;
            }
          }
        }
      }

      @include it("xl\:bottom-12") {
        @include assert {
          @include output {
            @include xl\:bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it("xl\:left-12") {
        @include assert {
          @include output {
            @include xl\:left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 3rem;
            }
          }
        }
      }

      @include it("xl\:inset-14") {
        @include assert {
          @include output {
            @include xl\:inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-14") {
        @include assert {
          @include output {
            @include xl\:inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-14") {
        @include assert {
          @include output {
            @include xl\:inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:start-14") {
        @include assert {
          @include output {
            @include xl\:start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:end-14") {
        @include assert {
          @include output {
            @include xl\:end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:top-14") {
        @include assert {
          @include output {
            @include xl\:top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:right-14") {
        @include assert {
          @include output {
            @include xl\:right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:bottom-14") {
        @include assert {
          @include output {
            @include xl\:bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:left-14") {
        @include assert {
          @include output {
            @include xl\:left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it("xl\:inset-16") {
        @include assert {
          @include output {
            @include xl\:inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 4rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-16") {
        @include assert {
          @include output {
            @include xl\:inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-16") {
        @include assert {
          @include output {
            @include xl\:inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it("xl\:start-16") {
        @include assert {
          @include output {
            @include xl\:start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it("xl\:end-16") {
        @include assert {
          @include output {
            @include xl\:end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it("xl\:top-16") {
        @include assert {
          @include output {
            @include xl\:top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 4rem;
            }
          }
        }
      }

      @include it("xl\:right-16") {
        @include assert {
          @include output {
            @include xl\:right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 4rem;
            }
          }
        }
      }

      @include it("xl\:bottom-16") {
        @include assert {
          @include output {
            @include xl\:bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it("xl\:left-16") {
        @include assert {
          @include output {
            @include xl\:left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 4rem;
            }
          }
        }
      }

      @include it("xl\:inset-20") {
        @include assert {
          @include output {
            @include xl\:inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 5rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-20") {
        @include assert {
          @include output {
            @include xl\:inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-20") {
        @include assert {
          @include output {
            @include xl\:inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it("xl\:start-20") {
        @include assert {
          @include output {
            @include xl\:start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it("xl\:end-20") {
        @include assert {
          @include output {
            @include xl\:end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it("xl\:top-20") {
        @include assert {
          @include output {
            @include xl\:top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 5rem;
            }
          }
        }
      }

      @include it("xl\:right-20") {
        @include assert {
          @include output {
            @include xl\:right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 5rem;
            }
          }
        }
      }

      @include it("xl\:bottom-20") {
        @include assert {
          @include output {
            @include xl\:bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it("xl\:left-20") {
        @include assert {
          @include output {
            @include xl\:left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 5rem;
            }
          }
        }
      }

      @include it("xl\:inset-24") {
        @include assert {
          @include output {
            @include xl\:inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 6rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-24") {
        @include assert {
          @include output {
            @include xl\:inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-24") {
        @include assert {
          @include output {
            @include xl\:inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it("xl\:start-24") {
        @include assert {
          @include output {
            @include xl\:start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it("xl\:end-24") {
        @include assert {
          @include output {
            @include xl\:end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it("xl\:top-24") {
        @include assert {
          @include output {
            @include xl\:top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 6rem;
            }
          }
        }
      }

      @include it("xl\:right-24") {
        @include assert {
          @include output {
            @include xl\:right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 6rem;
            }
          }
        }
      }

      @include it("xl\:bottom-24") {
        @include assert {
          @include output {
            @include xl\:bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it("xl\:left-24") {
        @include assert {
          @include output {
            @include xl\:left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 6rem;
            }
          }
        }
      }

      @include it("xl\:inset-28") {
        @include assert {
          @include output {
            @include xl\:inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 7rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-28") {
        @include assert {
          @include output {
            @include xl\:inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-28") {
        @include assert {
          @include output {
            @include xl\:inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it("xl\:start-28") {
        @include assert {
          @include output {
            @include xl\:start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it("xl\:end-28") {
        @include assert {
          @include output {
            @include xl\:end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it("xl\:top-28") {
        @include assert {
          @include output {
            @include xl\:top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 7rem;
            }
          }
        }
      }

      @include it("xl\:right-28") {
        @include assert {
          @include output {
            @include xl\:right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 7rem;
            }
          }
        }
      }

      @include it("xl\:bottom-28") {
        @include assert {
          @include output {
            @include xl\:bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it("xl\:left-28") {
        @include assert {
          @include output {
            @include xl\:left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 7rem;
            }
          }
        }
      }

      @include it("xl\:inset-32") {
        @include assert {
          @include output {
            @include xl\:inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 8rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-32") {
        @include assert {
          @include output {
            @include xl\:inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-32") {
        @include assert {
          @include output {
            @include xl\:inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it("xl\:start-32") {
        @include assert {
          @include output {
            @include xl\:start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it("xl\:end-32") {
        @include assert {
          @include output {
            @include xl\:end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it("xl\:top-32") {
        @include assert {
          @include output {
            @include xl\:top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 8rem;
            }
          }
        }
      }

      @include it("xl\:right-32") {
        @include assert {
          @include output {
            @include xl\:right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 8rem;
            }
          }
        }
      }

      @include it("xl\:bottom-32") {
        @include assert {
          @include output {
            @include xl\:bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it("xl\:left-32") {
        @include assert {
          @include output {
            @include xl\:left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 8rem;
            }
          }
        }
      }

      @include it("xl\:inset-36") {
        @include assert {
          @include output {
            @include xl\:inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 9rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-36") {
        @include assert {
          @include output {
            @include xl\:inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-36") {
        @include assert {
          @include output {
            @include xl\:inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it("xl\:start-36") {
        @include assert {
          @include output {
            @include xl\:start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it("xl\:end-36") {
        @include assert {
          @include output {
            @include xl\:end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it("xl\:top-36") {
        @include assert {
          @include output {
            @include xl\:top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 9rem;
            }
          }
        }
      }

      @include it("xl\:right-36") {
        @include assert {
          @include output {
            @include xl\:right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 9rem;
            }
          }
        }
      }

      @include it("xl\:bottom-36") {
        @include assert {
          @include output {
            @include xl\:bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it("xl\:left-36") {
        @include assert {
          @include output {
            @include xl\:left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 9rem;
            }
          }
        }
      }

      @include it("xl\:inset-40") {
        @include assert {
          @include output {
            @include xl\:inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 10rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-40") {
        @include assert {
          @include output {
            @include xl\:inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-40") {
        @include assert {
          @include output {
            @include xl\:inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it("xl\:start-40") {
        @include assert {
          @include output {
            @include xl\:start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it("xl\:end-40") {
        @include assert {
          @include output {
            @include xl\:end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it("xl\:top-40") {
        @include assert {
          @include output {
            @include xl\:top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 10rem;
            }
          }
        }
      }

      @include it("xl\:right-40") {
        @include assert {
          @include output {
            @include xl\:right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 10rem;
            }
          }
        }
      }

      @include it("xl\:bottom-40") {
        @include assert {
          @include output {
            @include xl\:bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it("xl\:left-40") {
        @include assert {
          @include output {
            @include xl\:left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 10rem;
            }
          }
        }
      }

      @include it("xl\:inset-44") {
        @include assert {
          @include output {
            @include xl\:inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 11rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-44") {
        @include assert {
          @include output {
            @include xl\:inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-44") {
        @include assert {
          @include output {
            @include xl\:inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it("xl\:start-44") {
        @include assert {
          @include output {
            @include xl\:start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it("xl\:end-44") {
        @include assert {
          @include output {
            @include xl\:end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it("xl\:top-44") {
        @include assert {
          @include output {
            @include xl\:top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 11rem;
            }
          }
        }
      }

      @include it("xl\:right-44") {
        @include assert {
          @include output {
            @include xl\:right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 11rem;
            }
          }
        }
      }

      @include it("xl\:bottom-44") {
        @include assert {
          @include output {
            @include xl\:bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it("xl\:left-44") {
        @include assert {
          @include output {
            @include xl\:left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 11rem;
            }
          }
        }
      }

      @include it("xl\:inset-48") {
        @include assert {
          @include output {
            @include xl\:inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 12rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-48") {
        @include assert {
          @include output {
            @include xl\:inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-48") {
        @include assert {
          @include output {
            @include xl\:inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it("xl\:start-48") {
        @include assert {
          @include output {
            @include xl\:start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it("xl\:end-48") {
        @include assert {
          @include output {
            @include xl\:end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it("xl\:top-48") {
        @include assert {
          @include output {
            @include xl\:top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 12rem;
            }
          }
        }
      }

      @include it("xl\:right-48") {
        @include assert {
          @include output {
            @include xl\:right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 12rem;
            }
          }
        }
      }

      @include it("xl\:bottom-48") {
        @include assert {
          @include output {
            @include xl\:bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it("xl\:left-48") {
        @include assert {
          @include output {
            @include xl\:left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 12rem;
            }
          }
        }
      }

      @include it("xl\:inset-52") {
        @include assert {
          @include output {
            @include xl\:inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 13rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-52") {
        @include assert {
          @include output {
            @include xl\:inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-52") {
        @include assert {
          @include output {
            @include xl\:inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it("xl\:start-52") {
        @include assert {
          @include output {
            @include xl\:start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it("xl\:end-52") {
        @include assert {
          @include output {
            @include xl\:end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it("xl\:top-52") {
        @include assert {
          @include output {
            @include xl\:top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 13rem;
            }
          }
        }
      }

      @include it("xl\:right-52") {
        @include assert {
          @include output {
            @include xl\:right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 13rem;
            }
          }
        }
      }

      @include it("xl\:bottom-52") {
        @include assert {
          @include output {
            @include xl\:bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it("xl\:left-52") {
        @include assert {
          @include output {
            @include xl\:left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 13rem;
            }
          }
        }
      }

      @include it("xl\:inset-56") {
        @include assert {
          @include output {
            @include xl\:inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 14rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-56") {
        @include assert {
          @include output {
            @include xl\:inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-56") {
        @include assert {
          @include output {
            @include xl\:inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it("xl\:start-56") {
        @include assert {
          @include output {
            @include xl\:start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it("xl\:end-56") {
        @include assert {
          @include output {
            @include xl\:end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it("xl\:top-56") {
        @include assert {
          @include output {
            @include xl\:top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 14rem;
            }
          }
        }
      }

      @include it("xl\:right-56") {
        @include assert {
          @include output {
            @include xl\:right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 14rem;
            }
          }
        }
      }

      @include it("xl\:bottom-56") {
        @include assert {
          @include output {
            @include xl\:bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it("xl\:left-56") {
        @include assert {
          @include output {
            @include xl\:left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 14rem;
            }
          }
        }
      }

      @include it("xl\:inset-60") {
        @include assert {
          @include output {
            @include xl\:inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 15rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-60") {
        @include assert {
          @include output {
            @include xl\:inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-60") {
        @include assert {
          @include output {
            @include xl\:inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it("xl\:start-60") {
        @include assert {
          @include output {
            @include xl\:start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it("xl\:end-60") {
        @include assert {
          @include output {
            @include xl\:end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it("xl\:top-60") {
        @include assert {
          @include output {
            @include xl\:top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 15rem;
            }
          }
        }
      }

      @include it("xl\:right-60") {
        @include assert {
          @include output {
            @include xl\:right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 15rem;
            }
          }
        }
      }

      @include it("xl\:bottom-60") {
        @include assert {
          @include output {
            @include xl\:bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it("xl\:left-60") {
        @include assert {
          @include output {
            @include xl\:left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 15rem;
            }
          }
        }
      }

      @include it("xl\:inset-64") {
        @include assert {
          @include output {
            @include xl\:inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 16rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-64") {
        @include assert {
          @include output {
            @include xl\:inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-64") {
        @include assert {
          @include output {
            @include xl\:inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it("xl\:start-64") {
        @include assert {
          @include output {
            @include xl\:start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it("xl\:end-64") {
        @include assert {
          @include output {
            @include xl\:end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it("xl\:top-64") {
        @include assert {
          @include output {
            @include xl\:top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 16rem;
            }
          }
        }
      }

      @include it("xl\:right-64") {
        @include assert {
          @include output {
            @include xl\:right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 16rem;
            }
          }
        }
      }

      @include it("xl\:bottom-64") {
        @include assert {
          @include output {
            @include xl\:bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it("xl\:left-64") {
        @include assert {
          @include output {
            @include xl\:left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 16rem;
            }
          }
        }
      }

      @include it("xl\:inset-72") {
        @include assert {
          @include output {
            @include xl\:inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 18rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-72") {
        @include assert {
          @include output {
            @include xl\:inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-72") {
        @include assert {
          @include output {
            @include xl\:inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it("xl\:start-72") {
        @include assert {
          @include output {
            @include xl\:start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it("xl\:end-72") {
        @include assert {
          @include output {
            @include xl\:end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it("xl\:top-72") {
        @include assert {
          @include output {
            @include xl\:top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 18rem;
            }
          }
        }
      }

      @include it("xl\:right-72") {
        @include assert {
          @include output {
            @include xl\:right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 18rem;
            }
          }
        }
      }

      @include it("xl\:bottom-72") {
        @include assert {
          @include output {
            @include xl\:bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it("xl\:left-72") {
        @include assert {
          @include output {
            @include xl\:left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 18rem;
            }
          }
        }
      }

      @include it("xl\:inset-80") {
        @include assert {
          @include output {
            @include xl\:inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 20rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-80") {
        @include assert {
          @include output {
            @include xl\:inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-80") {
        @include assert {
          @include output {
            @include xl\:inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it("xl\:start-80") {
        @include assert {
          @include output {
            @include xl\:start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it("xl\:end-80") {
        @include assert {
          @include output {
            @include xl\:end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it("xl\:top-80") {
        @include assert {
          @include output {
            @include xl\:top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 20rem;
            }
          }
        }
      }

      @include it("xl\:right-80") {
        @include assert {
          @include output {
            @include xl\:right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 20rem;
            }
          }
        }
      }

      @include it("xl\:bottom-80") {
        @include assert {
          @include output {
            @include xl\:bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it("xl\:left-80") {
        @include assert {
          @include output {
            @include xl\:left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 20rem;
            }
          }
        }
      }

      @include it("xl\:inset-96") {
        @include assert {
          @include output {
            @include xl\:inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 24rem;
            }
          }
        }
      }

      @include it("xl\:inset-x-96") {
        @include assert {
          @include output {
            @include xl\:inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it("xl\:inset-y-96") {
        @include assert {
          @include output {
            @include xl\:inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it("xl\:start-96") {
        @include assert {
          @include output {
            @include xl\:start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it("xl\:end-96") {
        @include assert {
          @include output {
            @include xl\:end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it("xl\:top-96") {
        @include assert {
          @include output {
            @include xl\:top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 24rem;
            }
          }
        }
      }

      @include it("xl\:right-96") {
        @include assert {
          @include output {
            @include xl\:right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 24rem;
            }
          }
        }
      }

      @include it("xl\:bottom-96") {
        @include assert {
          @include output {
            @include xl\:bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it("xl\:left-96") {
        @include assert {
          @include output {
            @include xl\:left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 24rem;
            }
          }
        }
      }

      @include it("xl\:inset-auto") {
        @include assert {
          @include output {
            @include xl\:inset-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: auto;
            }
          }
        }
      }

      @include it("xl\:inset-1\/2") {
        @include assert {
          @include output {
            @include xl\:inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 50%;
            }
          }
        }
      }

      @include it("xl\:inset-1\/3") {
        @include assert {
          @include output {
            @include xl\:inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:inset-2\/3") {
        @include assert {
          @include output {
            @include xl\:inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:inset-1\/4") {
        @include assert {
          @include output {
            @include xl\:inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 25%;
            }
          }
        }
      }

      @include it("xl\:inset-2\/4") {
        @include assert {
          @include output {
            @include xl\:inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 50%;
            }
          }
        }
      }

      @include it("xl\:inset-3\/4") {
        @include assert {
          @include output {
            @include xl\:inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 75%;
            }
          }
        }
      }

      @include it("xl\:inset-full") {
        @include assert {
          @include output {
            @include xl\:inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 100%;
            }
          }
        }
      }

      @include it("xl\:inset-x-auto") {
        @include assert {
          @include output {
            @include xl\:inset-x-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it("xl\:inset-x-1\/2") {
        @include assert {
          @include output {
            @include xl\:inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("xl\:inset-x-1\/3") {
        @include assert {
          @include output {
            @include xl\:inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:inset-x-2\/3") {
        @include assert {
          @include output {
            @include xl\:inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:inset-x-1\/4") {
        @include assert {
          @include output {
            @include xl\:inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it("xl\:inset-x-2\/4") {
        @include assert {
          @include output {
            @include xl\:inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("xl\:inset-x-3\/4") {
        @include assert {
          @include output {
            @include xl\:inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it("xl\:inset-x-full") {
        @include assert {
          @include output {
            @include xl\:inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it("xl\:inset-y-auto") {
        @include assert {
          @include output {
            @include xl\:inset-y-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it("xl\:inset-y-1\/2") {
        @include assert {
          @include output {
            @include xl\:inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("xl\:inset-y-1\/3") {
        @include assert {
          @include output {
            @include xl\:inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:inset-y-2\/3") {
        @include assert {
          @include output {
            @include xl\:inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:inset-y-1\/4") {
        @include assert {
          @include output {
            @include xl\:inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it("xl\:inset-y-2\/4") {
        @include assert {
          @include output {
            @include xl\:inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("xl\:inset-y-3\/4") {
        @include assert {
          @include output {
            @include xl\:inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it("xl\:inset-y-full") {
        @include assert {
          @include output {
            @include xl\:inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it("xl\:start-auto") {
        @include assert {
          @include output {
            @include xl\:start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it("xl\:start-1\/2") {
        @include assert {
          @include output {
            @include xl\:start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("xl\:start-1\/3") {
        @include assert {
          @include output {
            @include xl\:start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:start-2\/3") {
        @include assert {
          @include output {
            @include xl\:start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:start-1\/4") {
        @include assert {
          @include output {
            @include xl\:start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it("xl\:start-2\/4") {
        @include assert {
          @include output {
            @include xl\:start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("xl\:start-3\/4") {
        @include assert {
          @include output {
            @include xl\:start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it("xl\:start-full") {
        @include assert {
          @include output {
            @include xl\:start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it("xl\:end-auto") {
        @include assert {
          @include output {
            @include xl\:end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it("xl\:end-1\/2") {
        @include assert {
          @include output {
            @include xl\:end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("xl\:end-1\/3") {
        @include assert {
          @include output {
            @include xl\:end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:end-2\/3") {
        @include assert {
          @include output {
            @include xl\:end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:end-1\/4") {
        @include assert {
          @include output {
            @include xl\:end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it("xl\:end-2\/4") {
        @include assert {
          @include output {
            @include xl\:end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("xl\:end-3\/4") {
        @include assert {
          @include output {
            @include xl\:end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it("xl\:end-full") {
        @include assert {
          @include output {
            @include xl\:end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it("xl\:top-auto") {
        @include assert {
          @include output {
            @include xl\:top-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: auto;
            }
          }
        }
      }

      @include it("xl\:top-1\/2") {
        @include assert {
          @include output {
            @include xl\:top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 50%;
            }
          }
        }
      }

      @include it("xl\:top-1\/3") {
        @include assert {
          @include output {
            @include xl\:top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:top-2\/3") {
        @include assert {
          @include output {
            @include xl\:top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:top-1\/4") {
        @include assert {
          @include output {
            @include xl\:top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 25%;
            }
          }
        }
      }

      @include it("xl\:top-2\/4") {
        @include assert {
          @include output {
            @include xl\:top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 50%;
            }
          }
        }
      }

      @include it("xl\:top-3\/4") {
        @include assert {
          @include output {
            @include xl\:top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 75%;
            }
          }
        }
      }

      @include it("xl\:top-full") {
        @include assert {
          @include output {
            @include xl\:top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 100%;
            }
          }
        }
      }

      @include it("xl\:right-auto") {
        @include assert {
          @include output {
            @include xl\:right-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: auto;
            }
          }
        }
      }

      @include it("xl\:right-1\/2") {
        @include assert {
          @include output {
            @include xl\:right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 50%;
            }
          }
        }
      }

      @include it("xl\:right-1\/3") {
        @include assert {
          @include output {
            @include xl\:right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:right-2\/3") {
        @include assert {
          @include output {
            @include xl\:right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:right-1\/4") {
        @include assert {
          @include output {
            @include xl\:right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 25%;
            }
          }
        }
      }

      @include it("xl\:right-2\/4") {
        @include assert {
          @include output {
            @include xl\:right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 50%;
            }
          }
        }
      }

      @include it("xl\:right-3\/4") {
        @include assert {
          @include output {
            @include xl\:right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 75%;
            }
          }
        }
      }

      @include it("xl\:right-full") {
        @include assert {
          @include output {
            @include xl\:right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 100%;
            }
          }
        }
      }

      @include it("xl\:bottom-auto") {
        @include assert {
          @include output {
            @include xl\:bottom-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: auto;
            }
          }
        }
      }

      @include it("xl\:bottom-1\/2") {
        @include assert {
          @include output {
            @include xl\:bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("xl\:bottom-1\/3") {
        @include assert {
          @include output {
            @include xl\:bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:bottom-2\/3") {
        @include assert {
          @include output {
            @include xl\:bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:bottom-1\/4") {
        @include assert {
          @include output {
            @include xl\:bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 25%;
            }
          }
        }
      }

      @include it("xl\:bottom-2\/4") {
        @include assert {
          @include output {
            @include xl\:bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("xl\:bottom-3\/4") {
        @include assert {
          @include output {
            @include xl\:bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 75%;
            }
          }
        }
      }

      @include it("xl\:bottom-full") {
        @include assert {
          @include output {
            @include xl\:bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 100%;
            }
          }
        }
      }

      @include it("xl\:left-auto") {
        @include assert {
          @include output {
            @include xl\:left-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: auto;
            }
          }
        }
      }

      @include it("xl\:left-1\/2") {
        @include assert {
          @include output {
            @include xl\:left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 50%;
            }
          }
        }
      }

      @include it("xl\:left-1\/3") {
        @include assert {
          @include output {
            @include xl\:left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it("xl\:left-2\/3") {
        @include assert {
          @include output {
            @include xl\:left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it("xl\:left-1\/4") {
        @include assert {
          @include output {
            @include xl\:left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 25%;
            }
          }
        }
      }

      @include it("xl\:left-2\/4") {
        @include assert {
          @include output {
            @include xl\:left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 50%;
            }
          }
        }
      }

      @include it("xl\:left-3\/4") {
        @include assert {
          @include output {
            @include xl\:left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 75%;
            }
          }
        }
      }

      @include it("xl\:left-full") {
        @include assert {
          @include output {
            @include xl\:left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 100%;
            }
          }
        }
      }

      @include it("xl\:-inset-0") {
        @include assert {
          @include output {
            @include xl\:-inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 0px;
            }
          }
        }
      }

      @include it("xl\:-inset-x-0") {
        @include assert {
          @include output {
            @include xl\:-inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("xl\:-inset-y-0") {
        @include assert {
          @include output {
            @include xl\:-inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:-start-0") {
        @include assert {
          @include output {
            @include xl\:-start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("xl\:-end-0") {
        @include assert {
          @include output {
            @include xl\:-end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("xl\:-top-0") {
        @include assert {
          @include output {
            @include xl\:-top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 0px;
            }
          }
        }
      }

      @include it("xl\:-right-0") {
        @include assert {
          @include output {
            @include xl\:-right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 0px;
            }
          }
        }
      }

      @include it("xl\:-bottom-0") {
        @include assert {
          @include output {
            @include xl\:-bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("xl\:-left-0") {
        @include assert {
          @include output {
            @include xl\:-left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 0px;
            }
          }
        }
      }

      @include it("xl\:-inset-px") {
        @include assert {
          @include output {
            @include xl\:-inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -1px;
            }
          }
        }
      }

      @include it("xl\:-inset-x-px") {
        @include assert {
          @include output {
            @include xl\:-inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it("xl\:-inset-y-px") {
        @include assert {
          @include output {
            @include xl\:-inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it("xl\:-start-px") {
        @include assert {
          @include output {
            @include xl\:-start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it("xl\:-end-px") {
        @include assert {
          @include output {
            @include xl\:-end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it("xl\:-top-px") {
        @include assert {
          @include output {
            @include xl\:-top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1px;
            }
          }
        }
      }

      @include it("xl\:-right-px") {
        @include assert {
          @include output {
            @include xl\:-right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -1px;
            }
          }
        }
      }

      @include it("xl\:-bottom-px") {
        @include assert {
          @include output {
            @include xl\:-bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -1px;
            }
          }
        }
      }

      @include it("xl\:-left-px") {
        @include assert {
          @include output {
            @include xl\:-left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1px;
            }
          }
        }
      }

      @include it("xl\:-inset-0\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-0\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-0\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-start-0\.5") {
        @include assert {
          @include output {
            @include xl\:-start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-end-0\.5") {
        @include assert {
          @include output {
            @include xl\:-end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-top-0\.5") {
        @include assert {
          @include output {
            @include xl\:-top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-right-0\.5") {
        @include assert {
          @include output {
            @include xl\:-right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-0\.5") {
        @include assert {
          @include output {
            @include xl\:-bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-left-0\.5") {
        @include assert {
          @include output {
            @include xl\:-left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it("xl\:-inset-1") {
        @include assert {
          @include output {
            @include xl\:-inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-1") {
        @include assert {
          @include output {
            @include xl\:-inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-1") {
        @include assert {
          @include output {
            @include xl\:-inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-start-1") {
        @include assert {
          @include output {
            @include xl\:-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-end-1") {
        @include assert {
          @include output {
            @include xl\:-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-top-1") {
        @include assert {
          @include output {
            @include xl\:-top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-right-1") {
        @include assert {
          @include output {
            @include xl\:-right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-1") {
        @include assert {
          @include output {
            @include xl\:-bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-left-1") {
        @include assert {
          @include output {
            @include xl\:-left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-1\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-1\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-1\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-start-1\.5") {
        @include assert {
          @include output {
            @include xl\:-start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-end-1\.5") {
        @include assert {
          @include output {
            @include xl\:-end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-top-1\.5") {
        @include assert {
          @include output {
            @include xl\:-top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-right-1\.5") {
        @include assert {
          @include output {
            @include xl\:-right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-1\.5") {
        @include assert {
          @include output {
            @include xl\:-bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-left-1\.5") {
        @include assert {
          @include output {
            @include xl\:-left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it("xl\:-inset-2") {
        @include assert {
          @include output {
            @include xl\:-inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-2") {
        @include assert {
          @include output {
            @include xl\:-inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-2") {
        @include assert {
          @include output {
            @include xl\:-inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-start-2") {
        @include assert {
          @include output {
            @include xl\:-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-end-2") {
        @include assert {
          @include output {
            @include xl\:-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-top-2") {
        @include assert {
          @include output {
            @include xl\:-top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-right-2") {
        @include assert {
          @include output {
            @include xl\:-right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-2") {
        @include assert {
          @include output {
            @include xl\:-bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-left-2") {
        @include assert {
          @include output {
            @include xl\:-left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-2\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-2\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-2\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-start-2\.5") {
        @include assert {
          @include output {
            @include xl\:-start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-end-2\.5") {
        @include assert {
          @include output {
            @include xl\:-end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-top-2\.5") {
        @include assert {
          @include output {
            @include xl\:-top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-right-2\.5") {
        @include assert {
          @include output {
            @include xl\:-right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-2\.5") {
        @include assert {
          @include output {
            @include xl\:-bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-left-2\.5") {
        @include assert {
          @include output {
            @include xl\:-left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it("xl\:-inset-3") {
        @include assert {
          @include output {
            @include xl\:-inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-3") {
        @include assert {
          @include output {
            @include xl\:-inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-3") {
        @include assert {
          @include output {
            @include xl\:-inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-start-3") {
        @include assert {
          @include output {
            @include xl\:-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-end-3") {
        @include assert {
          @include output {
            @include xl\:-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-top-3") {
        @include assert {
          @include output {
            @include xl\:-top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-right-3") {
        @include assert {
          @include output {
            @include xl\:-right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-3") {
        @include assert {
          @include output {
            @include xl\:-bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-left-3") {
        @include assert {
          @include output {
            @include xl\:-left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-3\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-3\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-3\.5") {
        @include assert {
          @include output {
            @include xl\:-inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-start-3\.5") {
        @include assert {
          @include output {
            @include xl\:-start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-end-3\.5") {
        @include assert {
          @include output {
            @include xl\:-end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-top-3\.5") {
        @include assert {
          @include output {
            @include xl\:-top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-right-3\.5") {
        @include assert {
          @include output {
            @include xl\:-right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-3\.5") {
        @include assert {
          @include output {
            @include xl\:-bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-left-3\.5") {
        @include assert {
          @include output {
            @include xl\:-left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it("xl\:-inset-4") {
        @include assert {
          @include output {
            @include xl\:-inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -1rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-4") {
        @include assert {
          @include output {
            @include xl\:-inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-4") {
        @include assert {
          @include output {
            @include xl\:-inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it("xl\:-start-4") {
        @include assert {
          @include output {
            @include xl\:-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it("xl\:-end-4") {
        @include assert {
          @include output {
            @include xl\:-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it("xl\:-top-4") {
        @include assert {
          @include output {
            @include xl\:-top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1rem;
            }
          }
        }
      }

      @include it("xl\:-right-4") {
        @include assert {
          @include output {
            @include xl\:-right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -1rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-4") {
        @include assert {
          @include output {
            @include xl\:-bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it("xl\:-left-4") {
        @include assert {
          @include output {
            @include xl\:-left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1rem;
            }
          }
        }
      }

      @include it("xl\:-inset-5") {
        @include assert {
          @include output {
            @include xl\:-inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-5") {
        @include assert {
          @include output {
            @include xl\:-inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-5") {
        @include assert {
          @include output {
            @include xl\:-inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-start-5") {
        @include assert {
          @include output {
            @include xl\:-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-end-5") {
        @include assert {
          @include output {
            @include xl\:-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-top-5") {
        @include assert {
          @include output {
            @include xl\:-top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-right-5") {
        @include assert {
          @include output {
            @include xl\:-right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-5") {
        @include assert {
          @include output {
            @include xl\:-bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-left-5") {
        @include assert {
          @include output {
            @include xl\:-left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-6") {
        @include assert {
          @include output {
            @include xl\:-inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-6") {
        @include assert {
          @include output {
            @include xl\:-inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-6") {
        @include assert {
          @include output {
            @include xl\:-inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-start-6") {
        @include assert {
          @include output {
            @include xl\:-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-end-6") {
        @include assert {
          @include output {
            @include xl\:-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-top-6") {
        @include assert {
          @include output {
            @include xl\:-top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-right-6") {
        @include assert {
          @include output {
            @include xl\:-right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-6") {
        @include assert {
          @include output {
            @include xl\:-bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-left-6") {
        @include assert {
          @include output {
            @include xl\:-left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-7") {
        @include assert {
          @include output {
            @include xl\:-inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-7") {
        @include assert {
          @include output {
            @include xl\:-inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-7") {
        @include assert {
          @include output {
            @include xl\:-inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-start-7") {
        @include assert {
          @include output {
            @include xl\:-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-end-7") {
        @include assert {
          @include output {
            @include xl\:-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-top-7") {
        @include assert {
          @include output {
            @include xl\:-top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-right-7") {
        @include assert {
          @include output {
            @include xl\:-right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-7") {
        @include assert {
          @include output {
            @include xl\:-bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-left-7") {
        @include assert {
          @include output {
            @include xl\:-left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-8") {
        @include assert {
          @include output {
            @include xl\:-inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -2rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-8") {
        @include assert {
          @include output {
            @include xl\:-inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-8") {
        @include assert {
          @include output {
            @include xl\:-inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it("xl\:-start-8") {
        @include assert {
          @include output {
            @include xl\:-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it("xl\:-end-8") {
        @include assert {
          @include output {
            @include xl\:-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it("xl\:-top-8") {
        @include assert {
          @include output {
            @include xl\:-top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2rem;
            }
          }
        }
      }

      @include it("xl\:-right-8") {
        @include assert {
          @include output {
            @include xl\:-right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -2rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-8") {
        @include assert {
          @include output {
            @include xl\:-bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it("xl\:-left-8") {
        @include assert {
          @include output {
            @include xl\:-left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2rem;
            }
          }
        }
      }

      @include it("xl\:-inset-9") {
        @include assert {
          @include output {
            @include xl\:-inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-9") {
        @include assert {
          @include output {
            @include xl\:-inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-9") {
        @include assert {
          @include output {
            @include xl\:-inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-start-9") {
        @include assert {
          @include output {
            @include xl\:-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-end-9") {
        @include assert {
          @include output {
            @include xl\:-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-top-9") {
        @include assert {
          @include output {
            @include xl\:-top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-right-9") {
        @include assert {
          @include output {
            @include xl\:-right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-9") {
        @include assert {
          @include output {
            @include xl\:-bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-left-9") {
        @include assert {
          @include output {
            @include xl\:-left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it("xl\:-inset-10") {
        @include assert {
          @include output {
            @include xl\:-inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-10") {
        @include assert {
          @include output {
            @include xl\:-inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-10") {
        @include assert {
          @include output {
            @include xl\:-inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-start-10") {
        @include assert {
          @include output {
            @include xl\:-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-end-10") {
        @include assert {
          @include output {
            @include xl\:-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-top-10") {
        @include assert {
          @include output {
            @include xl\:-top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-right-10") {
        @include assert {
          @include output {
            @include xl\:-right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-10") {
        @include assert {
          @include output {
            @include xl\:-bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-left-10") {
        @include assert {
          @include output {
            @include xl\:-left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-11") {
        @include assert {
          @include output {
            @include xl\:-inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-11") {
        @include assert {
          @include output {
            @include xl\:-inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-11") {
        @include assert {
          @include output {
            @include xl\:-inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-start-11") {
        @include assert {
          @include output {
            @include xl\:-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-end-11") {
        @include assert {
          @include output {
            @include xl\:-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-top-11") {
        @include assert {
          @include output {
            @include xl\:-top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-right-11") {
        @include assert {
          @include output {
            @include xl\:-right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-11") {
        @include assert {
          @include output {
            @include xl\:-bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-left-11") {
        @include assert {
          @include output {
            @include xl\:-left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it("xl\:-inset-12") {
        @include assert {
          @include output {
            @include xl\:-inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -3rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-12") {
        @include assert {
          @include output {
            @include xl\:-inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-12") {
        @include assert {
          @include output {
            @include xl\:-inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it("xl\:-start-12") {
        @include assert {
          @include output {
            @include xl\:-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it("xl\:-end-12") {
        @include assert {
          @include output {
            @include xl\:-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it("xl\:-top-12") {
        @include assert {
          @include output {
            @include xl\:-top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -3rem;
            }
          }
        }
      }

      @include it("xl\:-right-12") {
        @include assert {
          @include output {
            @include xl\:-right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -3rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-12") {
        @include assert {
          @include output {
            @include xl\:-bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it("xl\:-left-12") {
        @include assert {
          @include output {
            @include xl\:-left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -3rem;
            }
          }
        }
      }

      @include it("xl\:-inset-14") {
        @include assert {
          @include output {
            @include xl\:-inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-14") {
        @include assert {
          @include output {
            @include xl\:-inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-14") {
        @include assert {
          @include output {
            @include xl\:-inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-start-14") {
        @include assert {
          @include output {
            @include xl\:-start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-end-14") {
        @include assert {
          @include output {
            @include xl\:-end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-top-14") {
        @include assert {
          @include output {
            @include xl\:-top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-right-14") {
        @include assert {
          @include output {
            @include xl\:-right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-14") {
        @include assert {
          @include output {
            @include xl\:-bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-left-14") {
        @include assert {
          @include output {
            @include xl\:-left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-16") {
        @include assert {
          @include output {
            @include xl\:-inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -4rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-16") {
        @include assert {
          @include output {
            @include xl\:-inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-16") {
        @include assert {
          @include output {
            @include xl\:-inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it("xl\:-start-16") {
        @include assert {
          @include output {
            @include xl\:-start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it("xl\:-end-16") {
        @include assert {
          @include output {
            @include xl\:-end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it("xl\:-top-16") {
        @include assert {
          @include output {
            @include xl\:-top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -4rem;
            }
          }
        }
      }

      @include it("xl\:-right-16") {
        @include assert {
          @include output {
            @include xl\:-right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -4rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-16") {
        @include assert {
          @include output {
            @include xl\:-bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it("xl\:-left-16") {
        @include assert {
          @include output {
            @include xl\:-left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -4rem;
            }
          }
        }
      }

      @include it("xl\:-inset-20") {
        @include assert {
          @include output {
            @include xl\:-inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-20") {
        @include assert {
          @include output {
            @include xl\:-inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-20") {
        @include assert {
          @include output {
            @include xl\:-inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it("xl\:-start-20") {
        @include assert {
          @include output {
            @include xl\:-start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it("xl\:-end-20") {
        @include assert {
          @include output {
            @include xl\:-end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it("xl\:-top-20") {
        @include assert {
          @include output {
            @include xl\:-top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -5rem;
            }
          }
        }
      }

      @include it("xl\:-right-20") {
        @include assert {
          @include output {
            @include xl\:-right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -5rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-20") {
        @include assert {
          @include output {
            @include xl\:-bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it("xl\:-left-20") {
        @include assert {
          @include output {
            @include xl\:-left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -5rem;
            }
          }
        }
      }

      @include it("xl\:-inset-24") {
        @include assert {
          @include output {
            @include xl\:-inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -6rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-24") {
        @include assert {
          @include output {
            @include xl\:-inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-24") {
        @include assert {
          @include output {
            @include xl\:-inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it("xl\:-start-24") {
        @include assert {
          @include output {
            @include xl\:-start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it("xl\:-end-24") {
        @include assert {
          @include output {
            @include xl\:-end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it("xl\:-top-24") {
        @include assert {
          @include output {
            @include xl\:-top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -6rem;
            }
          }
        }
      }

      @include it("xl\:-right-24") {
        @include assert {
          @include output {
            @include xl\:-right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -6rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-24") {
        @include assert {
          @include output {
            @include xl\:-bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it("xl\:-left-24") {
        @include assert {
          @include output {
            @include xl\:-left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -6rem;
            }
          }
        }
      }

      @include it("xl\:-inset-28") {
        @include assert {
          @include output {
            @include xl\:-inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -7rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-28") {
        @include assert {
          @include output {
            @include xl\:-inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-28") {
        @include assert {
          @include output {
            @include xl\:-inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it("xl\:-start-28") {
        @include assert {
          @include output {
            @include xl\:-start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it("xl\:-end-28") {
        @include assert {
          @include output {
            @include xl\:-end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it("xl\:-top-28") {
        @include assert {
          @include output {
            @include xl\:-top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -7rem;
            }
          }
        }
      }

      @include it("xl\:-right-28") {
        @include assert {
          @include output {
            @include xl\:-right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -7rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-28") {
        @include assert {
          @include output {
            @include xl\:-bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it("xl\:-left-28") {
        @include assert {
          @include output {
            @include xl\:-left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -7rem;
            }
          }
        }
      }

      @include it("xl\:-inset-32") {
        @include assert {
          @include output {
            @include xl\:-inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -8rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-32") {
        @include assert {
          @include output {
            @include xl\:-inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-32") {
        @include assert {
          @include output {
            @include xl\:-inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it("xl\:-start-32") {
        @include assert {
          @include output {
            @include xl\:-start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it("xl\:-end-32") {
        @include assert {
          @include output {
            @include xl\:-end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it("xl\:-top-32") {
        @include assert {
          @include output {
            @include xl\:-top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -8rem;
            }
          }
        }
      }

      @include it("xl\:-right-32") {
        @include assert {
          @include output {
            @include xl\:-right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -8rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-32") {
        @include assert {
          @include output {
            @include xl\:-bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it("xl\:-left-32") {
        @include assert {
          @include output {
            @include xl\:-left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -8rem;
            }
          }
        }
      }

      @include it("xl\:-inset-36") {
        @include assert {
          @include output {
            @include xl\:-inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -9rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-36") {
        @include assert {
          @include output {
            @include xl\:-inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-36") {
        @include assert {
          @include output {
            @include xl\:-inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it("xl\:-start-36") {
        @include assert {
          @include output {
            @include xl\:-start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it("xl\:-end-36") {
        @include assert {
          @include output {
            @include xl\:-end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it("xl\:-top-36") {
        @include assert {
          @include output {
            @include xl\:-top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -9rem;
            }
          }
        }
      }

      @include it("xl\:-right-36") {
        @include assert {
          @include output {
            @include xl\:-right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -9rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-36") {
        @include assert {
          @include output {
            @include xl\:-bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it("xl\:-left-36") {
        @include assert {
          @include output {
            @include xl\:-left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -9rem;
            }
          }
        }
      }

      @include it("xl\:-inset-40") {
        @include assert {
          @include output {
            @include xl\:-inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -10rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-40") {
        @include assert {
          @include output {
            @include xl\:-inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-40") {
        @include assert {
          @include output {
            @include xl\:-inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it("xl\:-start-40") {
        @include assert {
          @include output {
            @include xl\:-start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it("xl\:-end-40") {
        @include assert {
          @include output {
            @include xl\:-end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it("xl\:-top-40") {
        @include assert {
          @include output {
            @include xl\:-top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -10rem;
            }
          }
        }
      }

      @include it("xl\:-right-40") {
        @include assert {
          @include output {
            @include xl\:-right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -10rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-40") {
        @include assert {
          @include output {
            @include xl\:-bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it("xl\:-left-40") {
        @include assert {
          @include output {
            @include xl\:-left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -10rem;
            }
          }
        }
      }

      @include it("xl\:-inset-44") {
        @include assert {
          @include output {
            @include xl\:-inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -11rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-44") {
        @include assert {
          @include output {
            @include xl\:-inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-44") {
        @include assert {
          @include output {
            @include xl\:-inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it("xl\:-start-44") {
        @include assert {
          @include output {
            @include xl\:-start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it("xl\:-end-44") {
        @include assert {
          @include output {
            @include xl\:-end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it("xl\:-top-44") {
        @include assert {
          @include output {
            @include xl\:-top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -11rem;
            }
          }
        }
      }

      @include it("xl\:-right-44") {
        @include assert {
          @include output {
            @include xl\:-right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -11rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-44") {
        @include assert {
          @include output {
            @include xl\:-bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it("xl\:-left-44") {
        @include assert {
          @include output {
            @include xl\:-left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -11rem;
            }
          }
        }
      }

      @include it("xl\:-inset-48") {
        @include assert {
          @include output {
            @include xl\:-inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -12rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-48") {
        @include assert {
          @include output {
            @include xl\:-inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-48") {
        @include assert {
          @include output {
            @include xl\:-inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it("xl\:-start-48") {
        @include assert {
          @include output {
            @include xl\:-start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it("xl\:-end-48") {
        @include assert {
          @include output {
            @include xl\:-end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it("xl\:-top-48") {
        @include assert {
          @include output {
            @include xl\:-top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -12rem;
            }
          }
        }
      }

      @include it("xl\:-right-48") {
        @include assert {
          @include output {
            @include xl\:-right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -12rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-48") {
        @include assert {
          @include output {
            @include xl\:-bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it("xl\:-left-48") {
        @include assert {
          @include output {
            @include xl\:-left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -12rem;
            }
          }
        }
      }

      @include it("xl\:-inset-52") {
        @include assert {
          @include output {
            @include xl\:-inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -13rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-52") {
        @include assert {
          @include output {
            @include xl\:-inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-52") {
        @include assert {
          @include output {
            @include xl\:-inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it("xl\:-start-52") {
        @include assert {
          @include output {
            @include xl\:-start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it("xl\:-end-52") {
        @include assert {
          @include output {
            @include xl\:-end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it("xl\:-top-52") {
        @include assert {
          @include output {
            @include xl\:-top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -13rem;
            }
          }
        }
      }

      @include it("xl\:-right-52") {
        @include assert {
          @include output {
            @include xl\:-right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -13rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-52") {
        @include assert {
          @include output {
            @include xl\:-bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it("xl\:-left-52") {
        @include assert {
          @include output {
            @include xl\:-left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -13rem;
            }
          }
        }
      }

      @include it("xl\:-inset-56") {
        @include assert {
          @include output {
            @include xl\:-inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -14rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-56") {
        @include assert {
          @include output {
            @include xl\:-inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-56") {
        @include assert {
          @include output {
            @include xl\:-inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it("xl\:-start-56") {
        @include assert {
          @include output {
            @include xl\:-start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it("xl\:-end-56") {
        @include assert {
          @include output {
            @include xl\:-end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it("xl\:-top-56") {
        @include assert {
          @include output {
            @include xl\:-top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -14rem;
            }
          }
        }
      }

      @include it("xl\:-right-56") {
        @include assert {
          @include output {
            @include xl\:-right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -14rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-56") {
        @include assert {
          @include output {
            @include xl\:-bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it("xl\:-left-56") {
        @include assert {
          @include output {
            @include xl\:-left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -14rem;
            }
          }
        }
      }

      @include it("xl\:-inset-60") {
        @include assert {
          @include output {
            @include xl\:-inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -15rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-60") {
        @include assert {
          @include output {
            @include xl\:-inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-60") {
        @include assert {
          @include output {
            @include xl\:-inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it("xl\:-start-60") {
        @include assert {
          @include output {
            @include xl\:-start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it("xl\:-end-60") {
        @include assert {
          @include output {
            @include xl\:-end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it("xl\:-top-60") {
        @include assert {
          @include output {
            @include xl\:-top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -15rem;
            }
          }
        }
      }

      @include it("xl\:-right-60") {
        @include assert {
          @include output {
            @include xl\:-right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -15rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-60") {
        @include assert {
          @include output {
            @include xl\:-bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it("xl\:-left-60") {
        @include assert {
          @include output {
            @include xl\:-left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -15rem;
            }
          }
        }
      }

      @include it("xl\:-inset-64") {
        @include assert {
          @include output {
            @include xl\:-inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -16rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-64") {
        @include assert {
          @include output {
            @include xl\:-inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-64") {
        @include assert {
          @include output {
            @include xl\:-inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it("xl\:-start-64") {
        @include assert {
          @include output {
            @include xl\:-start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it("xl\:-end-64") {
        @include assert {
          @include output {
            @include xl\:-end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it("xl\:-top-64") {
        @include assert {
          @include output {
            @include xl\:-top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -16rem;
            }
          }
        }
      }

      @include it("xl\:-right-64") {
        @include assert {
          @include output {
            @include xl\:-right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -16rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-64") {
        @include assert {
          @include output {
            @include xl\:-bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it("xl\:-left-64") {
        @include assert {
          @include output {
            @include xl\:-left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -16rem;
            }
          }
        }
      }

      @include it("xl\:-inset-72") {
        @include assert {
          @include output {
            @include xl\:-inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -18rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-72") {
        @include assert {
          @include output {
            @include xl\:-inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-72") {
        @include assert {
          @include output {
            @include xl\:-inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it("xl\:-start-72") {
        @include assert {
          @include output {
            @include xl\:-start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it("xl\:-end-72") {
        @include assert {
          @include output {
            @include xl\:-end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it("xl\:-top-72") {
        @include assert {
          @include output {
            @include xl\:-top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -18rem;
            }
          }
        }
      }

      @include it("xl\:-right-72") {
        @include assert {
          @include output {
            @include xl\:-right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -18rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-72") {
        @include assert {
          @include output {
            @include xl\:-bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it("xl\:-left-72") {
        @include assert {
          @include output {
            @include xl\:-left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -18rem;
            }
          }
        }
      }

      @include it("xl\:-inset-80") {
        @include assert {
          @include output {
            @include xl\:-inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -20rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-80") {
        @include assert {
          @include output {
            @include xl\:-inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-80") {
        @include assert {
          @include output {
            @include xl\:-inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it("xl\:-start-80") {
        @include assert {
          @include output {
            @include xl\:-start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it("xl\:-end-80") {
        @include assert {
          @include output {
            @include xl\:-end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it("xl\:-top-80") {
        @include assert {
          @include output {
            @include xl\:-top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -20rem;
            }
          }
        }
      }

      @include it("xl\:-right-80") {
        @include assert {
          @include output {
            @include xl\:-right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -20rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-80") {
        @include assert {
          @include output {
            @include xl\:-bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it("xl\:-left-80") {
        @include assert {
          @include output {
            @include xl\:-left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -20rem;
            }
          }
        }
      }

      @include it("xl\:-inset-96") {
        @include assert {
          @include output {
            @include xl\:-inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -24rem;
            }
          }
        }
      }

      @include it("xl\:-inset-x-96") {
        @include assert {
          @include output {
            @include xl\:-inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it("xl\:-inset-y-96") {
        @include assert {
          @include output {
            @include xl\:-inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it("xl\:-start-96") {
        @include assert {
          @include output {
            @include xl\:-start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it("xl\:-end-96") {
        @include assert {
          @include output {
            @include xl\:-end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it("xl\:-top-96") {
        @include assert {
          @include output {
            @include xl\:-top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -24rem;
            }
          }
        }
      }

      @include it("xl\:-right-96") {
        @include assert {
          @include output {
            @include xl\:-right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -24rem;
            }
          }
        }
      }

      @include it("xl\:-bottom-96") {
        @include assert {
          @include output {
            @include xl\:-bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it("xl\:-left-96") {
        @include assert {
          @include output {
            @include xl\:-left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -24rem;
            }
          }
        }
      }

      @include it("xl\:-inset-1\/2") {
        @include assert {
          @include output {
            @include xl\:-inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -50%;
            }
          }
        }
      }

      @include it("xl\:-inset-1\/3") {
        @include assert {
          @include output {
            @include xl\:-inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-inset-2\/3") {
        @include assert {
          @include output {
            @include xl\:-inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-inset-1\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -25%;
            }
          }
        }
      }

      @include it("xl\:-inset-2\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -50%;
            }
          }
        }
      }

      @include it("xl\:-inset-3\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -75%;
            }
          }
        }
      }

      @include it("xl\:-inset-full") {
        @include assert {
          @include output {
            @include xl\:-inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -100%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-1\/2") {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-1\/3") {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-2\/3") {
        @include assert {
          @include output {
            @include xl\:-inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-1\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-2\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-3\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it("xl\:-inset-x-full") {
        @include assert {
          @include output {
            @include xl\:-inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-1\/2") {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-1\/3") {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-2\/3") {
        @include assert {
          @include output {
            @include xl\:-inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-1\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-2\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-3\/4") {
        @include assert {
          @include output {
            @include xl\:-inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it("xl\:-inset-y-full") {
        @include assert {
          @include output {
            @include xl\:-inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it("xl\:-start-1\/2") {
        @include assert {
          @include output {
            @include xl\:-start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("xl\:-start-1\/3") {
        @include assert {
          @include output {
            @include xl\:-start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-start-2\/3") {
        @include assert {
          @include output {
            @include xl\:-start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-start-1\/4") {
        @include assert {
          @include output {
            @include xl\:-start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it("xl\:-start-2\/4") {
        @include assert {
          @include output {
            @include xl\:-start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("xl\:-start-3\/4") {
        @include assert {
          @include output {
            @include xl\:-start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it("xl\:-start-full") {
        @include assert {
          @include output {
            @include xl\:-start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it("xl\:-end-1\/2") {
        @include assert {
          @include output {
            @include xl\:-end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("xl\:-end-1\/3") {
        @include assert {
          @include output {
            @include xl\:-end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-end-2\/3") {
        @include assert {
          @include output {
            @include xl\:-end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-end-1\/4") {
        @include assert {
          @include output {
            @include xl\:-end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it("xl\:-end-2\/4") {
        @include assert {
          @include output {
            @include xl\:-end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("xl\:-end-3\/4") {
        @include assert {
          @include output {
            @include xl\:-end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it("xl\:-end-full") {
        @include assert {
          @include output {
            @include xl\:-end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it("xl\:-top-1\/2") {
        @include assert {
          @include output {
            @include xl\:-top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -50%;
            }
          }
        }
      }

      @include it("xl\:-top-1\/3") {
        @include assert {
          @include output {
            @include xl\:-top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-top-2\/3") {
        @include assert {
          @include output {
            @include xl\:-top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-top-1\/4") {
        @include assert {
          @include output {
            @include xl\:-top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -25%;
            }
          }
        }
      }

      @include it("xl\:-top-2\/4") {
        @include assert {
          @include output {
            @include xl\:-top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -50%;
            }
          }
        }
      }

      @include it("xl\:-top-3\/4") {
        @include assert {
          @include output {
            @include xl\:-top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -75%;
            }
          }
        }
      }

      @include it("xl\:-top-full") {
        @include assert {
          @include output {
            @include xl\:-top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -100%;
            }
          }
        }
      }

      @include it("xl\:-right-1\/2") {
        @include assert {
          @include output {
            @include xl\:-right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -50%;
            }
          }
        }
      }

      @include it("xl\:-right-1\/3") {
        @include assert {
          @include output {
            @include xl\:-right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-right-2\/3") {
        @include assert {
          @include output {
            @include xl\:-right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-right-1\/4") {
        @include assert {
          @include output {
            @include xl\:-right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -25%;
            }
          }
        }
      }

      @include it("xl\:-right-2\/4") {
        @include assert {
          @include output {
            @include xl\:-right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -50%;
            }
          }
        }
      }

      @include it("xl\:-right-3\/4") {
        @include assert {
          @include output {
            @include xl\:-right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -75%;
            }
          }
        }
      }

      @include it("xl\:-right-full") {
        @include assert {
          @include output {
            @include xl\:-right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -100%;
            }
          }
        }
      }

      @include it("xl\:-bottom-1\/2") {
        @include assert {
          @include output {
            @include xl\:-bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("xl\:-bottom-1\/3") {
        @include assert {
          @include output {
            @include xl\:-bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-bottom-2\/3") {
        @include assert {
          @include output {
            @include xl\:-bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-bottom-1\/4") {
        @include assert {
          @include output {
            @include xl\:-bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -25%;
            }
          }
        }
      }

      @include it("xl\:-bottom-2\/4") {
        @include assert {
          @include output {
            @include xl\:-bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("xl\:-bottom-3\/4") {
        @include assert {
          @include output {
            @include xl\:-bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -75%;
            }
          }
        }
      }

      @include it("xl\:-bottom-full") {
        @include assert {
          @include output {
            @include xl\:-bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -100%;
            }
          }
        }
      }

      @include it("xl\:-left-1\/2") {
        @include assert {
          @include output {
            @include xl\:-left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -50%;
            }
          }
        }
      }

      @include it("xl\:-left-1\/3") {
        @include assert {
          @include output {
            @include xl\:-left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it("xl\:-left-2\/3") {
        @include assert {
          @include output {
            @include xl\:-left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it("xl\:-left-1\/4") {
        @include assert {
          @include output {
            @include xl\:-left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -25%;
            }
          }
        }
      }

      @include it("xl\:-left-2\/4") {
        @include assert {
          @include output {
            @include xl\:-left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -50%;
            }
          }
        }
      }

      @include it("xl\:-left-3\/4") {
        @include assert {
          @include output {
            @include xl\:-left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -75%;
            }
          }
        }
      }

      @include it("xl\:-left-full") {
        @include assert {
          @include output {
            @include xl\:-left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -100%;
            }
          }
        }
      }

      @include it("\2xl\:inset-0") {
        @include assert {
          @include output {
            @include \2xl\:inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0px;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-0") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-0") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("\2xl\:start-0") {
        @include assert {
          @include output {
            @include \2xl\:start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("\2xl\:end-0") {
        @include assert {
          @include output {
            @include \2xl\:end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("\2xl\:top-0") {
        @include assert {
          @include output {
            @include \2xl\:top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0px;
            }
          }
        }
      }

      @include it("\2xl\:right-0") {
        @include assert {
          @include output {
            @include \2xl\:right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0px;
            }
          }
        }
      }

      @include it("\2xl\:bottom-0") {
        @include assert {
          @include output {
            @include \2xl\:bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("\2xl\:left-0") {
        @include assert {
          @include output {
            @include \2xl\:left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0px;
            }
          }
        }
      }

      @include it("\2xl\:inset-px") {
        @include assert {
          @include output {
            @include \2xl\:inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 1px;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-px") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-px") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it("\2xl\:start-px") {
        @include assert {
          @include output {
            @include \2xl\:start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it("\2xl\:end-px") {
        @include assert {
          @include output {
            @include \2xl\:end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it("\2xl\:top-px") {
        @include assert {
          @include output {
            @include \2xl\:top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1px;
            }
          }
        }
      }

      @include it("\2xl\:right-px") {
        @include assert {
          @include output {
            @include \2xl\:right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 1px;
            }
          }
        }
      }

      @include it("\2xl\:bottom-px") {
        @include assert {
          @include output {
            @include \2xl\:bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 1px;
            }
          }
        }
      }

      @include it("\2xl\:left-px") {
        @include assert {
          @include output {
            @include \2xl\:left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1px;
            }
          }
        }
      }

      @include it("\2xl\:inset-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:start-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:end-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:top-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:right-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:left-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-1") {
        @include assert {
          @include output {
            @include \2xl\:inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-1") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-1") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:start-1") {
        @include assert {
          @include output {
            @include \2xl\:start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:end-1") {
        @include assert {
          @include output {
            @include \2xl\:end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:top-1") {
        @include assert {
          @include output {
            @include \2xl\:top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:right-1") {
        @include assert {
          @include output {
            @include \2xl\:right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-1") {
        @include assert {
          @include output {
            @include \2xl\:bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:left-1") {
        @include assert {
          @include output {
            @include \2xl\:left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:start-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:end-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:top-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:right-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:left-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-2") {
        @include assert {
          @include output {
            @include \2xl\:inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-2") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-2") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:start-2") {
        @include assert {
          @include output {
            @include \2xl\:start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:end-2") {
        @include assert {
          @include output {
            @include \2xl\:end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:top-2") {
        @include assert {
          @include output {
            @include \2xl\:top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:right-2") {
        @include assert {
          @include output {
            @include \2xl\:right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-2") {
        @include assert {
          @include output {
            @include \2xl\:bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:left-2") {
        @include assert {
          @include output {
            @include \2xl\:left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:start-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:end-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:top-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:right-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:left-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-3") {
        @include assert {
          @include output {
            @include \2xl\:inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-3") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-3") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:start-3") {
        @include assert {
          @include output {
            @include \2xl\:start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:end-3") {
        @include assert {
          @include output {
            @include \2xl\:end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:top-3") {
        @include assert {
          @include output {
            @include \2xl\:top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:right-3") {
        @include assert {
          @include output {
            @include \2xl\:right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-3") {
        @include assert {
          @include output {
            @include \2xl\:bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:left-3") {
        @include assert {
          @include output {
            @include \2xl\:left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:start-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:end-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:top-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:right-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:left-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-4") {
        @include assert {
          @include output {
            @include \2xl\:inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-4") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-4") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:start-4") {
        @include assert {
          @include output {
            @include \2xl\:start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:end-4") {
        @include assert {
          @include output {
            @include \2xl\:end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:top-4") {
        @include assert {
          @include output {
            @include \2xl\:top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:right-4") {
        @include assert {
          @include output {
            @include \2xl\:right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-4") {
        @include assert {
          @include output {
            @include \2xl\:bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:left-4") {
        @include assert {
          @include output {
            @include \2xl\:left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-5") {
        @include assert {
          @include output {
            @include \2xl\:inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-5") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-5") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:start-5") {
        @include assert {
          @include output {
            @include \2xl\:start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:end-5") {
        @include assert {
          @include output {
            @include \2xl\:end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:top-5") {
        @include assert {
          @include output {
            @include \2xl\:top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:right-5") {
        @include assert {
          @include output {
            @include \2xl\:right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-5") {
        @include assert {
          @include output {
            @include \2xl\:bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:left-5") {
        @include assert {
          @include output {
            @include \2xl\:left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-6") {
        @include assert {
          @include output {
            @include \2xl\:inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-6") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-6") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:start-6") {
        @include assert {
          @include output {
            @include \2xl\:start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:end-6") {
        @include assert {
          @include output {
            @include \2xl\:end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:top-6") {
        @include assert {
          @include output {
            @include \2xl\:top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:right-6") {
        @include assert {
          @include output {
            @include \2xl\:right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-6") {
        @include assert {
          @include output {
            @include \2xl\:bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:left-6") {
        @include assert {
          @include output {
            @include \2xl\:left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-7") {
        @include assert {
          @include output {
            @include \2xl\:inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-7") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-7") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:start-7") {
        @include assert {
          @include output {
            @include \2xl\:start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:end-7") {
        @include assert {
          @include output {
            @include \2xl\:end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:top-7") {
        @include assert {
          @include output {
            @include \2xl\:top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:right-7") {
        @include assert {
          @include output {
            @include \2xl\:right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-7") {
        @include assert {
          @include output {
            @include \2xl\:bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:left-7") {
        @include assert {
          @include output {
            @include \2xl\:left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-8") {
        @include assert {
          @include output {
            @include \2xl\:inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-8") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-8") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:start-8") {
        @include assert {
          @include output {
            @include \2xl\:start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:end-8") {
        @include assert {
          @include output {
            @include \2xl\:end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:top-8") {
        @include assert {
          @include output {
            @include \2xl\:top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:right-8") {
        @include assert {
          @include output {
            @include \2xl\:right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-8") {
        @include assert {
          @include output {
            @include \2xl\:bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:left-8") {
        @include assert {
          @include output {
            @include \2xl\:left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-9") {
        @include assert {
          @include output {
            @include \2xl\:inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-9") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-9") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:start-9") {
        @include assert {
          @include output {
            @include \2xl\:start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:end-9") {
        @include assert {
          @include output {
            @include \2xl\:end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:top-9") {
        @include assert {
          @include output {
            @include \2xl\:top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:right-9") {
        @include assert {
          @include output {
            @include \2xl\:right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-9") {
        @include assert {
          @include output {
            @include \2xl\:bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:left-9") {
        @include assert {
          @include output {
            @include \2xl\:left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-10") {
        @include assert {
          @include output {
            @include \2xl\:inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-10") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-10") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:start-10") {
        @include assert {
          @include output {
            @include \2xl\:start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:end-10") {
        @include assert {
          @include output {
            @include \2xl\:end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:top-10") {
        @include assert {
          @include output {
            @include \2xl\:top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:right-10") {
        @include assert {
          @include output {
            @include \2xl\:right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-10") {
        @include assert {
          @include output {
            @include \2xl\:bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:left-10") {
        @include assert {
          @include output {
            @include \2xl\:left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-11") {
        @include assert {
          @include output {
            @include \2xl\:inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-11") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-11") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:start-11") {
        @include assert {
          @include output {
            @include \2xl\:start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:end-11") {
        @include assert {
          @include output {
            @include \2xl\:end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:top-11") {
        @include assert {
          @include output {
            @include \2xl\:top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:right-11") {
        @include assert {
          @include output {
            @include \2xl\:right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-11") {
        @include assert {
          @include output {
            @include \2xl\:bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:left-11") {
        @include assert {
          @include output {
            @include \2xl\:left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-12") {
        @include assert {
          @include output {
            @include \2xl\:inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-12") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-12") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:start-12") {
        @include assert {
          @include output {
            @include \2xl\:start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:end-12") {
        @include assert {
          @include output {
            @include \2xl\:end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:top-12") {
        @include assert {
          @include output {
            @include \2xl\:top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:right-12") {
        @include assert {
          @include output {
            @include \2xl\:right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-12") {
        @include assert {
          @include output {
            @include \2xl\:bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:left-12") {
        @include assert {
          @include output {
            @include \2xl\:left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 3rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-14") {
        @include assert {
          @include output {
            @include \2xl\:inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-14") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-14") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:start-14") {
        @include assert {
          @include output {
            @include \2xl\:start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:end-14") {
        @include assert {
          @include output {
            @include \2xl\:end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:top-14") {
        @include assert {
          @include output {
            @include \2xl\:top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:right-14") {
        @include assert {
          @include output {
            @include \2xl\:right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-14") {
        @include assert {
          @include output {
            @include \2xl\:bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:left-14") {
        @include assert {
          @include output {
            @include \2xl\:left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-16") {
        @include assert {
          @include output {
            @include \2xl\:inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-16") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-16") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:start-16") {
        @include assert {
          @include output {
            @include \2xl\:start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:end-16") {
        @include assert {
          @include output {
            @include \2xl\:end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:top-16") {
        @include assert {
          @include output {
            @include \2xl\:top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:right-16") {
        @include assert {
          @include output {
            @include \2xl\:right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-16") {
        @include assert {
          @include output {
            @include \2xl\:bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:left-16") {
        @include assert {
          @include output {
            @include \2xl\:left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 4rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-20") {
        @include assert {
          @include output {
            @include \2xl\:inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-20") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-20") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:start-20") {
        @include assert {
          @include output {
            @include \2xl\:start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:end-20") {
        @include assert {
          @include output {
            @include \2xl\:end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:top-20") {
        @include assert {
          @include output {
            @include \2xl\:top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:right-20") {
        @include assert {
          @include output {
            @include \2xl\:right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-20") {
        @include assert {
          @include output {
            @include \2xl\:bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:left-20") {
        @include assert {
          @include output {
            @include \2xl\:left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 5rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-24") {
        @include assert {
          @include output {
            @include \2xl\:inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-24") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-24") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:start-24") {
        @include assert {
          @include output {
            @include \2xl\:start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:end-24") {
        @include assert {
          @include output {
            @include \2xl\:end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:top-24") {
        @include assert {
          @include output {
            @include \2xl\:top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:right-24") {
        @include assert {
          @include output {
            @include \2xl\:right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-24") {
        @include assert {
          @include output {
            @include \2xl\:bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:left-24") {
        @include assert {
          @include output {
            @include \2xl\:left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 6rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-28") {
        @include assert {
          @include output {
            @include \2xl\:inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-28") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-28") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:start-28") {
        @include assert {
          @include output {
            @include \2xl\:start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:end-28") {
        @include assert {
          @include output {
            @include \2xl\:end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:top-28") {
        @include assert {
          @include output {
            @include \2xl\:top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:right-28") {
        @include assert {
          @include output {
            @include \2xl\:right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-28") {
        @include assert {
          @include output {
            @include \2xl\:bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:left-28") {
        @include assert {
          @include output {
            @include \2xl\:left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 7rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-32") {
        @include assert {
          @include output {
            @include \2xl\:inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-32") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-32") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:start-32") {
        @include assert {
          @include output {
            @include \2xl\:start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:end-32") {
        @include assert {
          @include output {
            @include \2xl\:end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:top-32") {
        @include assert {
          @include output {
            @include \2xl\:top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:right-32") {
        @include assert {
          @include output {
            @include \2xl\:right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-32") {
        @include assert {
          @include output {
            @include \2xl\:bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:left-32") {
        @include assert {
          @include output {
            @include \2xl\:left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 8rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-36") {
        @include assert {
          @include output {
            @include \2xl\:inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-36") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-36") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:start-36") {
        @include assert {
          @include output {
            @include \2xl\:start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:end-36") {
        @include assert {
          @include output {
            @include \2xl\:end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:top-36") {
        @include assert {
          @include output {
            @include \2xl\:top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:right-36") {
        @include assert {
          @include output {
            @include \2xl\:right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-36") {
        @include assert {
          @include output {
            @include \2xl\:bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:left-36") {
        @include assert {
          @include output {
            @include \2xl\:left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 9rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-40") {
        @include assert {
          @include output {
            @include \2xl\:inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-40") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-40") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:start-40") {
        @include assert {
          @include output {
            @include \2xl\:start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:end-40") {
        @include assert {
          @include output {
            @include \2xl\:end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:top-40") {
        @include assert {
          @include output {
            @include \2xl\:top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:right-40") {
        @include assert {
          @include output {
            @include \2xl\:right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-40") {
        @include assert {
          @include output {
            @include \2xl\:bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:left-40") {
        @include assert {
          @include output {
            @include \2xl\:left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 10rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-44") {
        @include assert {
          @include output {
            @include \2xl\:inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-44") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-44") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:start-44") {
        @include assert {
          @include output {
            @include \2xl\:start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:end-44") {
        @include assert {
          @include output {
            @include \2xl\:end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:top-44") {
        @include assert {
          @include output {
            @include \2xl\:top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:right-44") {
        @include assert {
          @include output {
            @include \2xl\:right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-44") {
        @include assert {
          @include output {
            @include \2xl\:bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:left-44") {
        @include assert {
          @include output {
            @include \2xl\:left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 11rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-48") {
        @include assert {
          @include output {
            @include \2xl\:inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-48") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-48") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:start-48") {
        @include assert {
          @include output {
            @include \2xl\:start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:end-48") {
        @include assert {
          @include output {
            @include \2xl\:end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:top-48") {
        @include assert {
          @include output {
            @include \2xl\:top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:right-48") {
        @include assert {
          @include output {
            @include \2xl\:right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-48") {
        @include assert {
          @include output {
            @include \2xl\:bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:left-48") {
        @include assert {
          @include output {
            @include \2xl\:left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 12rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-52") {
        @include assert {
          @include output {
            @include \2xl\:inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-52") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-52") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:start-52") {
        @include assert {
          @include output {
            @include \2xl\:start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:end-52") {
        @include assert {
          @include output {
            @include \2xl\:end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:top-52") {
        @include assert {
          @include output {
            @include \2xl\:top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:right-52") {
        @include assert {
          @include output {
            @include \2xl\:right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-52") {
        @include assert {
          @include output {
            @include \2xl\:bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:left-52") {
        @include assert {
          @include output {
            @include \2xl\:left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 13rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-56") {
        @include assert {
          @include output {
            @include \2xl\:inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-56") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-56") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:start-56") {
        @include assert {
          @include output {
            @include \2xl\:start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:end-56") {
        @include assert {
          @include output {
            @include \2xl\:end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:top-56") {
        @include assert {
          @include output {
            @include \2xl\:top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:right-56") {
        @include assert {
          @include output {
            @include \2xl\:right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-56") {
        @include assert {
          @include output {
            @include \2xl\:bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:left-56") {
        @include assert {
          @include output {
            @include \2xl\:left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 14rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-60") {
        @include assert {
          @include output {
            @include \2xl\:inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-60") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-60") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:start-60") {
        @include assert {
          @include output {
            @include \2xl\:start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:end-60") {
        @include assert {
          @include output {
            @include \2xl\:end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:top-60") {
        @include assert {
          @include output {
            @include \2xl\:top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:right-60") {
        @include assert {
          @include output {
            @include \2xl\:right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-60") {
        @include assert {
          @include output {
            @include \2xl\:bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:left-60") {
        @include assert {
          @include output {
            @include \2xl\:left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 15rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-64") {
        @include assert {
          @include output {
            @include \2xl\:inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-64") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-64") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:start-64") {
        @include assert {
          @include output {
            @include \2xl\:start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:end-64") {
        @include assert {
          @include output {
            @include \2xl\:end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:top-64") {
        @include assert {
          @include output {
            @include \2xl\:top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:right-64") {
        @include assert {
          @include output {
            @include \2xl\:right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-64") {
        @include assert {
          @include output {
            @include \2xl\:bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:left-64") {
        @include assert {
          @include output {
            @include \2xl\:left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 16rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-72") {
        @include assert {
          @include output {
            @include \2xl\:inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-72") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-72") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:start-72") {
        @include assert {
          @include output {
            @include \2xl\:start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:end-72") {
        @include assert {
          @include output {
            @include \2xl\:end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:top-72") {
        @include assert {
          @include output {
            @include \2xl\:top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:right-72") {
        @include assert {
          @include output {
            @include \2xl\:right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-72") {
        @include assert {
          @include output {
            @include \2xl\:bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:left-72") {
        @include assert {
          @include output {
            @include \2xl\:left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 18rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-80") {
        @include assert {
          @include output {
            @include \2xl\:inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-80") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-80") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:start-80") {
        @include assert {
          @include output {
            @include \2xl\:start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:end-80") {
        @include assert {
          @include output {
            @include \2xl\:end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:top-80") {
        @include assert {
          @include output {
            @include \2xl\:top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:right-80") {
        @include assert {
          @include output {
            @include \2xl\:right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-80") {
        @include assert {
          @include output {
            @include \2xl\:bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:left-80") {
        @include assert {
          @include output {
            @include \2xl\:left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 20rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-96") {
        @include assert {
          @include output {
            @include \2xl\:inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-96") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-96") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:start-96") {
        @include assert {
          @include output {
            @include \2xl\:start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:end-96") {
        @include assert {
          @include output {
            @include \2xl\:end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:top-96") {
        @include assert {
          @include output {
            @include \2xl\:top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:right-96") {
        @include assert {
          @include output {
            @include \2xl\:right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:bottom-96") {
        @include assert {
          @include output {
            @include \2xl\:bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:left-96") {
        @include assert {
          @include output {
            @include \2xl\:left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 24rem;
            }
          }
        }
      }

      @include it("\2xl\:inset-auto") {
        @include assert {
          @include output {
            @include \2xl\:inset-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: auto;
            }
          }
        }
      }

      @include it("\2xl\:inset-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 50%;
            }
          }
        }
      }

      @include it("\2xl\:inset-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:inset-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:inset-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 25%;
            }
          }
        }
      }

      @include it("\2xl\:inset-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 50%;
            }
          }
        }
      }

      @include it("\2xl\:inset-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 75%;
            }
          }
        }
      }

      @include it("\2xl\:inset-full") {
        @include assert {
          @include output {
            @include \2xl\:inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 100%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-auto") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-full") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-auto") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-full") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it("\2xl\:start-auto") {
        @include assert {
          @include output {
            @include \2xl\:start-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it("\2xl\:start-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("\2xl\:start-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:start-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:start-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it("\2xl\:start-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it("\2xl\:start-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it("\2xl\:start-full") {
        @include assert {
          @include output {
            @include \2xl\:start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it("\2xl\:end-auto") {
        @include assert {
          @include output {
            @include \2xl\:end-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it("\2xl\:end-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("\2xl\:end-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:end-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:end-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it("\2xl\:end-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it("\2xl\:end-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it("\2xl\:end-full") {
        @include assert {
          @include output {
            @include \2xl\:end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it("\2xl\:top-auto") {
        @include assert {
          @include output {
            @include \2xl\:top-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: auto;
            }
          }
        }
      }

      @include it("\2xl\:top-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 50%;
            }
          }
        }
      }

      @include it("\2xl\:top-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:top-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:top-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 25%;
            }
          }
        }
      }

      @include it("\2xl\:top-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 50%;
            }
          }
        }
      }

      @include it("\2xl\:top-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 75%;
            }
          }
        }
      }

      @include it("\2xl\:top-full") {
        @include assert {
          @include output {
            @include \2xl\:top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 100%;
            }
          }
        }
      }

      @include it("\2xl\:right-auto") {
        @include assert {
          @include output {
            @include \2xl\:right-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: auto;
            }
          }
        }
      }

      @include it("\2xl\:right-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 50%;
            }
          }
        }
      }

      @include it("\2xl\:right-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:right-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:right-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 25%;
            }
          }
        }
      }

      @include it("\2xl\:right-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 50%;
            }
          }
        }
      }

      @include it("\2xl\:right-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 75%;
            }
          }
        }
      }

      @include it("\2xl\:right-full") {
        @include assert {
          @include output {
            @include \2xl\:right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 100%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-auto") {
        @include assert {
          @include output {
            @include \2xl\:bottom-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: auto;
            }
          }
        }
      }

      @include it("\2xl\:bottom-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 25%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 75%;
            }
          }
        }
      }

      @include it("\2xl\:bottom-full") {
        @include assert {
          @include output {
            @include \2xl\:bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 100%;
            }
          }
        }
      }

      @include it("\2xl\:left-auto") {
        @include assert {
          @include output {
            @include \2xl\:left-auto;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: auto;
            }
          }
        }
      }

      @include it("\2xl\:left-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 50%;
            }
          }
        }
      }

      @include it("\2xl\:left-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:left-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:left-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 25%;
            }
          }
        }
      }

      @include it("\2xl\:left-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 50%;
            }
          }
        }
      }

      @include it("\2xl\:left-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 75%;
            }
          }
        }
      }

      @include it("\2xl\:left-full") {
        @include assert {
          @include output {
            @include \2xl\:left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 100%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-0") {
        @include assert {
          @include output {
            @include \2xl\:-inset-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-0") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-0") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-start-0") {
        @include assert {
          @include output {
            @include \2xl\:-start-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-end-0") {
        @include assert {
          @include output {
            @include \2xl\:-end-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-top-0") {
        @include assert {
          @include output {
            @include \2xl\:-top-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-right-0") {
        @include assert {
          @include output {
            @include \2xl\:-right-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-0") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-left-0") {
        @include assert {
          @include output {
            @include \2xl\:-left-0;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 0px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-px") {
        @include assert {
          @include output {
            @include \2xl\:-inset-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-px") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-px") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-start-px") {
        @include assert {
          @include output {
            @include \2xl\:-start-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-end-px") {
        @include assert {
          @include output {
            @include \2xl\:-end-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-top-px") {
        @include assert {
          @include output {
            @include \2xl\:-top-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-right-px") {
        @include assert {
          @include output {
            @include \2xl\:-right-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-px") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-left-px") {
        @include assert {
          @include output {
            @include \2xl\:-left-px;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-start-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-end-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-top-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-right-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-0\.5") {
        @include assert {
          @include output {
            @include \2xl\:-left-0\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-1") {
        @include assert {
          @include output {
            @include \2xl\:-inset-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-1") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-1") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-1") {
        @include assert {
          @include output {
            @include \2xl\:-start-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-1") {
        @include assert {
          @include output {
            @include \2xl\:-end-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-1") {
        @include assert {
          @include output {
            @include \2xl\:-top-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-1") {
        @include assert {
          @include output {
            @include \2xl\:-right-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-1") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-1") {
        @include assert {
          @include output {
            @include \2xl\:-left-1;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-start-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-end-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-top-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-right-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-1\.5") {
        @include assert {
          @include output {
            @include \2xl\:-left-1\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-2") {
        @include assert {
          @include output {
            @include \2xl\:-inset-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-2") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-2") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-2") {
        @include assert {
          @include output {
            @include \2xl\:-start-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-2") {
        @include assert {
          @include output {
            @include \2xl\:-end-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-2") {
        @include assert {
          @include output {
            @include \2xl\:-top-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-2") {
        @include assert {
          @include output {
            @include \2xl\:-right-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-2") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-2") {
        @include assert {
          @include output {
            @include \2xl\:-left-2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-start-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-end-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-top-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-right-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-2\.5") {
        @include assert {
          @include output {
            @include \2xl\:-left-2\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-3") {
        @include assert {
          @include output {
            @include \2xl\:-start-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-3") {
        @include assert {
          @include output {
            @include \2xl\:-end-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-3") {
        @include assert {
          @include output {
            @include \2xl\:-top-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-3") {
        @include assert {
          @include output {
            @include \2xl\:-right-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-3") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-3") {
        @include assert {
          @include output {
            @include \2xl\:-left-3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-start-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-end-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-top-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-right-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-3\.5") {
        @include assert {
          @include output {
            @include \2xl\:-left-3\.5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-4") {
        @include assert {
          @include output {
            @include \2xl\:-start-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-4") {
        @include assert {
          @include output {
            @include \2xl\:-end-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-4") {
        @include assert {
          @include output {
            @include \2xl\:-top-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-4") {
        @include assert {
          @include output {
            @include \2xl\:-right-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-4") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-4") {
        @include assert {
          @include output {
            @include \2xl\:-left-4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-5") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-5") {
        @include assert {
          @include output {
            @include \2xl\:-start-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-5") {
        @include assert {
          @include output {
            @include \2xl\:-end-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-5") {
        @include assert {
          @include output {
            @include \2xl\:-top-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-5") {
        @include assert {
          @include output {
            @include \2xl\:-right-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-5") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-5") {
        @include assert {
          @include output {
            @include \2xl\:-left-5;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-6") {
        @include assert {
          @include output {
            @include \2xl\:-inset-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-6") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-6") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-6") {
        @include assert {
          @include output {
            @include \2xl\:-start-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-6") {
        @include assert {
          @include output {
            @include \2xl\:-end-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-6") {
        @include assert {
          @include output {
            @include \2xl\:-top-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-6") {
        @include assert {
          @include output {
            @include \2xl\:-right-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-6") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-6") {
        @include assert {
          @include output {
            @include \2xl\:-left-6;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-7") {
        @include assert {
          @include output {
            @include \2xl\:-inset-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-7") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-7") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-7") {
        @include assert {
          @include output {
            @include \2xl\:-start-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-7") {
        @include assert {
          @include output {
            @include \2xl\:-end-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-7") {
        @include assert {
          @include output {
            @include \2xl\:-top-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-7") {
        @include assert {
          @include output {
            @include \2xl\:-right-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-7") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-7") {
        @include assert {
          @include output {
            @include \2xl\:-left-7;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-8") {
        @include assert {
          @include output {
            @include \2xl\:-inset-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-8") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-8") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-8") {
        @include assert {
          @include output {
            @include \2xl\:-start-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-8") {
        @include assert {
          @include output {
            @include \2xl\:-end-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-8") {
        @include assert {
          @include output {
            @include \2xl\:-top-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-8") {
        @include assert {
          @include output {
            @include \2xl\:-right-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-8") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-8") {
        @include assert {
          @include output {
            @include \2xl\:-left-8;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-9") {
        @include assert {
          @include output {
            @include \2xl\:-inset-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-9") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-9") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-9") {
        @include assert {
          @include output {
            @include \2xl\:-start-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-9") {
        @include assert {
          @include output {
            @include \2xl\:-end-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-9") {
        @include assert {
          @include output {
            @include \2xl\:-top-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-9") {
        @include assert {
          @include output {
            @include \2xl\:-right-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-9") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-9") {
        @include assert {
          @include output {
            @include \2xl\:-left-9;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-10") {
        @include assert {
          @include output {
            @include \2xl\:-inset-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-10") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-10") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-10") {
        @include assert {
          @include output {
            @include \2xl\:-start-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-10") {
        @include assert {
          @include output {
            @include \2xl\:-end-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-10") {
        @include assert {
          @include output {
            @include \2xl\:-top-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-10") {
        @include assert {
          @include output {
            @include \2xl\:-right-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-10") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-10") {
        @include assert {
          @include output {
            @include \2xl\:-left-10;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-11") {
        @include assert {
          @include output {
            @include \2xl\:-inset-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-11") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-11") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-11") {
        @include assert {
          @include output {
            @include \2xl\:-start-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-11") {
        @include assert {
          @include output {
            @include \2xl\:-end-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-11") {
        @include assert {
          @include output {
            @include \2xl\:-top-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-11") {
        @include assert {
          @include output {
            @include \2xl\:-right-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-11") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-11") {
        @include assert {
          @include output {
            @include \2xl\:-left-11;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-12") {
        @include assert {
          @include output {
            @include \2xl\:-inset-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-12") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-12") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-12") {
        @include assert {
          @include output {
            @include \2xl\:-start-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-12") {
        @include assert {
          @include output {
            @include \2xl\:-end-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-12") {
        @include assert {
          @include output {
            @include \2xl\:-top-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-12") {
        @include assert {
          @include output {
            @include \2xl\:-right-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-12") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-12") {
        @include assert {
          @include output {
            @include \2xl\:-left-12;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -3rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-14") {
        @include assert {
          @include output {
            @include \2xl\:-inset-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-14") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-14") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-14") {
        @include assert {
          @include output {
            @include \2xl\:-start-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-14") {
        @include assert {
          @include output {
            @include \2xl\:-end-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-14") {
        @include assert {
          @include output {
            @include \2xl\:-top-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-14") {
        @include assert {
          @include output {
            @include \2xl\:-right-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-14") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-14") {
        @include assert {
          @include output {
            @include \2xl\:-left-14;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-16") {
        @include assert {
          @include output {
            @include \2xl\:-inset-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-16") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-16") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-16") {
        @include assert {
          @include output {
            @include \2xl\:-start-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-16") {
        @include assert {
          @include output {
            @include \2xl\:-end-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-16") {
        @include assert {
          @include output {
            @include \2xl\:-top-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-16") {
        @include assert {
          @include output {
            @include \2xl\:-right-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-16") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-16") {
        @include assert {
          @include output {
            @include \2xl\:-left-16;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -4rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-20") {
        @include assert {
          @include output {
            @include \2xl\:-inset-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-20") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-20") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-20") {
        @include assert {
          @include output {
            @include \2xl\:-start-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-20") {
        @include assert {
          @include output {
            @include \2xl\:-end-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-20") {
        @include assert {
          @include output {
            @include \2xl\:-top-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-20") {
        @include assert {
          @include output {
            @include \2xl\:-right-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-20") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-20") {
        @include assert {
          @include output {
            @include \2xl\:-left-20;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -5rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-24") {
        @include assert {
          @include output {
            @include \2xl\:-inset-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-24") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-24") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-24") {
        @include assert {
          @include output {
            @include \2xl\:-start-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-24") {
        @include assert {
          @include output {
            @include \2xl\:-end-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-24") {
        @include assert {
          @include output {
            @include \2xl\:-top-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-24") {
        @include assert {
          @include output {
            @include \2xl\:-right-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-24") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-24") {
        @include assert {
          @include output {
            @include \2xl\:-left-24;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -6rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-28") {
        @include assert {
          @include output {
            @include \2xl\:-inset-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-28") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-28") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-28") {
        @include assert {
          @include output {
            @include \2xl\:-start-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-28") {
        @include assert {
          @include output {
            @include \2xl\:-end-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-28") {
        @include assert {
          @include output {
            @include \2xl\:-top-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-28") {
        @include assert {
          @include output {
            @include \2xl\:-right-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-28") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-28") {
        @include assert {
          @include output {
            @include \2xl\:-left-28;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -7rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-32") {
        @include assert {
          @include output {
            @include \2xl\:-inset-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-32") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-32") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-32") {
        @include assert {
          @include output {
            @include \2xl\:-start-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-32") {
        @include assert {
          @include output {
            @include \2xl\:-end-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-32") {
        @include assert {
          @include output {
            @include \2xl\:-top-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-32") {
        @include assert {
          @include output {
            @include \2xl\:-right-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-32") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-32") {
        @include assert {
          @include output {
            @include \2xl\:-left-32;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -8rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-36") {
        @include assert {
          @include output {
            @include \2xl\:-inset-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-36") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-36") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-36") {
        @include assert {
          @include output {
            @include \2xl\:-start-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-36") {
        @include assert {
          @include output {
            @include \2xl\:-end-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-36") {
        @include assert {
          @include output {
            @include \2xl\:-top-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-36") {
        @include assert {
          @include output {
            @include \2xl\:-right-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-36") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-36") {
        @include assert {
          @include output {
            @include \2xl\:-left-36;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -9rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-40") {
        @include assert {
          @include output {
            @include \2xl\:-inset-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-40") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-40") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-40") {
        @include assert {
          @include output {
            @include \2xl\:-start-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-40") {
        @include assert {
          @include output {
            @include \2xl\:-end-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-40") {
        @include assert {
          @include output {
            @include \2xl\:-top-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-40") {
        @include assert {
          @include output {
            @include \2xl\:-right-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-40") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-40") {
        @include assert {
          @include output {
            @include \2xl\:-left-40;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -10rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-44") {
        @include assert {
          @include output {
            @include \2xl\:-inset-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-44") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-44") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-44") {
        @include assert {
          @include output {
            @include \2xl\:-start-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-44") {
        @include assert {
          @include output {
            @include \2xl\:-end-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-44") {
        @include assert {
          @include output {
            @include \2xl\:-top-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-44") {
        @include assert {
          @include output {
            @include \2xl\:-right-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-44") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-44") {
        @include assert {
          @include output {
            @include \2xl\:-left-44;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -11rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-48") {
        @include assert {
          @include output {
            @include \2xl\:-inset-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-48") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-48") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-48") {
        @include assert {
          @include output {
            @include \2xl\:-start-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-48") {
        @include assert {
          @include output {
            @include \2xl\:-end-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-48") {
        @include assert {
          @include output {
            @include \2xl\:-top-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-48") {
        @include assert {
          @include output {
            @include \2xl\:-right-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-48") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-48") {
        @include assert {
          @include output {
            @include \2xl\:-left-48;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -12rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-52") {
        @include assert {
          @include output {
            @include \2xl\:-inset-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-52") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-52") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-52") {
        @include assert {
          @include output {
            @include \2xl\:-start-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-52") {
        @include assert {
          @include output {
            @include \2xl\:-end-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-52") {
        @include assert {
          @include output {
            @include \2xl\:-top-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-52") {
        @include assert {
          @include output {
            @include \2xl\:-right-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-52") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-52") {
        @include assert {
          @include output {
            @include \2xl\:-left-52;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -13rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-56") {
        @include assert {
          @include output {
            @include \2xl\:-inset-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-56") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-56") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-56") {
        @include assert {
          @include output {
            @include \2xl\:-start-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-56") {
        @include assert {
          @include output {
            @include \2xl\:-end-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-56") {
        @include assert {
          @include output {
            @include \2xl\:-top-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-56") {
        @include assert {
          @include output {
            @include \2xl\:-right-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-56") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-56") {
        @include assert {
          @include output {
            @include \2xl\:-left-56;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -14rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-60") {
        @include assert {
          @include output {
            @include \2xl\:-inset-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-60") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-60") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-60") {
        @include assert {
          @include output {
            @include \2xl\:-start-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-60") {
        @include assert {
          @include output {
            @include \2xl\:-end-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-60") {
        @include assert {
          @include output {
            @include \2xl\:-top-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-60") {
        @include assert {
          @include output {
            @include \2xl\:-right-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-60") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-60") {
        @include assert {
          @include output {
            @include \2xl\:-left-60;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -15rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-64") {
        @include assert {
          @include output {
            @include \2xl\:-inset-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-64") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-64") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-64") {
        @include assert {
          @include output {
            @include \2xl\:-start-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-64") {
        @include assert {
          @include output {
            @include \2xl\:-end-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-64") {
        @include assert {
          @include output {
            @include \2xl\:-top-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-64") {
        @include assert {
          @include output {
            @include \2xl\:-right-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-64") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-64") {
        @include assert {
          @include output {
            @include \2xl\:-left-64;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -16rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-72") {
        @include assert {
          @include output {
            @include \2xl\:-inset-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-72") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-72") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-72") {
        @include assert {
          @include output {
            @include \2xl\:-start-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-72") {
        @include assert {
          @include output {
            @include \2xl\:-end-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-72") {
        @include assert {
          @include output {
            @include \2xl\:-top-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-72") {
        @include assert {
          @include output {
            @include \2xl\:-right-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-72") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-72") {
        @include assert {
          @include output {
            @include \2xl\:-left-72;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -18rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-80") {
        @include assert {
          @include output {
            @include \2xl\:-inset-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-80") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-80") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-80") {
        @include assert {
          @include output {
            @include \2xl\:-start-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-80") {
        @include assert {
          @include output {
            @include \2xl\:-end-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-80") {
        @include assert {
          @include output {
            @include \2xl\:-top-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-80") {
        @include assert {
          @include output {
            @include \2xl\:-right-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-80") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-80") {
        @include assert {
          @include output {
            @include \2xl\:-left-80;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -20rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-96") {
        @include assert {
          @include output {
            @include \2xl\:-inset-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-96") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-96") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-start-96") {
        @include assert {
          @include output {
            @include \2xl\:-start-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-end-96") {
        @include assert {
          @include output {
            @include \2xl\:-end-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-top-96") {
        @include assert {
          @include output {
            @include \2xl\:-top-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-right-96") {
        @include assert {
          @include output {
            @include \2xl\:-right-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-96") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-left-96") {
        @include assert {
          @include output {
            @include \2xl\:-left-96;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -24rem;
            }
          }
        }
      }

      @include it("\2xl\:-inset-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-full") {
        @include assert {
          @include output {
            @include \2xl\:-inset-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-full") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-full") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-start-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-start-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-start-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-start-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-start-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-start-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-start-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-start-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-start-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-start-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-start-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-start-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-start-full") {
        @include assert {
          @include output {
            @include \2xl\:-start-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-end-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-end-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-end-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-end-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-end-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-end-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-end-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-end-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-end-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-end-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-end-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-end-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-end-full") {
        @include assert {
          @include output {
            @include \2xl\:-end-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-top-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-top-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-top-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-top-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-top-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-top-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-top-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-top-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-top-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-top-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-top-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-top-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-top-full") {
        @include assert {
          @include output {
            @include \2xl\:-top-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-right-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-right-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-right-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-right-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-right-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-right-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-right-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-right-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-right-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-right-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-right-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-right-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-right-full") {
        @include assert {
          @include output {
            @include \2xl\:-right-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-full") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -100%;
            }
          }
        }
      }

      @include it("\2xl\:-left-1\/2") {
        @include assert {
          @include output {
            @include \2xl\:-left-1\/2;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-left-1\/3") {
        @include assert {
          @include output {
            @include \2xl\:-left-1\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it("\2xl\:-left-2\/3") {
        @include assert {
          @include output {
            @include \2xl\:-left-2\/3;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it("\2xl\:-left-1\/4") {
        @include assert {
          @include output {
            @include \2xl\:-left-1\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -25%;
            }
          }
        }
      }

      @include it("\2xl\:-left-2\/4") {
        @include assert {
          @include output {
            @include \2xl\:-left-2\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -50%;
            }
          }
        }
      }

      @include it("\2xl\:-left-3\/4") {
        @include assert {
          @include output {
            @include \2xl\:-left-3\/4;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -75%;
            }
          }
        }
      }

      @include it("\2xl\:-left-full") {
        @include assert {
          @include output {
            @include \2xl\:-left-full;
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -100%;
            }
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("inset-(3px)") {
        @include assert {
          @include output {
            @include inset-(3px);
            @include reset;
          }

          @include expect {
            inset: 3px;
          }
        }
      }

      @include it("inset-x-(3px)") {
        @include assert {
          @include output {
            @include inset-x-(3px);
            @include reset;
          }

          @include expect {
            left: 3px;
            right: 3px;
          }
        }
      }

      @include it("inset-y-(3px)") {
        @include assert {
          @include output {
            @include inset-y-(3px);
            @include reset;
          }

          @include expect {
            top: 3px;
            bottom: 3px;
          }
        }
      }

      @include it("start-(3px)") {
        @include assert {
          @include output {
            @include start-(3px);
            @include reset;
          }

          @include expect {
            inset-inline-start: 3px;
          }
        }
      }

      @include it("end-(3px)") {
        @include assert {
          @include output {
            @include end-(3px);
            @include reset;
          }

          @include expect {
            inset-inline-end: 3px;
          }
        }
      }

      @include it("top-(3px)") {
        @include assert {
          @include output {
            @include top-(3px);
            @include reset;
          }

          @include expect {
            top: 3px;
          }
        }
      }

      @include it("right-(3px)") {
        @include assert {
          @include output {
            @include right-(3px);
            @include reset;
          }

          @include expect {
            right: 3px;
          }
        }
      }

      @include it("bottom-(3px)") {
        @include assert {
          @include output {
            @include bottom-(3px);
            @include reset;
          }

          @include expect {
            bottom: 3px;
          }
        }
      }

      @include it("left-(3px)") {
        @include assert {
          @include output {
            @include left-(3px);
            @include reset;
          }

          @include expect {
            left: 3px;
          }
        }
      }

      @include it("-inset-(3px)") {
        @include assert {
          @include output {
            @include -inset-(3px);
            @include reset;
          }

          @include expect {
            inset: -3px;
          }
        }
      }

      @include it("-inset-x-(3px)") {
        @include assert {
          @include output {
            @include -inset-x-(3px);
            @include reset;
          }

          @include expect {
            left: -3px;
            right: -3px;
          }
        }
      }

      @include it("-inset-y-(3px)") {
        @include assert {
          @include output {
            @include -inset-y-(3px);
            @include reset;
          }

          @include expect {
            top: -3px;
            bottom: -3px;
          }
        }
      }

      @include it("-start-(3px)") {
        @include assert {
          @include output {
            @include -start-(3px);
            @include reset;
          }

          @include expect {
            inset-inline-start: -3px;
          }
        }
      }

      @include it("-end-(3px)") {
        @include assert {
          @include output {
            @include -end-(3px);
            @include reset;
          }

          @include expect {
            inset-inline-end: -3px;
          }
        }
      }

      @include it("-top-(3px)") {
        @include assert {
          @include output {
            @include -top-(3px);
            @include reset;
          }

          @include expect {
            top: -3px;
          }
        }
      }

      @include it("-right-(3px)") {
        @include assert {
          @include output {
            @include -right-(3px);
            @include reset;
          }

          @include expect {
            right: -3px;
          }
        }
      }

      @include it("-bottom-(3px)") {
        @include assert {
          @include output {
            @include -bottom-(3px);
            @include reset;
          }

          @include expect {
            bottom: -3px;
          }
        }
      }

      @include it("-left-(3px)") {
        @include assert {
          @include output {
            @include -left-(3px);
            @include reset;
          }

          @include expect {
            left: -3px;
          }
        }
      }

      @include it("sm\:inset-(3px)") {
        @include assert {
          @include output {
            @include sm\:inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: 3px;
            }
          }
        }
      }

      @include it("sm\:inset-x-(3px)") {
        @include assert {
          @include output {
            @include sm\:inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it("sm\:inset-y-(3px)") {
        @include assert {
          @include output {
            @include sm\:inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it("sm\:start-(3px)") {
        @include assert {
          @include output {
            @include sm\:start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it("sm\:end-(3px)") {
        @include assert {
          @include output {
            @include sm\:end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it("sm\:top-(3px)") {
        @include assert {
          @include output {
            @include sm\:top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: 3px;
            }
          }
        }
      }

      @include it("sm\:right-(3px)") {
        @include assert {
          @include output {
            @include sm\:right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: 3px;
            }
          }
        }
      }

      @include it("sm\:bottom-(3px)") {
        @include assert {
          @include output {
            @include sm\:bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: 3px;
            }
          }
        }
      }

      @include it("sm\:left-(3px)") {
        @include assert {
          @include output {
            @include sm\:left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: 3px;
            }
          }
        }
      }

      @include it("sm\:-inset-(3px)") {
        @include assert {
          @include output {
            @include sm\:-inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset: -3px;
            }
          }
        }
      }

      @include it("sm\:-inset-x-(3px)") {
        @include assert {
          @include output {
            @include sm\:-inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it("sm\:-inset-y-(3px)") {
        @include assert {
          @include output {
            @include sm\:-inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it("sm\:-start-(3px)") {
        @include assert {
          @include output {
            @include sm\:-start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it("sm\:-end-(3px)") {
        @include assert {
          @include output {
            @include sm\:-end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it("sm\:-top-(3px)") {
        @include assert {
          @include output {
            @include sm\:-top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              top: -3px;
            }
          }
        }
      }

      @include it("sm\:-right-(3px)") {
        @include assert {
          @include output {
            @include sm\:-right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              right: -3px;
            }
          }
        }
      }

      @include it("sm\:-bottom-(3px)") {
        @include assert {
          @include output {
            @include sm\:-bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              bottom: -3px;
            }
          }
        }
      }

      @include it("sm\:-left-(3px)") {
        @include assert {
          @include output {
            @include sm\:-left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $sm) {
              left: -3px;
            }
          }
        }
      }

      @include it("md\:inset-(3px)") {
        @include assert {
          @include output {
            @include md\:inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: 3px;
            }
          }
        }
      }

      @include it("md\:inset-x-(3px)") {
        @include assert {
          @include output {
            @include md\:inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it("md\:inset-y-(3px)") {
        @include assert {
          @include output {
            @include md\:inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it("md\:start-(3px)") {
        @include assert {
          @include output {
            @include md\:start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it("md\:end-(3px)") {
        @include assert {
          @include output {
            @include md\:end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it("md\:top-(3px)") {
        @include assert {
          @include output {
            @include md\:top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: 3px;
            }
          }
        }
      }

      @include it("md\:right-(3px)") {
        @include assert {
          @include output {
            @include md\:right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: 3px;
            }
          }
        }
      }

      @include it("md\:bottom-(3px)") {
        @include assert {
          @include output {
            @include md\:bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: 3px;
            }
          }
        }
      }

      @include it("md\:left-(3px)") {
        @include assert {
          @include output {
            @include md\:left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: 3px;
            }
          }
        }
      }

      @include it("md\:-inset-(3px)") {
        @include assert {
          @include output {
            @include md\:-inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset: -3px;
            }
          }
        }
      }

      @include it("md\:-inset-x-(3px)") {
        @include assert {
          @include output {
            @include md\:-inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it("md\:-inset-y-(3px)") {
        @include assert {
          @include output {
            @include md\:-inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it("md\:-start-(3px)") {
        @include assert {
          @include output {
            @include md\:-start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it("md\:-end-(3px)") {
        @include assert {
          @include output {
            @include md\:-end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it("md\:-top-(3px)") {
        @include assert {
          @include output {
            @include md\:-top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              top: -3px;
            }
          }
        }
      }

      @include it("md\:-right-(3px)") {
        @include assert {
          @include output {
            @include md\:-right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              right: -3px;
            }
          }
        }
      }

      @include it("md\:-bottom-(3px)") {
        @include assert {
          @include output {
            @include md\:-bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              bottom: -3px;
            }
          }
        }
      }

      @include it("md\:-left-(3px)") {
        @include assert {
          @include output {
            @include md\:-left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $md) {
              left: -3px;
            }
          }
        }
      }

      @include it("lg\:inset-(3px)") {
        @include assert {
          @include output {
            @include lg\:inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: 3px;
            }
          }
        }
      }

      @include it("lg\:inset-x-(3px)") {
        @include assert {
          @include output {
            @include lg\:inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it("lg\:inset-y-(3px)") {
        @include assert {
          @include output {
            @include lg\:inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it("lg\:start-(3px)") {
        @include assert {
          @include output {
            @include lg\:start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it("lg\:end-(3px)") {
        @include assert {
          @include output {
            @include lg\:end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it("lg\:top-(3px)") {
        @include assert {
          @include output {
            @include lg\:top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: 3px;
            }
          }
        }
      }

      @include it("lg\:right-(3px)") {
        @include assert {
          @include output {
            @include lg\:right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: 3px;
            }
          }
        }
      }

      @include it("lg\:bottom-(3px)") {
        @include assert {
          @include output {
            @include lg\:bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: 3px;
            }
          }
        }
      }

      @include it("lg\:left-(3px)") {
        @include assert {
          @include output {
            @include lg\:left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: 3px;
            }
          }
        }
      }

      @include it("lg\:-inset-(3px)") {
        @include assert {
          @include output {
            @include lg\:-inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset: -3px;
            }
          }
        }
      }

      @include it("lg\:-inset-x-(3px)") {
        @include assert {
          @include output {
            @include lg\:-inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it("lg\:-inset-y-(3px)") {
        @include assert {
          @include output {
            @include lg\:-inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it("lg\:-start-(3px)") {
        @include assert {
          @include output {
            @include lg\:-start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it("lg\:-end-(3px)") {
        @include assert {
          @include output {
            @include lg\:-end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it("lg\:-top-(3px)") {
        @include assert {
          @include output {
            @include lg\:-top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              top: -3px;
            }
          }
        }
      }

      @include it("lg\:-right-(3px)") {
        @include assert {
          @include output {
            @include lg\:-right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              right: -3px;
            }
          }
        }
      }

      @include it("lg\:-bottom-(3px)") {
        @include assert {
          @include output {
            @include lg\:-bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              bottom: -3px;
            }
          }
        }
      }

      @include it("lg\:-left-(3px)") {
        @include assert {
          @include output {
            @include lg\:-left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $lg) {
              left: -3px;
            }
          }
        }
      }

      @include it("xl\:inset-(3px)") {
        @include assert {
          @include output {
            @include xl\:inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: 3px;
            }
          }
        }
      }

      @include it("xl\:inset-x-(3px)") {
        @include assert {
          @include output {
            @include xl\:inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it("xl\:inset-y-(3px)") {
        @include assert {
          @include output {
            @include xl\:inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it("xl\:start-(3px)") {
        @include assert {
          @include output {
            @include xl\:start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it("xl\:end-(3px)") {
        @include assert {
          @include output {
            @include xl\:end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it("xl\:top-(3px)") {
        @include assert {
          @include output {
            @include xl\:top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: 3px;
            }
          }
        }
      }

      @include it("xl\:right-(3px)") {
        @include assert {
          @include output {
            @include xl\:right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: 3px;
            }
          }
        }
      }

      @include it("xl\:bottom-(3px)") {
        @include assert {
          @include output {
            @include xl\:bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: 3px;
            }
          }
        }
      }

      @include it("xl\:left-(3px)") {
        @include assert {
          @include output {
            @include xl\:left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: 3px;
            }
          }
        }
      }

      @include it("xl\:-inset-(3px)") {
        @include assert {
          @include output {
            @include xl\:-inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset: -3px;
            }
          }
        }
      }

      @include it("xl\:-inset-x-(3px)") {
        @include assert {
          @include output {
            @include xl\:-inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it("xl\:-inset-y-(3px)") {
        @include assert {
          @include output {
            @include xl\:-inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it("xl\:-start-(3px)") {
        @include assert {
          @include output {
            @include xl\:-start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it("xl\:-end-(3px)") {
        @include assert {
          @include output {
            @include xl\:-end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it("xl\:-top-(3px)") {
        @include assert {
          @include output {
            @include xl\:-top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              top: -3px;
            }
          }
        }
      }

      @include it("xl\:-right-(3px)") {
        @include assert {
          @include output {
            @include xl\:-right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              right: -3px;
            }
          }
        }
      }

      @include it("xl\:-bottom-(3px)") {
        @include assert {
          @include output {
            @include xl\:-bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              bottom: -3px;
            }
          }
        }
      }

      @include it("xl\:-left-(3px)") {
        @include assert {
          @include output {
            @include xl\:-left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $xl) {
              left: -3px;
            }
          }
        }
      }

      @include it("\2xl\:inset-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: 3px;
            }
          }
        }
      }

      @include it("\2xl\:inset-x-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it("\2xl\:inset-y-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it("\2xl\:start-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it("\2xl\:end-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it("\2xl\:top-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: 3px;
            }
          }
        }
      }

      @include it("\2xl\:right-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: 3px;
            }
          }
        }
      }

      @include it("\2xl\:bottom-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: 3px;
            }
          }
        }
      }

      @include it("\2xl\:left-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: 3px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-inset-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-x-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-inset-y-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-start-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-start-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-end-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-end-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-top-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-top-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              top: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-right-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-right-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              right: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-bottom-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-bottom-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              bottom: -3px;
            }
          }
        }
      }

      @include it("\2xl\:-left-(3px)") {
        @include assert {
          @include output {
            @include \2xl\:-left-(3px);
            @include reset;
          }

          @include expect {
            @media (min-width: $\2xl) {
              left: -3px;
            }
          }
        }
      }
    }
  }
}
