@use "../../setting" as *;

/* Hue Rotate */
@if $Basic {
  /*x
  @mixin hue-rotate-0 {
    @include filter_(hue-rotate, 0deg);
  }

  @mixin hue-rotate-15 {
    @include filter_(hue-rotate, 15deg);
  }

  @mixin hue-rotate-30 {
    @include filter_(hue-rotate, 30deg);
  }

  @mixin hue-rotate-60 {
    @include filter_(hue-rotate, 60deg);
  }

  @mixin hue-rotate-90 {
    @include filter_(hue-rotate, 90deg);
  }

  @mixin hue-rotate-180 {
    @include filter_(hue-rotate, 180deg);
  }
  
  // negative values
  @mixin -hue-rotate-0 {
    @include filter_(hue-rotate, -0deg);
  }

  @mixin -hue-rotate-15 {
    @include filter_(hue-rotate, -15deg);
  }

  @mixin -hue-rotate-30 {
    @include filter_(hue-rotate, -30deg);
  }

  @mixin -hue-rotate-60 {
    @include filter_(hue-rotate, -60deg);
  }

  @mixin -hue-rotate-90 {
    @include filter_(hue-rotate, -90deg);
  }

  @mixin -hue-rotate-180 {
    @include filter_(hue-rotate, -180deg);
  }
  x*/
}

@if $Rwd {
  // reducing size for updating speed
  @if $isLiteMode {
    /*x
    @mixin sm\:hue-rotate-($v) {
      @media (min-width: $Rwd-sm) {
        @include filter_(hue-rotate, $v);
      }
    }

    @mixin md\:hue-rotate-($v) {
      @media (min-width: $Rwd-md) {
        @include filter_(hue-rotate, $v);
      }
    }

    @mixin lg\:hue-rotate-($v) {
      @media (min-width: $Rwd-lg) {
        @include filter_(hue-rotate, $v);
      }
    }

    @mixin xl\:hue-rotate-($v) {
      @media (min-width: $Rwd-xl) {
        @include filter_(hue-rotate, $v);
      }
    }

    @mixin \2xl\:hue-rotate-($v) {
      @media (min-width: $Rwd-2xl) {
        @include filter_(hue-rotate, $v);
      }
    }
    x*/
  }

  // tailwind default
  @else {
  }
}

@if $Custom {
  /*x
  @mixin hue-rotate-($v) {
    @include filter_(hue-rotate, $v);
  }
  x*/
}
