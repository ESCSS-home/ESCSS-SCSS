@use "../../setting" as *;

/* Saturate */
@if $Basic {
  @mixin_saturate-0 {
    --tw-saturate: saturate(0);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  @mixin_saturate-50 {
    --tw-saturate: saturate(0.5);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  @mixin_saturate-100 {
    --tw-saturate: saturate(1);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  @mixin_saturate-150 {
    --tw-saturate: saturate(1.5);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  @mixin_saturate-200 {
    --tw-saturate: saturate(2);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
}

@if $Rwd {
  // reducing size for updating speed
  @if $isLite {
    @mixin_sm\:saturate- (_value) {
      @media (min-width: $breakpoint-sm) {
        --tw-saturate: "#<saturate(_value)>";
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
          var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
          var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
      }
    }

    @mixin_md\:saturate- (_value) {
      @media (min-width: $breakpoint-md) {
        --tw-saturate: "#<saturate(_value)>";
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
          var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
          var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
      }
    }

    @mixin_lg\:saturate- (_value) {
      @media (min-width: $breakpoint-lg) {
        --tw-saturate: "#<saturate(_value)>";
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
          var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
          var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
      }
    }

    @mixin_xl\:saturate- (_value) {
      @media (min-width: $breakpoint-xl) {
        --tw-saturate: "#<saturate(_value)>";
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
          var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
          var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
      }
    }

    @mixin_\\2xl\:saturate- (_value) {
      @media (min-width: $breakpoint-2xl) {
        --tw-saturate: "#<saturate(_value)>";
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
          var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
          var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
      }
    }
  }

  // tailwind default
  @else {
  }
}

@if $Custom {
  @mixin_saturate- (_value) {
    --tw-saturate: "#<saturate(_value)>";
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
}
