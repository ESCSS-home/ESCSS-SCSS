@use "../../setting" as *;

/* Rotate */
@if $Basic {
  @mixin_rotate-0 {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-1 {
    --tw-rotate: 1deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-2 {
    --tw-rotate: 2deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-3 {
    --tw-rotate: 3deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-6 {
    --tw-rotate: 6deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-12 {
    --tw-rotate: 12deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-45 {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-90 {
    --tw-rotate: 90deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_rotate-180 {
    --tw-rotate: 180deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-0 {
    --tw-rotate: -0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-1 {
    --tw-rotate: -1deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-2 {
    --tw-rotate: -2deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-3 {
    --tw-rotate: -3deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-6 {
    --tw-rotate: -6deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-12 {
    --tw-rotate: -12deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-45 {
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-90 {
    --tw-rotate: -90deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  @mixin_-rotate-180 {
    --tw-rotate: -180deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

@if $Rwd {
  // reducing size for updating speed
  @if $isLite {
    @mixin_sm\:rotate- ($value) {
      @media (min-width: $breakpoint-sm) {
        --tw-rotate: #{_value} transform: translate(
            var(--tw-translate-x),
            var(--tw-translate-y)
          ) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(
            var(--tw-skew-y)
          ) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
    }

    @mixin_md\:rotate- ($value) {
      @media (min-width: $breakpoint-md) {
        --tw-rotate: #{_value} transform: translate(
            var(--tw-translate-x),
            var(--tw-translate-y)
          ) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(
            var(--tw-skew-y)
          ) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
    }

    @mixin_lg\:rotate- ($value) {
      @media (min-width: $breakpoint-lg) {
        --tw-rotate: #{_value} transform: translate(
            var(--tw-translate-x),
            var(--tw-translate-y)
          ) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(
            var(--tw-skew-y)
          ) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
    }

    @mixin_xl\:rotate- ($value) {
      @media (min-width: $breakpoint-xl) {
        --tw-rotate: #{_value} transform: translate(
            var(--tw-translate-x),
            var(--tw-translate-y)
          ) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(
            var(--tw-skew-y)
          ) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
    }

    @mixin_\\2xl\:rotate- ($value) {
      @media (min-width: $breakpoint-2xl) {
        --tw-rotate: #{_value} transform: translate(
            var(--tw-translate-x),
            var(--tw-translate-y)
          ) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(
            var(--tw-skew-y)
          ) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
    }
  }

  // tailwind default
  @else {
  }
}

@if $Custom {
  @mixin_rotate- ($value) {
    --tw-rotate: #{_value} transform: translate(
        var(--tw-translate-x),
        var(--tw-translate-y)
      ) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}
