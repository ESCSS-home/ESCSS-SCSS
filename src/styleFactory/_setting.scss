// true: faster updating speed <1.66 MB>. arbitrary classes in RWD.
// false: slow <? MB>. every classes in RWD.
$isLiteMode: true;

// controlling render output
$Basic: true;
$Rwd: true;
$Custom: true;

// RENDER OUT
/*x
// Using Built-In Modules
@use "sass:map";
@use "sass:meta";
@use "sass:math";
@use "sass:list";
@use "sass:color";

// Breakpoints
$Rwd-sm: 640px;
$Rwd-md: 768px;
$Rwd-lg: 1024px;
$Rwd-xl: 1280px;
$Rwd-2xl: 1536px;

// abbrev name for file concern
$COLORS: (
  // Black
  bla: #000,
  // White
  whi: #fff,
  // Slate
  sla-50: #f8fafc,
  sla-100: #f1f5f9,
  sla-200: #e2e8f0,
  sla-300: #cbd5e1,
  sla-400: #94a3b8,
  sla-500: #64748b,
  sla-600: #475569,
  sla-700: #334155,
  sla-800: #1e293b,
  sla-900: #0f172a,
  sla-950: #020617,
  // Gray
  gra-50: #f9fafb,
  gra-100: #f3f4f6,
  gra-200: #e5e7eb,
  gra-300: #d1d5db,
  gra-400: #9ca3af,
  gra-500: #6b7280,
  gra-600: #4b5563,
  gra-700: #374151,
  gra-800: #1f2937,
  gra-900: #111827,
  gra-950: #030712,
  // Zinc
  zin-50: #fafafa,
  zin-100: #f4f4f5,
  zin-200: #e4e4e7,
  zin-300: #d4d4d8,
  zin-400: #a1a1aa,
  zin-500: #71717a,
  zin-600: #52525b,
  zin-700: #3f3f46,
  zin-800: #27272a,
  zin-900: #18181b,
  zin-950: #09090b,
  // Neutral
  neu-50: #fafafa,
  neu-100: #f5f5f5,
  neu-200: #e5e5e5,
  neu-300: #d4d4d4,
  neu-400: #a3a3a3,
  neu-500: #737373,
  neu-600: #525252,
  neu-700: #404040,
  neu-800: #262626,
  neu-900: #171717,
  neu-950: #0a0a0a,
  // Stone
  sto-50: #fafaf9,
  sto-100: #f5f5f4,
  sto-200: #e7e5e4,
  sto-300: #d6d3d1,
  sto-400: #a8a29e,
  sto-500: #78716c,
  sto-600: #57534e,
  sto-700: #44403c,
  sto-800: #292524,
  sto-900: #1c1917,
  sto-950: #0c0a09,
  // Red
  red-50: #fef2f2,
  red-100: #fee2e2,
  red-200: #fecaca,
  red-300: #fca5a5,
  red-400: #f87171,
  red-500: #ef4444,
  red-600: #dc2626,
  red-700: #b91c1c,
  red-800: #991b1b,
  red-900: #7f1d1d,
  red-950: #450a0a,
  // Orange
  ora-50: #fff7ed,
  ora-100: #ffedd5,
  ora-200: #fed7aa,
  ora-300: #fdba74,
  ora-400: #fb923c,
  ora-500: #f97316,
  ora-600: #ea580c,
  ora-700: #c2410c,
  ora-800: #9a3412,
  ora-900: #7c2d12,
  ora-950: #431407,
  // Amber
  amb-50: #fffbeb,
  amb-100: #fef3c7,
  amb-200: #fde68a,
  amb-300: #fcd34d,
  amb-400: #fbbf24,
  amb-500: #f59e0b,
  amb-600: #d97706,
  amb-700: #b45309,
  amb-800: #92400e,
  amb-900: #78350f,
  amb-950: #451a03,
  // Yellow
  yel-50: #fefce8,
  yel-100: #fef9c3,
  yel-200: #fef08a,
  yel-300: #fde047,
  yel-400: #facc15,
  yel-500: #eab308,
  yel-600: #ca8a04,
  yel-700: #a16207,
  yel-800: #854d0e,
  yel-900: #713f12,
  yel-950: #422006,
  // Lime
  lim-50: #f7fee7,
  lim-100: #ecfccb,
  lim-200: #d9f99d,
  lim-300: #bef264,
  lim-400: #a3e635,
  lim-500: #84cc16,
  lim-600: #65a30d,
  lim-700: #4d7c0f,
  lim-800: #3f6212,
  lim-900: #365314,
  lim-950: #1a2e05,
  // Green
  gre-50: #f0fdf4,
  gre-100: #dcfce7,
  gre-200: #bbf7d0,
  gre-300: #86efac,
  gre-400: #4ade80,
  gre-500: #22c55e,
  gre-600: #16a34a,
  gre-700: #15803d,
  gre-800: #166534,
  gre-900: #14532d,
  gre-950: #052e16,
  // Emerald
  eme-50: #ecfdf5,
  eme-100: #d1fae5,
  eme-200: #a7f3d0,
  eme-300: #6ee7b7,
  eme-400: #34d399,
  eme-500: #10b981,
  eme-600: #059669,
  eme-700: #047857,
  eme-800: #065f46,
  eme-900: #064e3b,
  eme-950: #022c22,
  // Teal
  tea-50: #f0fdfa,
  tea-100: #ccfbf1,
  tea-200: #99f6e4,
  tea-300: #5eead4,
  tea-400: #2dd4bf,
  tea-500: #14b8a6,
  tea-600: #0d9488,
  tea-700: #0f766e,
  tea-800: #115e59,
  tea-900: #134e4a,
  tea-950: #042f2e,
  // Cyan
  cya-50: #ecfeff,
  cya-100: #cffafe,
  cya-200: #a5f3fc,
  cya-300: #67e8f9,
  cya-400: #22d3ee,
  cya-500: #06b6d4,
  cya-600: #0891b2,
  cya-700: #0e7490,
  cya-800: #155e75,
  cya-900: #164e63,
  cya-950: #083344,
  // Sky
  sky-50: #f0f9ff,
  sky-100: #e0f2fe,
  sky-200: #bae6fd,
  sky-300: #7dd3fc,
  sky-400: #38bdf8,
  sky-500: #0ea5e9,
  sky-600: #0284c7,
  sky-700: #0369a1,
  sky-800: #075985,
  sky-900: #0c4a6e,
  sky-950: #082f49,
  // Blue
  blu-50: #eff6ff,
  blu-100: #dbeafe,
  blu-200: #bfdbfe,
  blu-300: #93c5fd,
  blu-400: #60a5fa,
  blu-500: #3b82f6,
  blu-600: #2563eb,
  blu-700: #1d4ed8,
  blu-800: #1e40af,
  blu-900: #1e3a8a,
  blu-950: #172554,
  // Indigo
  ind-50: #eef2ff,
  ind-100: #e0e7ff,
  ind-200: #c7d2fe,
  ind-300: #a5b4fc,
  ind-400: #818cf8,
  ind-500: #6366f1,
  ind-600: #4f46e5,
  ind-700: #4338ca,
  ind-800: #3730a3,
  ind-900: #312e81,
  ind-950: #1e1b4b,
  // Violet
  vio-50: #f5f3ff,
  vio-100: #ede9fe,
  vio-200: #ddd6fe,
  vio-300: #c4b5fd,
  vio-400: #a78bfa,
  vio-500: #8b5cf6,
  vio-600: #7c3aed,
  vio-700: #6d28d9,
  vio-800: #5b21b6,
  vio-900: #4c1d95,
  vio-950: #2e1065,
  // Purple
  pur-50: #faf5ff,
  pur-100: #f3e8ff,
  pur-200: #e9d5ff,
  pur-300: #d8b4fe,
  pur-400: #c084fc,
  pur-500: #a855f7,
  pur-600: #9333ea,
  pur-700: #7e22ce,
  pur-800: #6b21a8,
  pur-900: #581c87,
  pur-950: #3b0764,
  // Fuchsia
  fuc-50: #fdf4ff,
  fuc-100: #fae8ff,
  fuc-200: #f5d0fe,
  fuc-300: #f0abfc,
  fuc-400: #e879f9,
  fuc-500: #d946ef,
  fuc-600: #c026d3,
  fuc-700: #a21caf,
  fuc-800: #86198f,
  fuc-900: #701a75,
  fuc-950: #4a044e,
  // Pink
  pin-50: #fdf2f8,
  pin-100: #fce7f3,
  pin-200: #fbcfe8,
  pin-300: #f9a8d4,
  pin-400: #f472b6,
  pin-500: #ec4899,
  pin-600: #db2777,
  pin-700: #be185d,
  pin-800: #9d174d,
  pin-900: #831843,
  pin-950: #500724,
  // Rose
  ros-50: #fff1f2,
  ros-100: #ffe4e6,
  ros-200: #fecdd3,
  ros-300: #fda4af,
  ros-400: #fb7185,
  ros-500: #f43f5e,
  ros-600: #e11d48,
  ros-700: #be123c,
  ros-800: #9f1239,
  ros-900: #881337,
  ros-950: #4c0519
);

// Gradient Color Stops
$--gradient-direction: "NO-DIRECTION" !default;
$--tw-gradient-from: "NO-FROM-COLOR" !default;
$--tw-gradient-via: null !default; // detects the use of 2 or 3 gradient stops
$--tw-gradient-to: transparent !default;
$--tw-gradient-from-position: null !default;
$--tw-gradient-via-position: null !default;
$--tw-gradient-to-position: null !default;

// Space Between
$--space-value: 0 !default;
$--tw-space-x-reverse: 0 !default;
$--tw-space-y-reverse: 0 !default;

// Divide Width
$--divide-value: 0 !default;
$--tw-divide-x-reverse: 0 !default;
$--tw-divide-y-reverse: 0 !default;

// Box Shadow
$--tw-ring-offset-width: 0 !default;
$--tw-ring-offset-color: #fff !default;
$--tw-ring-inset: null !default;
$--ring-width: 0 !default;
$--tw-ring-color: rgb(59 130 246 / 0.5) !default;
$-shadow-token: null !default;
$--shadow-length: 0 0 0 0 !default;
$--tw-shadow-color: #fff !default;

// Scroll Snap Type
$--tw-scroll-snap-strictness: proximity !default;

// Transforms
$--tw-translate-x: 0 !default;
$--tw-translate-y: 0 !default;
$--tw-rotate: 0 !default;
$--tw-skew-x: 0 !default;
$--tw-skew-y: 0 !default;
$--tw-scale-x: 1 !default;
$--tw-scale-y: 1 !default;

// Filters
$--tw-blur: null !default;
$--tw-brightness: null !default;
$--tw-contrast: null !default;
$--tw-grayscale: null !default;
$--tw-hue-rotate: null !default;
$--tw-invert: null !default;
$--tw-saturate: null !default;
$--tw-sepia: null !default;
$--tw-drop-shadow: null !default;
$--tw-backdrop-blur: null !default;
$--tw-backdrop-brightness: null !default;
$--tw-backdrop-contrast: null !default;
$--tw-backdrop-grayscale: null !default;
$--tw-backdrop-hue-rotate: null !default;
$--tw-backdrop-invert: null !default;
$--tw-backdrop-opacity: null !default;
$--tw-backdrop-saturate: null !default;
$--tw-backdrop-sepia: null !default;

// Helper Function
@mixin reset {
  // Gradient Color Stops
  $--gradient-direction: "NO-DIRECTION" !global;
  $--tw-gradient-from: "NO-FROM-COLOR" !global;
  $--tw-gradient-via: null !global; // detects the use of 2 or 3 gradient stops
  $--tw-gradient-to: transparent !global;
  $--tw-gradient-from-position: null !global;
  $--tw-gradient-via-position: null !global;
  $--tw-gradient-to-position: null !global;

  // Space Between
  $--space-value: 0 !global;
  $--tw-space-x-reverse: 0 !global;
  $--tw-space-y-reverse: 0 !global;

  // Divide Width
  $--divide-value: 0 !global;
  $--tw-divide-x-reverse: 0 !global;
  $--tw-divide-y-reverse: 0 !global;

  // Box Shadow
  $--tw-ring-offset-width: 0 !global;
  $--tw-ring-offset-color: #fff !global;
  $--tw-ring-inset: null !global;
  $--ring-width: 0 !global;
  $--tw-ring-color: rgb(59 130 246 / 0.5) !global;
  $-shadow-token: null !global;
  $--shadow-length: 0 0 0 0 !global;
  $--tw-shadow-color: #fff !global;

  // Scroll Snap Type
  $--tw-scroll-snap-strictness: proximity !global;

  // Transforms
  $--tw-translate-x: 0 !global;
  $--tw-translate-y: 0 !global;
  $--tw-rotate: 0 !global;
  $--tw-skew-x: 0 !global;
  $--tw-skew-y: 0 !global;
  $--tw-scale-x: 1 !global;
  $--tw-scale-y: 1 !global;

  // Filters
  $--tw-blur: null !global;
  $--tw-brightness: null !global;
  $--tw-contrast: null !global;
  $--tw-grayscale: null !global;
  $--tw-hue-rotate: null !global;
  $--tw-invert: null !global;
  $--tw-saturate: null !global;
  $--tw-sepia: null !global;
  $--tw-drop-shadow: null !global;
  $--tw-backdrop-blur: null !global;
  $--tw-backdrop-brightness: null !global;
  $--tw-backdrop-contrast: null !global;
  $--tw-backdrop-grayscale: null !global;
  $--tw-backdrop-hue-rotate: null !global;
  $--tw-backdrop-invert: null !global;
  $--tw-backdrop-opacity: null !global;
  $--tw-backdrop-saturate: null !global;
  $--tw-backdrop-sepia: null !global;
}

@mixin _background-image($token, $color, $value) {
  @mixin ___background-image {
    @if $--tw-gradient-via==null {
      background-image: linear-gradient(
        $--gradient-direction,
        $--tw-gradient-from $--tw-gradient-from-position,
        $--tw-gradient-to $--tw-gradient-to-position
      );
    } @else {
      background-image: linear-gradient(
        $--gradient-direction,
        $--tw-gradient-from $--tw-gradient-from-position,
        $--tw-gradient-via $--tw-gradient-via-position,
        $--tw-gradient-to $--tw-gradient-to-position
      );
    }
  }

  @if $token ==from {
    @if $color ==color {
      $--tw-gradient-from: $value !global; // custom color
    } @else if $color ==null { // position
      $--tw-gradient-from-position: $value !global;
    } @else {
      $--tw-gradient-from: c($color, $value) !global;
    }
  } @else if $token ==via {
    @if $color ==color {
      $--tw-gradient-via: $value !global; // custom color
    } @else if $color ==null { // position
      $--tw-gradient-via-position: $value !global;
    } @else {
      $--tw-gradient-via: c($color, $value) !global;
    }
  } @else if $token ==to {
    @if $color ==color {
      $--tw-gradient-to: $value !global; // custom color
    } @else if $color ==null { // position
      $--tw-gradient-to-position: $value !global;
    } @else {
      $--tw-gradient-to: c($color, $value) !global;
    }
  } @else if $token ==gradient {
    $--gradient-direction: $value !global;
  }

  @include ___background-image;
}

@mixin _space($token, $v: $--space-value, $isReverse: false) {
  @if $token==x {
    @if $isReverse {
      $--tw-space-x-reverse: 1 !global;
    }

    $--space-value: $v !global; // update for using reverse

    > * ~ * {
      margin-left: $--space-value * (1 - $--tw-space-x-reverse);
      margin-right: $--space-value * $--tw-space-x-reverse;
    }
  } @else if $token ==y {
    @if $isReverse {
      $--tw-space-y-reverse: 1 !global;
    }

    $--space-value: $v !global; // update for using reverse

    > * ~ * {
      margin-top: $--space-value * (1 - $--tw-space-y-reverse);
      margin-bottom: $--space-value * $--tw-space-y-reverse;
    }
  }
}

@mixin _font-size($token, $value) {
  @function _dynamic($value) {
    $temp: null;

    @if meta.type-of($value) ==number {
      // no unit: 3、4... 10
      @if math.is-unitless($value) {
        @if not($value>=3 and $value <=10) {
          @error "only 3 ~ 10, see in tailwind play https://play.tailwindcss.com/";
        }

        $temp: math.floor($value) * 0.25rem;
      }

      // has unit: 1.5px、1rem、3%...
      @else {
        $temp: $value;
      }
    } @else if meta.type-of($value) ==string {
      @if $value==none {
        $temp: 1;
      } @else if $value==tight {
        $temp: 1.25;
      } @else if $value==snug {
        $temp: 1.375;
      } @else if $value==normal {
        $temp: 1.5;
      } @else if $value==relax {
        $temp: 1.625;
      } @else if $value==loose {
        $temp: 2;
      } @else {
        @error "Parameter does not exist, see in tailwind play https://play.tailwindcss.com/";
      }
    }

    @return $temp;
  }

  @if $token==xs {
    font-size: 0.75rem;
    line-height: if($value, _dynamic($value), 1rem); // $value? true: false;
  } @else if $token==sm {
    font-size: 0.875rem;
    line-height: if($value, _dynamic($value), 1.25rem);
  } @else if $token==base {
    font-size: 1rem;
    line-height: if($value, _dynamic($value), 1.5rem);
  } @else if $token==lg {
    font-size: 1.125rem;
    line-height: if($value, _dynamic($value), 1.75rem);
  } @else if $token==xl {
    font-size: 1.25rem;
    line-height: if($value, _dynamic($value), 1.75rem);
  } @else if $token==2xl {
    font-size: 1.5rem;
    line-height: if($value, _dynamic($value), 2rem);
  } @else if $token==3xl {
    font-size: 1.875rem;
    line-height: if($value, _dynamic($value), 2.25rem);
  } @else if $token==4xl {
    font-size: 2.25rem;
    line-height: if($value, _dynamic($value), 2.5rem);
  } @else if $token==5xl {
    font-size: 3rem;
    line-height: if($value, _dynamic($value), 1);
  } @else if $token==6xl {
    font-size: 3.75rem;
    line-height: if($value, _dynamic($value), 1);
  } @else if $token==7xl {
    font-size: 4.5rem;
    line-height: if($value, _dynamic($value), 1);
  } @else if $token==8xl {
    font-size: 6rem;
    line-height: if($value, _dynamic($value), 1);
  } @else if $token==9xl {
    font-size: 8rem;
    line-height: if($value, _dynamic($value), 1);
  }
}

@mixin _box-shadow($token, $value) {
  @mixin ___box-shadow {
    $--tw-ring-offset-shadow: $--tw-ring-inset 0 0 0 $--tw-ring-offset-width
      $--tw-ring-offset-color;
    $--tw-ring-shadow: $--tw-ring-inset 0 0 0 $--ring-width $--tw-ring-color;
    $--tw-shadow: null;

    @if list.index(shadow md lg xl, $-shadow-token) {
      $--tw-shadow:
        list.nth($--shadow-length, 1) $--tw-shadow-color,
        list.nth($--shadow-length, 2) $--tw-shadow-color;
    } @else if $-shadow-token ==inner {
      $--tw-shadow: inset $--shadow-length $--tw-shadow-color;
    } @else {
      $--tw-shadow: $--shadow-length $--tw-shadow-color;
    }

    box-shadow: $--tw-ring-offset-shadow, $--tw-ring-shadow, $--tw-shadow;
  }

  @if $token ==shadow {
    @if $value ==sm {
      $-shadow-token: sm !global;
      $--shadow-length: 0 1px 2px 0 !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.05) !global;
    } @else if $value ==null {
      $-shadow-token: shadow !global;
      $--shadow-length:
        0 1px 3px 0,
        0 1px 2px -1px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==md {
      $-shadow-token: md !global;
      $--shadow-length:
        0 4px 6px -1px,
        0 2px 4px -2px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==lg {
      $-shadow-token: lg !global;
      $--shadow-length:
        0 10px 15px -3px,
        0 4px 6px -4px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==xl {
      $-shadow-token: xl !global;
      $--shadow-length:
        0 20px 25px -5px,
        0 8px 10px -6px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==2xl {
      $-shadow-token: 2xl !global;
      $--shadow-length: 0 25px 50px -12px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.25) !global;
    } @else if $value ==inner {
      $-shadow-token: inner !global;
      $--shadow-length: 0 2px 4px 0 !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.05) !global;
    } @else if $value ==none {
      $-shadow-token: none !global;
      $--shadow-length: 0 0 0 0 !global;
      $--tw-shadow-color: #fff !global;
    } @else {
      $-shadow-token: custom !global;
      $--tw-shadow-color: list.nth($v, -1) !global; // red

      @if list.nth($v, 1) ==inset {
        $--shadow-length: list.set-nth(
          $v,
          -1,
          $space
        ) !global; // inset 0px 0px 5px 10px
      } @else {
        $--shadow-length: list.set-nth(
          $v,
          -1,
          $space
        ) !global; // inset 0px 0px 5px 10px
      }

      @include _box-shadow(shadow, $v);
    }
  } @else if $token ==ring-color {
    $--tw-ring-color: $value !global;
  } @else if $token ==ring-offset-color {
    $--tw-ring-offset-color: $value !global;
  } @else if $token ==ring-offset-width {
    $--tw-ring-offset-width: $value !global;
  } @else if $token ==ring-width {
    $--ring-width: $value + $--tw-ring-offset-width !global;
  } @else if $token ==shadow-color {
    $--tw-shadow-color: $value !global;
  }

  @include ___box-shadow;
}

@mixin _divide($token, $value: $--divide-value, $isReverse: false) {
  @if $token==x {
    @if $isReverse {
      $--tw-divide-x-reverse: 1 !global;
    }

    $--divide-value: $value !global; // update for using reverse

    > * ~ * {
      border-left-width: $--divide-value * (1 - $--tw-divide-x-reverse);
      border-right-width: $--divide-value * $--tw-divide-x-reverse;
    }
  } @else if $token==y {
    @if $isReverse {
      $--tw-divide-y-reverse: 1 !global;
    }

    $--divide-value: $value !global; // update for using reverse

    > * ~ * {
      border-top-width: $--divide-value * (1 - $--tw-divide-y-reverse);
      border-bottom-width: $--divide-value * $--tw-divide-y-reverse;
    }
  }
}

@mixin _transform($token, $value, $axis: null) {
  @if $token ==rotate {
    $--tw-rotate: $value !global;
  } @else if $token ==scale {
    @if $axis ==null {
      $--tw-scale-x: $value !global;
      $--tw-scale-y: $value !global;
    } @else if $axis ==x {
      $--tw-scale-x: $value !global;
    } @else if $axis ==y {
      $--tw-scale-y: $value !global;
    }
  } @else if $token ==skew {
    @if $axis ==x {
      $--tw-skew-x: $value !global;
    } @else if $axis ==y {
      $--tw-skew-y: $value !global;
    }
  } @else if $token ==translate {
    @if $axis ==x {
      $--tw-translate-x: $value !global;
    } @else if $axis ==y {
      $--tw-translate-y: $value !global;
    }
  }

  transform: translate($--tw-translate-x, $--tw-translate-y)
    rotate($--tw-rotate) skewX($--tw-skew-x) skewY($--tw-skew-y)
    scaleX($--tw-scale-x) scaleY($--tw-scale-y);
}

@mixin _filter($token, $value) {
  @if $token ==blur {
    $--tw-blur: blur($value) !global;
  } @else if $token ==brightness {
    $--tw-brightness: brightness($value) !global;
  } @else if $token ==contrast {
    $--tw-contrast: contrast($value) !global;
  } @else if $token ==drop-shadow {
    $--tw-drop-shadow: $value !global;
  } @else if $token ==grayscale {
    $--tw-grayscale: grayscale($value) !global;
  } @else if $token ==hue-rotate {
    $--tw-hue-rotate: hue-rotate($value) !global;
  } @else if $token ==invert {
    $--tw-invert: invert($value) !global;
  } @else if $token ==saturate {
    $--tw-saturate: saturate($value) !global;
  } @else if $token ==sepia {
    $--tw-sepia: sepia($value) !global;
  }

  filter: $--tw-blur $--tw-brightness $--tw-contrast $--tw-grayscale
    $--tw-hue-rotate $--tw-invert $--tw-saturate $--tw-sepia $--tw-drop-shadow;
}

@mixin _backdrop-filter($token, $value) {
  @if $token ==blur {
    $--tw-backdrop-blur: blur($value) !global;
  } @else if $token ==brightness {
    $--tw-backdrop-brightness: brightness($value) !global;
  } @else if $token ==contrast {
    $--tw-backdrop-contrast: contrast($value) !global;
  } @else if $token ==grayscale {
    $--tw-backdrop-grayscale: grayscale($value) !global;
  } @else if $token ==hue-rotate {
    $--tw-backdrop-hue-rotate: hue-rotate($value) !global;
  } @else if $token ==invert {
    $--tw-backdrop-invert: invert($value) !global;
  } @else if $token ==opacity {
    $--tw-backdrop-opacity: opacity($value) !global;
  } @else if $token ==saturate {
    $--tw-backdrop-saturate: saturate($value) !global;
  } @else if $token ==sepia {
    $--tw-backdrop-sepia: sepia($value) !global;
  }

  backdrop-filter: $--tw-backdrop-blur $--tw-backdrop-brightness
    $--tw-backdrop-contrast $--tw-backdrop-grayscale $--tw-backdrop-hue-rotate
    $--tw-backdrop-invert $--tw-backdrop-opacity $--tw-backdrop-saturate
    $--tw-backdrop-sepia;
}

// c stands for  color (file size concern)
@function c($token, $value) {
  $color: map.get($COLORS, $token);
  $opacity: null;

  // 0 ~ 100% => 0 ~ 1
  @if not math.is-unitless($value) {
    @if not($value >=0% and $value <=100%) {
      @error "opacity should be 0 ~ 100%";
    }

    $opacity: $value / 100%;
  }

  // 0 ~ 1
  @else {
    @if not($value >=0 and $value <=1) {
      @error "opacity should be 0 ~ 1";
    }

    $opacity: $value;
  }

  // $alpha only accepts 0 ~ 1, https://sass-lang.com/documentation/modules/color/#change
  @return color.change($color, $alpha: $opacity);
}
x*/