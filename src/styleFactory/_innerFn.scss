// RENDER OUT
// /*x

// c stands for color (file size concern)
@function c($token, $value) {
  @if not math.is-unitless($value) {
    @error "TRY 0.xx INSTEAD OF xx%. Concerning performance: Since all colors depend on this function, removing the xx% code to simulate opacity will speed up processing.";
  }

  // $alpha only accepts 0 ~ 1, https://sass-lang.com/documentation/modules/color/#change
  @return color.change($token, $alpha: $value);
}

@function __box-shadow() {
  $--tw-ring-offset-shadow: $--tw-ring-inset 0 0 0 $--tw-ring-offset-width
    $--tw-ring-offset-color;
  $--tw-ring-shadow: $--tw-ring-inset 0 0 0 $--ring-width $--tw-ring-color;
  $--tw-shadow: null;

  @if list.index(shadow md lg xl, $-shadow-token) {
    $--tw-shadow:
      list.nth($--shadow-length, 1) $--tw-shadow-color,
      list.nth($--shadow-length, 2) $--tw-shadow-color;
  } @else if $-shadow-token ==inner {
    $--tw-shadow: inset $--shadow-length $--tw-shadow-color;
  } @else {
    $--tw-shadow: $--shadow-length $--tw-shadow-color;
  }

  @return $--tw-ring-offset-shadow, $--tw-ring-shadow, $--tw-shadow;
}

// 0 param 
@mixin _max-width_container {
  width: 100%;

  @media (min-width: $sm) {
    max-width: $sm;
  }

  @media (min-width: $md) {
    max-width: $md;
  }

  @media (min-width: $lg) {
    max-width: $lg;
  }

  @media (min-width: $xl) {
    max-width: $xl;
  }

  @media (min-width: $\2xl) {
    max-width: $\2xl;
  }
}

// 1 params
@mixin _border-style($token) {
  > * ~ * {
    border-style: $token;
  }
}

// 2 params
@mixin _filter($token, $value) {
  @if $token ==blur {
    $--tw-blur: blur($value) !global;
  } @else if $token ==brightness {
    $--tw-brightness: brightness($value) !global;
  } @else if $token ==contrast {
    $--tw-contrast: contrast($value) !global;
  } @else if $token ==drop-shadow {
    $--tw-drop-shadow: $value !global;
  } @else if $token ==grayscale {
    $--tw-grayscale: grayscale($value) !global;
  } @else if $token ==hue-rotate {
    $--tw-hue-rotate: hue-rotate($value) !global;
  } @else if $token ==invert {
    $--tw-invert: invert($value) !global;
  } @else if $token ==saturate {
    $--tw-saturate: saturate($value) !global;
  } @else if $token ==sepia {
    $--tw-sepia: sepia($value) !global;
  }

  filter: $--tw-blur $--tw-brightness $--tw-contrast $--tw-grayscale
    $--tw-hue-rotate $--tw-invert $--tw-saturate $--tw-sepia $--tw-drop-shadow;
}

@function _font-size($token, $value) {
  $fontSize: map.get($font-size, $token, font-size);
  $lineHeight: null;

  @if $value ==null {
    $lineHeight: map.get($font-size, $token, light-height);
  }
  @else if $value == 3 {
    $lineHeight: $leading-3;
  }
  @else if $value == 4 {
    $lineHeight: $leading-3;
  }
  @else if $value == 5 {
    $lineHeight: $leading-5;
  }
  @else if $value == 6 {
    $lineHeight: $leading-6;
  }
  @else if $value == 7 {
    $lineHeight: $leading-7;
  }
  @else if $value == 8 {
    $lineHeight: $leading-8;
  }
  @else if $value == 9 {
    $lineHeight: $leading-9;
  }
  @else if $value == 10 {
    $lineHeight: $leading-10;
  }
  @else if $value == none {
    $lineHeight: $leading-none;
  }
  @else if $value == tight {
    $lineHeight: $leading-tight;
  }
  @else if $value == snug {
    $lineHeight: $leading-snug;
  }
  @else if $value == normal {
    $lineHeight: $leading-normal;
  }
  @else if $value == relaxed {
    $lineHeight: $leading-relaxed;
  }
  @else if $value == loose {
    $lineHeight: $leading-loose;
  }
  @else {
    $lineHeight: $value;
  }

  // a list to provide for @mixin text-($v, $rwd: null)
  @return ($fontSize $lineHeight); 
}

@mixin _box-shadow($token, $value) {
  @if $token ==shadow {
    @if $value ==sm {
      $-shadow-token: sm !global;
      $--shadow-length: 0 1px 2px 0 !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.05) !global;
    } @else if $value ==null {
      $-shadow-token: shadow !global;
      $--shadow-length:
        0 1px 3px 0,
        0 1px 2px -1px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==md {
      $-shadow-token: md !global;
      $--shadow-length:
        0 4px 6px -1px,
        0 2px 4px -2px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==lg {
      $-shadow-token: lg !global;
      $--shadow-length:
        0 10px 15px -3px,
        0 4px 6px -4px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==xl {
      $-shadow-token: xl !global;
      $--shadow-length:
        0 20px 25px -5px,
        0 8px 10px -6px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.1) !global;
    } @else if $value ==2xl {
      $-shadow-token: 2xl !global;
      $--shadow-length: 0 25px 50px -12px !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.25) !global;
    } @else if $value ==inner {
      $-shadow-token: inner !global;
      $--shadow-length: 0 2px 4px 0 !global;
      $--tw-shadow-color: rgb(0 0 0 / 0.05) !global;
    } @else if $value ==none {
      $-shadow-token: none !global;
      $--shadow-length: 0 0 0 0 !global;
      $--tw-shadow-color: #fff !global;
    } @else {
      $-shadow-token: custom !global;
      $--tw-shadow-color: list.nth($v, -1) !global; // red

      @if list.nth($v, 1) ==inset {
        $--shadow-length: list.set-nth(
          $v,
          -1,
          #{""}
        ) !global; // inset 0px 0px 5px 10px
      } @else {
        $--shadow-length: list.set-nth(
          $v,
          -1,
          #{""}
        ) !global; // inset 0px 0px 5px 10px
      }

      @include _box-shadow(shadow, $v);
    }
  } @else if $token ==ring-color {
    $--tw-ring-color: $value !global;
  } @else if $token ==ring-offset-color {
    $--tw-ring-offset-color: $value !global;
  } @else if $token ==ring-offset-width {
    @if $--ring-width != 0 and $--tw-ring-offset-width == 0 {
      @error("『 ring-offset-* 』 should before 『 ring-* 』 (to have same behavior as tailwind)")
    }
    $--tw-ring-offset-width: $value !global;
  } @else if $token ==ring-width {
    $--ring-width: $value + $--tw-ring-offset-width !global;
  } @else if $token ==shadow-color {
    $--tw-shadow-color: $value !global;
  }

  box-shadow: __box-shadow();
}

@mixin _border-color($token, $value: 1) {
  > * ~ * {
    @if $token ==null {
      border-color: $value; // custom
    } @else {
      border-color: c($token, $value);
    }
  }
}

@mixin _backdrop-filter($token, $value) {
  @if $token ==blur {
    $--tw-backdrop-blur: blur($value) !global;
  } @else if $token ==brightness {
    $--tw-backdrop-brightness: brightness($value) !global;
  } @else if $token ==contrast {
    $--tw-backdrop-contrast: contrast($value) !global;
  } @else if $token ==grayscale {
    $--tw-backdrop-grayscale: grayscale($value) !global;
  } @else if $token ==hue-rotate {
    $--tw-backdrop-hue-rotate: hue-rotate($value) !global;
  } @else if $token ==invert {
    $--tw-backdrop-invert: invert($value) !global;
  } @else if $token ==opacity {
    $--tw-backdrop-opacity: opacity($value) !global;
  } @else if $token ==saturate {
    $--tw-backdrop-saturate: saturate($value) !global;
  } @else if $token ==sepia {
    $--tw-backdrop-sepia: sepia($value) !global;
  }

  backdrop-filter: $--tw-backdrop-blur $--tw-backdrop-brightness
    $--tw-backdrop-contrast $--tw-backdrop-grayscale $--tw-backdrop-hue-rotate
    $--tw-backdrop-invert $--tw-backdrop-opacity $--tw-backdrop-saturate
    $--tw-backdrop-sepia;
}


// 3 params
@mixin _transform($token, $value, $axis: null) {
  @if $token ==rotate {
    $--tw-rotate: $value !global;
  } @else if $token ==scale {
    @if $axis ==null {
      $--tw-scale-x: $value !global;
      $--tw-scale-y: $value !global;
    } @else if $axis ==x {
      $--tw-scale-x: $value !global;
    } @else if $axis ==y {
      $--tw-scale-y: $value !global;
    }
  } @else if $token ==skew {
    @if $axis ==x {
      $--tw-skew-x: $value !global;
    } @else if $axis ==y {
      $--tw-skew-y: $value !global;
    }
  } @else if $token ==translate {
    @if $axis ==x {
      $--tw-translate-x: $value !global;
    } @else if $axis ==y {
      $--tw-translate-y: $value !global;
    }
  }

  transform: translate($--tw-translate-x, $--tw-translate-y)
    rotate($--tw-rotate) skewX($--tw-skew-x) skewY($--tw-skew-y)
    scaleX($--tw-scale-x) scaleY($--tw-scale-y);
}

@function _background-image($token, $color, $value) {
  @if $token ==from {
    @if $color ==customColor {
      $--tw-gradient-from: $value !global; 
    } @else if $color ==position {
      $--tw-gradient-from-position: $value !global;
    } @else {
      $--tw-gradient-from: c($color, $value) !global;
    }
  } @else if $token ==via {
    @if $color ==customColor {
      $--tw-gradient-via: $value !global; 
    } @else if $color ==position {
      $--tw-gradient-via-position: $value !global;
    } @else {
      $--tw-gradient-via: c($color, $value) !global;
    }
  } @else if $token ==to {
    @if $color ==customColor {
      $--tw-gradient-to: $value !global; 
    } @else if $color ==position {
      $--tw-gradient-to-position: $value !global;
    } @else {
      $--tw-gradient-to: c($color, $value) !global;
    }
  } @else if $token ==gradient {
    $--gradient-direction: $value !global;
  }

  @if $--tw-gradient-via==null {
    @return linear-gradient(
      $--gradient-direction,
      $--tw-gradient-from $--tw-gradient-from-position,
      $--tw-gradient-to $--tw-gradient-to-position
    );
  } @else {
    @return linear-gradient(
      $--gradient-direction,
      $--tw-gradient-from $--tw-gradient-from-position,
      $--tw-gradient-via $--tw-gradient-via-position,
      $--tw-gradient-to $--tw-gradient-to-position
    );
  }
}


// encapsulation for cursor/will-change that has 2 values in one property
@mixin r2($rwd, $key, $value, $value2: null) {
  @media (min-width: $rwd) {
    #// /*x{$key}: $value, $value2;
  }
}

// encapsulation for helper function to rwd(file size concern)
@mixin _r($rwd, $token, $slot: null, $slot2: null, $slot3: null) {
  @media (min-width: $rwd) {
    // 0 params
    @if $token ==_max-width_container {
      @include _max-width_container;
    }

    // 1 params
    @else if $token ==_border-style {
      @include _border-style($slot);
    }

    // 2 params
    @else if $token ==_filter {
      @include _filter($slot, $slot2);
    } @else if $token ==_box-shadow {
      @include _box-shadow($slot, $slot2);
    } @else if $token ==_border-color {
      @include _border-color($slot, $slot2: 1);
    } @else if $token ==_backdrop-filter {
      @include _backdrop-filter($slot, $slot2);
    } 
    

    // 3 params
    @else if $token ==_transform {
      @include _transform($slot, $slot2, $slot3: null);
    } 
    
  }
}

// x*/