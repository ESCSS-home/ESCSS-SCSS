// RENDER OUT
// /*x

// c stands for color (file size concern)
@function c($token, $v) {
  @if not math.is-unitless($v) {
    @error "TRY 0.xx INSTEAD OF xx%. Concerning performance: Since all colors depend on this function, removing the xx% code to simulate opacity will speed up processing.";
  }

  // $alpha only accepts 0 ~ 1, https://sass-lang.com/documentation/modules/color/#change
  @return color.change($token, $alpha: $v);
}

@function __box-shadow() {
  $--tw-ring-offset-shadow: $--tw-ring-inset 0 0 0 $--tw-ring-offset-width $--tw-ring-offset-color;
  $--tw-ring-shadow: $--tw-ring-inset 0 0 0 $--ring-width $--tw-ring-color;
  $--tw-shadow: null;

  @if list.index(shadow md lg xl, $-shadow-token) {
    $--tw-shadow: list.nth($--shadow-width, 1) $--tw-shadow-color,
      list.nth($--shadow-width, 2) $--tw-shadow-color;
  }

  @else if $-shadow-token ==inner {
    $--tw-shadow: inset $--shadow-width $--tw-shadow-color;
  }

  @else {
    $--tw-shadow: $--shadow-width $--tw-shadow-color;
  }

  @return $--tw-ring-offset-shadow, $--tw-ring-shadow, $--tw-shadow;
}

@function __transform() {
  @return translate($--tw-translate-x, $--tw-translate-y) rotate($--tw-rotate) skewX($--tw-skew-x) skewY($--tw-skew-y) scaleX($--tw-scale-x) scaleY($--tw-scale-y);
}

// 0 param 
@mixin _max-width_container {
  width: 100%;

  @media (min-width: $sm) {
    max-width: $sm;
  }

  @media (min-width: $md) {
    max-width: $md;
  }

  @media (min-width: $lg) {
    max-width: $lg;
  }

  @media (min-width: $xl) {
    max-width: $xl;
  }

  @media (min-width: $\2xl) {
    max-width: $\2xl;
  }
}

// 1 params
@mixin _border-style($token) {
  >*~* {
    border-style: $token;
  }
}

@function __filter() {
  @return $--tw-blur $--tw-brightness $--tw-contrast $--tw-grayscale $--tw-hue-rotate $--tw-invert $--tw-saturate $--tw-sepia $--tw-drop-shadow;
}

@function _font-size($token, $v) {
  $fontSize: map.get($font-size, $token, font-size);
  $lineHeight: null;

  @if $v ==null {
    $lineHeight: map.get($font-size, $token, light-height);
  }

  @else if $v ==3 {
    $lineHeight: $leading-3;
  }

  @else if $v ==4 {
    $lineHeight: $leading-3;
  }

  @else if $v ==5 {
    $lineHeight: $leading-5;
  }

  @else if $v ==6 {
    $lineHeight: $leading-6;
  }

  @else if $v ==7 {
    $lineHeight: $leading-7;
  }

  @else if $v ==8 {
    $lineHeight: $leading-8;
  }

  @else if $v ==9 {
    $lineHeight: $leading-9;
  }

  @else if $v ==10 {
    $lineHeight: $leading-10;
  }

  @else if $v ==none {
    $lineHeight: $leading-none;
  }

  @else if $v ==tight {
    $lineHeight: $leading-tight;
  }

  @else if $v ==snug {
    $lineHeight: $leading-snug;
  }

  @else if $v ==normal {
    $lineHeight: $leading-normal;
  }

  @else if $v ==relaxed {
    $lineHeight: $leading-relaxed;
  }

  @else if $v ==loose {
    $lineHeight: $leading-loose;
  }

  @else {
    $lineHeight: $v;
  }

  // a list to provide for @mixin text-($v, $rwd: null)
  @return ($fontSize $lineHeight);
}

@function __backdrop-filter() {
  @return $--tw-backdrop-blur $--tw-backdrop-brightness $--tw-backdrop-contrast $--tw-backdrop-grayscale $--tw-backdrop-hue-rotate $--tw-backdrop-invert $--tw-backdrop-opacity $--tw-backdrop-saturate $--tw-backdrop-sepia;
}

@function _background-image($token, $color, $v) {
  @if $token ==from {
    @if $color ==customColor {
      $--tw-gradient-from: $v !global;
    }

    @else if $color ==position {
      $--tw-gradient-from-position: $v !global;
    }

    @else {
      $--tw-gradient-from: c($color, $v) !global;
    }
  }

  @else if $token ==via {
    @if $color ==customColor {
      $--tw-gradient-via: $v !global;
    }

    @else if $color ==position {
      $--tw-gradient-via-position: $v !global;
    }

    @else {
      $--tw-gradient-via: c($color, $v) !global;
    }
  }

  @else if $token ==to {
    @if $color ==customColor {
      $--tw-gradient-to: $v !global;
    }

    @else if $color ==position {
      $--tw-gradient-to-position: $v !global;
    }

    @else {
      $--tw-gradient-to: c($color, $v) !global;
    }
  }

  @else if $token ==gradient {
    $--gradient-direction: $v !global;
  }

  @if $--tw-gradient-via==null {
    @return linear-gradient($--gradient-direction,
      $--tw-gradient-from $--tw-gradient-from-position,
      $--tw-gradient-to $--tw-gradient-to-position );
  }

  @else {
    @return linear-gradient($--gradient-direction,
      $--tw-gradient-from $--tw-gradient-from-position,
      $--tw-gradient-via $--tw-gradient-via-position,
      $--tw-gradient-to $--tw-gradient-to-position );
  }
}

// encapsulation for cursor/will-change that has 2 values in one property
@mixin r2($rwd, $key, $v, $v2: null) {
  @media (min-width: $rwd) {
    # // /*x{$key}: $v, $v2;
  }
}

// encapsulation for helper function to rwd(file size concern)
@mixin _r($rwd, $token, $slot: null, $slot2: null, $slot3: null) {
  @media (min-width: $rwd) {

    // 0 params
    @if $token ==_max-width_container {
      @include _max-width_container;
    }

  }
}

// x*/