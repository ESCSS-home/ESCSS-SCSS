@use "../../setting" as *;

/* Animation */
@if $Basic {
  // /*x
  @mixin animate-none {
    animation: none;
  }

  @mixin animate-spin {
    animation: spin 1s linear infinite;
  }

  @mixin animate-ping {
    animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
  }

  @mixin animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @mixin animate-bounce {
    animation: bounce 1s infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(360deg);
    }
  }
  @keyframes ping {
    75%,
    100% {
      transform: scale(2);
      opacity: 0;
    }
  }
  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }

    50% {
      opacity: 0.5;
    }
  }
  @keyframes bounce {
    0%,
    100% {
      transform: translateY(-25%);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }

    50% {
      transform: translateY(0);
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  } // x*/
}

@if $Rwd {
  @if $sizeMode == 0 or $sizeMode == 1 {
    // /*x
    @mixin sm\:animate-none {
      @include r(sm, animation, none);
    }

    @mixin sm\:animate-spin {
      @include r(sm, animation, spin 1s linear infinite);
    }

    @mixin sm\:animate-ping {
      @include r(sm, animation, ping 1s cubic-bezier(0, 0, 0.2, 1) infinite);
    }

    @mixin sm\:animate-pulse {
      @include r(sm, animation, pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite);
    }

    @mixin sm\:animate-bounce {
      @include r(sm, animation, bounce 1s infinite);
    }
    @mixin md\:animate-none {
      @include r(md, animation, none);
    }

    @mixin md\:animate-spin {
      @include r(md, animation, spin 1s linear infinite);
    }

    @mixin md\:animate-ping {
      @include r(md, animation, ping 1s cubic-bezier(0, 0, 0.2, 1) infinite);
    }

    @mixin md\:animate-pulse {
      @include r(md, animation, pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite);
    }

    @mixin md\:animate-bounce {
      @include r(md, animation, bounce 1s infinite);
    }
    @mixin lg\:animate-none {
      @include r(lg, animation, none);
    }

    @mixin lg\:animate-spin {
      @include r(lg, animation, spin 1s linear infinite);
    }

    @mixin lg\:animate-ping {
      @include r(lg, animation, ping 1s cubic-bezier(0, 0, 0.2, 1) infinite);
    }

    @mixin lg\:animate-pulse {
      @include r(lg, animation, pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite);
    }

    @mixin lg\:animate-bounce {
      @include r(lg, animation, bounce 1s infinite);
    }
    @mixin xl\:animate-none {
      @include r(xl, animation, none);
    }

    @mixin xl\:animate-spin {
      @include r(xl, animation, spin 1s linear infinite);
    }

    @mixin xl\:animate-ping {
      @include r(xl, animation, ping 1s cubic-bezier(0, 0, 0.2, 1) infinite);
    }

    @mixin xl\:animate-pulse {
      @include r(xl, animation, pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite);
    }

    @mixin xl\:animate-bounce {
      @include r(xl, animation, bounce 1s infinite);
    }
    @mixin \2xl\:animate-none {
      @include r(2xl, animation, none);
    }

    @mixin \2xl\:animate-spin {
      @include r(2xl, animation, spin 1s linear infinite);
    }

    @mixin \2xl\:animate-ping {
      @include r(2xl, animation, ping 1s cubic-bezier(0, 0, 0.2, 1) infinite);
    }

    @mixin \2xl\:animate-pulse {
      @include r(
        2xl,
        animation,
        pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite
      );
    }

    @mixin \2xl\:animate-bounce {
      @include r(2xl, animation, bounce 1s infinite);
    }
    // x*/
  }
}
@if $Custom {
  // /*x
  @mixin animate-($v) {
    animation: $v;
  }
  @mixin sm\:animate-($v) {
    @include r(sm, animation, $v);
  }

  @mixin md\:animate-($v) {
    @include r(md, animation, $v);
  }

  @mixin lg\:animate-($v) {
    @include r(lg, animation, $v);
  }

  @mixin xl\:animate-($v) {
    @include r(xl, animation, $v);
  }

  @mixin \2xl\:animate-($v) {
    @include r(2xl, animation, $v);
  } // x*/
}
