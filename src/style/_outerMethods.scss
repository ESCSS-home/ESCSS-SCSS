// /*x
// Outer Methods - useful mixins for you
// 1. clear: clear side effect when used internal methods
// 2. hover_bg-gradient: make bg-gradient be able to hover

// Help bg-gradient hover transition
// .demo {
//    @include bg-gradient-to-r;
//    @include from-red-500;
//
//    @include hover_bg-gradient {
//      @include from-sky-500;
//      @include sm\:from-rose-500;
//    }
// }
@mixin hover_bg-gradient {
  & {
    @include relative;
  }

  &::before {
    content: "";
    @include absolute;
    @include inset-0;
    @include opacity-0;
    @include transition-all;
    @content; // take outside stuff to override inside property
  }

  &:hover::before {
    @include opacity-100;
    @include cursor-pointer;
  }
}

// clear global variables, when use internal mixin/function, e.g, __box-shadow()
// Best Practice: USE IN EVERY CLASSES.
// why? 1. Can be an indicator of how many css that you've used,
//      2. only internal mixin/function needs to do clear, but people will be lazy.

// .demo {
//  ...properties
//
//  @include clear;  <- put it in the end to clear global variables
// }
@mixin clear {
  // Gradient Color Stops
  $--gradient-direction: null !global;
  $--tw-gradient-from: #fff !global;
  $--tw-gradient-via: null !global; // detects the use of 2 or 3 gradient stops
  $--tw-gradient-to: transparent !global;
  $--tw-gradient-from-position: null !global;
  $--tw-gradient-via-position: null !global;
  $--tw-gradient-to-position: null !global;

  // Space Between
  $--space-x-value: 0 !global;
  $--space-y-value: 0 !global;
  $--tw-space-x-reverse: 0 !global;
  $--tw-space-y-reverse: 0 !global;

  // Divide Width
  $--divide-x-value: 0 !global;
  $--divide-y-value: 0 !global;
  $--tw-divide-x-reverse: 0 !global;
  $--tw-divide-y-reverse: 0 !global;

  // Box Shadow
  $--tw-ring-offset-width: 0 !global;
  $--tw-ring-offset-color: #fff !global;
  $--tw-ring-inset: null !global;
  $--ring-width: 0 !global;
  $--tw-ring-color: rgb(59 130 246 / 0.5) !global;
  $-shadow-color-not-match-tailwind: false global;
  $-shadow-token: null !global;
  $--shadow-width: 0 0 0 0 !global;
  $--tw-shadow-color: #fff !global;

  // Scroll Snap Type
  $--tw-scroll-snap-strictness: proximity !global;

  // Transforms
  $--tw-translate-x: 0 !global;
  $--tw-translate-y: 0 !global;
  $--tw-rotate: 0deg !global;
  $--tw-skew-x: 0deg !global;
  $--tw-skew-y: 0deg !global;
  $--tw-scale-x: 1 !global;
  $--tw-scale-y: 1 !global;

  // Filters
  $--tw-blur: null !global;
  $--tw-brightness: null !global;
  $--tw-contrast: null !global;
  $--tw-grayscale: null !global;
  $--tw-hue-rotate: null !global;
  $--tw-invert: null !global;
  $--tw-saturate: null !global;
  $--tw-sepia: null !global;
  $--tw-drop-shadow: null !global;
  $--tw-backdrop-blur: null !global;
  $--tw-backdrop-brightness: null !global;
  $--tw-backdrop-contrast: null !global;
  $--tw-backdrop-grayscale: null !global;
  $--tw-backdrop-hue-rotate: null !global;
  $--tw-backdrop-invert: null !global;
  $--tw-backdrop-opacity: null !global;
  $--tw-backdrop-saturate: null !global;
  $--tw-backdrop-sepia: null !global;
}

// x*/
