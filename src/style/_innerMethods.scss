// /*x
// Inner Methods - internal purpose

// c stands for color (file size concern)
@function c($token, $v) {
  @if not math.is-unitless($v) {
    @error "TRY 0.xx INSTEAD OF xx%. Concerning performance: Since all colors depend on this function, removing the xx% code to simulate opacity will speed up processing.";
  }

  // $alpha only accepts 0 ~ 1, https://sass-lang.com/documentation/modules/color/#change
  @return color.change($token, $alpha: $v);
}

@function __box-shadow() {
  $--tw-ring-offset-shadow: $--tw-ring-inset 0 0 0 $--tw-ring-offset-width
    $--tw-ring-offset-color;
  $--tw-ring-shadow: $--tw-ring-inset 0 0 0 $--ring-width $--tw-ring-color;
  $--tw-shadow: null;

  @if list.index(shadow md lg xl, $-shadow-token) {
    $--tw-shadow:
      list.nth($--shadow-width, 1) $--tw-shadow-color,
      list.nth($--shadow-width, 2) $--tw-shadow-color;
  } @else if $-shadow-token ==inner {
    $--tw-shadow: inset $--shadow-width $--tw-shadow-color;
  } @else {
    $--tw-shadow: $--shadow-width $--tw-shadow-color;
  }

  @return $--tw-ring-offset-shadow, $--tw-ring-shadow, $--tw-shadow;
}

@function __transform() {
  @return translate($--tw-translate-x, $--tw-translate-y) rotate($--tw-rotate)
    skewX($--tw-skew-x) skewY($--tw-skew-y) scaleX($--tw-scale-x)
    scaleY($--tw-scale-y);
}

@function __filter() {
  @return $--tw-blur $--tw-brightness $--tw-contrast $--tw-grayscale
    $--tw-hue-rotate $--tw-invert $--tw-saturate $--tw-sepia $--tw-drop-shadow;
}

@function __backdrop-filter() {
  @return $--tw-backdrop-blur $--tw-backdrop-brightness $--tw-backdrop-contrast
    $--tw-backdrop-grayscale $--tw-backdrop-hue-rotate $--tw-backdrop-invert
    $--tw-backdrop-opacity $--tw-backdrop-saturate $--tw-backdrop-sepia;
}

@function __linear-gradient() {
  @if $--gradient-direction==none {
    @return none;
  } @else if $--tw-gradient-via==null {
    @return linear-gradient(
      $--gradient-direction,
      $--tw-gradient-from $--tw-gradient-from-position,
      $--tw-gradient-to $--tw-gradient-to-position
    );
  } @else {
    @return linear-gradient(
      $--gradient-direction,
      $--tw-gradient-from $--tw-gradient-from-position,
      $--tw-gradient-via $--tw-gradient-via-position,
      $--tw-gradient-to $--tw-gradient-to-position
    );
  }
}


// Atomic css
@mixin _aspect-ratio-($v, $rwd: null) {
  @if $rwd ==null {
    aspect-ratio: $v;
  }

  @else {
    @media (min-width: $rwd) {
      aspect-ratio: $v;
    }
  }
}

@mixin _columns-($v, $rwd: null) {
  @if $rwd==null {
    columns: $v;
  }

  @else {
    @media (min-width: $rwd) {
      columns: $v;
    }
  }
}

@mixin _object-position-($v, $rwd: null) {
  @if $rwd==null {
    object-position: $v;
  }

  @else {
    @media (min-width: $rwd) {
      object-position: $v;
    }
  }
}

@mixin _inset-($v, $rwd: null) {
  @if $rwd ==null {
    inset: $v;
  }

  @else {
    @media (min-width: $rwd) {
      inset: $v;
    }
  }
}

@mixin _inset-inline-start-($v, $rwd: null) {
  @if $rwd ==null {
    inset-inline-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      inset-inline-start: $v;
    }
  }
}

@mixin _inset-inline-end-($v, $rwd: null) {
  @if $rwd ==null {
    inset-inline-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      inset-inline-end: $v;
    }
  }
}

@mixin _top-($v, $rwd: null) {
  @if $rwd ==null {
    top: $v;
  }

  @else {
    @media (min-width: $rwd) {
      top: $v;
    }
  }
}

@mixin _right-($v, $rwd: null) {
  @if $rwd ==null {
    right: $v;
  }

  @else {
    @media (min-width: $rwd) {
      right: $v;
    }
  }
}

@mixin _bottom-($v, $rwd: null) {
  @if $rwd ==null {
    bottom: $v;
  }

  @else {
    @media (min-width: $rwd) {
      bottom: $v;
    }
  }
}

@mixin _left-($v, $rwd: null) {
  @if $rwd ==null {
    left: $v;
  }

  @else {
    @media (min-width: $rwd) {
      left: $v;
    }
  }
}

@mixin _z-index-($v, $rwd: null) {
  @if $rwd==null {
    z-index: $v;
  }

  @else {
    @media (min-width: $rwd) {
      z-index: $v;
    }
  }
}

@mixin _border-spacing-($v, $rwd: null) {
  @if $rwd ==null {
    border-spacing: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-spacing: $v;
    }
  }
}

@mixin _animation-($v, $rwd: null) {
  @if $rwd==null {
    animation: $v;
  }

  @else {
    @media (min-width: $rwd) {
      animation: $v;
    }
  }
}

@mixin _transition-delay-($v, $rwd: null) {
  @if $rwd==null {
    transition-delay: $v;
  }

  @else {
    @media (min-width: $rwd) {
      transition-delay: $v;
    }
  }
}

@mixin _transition-property-($v, $rwd: null) {
  @if $rwd==null {
    transition-property: $v;
  }

  @else {
    @media (min-width: $rwd) {
      transition-property: $v;
    }
  }
}

@mixin _transition-timing-function-($v, $rwd: null) {
  @if $rwd==null {
    transition-timing-function: $v;
  }

  @else {
    @media (min-width: $rwd) {
      transition-timing-function: $v;
    }
  }
}

@mixin _transition-duration-($v, $rwd: null) {
  @if $rwd==null {
    transition-duration: $v;
  }

  @else {
    @media (min-width: $rwd) {
      transition-duration: $v;
    }
  }
}

@mixin _transform-($v, $rwd: null) {
  @if $rwd==null {
    transform: $v;
  }

  @else {
    @media (min-width: $rwd) {
      transform: $v;
    }
  }
}

@mixin _transform-origin-($v, $rwd: null) {
  @if $rwd==null {
    transform-origin: $v;
  }

  @else {
    @media (min-width: $rwd) {
      transform-origin: $v;
    }
  }
}

@mixin _accent-color-($v, $rwd: null) {
  @if $rwd==null {
    accent-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      accent-color: $v;
    }
  }
}

@mixin _caret-color-($v, $rwd: null) {
  @if $rwd==null {
    caret-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      caret-color: $v;
    }
  }
}

@mixin _cursor-($v, $v2: null, $rwd: null) {
  @if $rwd==null {
    cursor: $v, $v2;
  }

  @else {
    @media (min-width: $rwd) {
      cursor: $v, $v2;
    }
  }
}

@mixin _scroll-margin-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin: $v;
    }
  }
}

@mixin _scroll-margin-inline-start-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin-inline-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin-inline-start: $v;
    }
  }
}

@mixin _scroll-margin-inline-end-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin-inline-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin-inline-end: $v;
    }
  }
}

@mixin _scroll-margin-top-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin-top: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin-top: $v;
    }
  }
}

@mixin _scroll-margin-right-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin-right: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin-right: $v;
    }
  }
}

@mixin _scroll-margin-bottom-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin-bottom: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin-bottom: $v;
    }
  }
}

@mixin _scroll-margin-left-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-margin-left: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-margin-left: $v;
    }
  }
}

@mixin _scroll-padding-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding: $v;
    }
  }
}

@mixin _scroll-padding-inline-start-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding-inline-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding-inline-start: $v;
    }
  }
}

@mixin _scroll-padding-inline-end-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding-inline-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding-inline-end: $v;
    }
  }
}

@mixin _scroll-padding-top-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding-top: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding-top: $v;
    }
  }
}

@mixin _scroll-padding-right-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding-right: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding-right: $v;
    }
  }
}

@mixin _scroll-padding-bottom-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding-bottom: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding-bottom: $v;
    }
  }
}

@mixin _scroll-padding-left-($v, $rwd: null) {
  @if $rwd ==null {
    scroll-padding-left: $v;
  }

  @else {
    @media (min-width: $rwd) {
      scroll-padding-left: $v;
    }
  }
}

@mixin _will-change-($v, $v2: null, $rwd: null) {
  @if $rwd==null {
    will-change: $v, $v2;
  }

  @else {
    @media (min-width: $rwd) {
      will-change: $v, $v2;
    }
  }
}

@mixin _fill-($v, $rwd: null) {
  @if $rwd==null {
    fill: $v;
  }

  @else {
    @media (min-width: $rwd) {
      fill: $v;
    }
  }
}

@mixin _stroke-($v, $rwd: null) {
  @if $rwd==null {
    stroke: $v;
  }

  @else {
    @media (min-width: $rwd) {
      stroke: $v;
    }
  }
}

@mixin _stroke-width-($v, $rwd: null) {
  @if $rwd==null {
    stroke-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      stroke-width: $v;
    }
  }
}

@mixin _flex-($v, $rwd: null) {
  @if $rwd ==null {
    flex: $v;
  }

  @else {
    @media (min-width: $rwd) {
      flex: $v;
    }
  }
}

@mixin _flex-basis-($v, $rwd: null) {
  @if $rwd ==null {
    flex-basis: $v;
  }

  @else {
    @media (min-width: $rwd) {
      flex-basis: $v;
    }
  }
}

@mixin _flex-grow-($v, $rwd: null) {
  @if $rwd==null {
    flex-grow: $v;
  }

  @else {
    @media (min-width: $rwd) {
      flex-grow: $v;
    }
  }
}

@mixin _flex-shrink-($v, $rwd: null) {
  @if $rwd==null {
    flex-shrink: $v;
  }

  @else {
    @media (min-width: $rwd) {
      flex-shrink: $v;
    }
  }
}

@mixin _gap-($v, $rwd: null) {
  @if $rwd==null {
    gap: $v;
  }

  @else {
    @media (min-width: $rwd) {
      gap: $v;
    }
  }
}

@mixin _column-gap-($v, $rwd: null) {
  @if $rwd==null {
    column-gap: $v;
  }

  @else {
    @media (min-width: $rwd) {
      column-gap: $v;
    }
  }
}

@mixin _row-gap-($v, $rwd: null) {
  @if $rwd==null {
    row-gap: $v;
  }

  @else {
    @media (min-width: $rwd) {
      row-gap: $v;
    }
  }
}

@mixin _grid-auto-columns-($v, $rwd: null) {
  @if $rwd==null {
    grid-auto-columns: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-auto-columns: $v;
    }
  }
}

@mixin _grid-auto-rows-($v, $rwd: null) {
  @if $rwd==null {
    grid-auto-rows: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-auto-rows: $v;
    }
  }
}

@mixin _grid-column-($v, $rwd: null) {
  @if $rwd==null {
    grid-column: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-column: $v;
    }
  }
}

@mixin _grid-column-start-($v, $rwd: null) {
  @if $rwd==null {
    grid-column-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-column-start: $v;
    }
  }
}

@mixin _grid-column-end-($v, $rwd: null) {
  @if $rwd==null {
    grid-column-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-column-end: $v;
    }
  }
}

@mixin _grid-row-($v, $rwd: null) {
  @if $rwd==null {
    grid-row: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-row: $v;
    }
  }
}

@mixin _grid-row-start-($v, $rwd: null) {
  @if $rwd==null {
    grid-row-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-row-start: $v;
    }
  }
}

@mixin _grid-row-end-($v, $rwd: null) {
  @if $rwd==null {
    grid-row-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-row-end: $v;
    }
  }
}

@mixin _grid-template-columns-($v, $rwd: null) {
  @if $rwd==null {
    grid-template-columns: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-template-columns: $v;
    }
  }
}

@mixin _grid-template-rows-($v, $rwd: null) {
  @if $rwd==null {
    grid-template-rows: $v;
  }

  @else {
    @media (min-width: $rwd) {
      grid-template-rows: $v;
    }
  }
}

@mixin _order-($v, $rwd: null) {
  @if $rwd==null {
    order: $v;
  }

  @else {
    @media (min-width: $rwd) {
      order: $v;
    }
  }
}

@mixin _margin-($v, $rwd: null) {
  @if $rwd==null {
    margin: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin: $v;
    }
  }
}

@mixin _margin-inline-start-($v, $rwd: null) {
  @if $rwd==null {
    margin-inline-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin-inline-start: $v;
    }
  }
}

@mixin _margin-inline-end-($v, $rwd: null) {
  @if $rwd==null {
    margin-inline-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin-inline-end: $v;
    }
  }
}

@mixin _margin-top-($v, $rwd: null) {
  @if $rwd==null {
    margin-top: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin-top: $v;
    }
  }
}

@mixin _margin-right-($v, $rwd: null) {
  @if $rwd==null {
    margin-right: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin-right: $v;
    }
  }
}

@mixin _margin-bottom-($v, $rwd: null) {
  @if $rwd==null {
    margin-bottom: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin-bottom: $v;
    }
  }
}

@mixin _margin-left-($v, $rwd: null) {
  @if $rwd==null {
    margin-left: $v;
  }

  @else {
    @media (min-width: $rwd) {
      margin-left: $v;
    }
  }
}

@mixin _padding-($v, $rwd: null) {
  @if $rwd==null {
    padding: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding: $v;
    }
  }
}

@mixin _padding-inline-start-($v, $rwd: null) {
  @if $rwd==null {
    padding-inline-start: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding-inline-start: $v;
    }
  }
}

@mixin _padding-inline-end-($v, $rwd: null) {
  @if $rwd==null {
    padding-inline-end: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding-inline-end: $v;
    }
  }
}

@mixin _padding-top-($v, $rwd: null) {
  @if $rwd==null {
    padding-top: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding-top: $v;
    }
  }
}

@mixin _padding-right-($v, $rwd: null) {
  @if $rwd==null {
    padding-right: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding-right: $v;
    }
  }
}

@mixin _padding-bottom-($v, $rwd: null) {
  @if $rwd==null {
    padding-bottom: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding-bottom: $v;
    }
  }
}

@mixin _padding-left-($v, $rwd: null) {
  @if $rwd==null {
    padding-left: $v;
  }

  @else {
    @media (min-width: $rwd) {
      padding-left: $v;
    }
  }
}

@mixin _height-($v, $rwd: null) {
  @if $rwd==null {
    height: $v;
  }

  @else {
    @media (min-width: $rwd) {
      height: $v;
    }
  }
}

@mixin _max-height-($v, $rwd: null) {
  @if $rwd==null {
    max-height: $v;
  }

  @else {
    @media (min-width: $rwd) {
      max-height: $v;
    }
  }
}

@mixin _max-width-($v, $rwd: null) {
  @if $rwd==null {
    max-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      max-width: $v;
    }
  }
}

@mixin _min-height-($v, $rwd: null) {
  @if $rwd==null {
    min-height: $v;
  }

  @else {
    @media (min-width: $rwd) {
      min-height: $v;
    }
  }
}

@mixin _min-width-($v, $rwd: null) {
  @if $rwd ==null {
    min-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      min-width: $v;
    }
  }
}

@mixin _width-($v, $rwd: null) {
  @if $rwd==null {
    width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      width: $v;
    }
  }
}

@mixin _font-family-($v, $rwd: null) {
  @if $rwd==null {
    font-family: $v;
  }

  @else {
    @media (min-width: $rwd) {
      font-family: $v;
    }
  }
}

@mixin _font-weight-($v, $rwd: null) {
  @if $rwd==null {
    font-weight: $v;
  }

  @else {
    @media (min-width: $rwd) {
      font-weight: $v;
    }
  }
}

@mixin _letter-spacing-($v, $rwd: null) {
  @if $rwd==null {
    letter-spacing: $v;
  }

  @else {
    @media (min-width: $rwd) {
      letter-spacing: $v;
    }
  }
}

@mixin _overflow-($v, $rwd: null) {
  @if $rwd==null {
    overflow: $v;
  }

  @else {
    @media (min-width: $rwd) {
      overflow: $v;
    }
  }
}

@mixin _display-($v, $rwd: null) {
  @if $rwd==null {
    display: $v;
  }

  @else {
    @media (min-width: $rwd) {
      display: $v;
    }
  }
}

@mixin _webkit-box-orient-($v, $rwd: null) {
  @if $rwd==null {
    -webkit-box-orient: $v;
  }

  @else {
    @media (min-width: $rwd) {
      -webkit-box-orient: $v;
    }
  }
}

@mixin _webkit-line-clamp-($v, $rwd: null) {
  @if $rwd==null {
    -webkit-line-clamp: $v;
  }

  @else {
    @media (min-width: $rwd) {
      -webkit-line-clamp: $v;
    }
  }
}

@mixin _line-height-($v, $rwd: null) {
  @if $rwd==null {
    line-height: $v;
  }

  @else {
    @media (min-width: $rwd) {
      line-height: $v;
    }
  }
}

@mixin _list-style-image-($v, $rwd: null) {
  @if $rwd==null {
    list-style-image: $v;
  }

  @else {
    @media (min-width: $rwd) {
      list-style-image: $v;
    }
  }
}

@mixin _list-style-type-($v, $rwd: null) {
  @if $rwd==null {
    list-style-type: $v;
  }

  @else {
    @media (min-width: $rwd) {
      list-style-type: $v;
    }
  }
}

@mixin _font-size-($v, $rwd: null) {
  @if $rwd==null {
    font-size: $v;
  }

  @else {
    @media (min-width: $rwd) {
      font-size: $v;
    }
  }
}

@mixin _text-decoration-color-($v, $rwd: null) {
  @if $rwd==null {
    text-decoration-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      text-decoration-color: $v;
    }
  }
}

@mixin _text-decoration-thickness-($v, $rwd: null) {
  @if $rwd==null {
    text-decoration-thickness: $v;
  }

  @else {
    @media (min-width: $rwd) {
      text-decoration-thickness: $v;
    }
  }
}

@mixin _text-indent-($v, $rwd: null) {
  @if $rwd==null {
    text-indent: $v;
  }

  @else {
    @media (min-width: $rwd) {
      text-indent: $v;
    }
  }
}

@mixin _text-underline-offset-($v, $rwd: null) {
  @if $rwd==null {
    text-underline-offset: $v;
  }

  @else {
    @media (min-width: $rwd) {
      text-underline-offset: $v;
    }
  }
}

@mixin _vertical-align-($v, $rwd: null) {
  @if $rwd==null {
    vertical-align: $v;
  }

  @else {
    @media (min-width: $rwd) {
      vertical-align: $v;
    }
  }
}

@mixin _background-color-($v, $rwd: null) {
  @if $rwd==null {
    background-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      background-color: $v;
    }
  }
}

@mixin _background-size-($v, $rwd: null) {
  @if $rwd==null {
    background-size: $v;
  }

  @else {
    @media (min-width: $rwd) {
      background-size: $v;
    }
  }
}

@mixin _background-position-($v, $rwd: null) {
  @if $rwd==null {
    background-position: $v;
  }

  @else {
    @media (min-width: $rwd) {
      background-position: $v;
    }
  }
}

@mixin _background-image-($v, $rwd: null) {
  @if $rwd==null {
    background-image: $v;
  }

  @else {
    @media (min-width: $rwd) {
      background-image: $v;
    }
  }
}

@mixin _border-color-($v, $rwd: null) {
  @if $rwd==null {
    border-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-color: $v;
    }
  }
}

@mixin _border-width-($v, $rwd: null) {
  @if $rwd==null {
    border-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-width: $v;
    }
  }
}

@mixin _border-left-color-($v, $rwd: null) {
  @if $rwd==null {
    border-left-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-left-color: $v;
    }
  }
}

@mixin _border-left-width-($v, $rwd: null) {
  @if $rwd==null {
    border-left-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-left-width: $v;
    }
  }
}

@mixin _border-right-color-($v, $rwd: null) {
  @if $rwd==null {
    border-right-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-right-color: $v;
    }
  }
}

@mixin _border-right-width-($v, $rwd: null) {
  @if $rwd==null {
    border-right-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-right-width: $v;
    }
  }
}

@mixin _border-top-color-($v, $rwd: null) {
  @if $rwd==null {
    border-top-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-top-color: $v;
    }
  }
}

@mixin _border-top-width-($v, $rwd: null) {
  @if $rwd==null {
    border-top-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-top-width: $v;
    }
  }
}

@mixin _border-bottom-color-($v, $rwd: null) {
  @if $rwd==null {
    border-bottom-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-bottom-color: $v;
    }
  }
}

@mixin _border-bottom-width-($v, $rwd: null) {
  @if $rwd==null {
    border-bottom-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-bottom-width: $v;
    }
  }
}

@mixin _border-inline-start-color-($v, $rwd: null) {
  @if $rwd==null {
    border-inline-start-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-inline-start-color: $v;
    }
  }
}

@mixin _border-inline-start-width-($v, $rwd: null) {
  @if $rwd==null {
    border-inline-start-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-inline-start-width: $v;
    }
  }
}

@mixin _border-inline-end-color-($v, $rwd: null) {
  @if $rwd==null {
    border-inline-end-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-inline-end-color: $v;
    }
  }
}

@mixin _border-inline-end-width-($v, $rwd: null) {
  @if $rwd==null {
    border-inline-end-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-inline-end-width: $v;
    }
  }
}

@mixin _border-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-radius: $v;
    }
  }
}

@mixin _border-start-start-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-start-start-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-start-start-radius: $v;
    }
  }
}

@mixin _border-end-start-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-end-start-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-end-start-radius: $v;
    }
  }
}

@mixin _border-start-end-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-start-end-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-start-end-radius: $v;
    }
  }
}

@mixin _border-end-end-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-end-end-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-end-end-radius: $v;
    }
  }
}

@mixin _border-top-left-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-top-left-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-top-left-radius: $v;
    }
  }
}

@mixin _border-top-right-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-top-right-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-top-right-radius: $v;
    }
  }
}

@mixin _border-bottom-right-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-bottom-right-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-bottom-right-radius: $v;
    }
  }
}

@mixin _border-bottom-left-radius-($v, $rwd: null) {
  @if $rwd==null {
    border-bottom-left-radius: $v;
  }

  @else {
    @media (min-width: $rwd) {
      border-bottom-left-radius: $v;
    }
  }
}

@mixin _outline-color-($v, $rwd: null) {
  @if $rwd==null {
    outline-color: $v;
  }

  @else {
    @media (min-width: $rwd) {
      outline-color: $v;
    }
  }
}

@mixin _outline-width-($v, $rwd: null) {
  @if $rwd==null {
    outline-width: $v;
  }

  @else {
    @media (min-width: $rwd) {
      outline-width: $v;
    }
  }
}

@mixin _outline-offset-($v, $rwd: null) {
  @if $rwd==null {
    outline-offset: $v;
  } @else {
    @media (min-width: $rwd) {
      outline-offset: $v;
    }
  }
}

@mixin _box-shadow-($v, $rwd: null) {
  @if $rwd==null {
    box-shadow: $v;
  } @else {
    @media (min-width: $rwd) {
      box-shadow: $v;
    }
  }
}

@mixin _opacity-($v, $rwd: null) {
  @if $rwd==null {
    opacity: $v;
  } @else {
    @media (min-width: $rwd) {
      opacity: $v;
    }
  }
}

@mixin _backdrop-filter-($v, $rwd: null) {
  @if $rwd==null {
    backdrop-filter: $v;
  } @else {
    @media (min-width: $rwd) {
      backdrop-filter: $v;
    }
  }
}

@mixin _filter-($v, $rwd: null) {
  @if $rwd==null {
    filter: $v;
  } @else {
    @media (min-width: $rwd) {
      filter: $v;
    }
  }
}

// not custom
@mixin _box-decoration-break-($v, $rwd: null) {
  @if $rwd==null {
    box-decoration-break: $v;
  } @else {
    @media (min-width: $rwd) {
      box-decoration-break: $v;
    }
  }
}

@mixin _box-sizing-($v, $rwd: null) {
  @if $rwd==null {
    box-sizing: $v;
  } @else {
    @media (min-width: $rwd) {
      box-sizing: $v;
    }
  }
}

@mixin _break-after-($v, $rwd: null) {
  @if $rwd==null {
    break-after: $v;
  } @else {
    @media (min-width: $rwd) {
      break-after: $v;
    }
  }
}

@mixin _break-before-($v, $rwd: null) {
  @if $rwd==null {
    break-before: $v;
  } @else {
    @media (min-width: $rwd) {
      break-before: $v;
    }
  }
}

@mixin _break-inside-($v, $rwd: null) {
  @if $rwd==null {
    break-inside: $v;
  } @else {
    @media (min-width: $rwd) {
      break-inside: $v;
    }
  }
}

@mixin _clear-($v, $rwd: null) {
  @if $rwd==null {
    clear: $v;
  } @else {
    @media (min-width: $rwd) {
      clear: $v;
    }
  }
}

@mixin _width-($v, $rwd: null) {
  @if $rwd==null {
    width: $v;
  } @else {
    @media (min-width: $rwd) {
      width: $v;
    }
  }
}

@mixin _max-width-($v, $rwd: null) {
  @if $rwd==null {
    max-width: $v;
  } @else {
    @media (min-width: $rwd) {
      max-width: $v;
    }
  }
}

@mixin _display-($v, $rwd: null) {
  @if $rwd==null {
    display: $v;
  } @else {
    @media (min-width: $rwd) {
      display: $v;
    }
  }
}

@mixin _float-($v, $rwd: null) {
  @if $rwd==null {
    float: $v;
  } @else {
    @media (min-width: $rwd) {
      float: $v;
    }
  }
}

@mixin _isolation-($v, $rwd: null) {
  @if $rwd==null {
    isolation: $v;
  } @else {
    @media (min-width: $rwd) {
      isolation: $v;
    }
  }
}

@mixin _object-fit-($v, $rwd: null) {
  @if $rwd==null {
    object-fit: $v;
  } @else {
    @media (min-width: $rwd) {
      object-fit: $v;
    }
  }
}

@mixin _overflow-($v, $rwd: null) {
  @if $rwd==null {
    overflow: $v;
  } @else {
    @media (min-width: $rwd) {
      overflow: $v;
    }
  }
}

@mixin _overscroll-behavior-($v, $rwd: null) {
  @if $rwd==null {
    overscroll-behavior: $v;
  } @else {
    @media (min-width: $rwd) {
      overscroll-behavior: $v;
    }
  }
}

@mixin _overscroll-behavior-y-($v, $rwd: null) {
  @if $rwd==null {
    overscroll-behavior-y: $v;
  } @else {
    @media (min-width: $rwd) {
      overscroll-behavior-y: $v;
    }
  }
}

@mixin _overscroll-behavior-x-($v, $rwd: null) {
  @if $rwd==null {
    overscroll-behavior-x: $v;
  } @else {
    @media (min-width: $rwd) {
      overscroll-behavior-x: $v;
    }
  }
}

@mixin _position-($v ,$rwd: null) {
  @if $rwd==null {
    position: $v;
  } @else {
    @media (min-width: $rwd) {
      position: $v;
    }
  }
}

@mixin _visibility-($v, $rwd: null) {
  @if $rwd==null {
    visibility: $v;
  } @else {
    @media (min-width: $rwd) {
      visibility: $v;
    }
  }
}
// x*/
