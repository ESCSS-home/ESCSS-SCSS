@use "../../setting" as *;

/* Ring Offset Width */
@if $Basic {
  // /*x
  @mixin ring-offset-0 {
    @if $tw-dummy-not-match--ring-offset-width {
      @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
    }

    $tw-ring-offset-width: 0px !global;
    box-shadow: get_box-shadow();
  }

  @mixin ring-offset-1 {
    @if $tw-dummy-not-match--ring-offset-width {
      @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
    }

    $tw-ring-offset-width: 1px !global;
    box-shadow: get_box-shadow();
  }

  @mixin ring-offset-2 {
    @if $tw-dummy-not-match--ring-offset-width {
      @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
    }

    $tw-ring-offset-width: 2px !global;
    box-shadow: get_box-shadow();
  }

  @mixin ring-offset-4 {
    @if $tw-dummy-not-match--ring-offset-width {
      @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
    }

    $tw-ring-offset-width: 4px !global;
    box-shadow: get_box-shadow();
  }

  @mixin ring-offset-8 {
    @if $tw-dummy-not-match--ring-offset-width {
      @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
    }

    $tw-ring-offset-width: 8px !global;
    box-shadow: get_box-shadow();
  }

  // x*/
}

@if $Rwd {
  @if $sizeMode ==0 or $sizeMode ==1 {
    // /*x
    @mixin sm\:ring-offset-0 {
      @include sm\:ring-offset-(0px);
    }

    @mixin sm\:ring-offset-1 {
      @include sm\:ring-offset-(1px);
    }

    @mixin sm\:ring-offset-2 {
      @include sm\:ring-offset-(2px);
    }

    @mixin sm\:ring-offset-4 {
      @include sm\:ring-offset-(4px);
    }

    @mixin sm\:ring-offset-8 {
      @include sm\:ring-offset-(8px);
    }

    @mixin md\:ring-offset-0 {
      @include md\:ring-offset-(0px);
    }

    @mixin md\:ring-offset-1 {
      @include md\:ring-offset-(1px);
    }

    @mixin md\:ring-offset-2 {
      @include md\:ring-offset-(2px);
    }

    @mixin md\:ring-offset-4 {
      @include md\:ring-offset-(4px);
    }

    @mixin md\:ring-offset-8 {
      @include md\:ring-offset-(8px);
    }

    @mixin lg\:ring-offset-0 {
      @include lg\:ring-offset-(0px);
    }

    @mixin lg\:ring-offset-1 {
      @include lg\:ring-offset-(1px);
    }

    @mixin lg\:ring-offset-2 {
      @include lg\:ring-offset-(2px);
    }

    @mixin lg\:ring-offset-4 {
      @include lg\:ring-offset-(4px);
    }

    @mixin lg\:ring-offset-8 {
      @include lg\:ring-offset-(8px);
    }

    @mixin xl\:ring-offset-0 {
      @include xl\:ring-offset-(0px);
    }

    @mixin xl\:ring-offset-1 {
      @include xl\:ring-offset-(1px);
    }

    @mixin xl\:ring-offset-2 {
      @include xl\:ring-offset-(2px);
    }

    @mixin xl\:ring-offset-4 {
      @include xl\:ring-offset-(4px);
    }

    @mixin xl\:ring-offset-8 {
      @include xl\:ring-offset-(8px);
    }

    @mixin \2xl\:ring-offset-0 {
      @include \2xl\:ring-offset-(0px);
    }

    @mixin \2xl\:ring-offset-1 {
      @include \2xl\:ring-offset-(1px);
    }

    @mixin \2xl\:ring-offset-2 {
      @include \2xl\:ring-offset-(2px);
    }

    @mixin \2xl\:ring-offset-4 {
      @include \2xl\:ring-offset-(4px);
    }

    @mixin \2xl\:ring-offset-8 {
      @include \2xl\:ring-offset-(8px);
    }

    // x*/
  }
}

@if $Custom {
  // /*x
  @mixin ring-offset-($v) {
    @if meta.type-of($v)
      ==color or
      list.index(inherit currentColor transparent, $v)
    {
      $tw-ring-offset-color: $v !global;
    } @else {
      @if $tw-dummy-not-match--ring-offset-width {
        @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
      }

      $tw-ring-offset-width: $v !global;
    }

    @include box-shadow(get_box-shadow());
  }

  @mixin sm\:ring-offset-($v) {
    @if meta.type-of($v)
      ==color or
      list.index(inherit currentColor transparent, $v)
    {
      $tw-ring-offset-color: $v !global;
    } @else {
      @if $tw-dummy-not-match--ring-offset-width {
        @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
      }

      $tw-ring-offset-width: $v !global;
    }

    @include sm\:box-shadow(get_box-shadow());
  }

  @mixin md\:ring-offset-($v) {
    @if meta.type-of($v)
      ==color or
      list.index(inherit currentColor transparent, $v)
    {
      $tw-ring-offset-color: $v !global;
    } @else {
      @if $tw-dummy-not-match--ring-offset-width {
        @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
      }

      $tw-ring-offset-width: $v !global;
    }

    @include md\:box-shadow(get_box-shadow());
  }

  @mixin lg\:ring-offset-($v) {
    @if meta.type-of($v)
      ==color or
      list.index(inherit currentColor transparent, $v)
    {
      $tw-ring-offset-color: $v !global;
    } @else {
      @if $tw-dummy-not-match--ring-offset-width {
        @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
      }

      $tw-ring-offset-width: $v !global;
    }

    @include lg\:box-shadow(get_box-shadow());
  }

  @mixin xl\:ring-offset-($v) {
    @if meta.type-of($v)
      ==color or
      list.index(inherit currentColor transparent, $v)
    {
      $tw-ring-offset-color: $v !global;
    } @else {
      @if $tw-dummy-not-match--ring-offset-width {
        @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
      }

      $tw-ring-offset-width: $v !global;
    }

    @include xl\:box-shadow(get_box-shadow());
  }

  @mixin \2xl\:ring-offset-($v) {
    @if meta.type-of($v)
      ==color or
      list.index(inherit currentColor transparent, $v)
    {
      $tw-ring-offset-color: $v !global;
    } @else {
      @if $tw-dummy-not-match--ring-offset-width {
        @error ("「 ring-offset-* 」should go before「 ring-* (to have same behavior as tailwind)");
      }

      $tw-ring-offset-width: $v !global;
    }

    @include \2xl\:box-shadow(get_box-shadow());
  }

  // x*/
}
