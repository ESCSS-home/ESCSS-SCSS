@include it("sm\:space-x-0 ") {
  @include assert {
    @include output {
      @include sm\:space-x-0;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0px;
          margin-right: 0px;
        }
      }
    }
  }
}

@include it("sm\:space-y-0 ") {
  @include assert {
    @include output {
      @include sm\:space-y-0;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0px;
          margin-bottom: 0px;
        }
      }
    }
  }
}

@include it("sm\:space-x-0\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-x-0\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.125rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-0\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-y-0\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.125rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-1 ") {
  @include assert {
    @include output {
      @include sm\:space-x-1;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.25rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-1 ") {
  @include assert {
    @include output {
      @include sm\:space-y-1;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.25rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-1\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-x-1\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.375rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-1\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-y-1\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.375rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-2 ") {
  @include assert {
    @include output {
      @include sm\:space-x-2;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.5rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-2 ") {
  @include assert {
    @include output {
      @include sm\:space-y-2;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.5rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-2\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-x-2\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.625rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-2\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-y-2\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.625rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-3 ") {
  @include assert {
    @include output {
      @include sm\:space-x-3;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.75rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-3 ") {
  @include assert {
    @include output {
      @include sm\:space-y-3;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.75rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-3\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-x-3\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 0.875rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-3\.5 ") {
  @include assert {
    @include output {
      @include sm\:space-y-3\.5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 0.875rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-4 ") {
  @include assert {
    @include output {
      @include sm\:space-x-4;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 1rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-4 ") {
  @include assert {
    @include output {
      @include sm\:space-y-4;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 1rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-5 ") {
  @include assert {
    @include output {
      @include sm\:space-x-5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 1.25rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-5 ") {
  @include assert {
    @include output {
      @include sm\:space-y-5;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 1.25rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-6 ") {
  @include assert {
    @include output {
      @include sm\:space-x-6;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 1.5rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-6 ") {
  @include assert {
    @include output {
      @include sm\:space-y-6;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 1.5rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-7 ") {
  @include assert {
    @include output {
      @include sm\:space-x-7;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 1.75rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-7 ") {
  @include assert {
    @include output {
      @include sm\:space-y-7;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 1.75rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-8 ") {
  @include assert {
    @include output {
      @include sm\:space-x-8;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 2rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-8 ") {
  @include assert {
    @include output {
      @include sm\:space-y-8;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 2rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-9 ") {
  @include assert {
    @include output {
      @include sm\:space-x-9;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 2.25rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-9 ") {
  @include assert {
    @include output {
      @include sm\:space-y-9;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 2.25rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-10 ") {
  @include assert {
    @include output {
      @include sm\:space-x-10;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 2.5rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-10 ") {
  @include assert {
    @include output {
      @include sm\:space-y-10;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 2.5rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-11 ") {
  @include assert {
    @include output {
      @include sm\:space-x-11;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 2.75rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-11 ") {
  @include assert {
    @include output {
      @include sm\:space-y-11;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 2.75rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-12 ") {
  @include assert {
    @include output {
      @include sm\:space-x-12;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 3rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-12 ") {
  @include assert {
    @include output {
      @include sm\:space-y-12;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 3rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-14 ") {
  @include assert {
    @include output {
      @include sm\:space-x-14;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 3.5rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-14 ") {
  @include assert {
    @include output {
      @include sm\:space-y-14;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 3.5rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-16 ") {
  @include assert {
    @include output {
      @include sm\:space-x-16;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 4rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-16 ") {
  @include assert {
    @include output {
      @include sm\:space-y-16;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 4rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-20 ") {
  @include assert {
    @include output {
      @include sm\:space-x-20;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 5rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-20 ") {
  @include assert {
    @include output {
      @include sm\:space-y-20;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 5rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-24 ") {
  @include assert {
    @include output {
      @include sm\:space-x-24;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 6rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-24 ") {
  @include assert {
    @include output {
      @include sm\:space-y-24;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 6rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-28 ") {
  @include assert {
    @include output {
      @include sm\:space-x-28;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 7rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-28 ") {
  @include assert {
    @include output {
      @include sm\:space-y-28;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 7rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-32 ") {
  @include assert {
    @include output {
      @include sm\:space-x-32;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 8rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-32 ") {
  @include assert {
    @include output {
      @include sm\:space-y-32;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 8rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-36 ") {
  @include assert {
    @include output {
      @include sm\:space-x-36;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 9rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-36 ") {
  @include assert {
    @include output {
      @include sm\:space-y-36;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 9rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-40 ") {
  @include assert {
    @include output {
      @include sm\:space-x-40;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 10rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-40 ") {
  @include assert {
    @include output {
      @include sm\:space-y-40;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 10rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-44 ") {
  @include assert {
    @include output {
      @include sm\:space-x-44;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 11rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-44 ") {
  @include assert {
    @include output {
      @include sm\:space-y-44;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 11rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-48 ") {
  @include assert {
    @include output {
      @include sm\:space-x-48;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 12rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-48 ") {
  @include assert {
    @include output {
      @include sm\:space-y-48;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 12rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-52 ") {
  @include assert {
    @include output {
      @include sm\:space-x-52;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 13rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-52 ") {
  @include assert {
    @include output {
      @include sm\:space-y-52;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 13rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-56 ") {
  @include assert {
    @include output {
      @include sm\:space-x-56;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 14rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-56 ") {
  @include assert {
    @include output {
      @include sm\:space-y-56;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 14rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-60 ") {
  @include assert {
    @include output {
      @include sm\:space-x-60;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 15rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-60 ") {
  @include assert {
    @include output {
      @include sm\:space-y-60;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 15rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-64 ") {
  @include assert {
    @include output {
      @include sm\:space-x-64;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 16rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-64 ") {
  @include assert {
    @include output {
      @include sm\:space-y-64;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 16rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-72 ") {
  @include assert {
    @include output {
      @include sm\:space-x-72;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 18rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-72 ") {
  @include assert {
    @include output {
      @include sm\:space-y-72;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 18rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-80 ") {
  @include assert {
    @include output {
      @include sm\:space-x-80;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 20rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-80 ") {
  @include assert {
    @include output {
      @include sm\:space-y-80;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 20rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-96 ") {
  @include assert {
    @include output {
      @include sm\:space-x-96;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 24rem;
          margin-right: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-y-96 ") {
  @include assert {
    @include output {
      @include sm\:space-y-96;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 24rem;
          margin-bottom: 0rem;
        }
      }
    }
  }
}

@include it("sm\:space-x-px ") {
  @include assert {
    @include output {
      @include sm\:space-x-px;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-left: 1px;
          margin-right: 0px;
        }
      }
    }
  }
}

@include it("sm\:space-y-px ") {
  @include assert {
    @include output {
      @include sm\:space-y-px;
      @include clear;
    }

    @include expect {
      @media(min-width:$sm) {
        >*~* {
          margin-top: 1px;
          margin-bottom: 0px;
        }
      }
    }
  }
}

@include it("sm\:space-y-reverse ") {
  @include assert {
    @include output {
      @include sm\:space-y-4;
      @include space-y-reverse;
      @include clear;
    }

    @media(min-width:$sm) {
      @include expect {
        >*~* {
          margin-top: 1rem;
          margin-bottom: 0rem;
        }

        >*~* {
          margin-top: 0r
        }

        em;
        margin-bottom: 1rem;
      }
    }
  }
}

@include it("sm\:space-x-reverse ") {
  @include assert {
    @include output {
      @include sm\:space-x-4;
      @include space-x-reverse;
      @include clear;
    }

    @media(min-width:$sm) {
      @include expect {
        >*~* {
          margin-left: 1rem;
          margin-right: 0rem;
        }

        >*~* {
          margin-left: 0
        }

        rem;
        margin-right: 1rem;
      }
    }
  }
}