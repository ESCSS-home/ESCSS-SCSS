@include describe('Break After') {
  @include describe('Basic') {
    @include it('break-after-auto') {
      @include assert {
        @include output {
          @include break-after-auto
        }

        @include expect {
          break-after: auto;
        }
      }
    }

    @include it('break-after-avoid') {
      @include assert {
        @include output {
          @include break-after-avoid
        }

        @include expect {
          break-after: avoid;
        }
      }
    }

    @include it('break-after-all') {
      @include assert {
        @include output {
          @include break-after-all
        }

        @include expect {
          break-after: all;
        }
      }
    }

    @include it('break-after-avoid-page') {
      @include assert {
        @include output {
          @include break-after-avoid-page
        }

        @include expect {
          break-after: avoid-page;
        }
      }
    }

    @include it('break-after-page') {
      @include assert {
        @include output {
          @include break-after-page
        }

        @include expect {
          break-after: page;
        }
      }
    }

    @include it('break-after-left') {
      @include assert {
        @include output {
          @include break-after-left
        }

        @include expect {
          break-after: left;
        }
      }
    }

    @include it('break-after-right') {
      @include assert {
        @include output {
          @include break-after-right
        }

        @include expect {
          break-after: right;
        }
      }
    }

    @include it('break-after-column') {
      @include assert {
        @include output {
          @include break-after-column
        }

        @include expect {
          break-after: column;
        }
      }
    }
  }

  @include describe('RWD') {
    @include describe('SM') {
      @include it('break-after-auto') {
        @include assert {
          @include output {
            @include sm\:break-after-auto
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: auto;
            }
          }
        }
      }

      @include it('break-after-avoid') {
        @include assert {
          @include output {
            @include sm\:break-after-avoid
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: avoid;
            }
          }
        }
      }

      @include it('break-after-all') {
        @include assert {
          @include output {
            @include sm\:break-after-all
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: all;
            }
          }
        }
      }

      @include it('break-after-avoid-page') {
        @include assert {
          @include output {
            @include sm\:break-after-avoid-page
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: avoid-page;
            }
          }
        }
      }

      @include it('break-after-page') {
        @include assert {
          @include output {
            @include sm\:break-after-page
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: page;
            }
          }
        }
      }

      @include it('break-after-left') {
        @include assert {
          @include output {
            @include sm\:break-after-left
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: left;
            }
          }
        }
      }

      @include it('break-after-right') {
        @include assert {
          @include output {
            @include sm\:break-after-right
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: right;
            }
          }
        }
      }

      @include it('break-after-column') {
        @include assert {
          @include output {
            @include sm\:break-after-column
          }

          @include expect {
            @media (min-width: $__MEDIA-SM) {
              break-after: column;
            }
          }
        }
      }
    }

    @include describe('MD') {
      @include it('break-after-auto') {
        @include assert {
          @include output {
            @include md\:break-after-auto
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: auto;
            }
          }
        }
      }

      @include it('break-after-avoid') {
        @include assert {
          @include output {
            @include md\:break-after-avoid
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: avoid;
            }
          }
        }
      }

      @include it('break-after-all') {
        @include assert {
          @include output {
            @include md\:break-after-all
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: all;
            }
          }
        }
      }

      @include it('break-after-avoid-page') {
        @include assert {
          @include output {
            @include md\:break-after-avoid-page
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: avoid-page;
            }
          }
        }
      }

      @include it('break-after-page') {
        @include assert {
          @include output {
            @include md\:break-after-page
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: page;
            }
          }
        }
      }

      @include it('break-after-left') {
        @include assert {
          @include output {
            @include md\:break-after-left
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: left;
            }
          }
        }
      }

      @include it('break-after-right') {
        @include assert {
          @include output {
            @include md\:break-after-right
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: right;
            }
          }
        }
      }

      @include it('break-after-column') {
        @include assert {
          @include output {
            @include md\:break-after-column
          }

          @include expect {
            @media (min-width: $__MEDIA-MD) {
              break-after: column;
            }
          }
        }
      }
    }

    @include describe('LG') {
      @include it('break-after-auto') {
        @include assert {
          @include output {
            @include lg\:break-after-auto
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: auto;
            }
          }
        }
      }

      @include it('break-after-avoid') {
        @include assert {
          @include output {
            @include lg\:break-after-avoid
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: avoid;
            }
          }
        }
      }

      @include it('break-after-all') {
        @include assert {
          @include output {
            @include lg\:break-after-all
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: all;
            }
          }
        }
      }

      @include it('break-after-avoid-page') {
        @include assert {
          @include output {
            @include lg\:break-after-avoid-page
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: avoid-page;
            }
          }
        }
      }

      @include it('break-after-page') {
        @include assert {
          @include output {
            @include lg\:break-after-page
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: page;
            }
          }
        }
      }

      @include it('break-after-left') {
        @include assert {
          @include output {
            @include lg\:break-after-left
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: left;
            }
          }
        }
      }

      @include it('break-after-right') {
        @include assert {
          @include output {
            @include lg\:break-after-right
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: right;
            }
          }
        }
      }

      @include it('break-after-column') {
        @include assert {
          @include output {
            @include lg\:break-after-column
          }

          @include expect {
            @media (min-width: $__MEDIA-LG) {
              break-after: column;
            }
          }
        }
      }
    }

    @include describe('XL') {
      @include it('break-after-auto') {
        @include assert {
          @include output {
            @include xl\:break-after-auto
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: auto;
            }
          }
        }
      }

      @include it('break-after-avoid') {
        @include assert {
          @include output {
            @include xl\:break-after-avoid
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: avoid;
            }
          }
        }
      }

      @include it('break-after-all') {
        @include assert {
          @include output {
            @include xl\:break-after-all
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: all;
            }
          }
        }
      }

      @include it('break-after-avoid-page') {
        @include assert {
          @include output {
            @include xl\:break-after-avoid-page
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: avoid-page;
            }
          }
        }
      }

      @include it('break-after-page') {
        @include assert {
          @include output {
            @include xl\:break-after-page
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: page;
            }
          }
        }
      }

      @include it('break-after-left') {
        @include assert {
          @include output {
            @include xl\:break-after-left
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: left;
            }
          }
        }
      }

      @include it('break-after-right') {
        @include assert {
          @include output {
            @include xl\:break-after-right
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: right;
            }
          }
        }
      }

      @include it('break-after-column') {
        @include assert {
          @include output {
            @include xl\:break-after-column
          }

          @include expect {
            @media (min-width: $__MEDIA-XL) {
              break-after: column;
            }
          }
        }
      }
    }

    @include describe('2XL') {
      @include it('break-after-auto') {
        @include assert {
          @include output {
            @include \2xl\:break-after-auto
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: auto;
            }
          }
        }
      }

      @include it('break-after-avoid') {
        @include assert {
          @include output {
            @include \2xl\:break-after-avoid
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: avoid;
            }
          }
        }
      }

      @include it('break-after-all') {
        @include assert {
          @include output {
            @include \2xl\:break-after-all
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: all;
            }
          }
        }
      }

      @include it('break-after-avoid-page') {
        @include assert {
          @include output {
            @include \2xl\:break-after-avoid-page
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: avoid-page;
            }
          }
        }
      }

      @include it('break-after-page') {
        @include assert {
          @include output {
            @include \2xl\:break-after-page
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: page;
            }
          }
        }
      }

      @include it('break-after-left') {
        @include assert {
          @include output {
            @include \2xl\:break-after-left
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: left;
            }
          }
        }
      }

      @include it('break-after-right') {
        @include assert {
          @include output {
            @include \2xl\:break-after-right
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: right;
            }
          }
        }
      }

      @include it('break-after-column') {
        @include assert {
          @include output {
            @include \2xl\:break-after-column
          }

          @include expect {
            @media (min-width: $__MEDIA-2XL) {
              break-after: column;
            }
          }
        }
      }
    }
  }

}