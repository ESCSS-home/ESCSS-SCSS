// Tailwind css v3.4.1 All Arbitrary values


// Layout
@mixin aspect-($value) {
  aspect-ratio: $value
}

@mixin columns-($value) {
  columns: $value
}

@mixin object-($value) {
  object-position: $value
}

@mixin top-($value) {
  top: $value
}

@mixin right-($value) {
  right: $value
}

@mixin bottom-($value) {
  bottom: $value
}

@mixin left-($value) {
  left: $value
}

@mixin z-($value) {
  z-index: $value
}


// Flexbox Grid
@mixin basis-($value) {
  flex-basis: $value
}

@mixin flex-($value) {
  flex: $value
}

@mixin grow-($value) {
  flex-grow: $value
}

@mixin shrink-($value) {
  flex-shrink: $value
}

@mixin order-($value) {
  order: $value
}

@mixin grid-cols-($value) {
  grid-template-columns: $value
}

@mixin col-($value) {
  grid-column: $value
}

@mixin col-start-($value) {
  grid-column-start: $value
}

@mixin col-end-($value) {
  grid-column-end: $value
}

@mixin grid-rows-($value) {
  grid-template-rows: $value
}

@mixin row-($value) {
  grid-row: $value
}

@mixin row-start-($value) {
  grid-rows-start: $value
}

@mixin col-end-($value) {
  grid-rows-end: $value
}


@mixin auto-cols-($value) {
  grid-auto-columns: $value
}

@mixin auto-rows-($value) {
  grid-auto-rows: $value
}

@mixin gap-($value) {
  gap: $value
}


// Spacing
@mixin p-($value) {
  padding: $value
}

@mixin m-($value) {
  margin: $value
}

@mixin space-x-($value) {
  >*+* {
    margin-left: $value
  }
}

@mixin space-y-($value) {
  >*+* {
    margin-top: $value
  }
}


// Sizing
@mixin w-($value) {
  width: $value
}

@mixin min-w-($value) {
  min-width: $value
}

@mixin max-w-($value) {
  max-width: $value
}

@mixin h-($value) {
  height: $value
}

@mixin min-h-($value) {
  min-height: $value
}

@mixin max-h-($value) {
  max-height: $value
}

@mixin size-($value) {
  width: $value;
  height: $value
}


// Typography
// font (tailwind arbitrary values)  --> font-family
@mixin font-family-($value) {
  font-family: $value
}

@mixin text-($value) {
  font-size: $value
}

// font (tailwind arbitrary values)  -->  font-weight
@mixin font-weight-($value) {
  font-weight: $value
}

@mixin tracking-($value) {
  letter-spacing: $value
}

@mixin line-clamp-($value) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $value;
}

@mixin leading-($value) {
  line-height: $value
}

@mixin list-image-($value) {
  list-style-image: $value
}

@mixin list-($value) {
  list-style-type: $value
}

// text (tailwind arbitrary values)  -->  text-color
@mixin text-color-($value) {
  color: $value
}

// decoration (tailwind arbitrary values)  -->  decoration-color
@mixin decoration-color-($value) {
  text-decoration-color: $value
}

@mixin decoration-($value) {
  text-decoration-thickness: $value
}

@mixin underline-offset-($value) {
  text-underline-offset: $value
}

@mixin indent-($value) {
  text-indent: $value
}

@mixin align-($value) {
  vertical-align: $value
}

// not support pseudo element
@mixin content-($value) {
  content: $value
}


// Backgrounds
// bg (tailwind arbitrary values)  -->  bg-color
@mixin bg-color-($value) {
  background-color: $value
}

// bg (tailwind arbitrary values)  -->  bg-position
@mixin bg-position-($value) {
  background-position: $value
}

// bg (tailwind arbitrary values)  -->  bg-size
@mixin bg-size-($value) {
  background-size: $quote
}

// bg (tailwind arbitrary values)  -->  bg-image
@mixin bg-image-($value) {
  background-image: $value
}

// from (tailwind arbitrary values)  -->  from-color
@mixin from-color-($value) {
  --tw-gradient-from: #{$value} var(--tw-gradient-from-position) --tw-gradient-to: rgb(#{$value} / 0) var(--tw-gradient-to-position) --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

// via (tailwind arbitrary values)  -->  via-color
@mixin via-color-($value) {
  --tw-gradient-to: rgb(#{$value} / 0) var(--tw-gradient-to-position) --tw-gradient-stops: var(--tw-gradient-from),
  #{$value} var(--tw-gradient-via-position),
  var(--tw-gradient-to)
}

// to (tailwind arbitrary values)  -->  to-color
@mixin to-color-($value) {
  --tw-gradient-to: #{$value} var(--tw-gradient-to-position)
}

@mixin from-($value) {
  --tw-gradient-from-position: #{$value};
}

@mixin via-($value) {
  --tw-gradient-via-position: #{$value};
}

@mixin to-($value) {
  --tw-gradient-to-position: #{$value};
}


// Borders
@mixin rounded-($value) {
  border-radius: $value
}

@mixin border-($value) {
  border-width: $value
}

@mixin border-x-($value) {
  border-left-width: $value;
  border-right-width: $value;
}

@mixin border-y-($value) {
  border-top-width: $value;
  border-bottom-width: $value;
}

@mixin border-s-($value) {
  border-inline-start-width: $value
}

@mixin border-e-($value) {
  border-inline-end-width: $value
}

@mixin border-t-($value) {
  border-top-width: $value
}

@mixin border-r-($value) {
  border-right-width: $value
}

@mixin border-b-($value) {
  border-bottom-width: $value
}

@mixin border-l-($value) {
  border-left-width: $value
}

// border (tailwind arbitrary values)  -->  border-color
@mixin border-color-($value) {
  border-color: $value
}

// border (tailwind arbitrary values)  -->  border-x-color
@mixin border-x-color-($value) {
  border-left-color: $value;
  border-right-color: $value;
}

// border (tailwind arbitrary values)  -->  border-y-color
@mixin border-y-color-($value) {
  border-top-color: $value;
  border-bottom-color: $value;
}

// border (tailwind arbitrary values)  -->  border-s-color
@mixin border-s-color-($value) {
  border-inline-start-color: $value
}

// border (tailwind arbitrary values)  -->  border-e-color
@mixin border-e-color-($value) {
  border-inline-end-color: $value
}

// border (tailwind arbitrary values)  -->  border-t-color
@mixin border-t-color-($value) {
  border-top-color: $value
}

// border (tailwind arbitrary values)  -->  border-r-color
@mixin border-r-color-($value) {
  border-right-color: $value
}

// border (tailwind arbitrary values)  -->  border-b-color

@mixin border-b-color-($value) {
  border-bottom-color: $value
}

// border (tailwind arbitrary values)  -->  border-l-color
@mixin border-l-color-($value) {
  border-left-color: $value
}

@mixin divide-x-($value) {
  >*+* {
    border-right-width: 0px;
    border-left-width: $value;
  }
}

@mixin divide-y-($value) {
  >*+* {
    border-top-width: $value;
    border-bottom-width: 0px;
  }
}

// divide (tailwind arbitrary values)  -->  divide-color
@mixin divide-color-($value) {
  >*+* {
    border-color: $value
  }
}

@mixin outline-($value) {
  outline-width: $value
}

// outline (tailwind arbitrary values)  -->  outline-color
@mixin outline-color-($value) {
  outline-color: $value
}

@mixin outline-offset-($value) {
  outline-offset: $value
}

@mixin ring-($value) {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc($value + var(--tw-ring-offset-width)) var(--tw-ring-color)
}

// ring (tailwind arbitrary values)  -->  ring-color
@mixin ring-color-($value) {
  --tw-ring-color: #{$value};
}

@mixin ring-offset-($value) {
  --tw-ring-offset-width: #{$value} box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow)
}

// ring (tailwind arbitrary values)-offset  -->  ring-offset-color
@mixin ring-offset-color-($value) {
  --tw-ring-offset-color: #{$value} box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow)
}


// Effects 
@mixin shadow-($value) {
  box-shadow: $value
}

// shadow (tailwind arbitrary values)  -->  shadow-color
@mixin shadow-color-($value) {
  --tw-shadow-color: #{$value};
}

@mixin opacity-($value) {
  opacity: $value
}


// Filters
@mixin blur-($value) {
  filter: blur($value)
}

@mixin brightness-($value) {
  filter: brightness($value)
}

@mixin contrast-($value) {
  filter: contrast($value)
}

@mixin drop-shadow-($value) {
  filter: drop-shadow($value)
}

@mixin grayscale-($value) {
  filter: grayscale($value)
}

@mixin hue-rotate-($value) {
  filter: hue-rotate($value)
}

@mixin invert-($value) {
  filter: invert($value)
}

@mixin saturate-($value) {
  filter: saturate($value)
}

@mixin sepia-($value) {
  filter: sepia($value)
}

@mixin backdrop-blur-($value) {
  backdrop-filter: blur($value)
}

@mixin backdrop-brightness-($value) {
  backdrop-filter: brightness($value)
}

@mixin backdrop-contrast-($value) {
  backdrop-filter: contrast($value)
}

@mixin backdrop-grayscale-($value) {
  backdrop-filter: grayscale($value)
}

@mixin backdrop-hue-rotate-($value) {
  backdrop-filter: hue-rotate($value)
}

@mixin backdrop-invert-($value) {
  backdrop-filter: invert($value)
}

@mixin backdrop-opacity-($value) {
  backdrop-filter: opacity($value)
}

@mixin backdrop-saturate-($value) {
  backdrop-filter: saturate($value)
}

@mixin backdrop-sepia-($value) {
  backdrop-filter: sepia($value)
}


// Tables
@mixin border-spacing-($value) {
  border-spacing: $value
}


// Transitions & Animation
@mixin transition-($value) {
  transition-property: $value
}

@mixin duration-($value) {
  transition-duration: ($value)
}

@mixin ease-($value) {
  transition-timing-function: $value
}

@mixin delay-($value) {
  transition-delay: $value
}

@mixin animate-($value) {
  animation: $value
}


// Transforms
@mixin scale-($value) {
  transform: scale($value)
}

@mixin scale-x-($value) {
  transform: scaleX($value)
}

@mixin scale-y-($value) {
  transform: scaleY($value)
}

@mixin rotate-($value) {
  transform: rotate($value)
}

@mixin translate-($value) {
  transform: translate($value)
}

@mixin translate-x-($value) {
  transform: translateX($value)
}

@mixin translate-y-($value) {
  transform: translateY($value)
}

@mixin skew-($value) {
  transform: skew($value)
}

@mixin skew-x-($value) {
  transform: skewX($value)
}

@mixin skew-y-($value) {
  transform: skewY($value)
}

@mixin origin-($value) {
  transform-origin: $value
}


// Interactivity
// accent (tailwind arbitrary values)  -->  accent-color
@mixin accent-color-($value) {
  accent-color: $value
}

@mixin cursor-($value, $value2: null) {
  cursor: $value, $value2
}

// caret (tailwind arbitrary values)  -->  caret-color
@mixin caret-color-($value) {
  caret-color: $value
}

@mixin scroll-m-($value) {
  scroll-margin: $value
}

@mixin scroll-mx-($value) {
  scroll-margin-left: $value;
  scroll-margin-right: $value;
}

@mixin scroll-my-($value) {
  scroll-margin-top: $value;
  scroll-margin-bottom: $value;
}

@mixin scroll-ms-($value) {
  scroll-margin-inline-start: $value
}

@mixin scroll-me-($value) {
  scroll-margin-inline-end: $value
}

@mixin scroll-mt-($value) {
  scroll-margin-top: $value
}

@mixin scroll-mr-($value) {
  scroll-margin-right: $value
}

@mixin scroll-mb-($value) {
  scroll-margin-bottom: $value
}

@mixin scroll-ml-($value) {
  scroll-margin-left: $value
}

@mixin scroll-p-($value) {
  scroll-padding: $value
}

@mixin scroll-px-($value) {
  scroll-padding-left: $value;
  scroll-padding-right: $value;
}

@mixin scroll-py-($value) {
  scroll-padding-top: $value;
  scroll-padding-bottom: $value;
}

@mixin scroll-ps-($value) {
  scroll-padding-inline-start: $value
}

@mixin scroll-pe-($value) {
  scroll-padding-inline-end: $value
}

@mixin scroll-pt-($value) {
  scroll-padding-top: $value
}

@mixin scroll-pr-($value) {
  scroll-padding-right: $value
}

@mixin scroll-pb-($value) {
  scroll-padding-bottom: $value
}

@mixin scroll-pl-($value) {
  scroll-padding-left: $value
}

@mixin will-change-($value, $value2: null) {
  will-change: $value, $value2
}


// SVG
@mixin fill-($value) {
  fill: $value
}

@mixin stroke-($value) {
  stroke: $value
}

// stroke (tailwind arbitrary values)  -->  stroke-width
@mixin stroke-width-($value) {
  stroke-width: $value
}